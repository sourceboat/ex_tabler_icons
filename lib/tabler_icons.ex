defmodule TablerIcons do
  @moduledoc """
  Provides precompiled icon compiles from [tabler-icons.io v2.30.0](https://tabler-icons.io).

  Tabler icons are maintained by [Pawe≈Ç Kuna](https://twitter.com/codecalm).
  For all contributors see https://github.com/tabler/tabler-icons/graphs/contributors.

  Each icon is designed on a 24x24 grid and a 2px stroke.

  ## Usage

      <TablerIcons.user />
      <TablerIcons.icon name={:user} />

  You may pass arbitrary HTML attributes to the component.

      <TablerIcons.user class="w-2 h-2" />
      <TablerIcons.icon name={:user} class="w-2 h-2" />
  """
  use Phoenix.Component

  @default_html_attrs %{
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    "stroke-width": "2",
    stroke: "currentColor",
    fill: "none",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }

  @doc """
  Renders an icon dynamically.

  ## Examples

      <TablerIcons.icon name={:user} />
      <TablerIcons.icon name={:user} class="w-4 h-4" />
  """

  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs
  attr :name, :atom, required: true, doc: "the name of the icon to be rendered"

  def icon(assigns) do
    apply(TablerIcons, assigns.name, [assigns])
  end

  @doc """
  Renders the `one_two_three` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.one_two_three />
      <TablerIcons.one_two_three class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def one_two_three(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 10l2 -2v8" />
      <path d="M9 8h3a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h3" />
      <path d="M17 8h2.5a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1 -1.5 1.5h-1.5h1.5a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1 -1.5 1.5h-2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `twenty_four_hours` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.twenty_four_hours />
      <TablerIcons.twenty_four_hours class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def twenty_four_hours(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4" />
      <path d="M4 13a8.094 8.094 0 0 0 3 5.24" />
      <path d="M11 15h2a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-1a1 1 0 0 0 -1 1v1a1 1 0 0 0 1 1h2" />
      <path d="M17 15v2a1 1 0 0 0 1 1h1" />
      <path d="M20 15v6" />
    </svg>
    """
  end

  @doc """
  Renders the `two_fa` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.two_fa />
      <TablerIcons.two_fa class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def two_fa(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 16h-4l3.47 -4.66a2 2 0 1 0 -3.47 -1.54" />
      <path d="M10 16v-8h4" />
      <path d="M10 12l3 0" />
      <path d="M17 16v-6a2 2 0 0 1 4 0v6" />
      <path d="M17 13l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `three_sixty_view` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.three_sixty_view />
      <TablerIcons.three_sixty_view class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def three_sixty_view(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 6a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v6a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-3" />
      <path d="M3 5h2.5a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1 -1.5 1.5h-1.5h1.5a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1 -1.5 1.5h-2.5" />
      <path d="M17 7v4a2 2 0 1 0 4 0v-4a2 2 0 1 0 -4 0z" />
      <path d="M3 16c0 1.657 4.03 3 9 3s9 -1.343 9 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `three_sixty` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.three_sixty />
      <TablerIcons.three_sixty class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def three_sixty(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 15.328c2.414 -.718 4 -1.94 4 -3.328c0 -2.21 -4.03 -4 -9 -4s-9 1.79 -9 4s4.03 4 9 4" />
      <path d="M9 13l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `three_d_cube_sphere_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.three_d_cube_sphere_off />
      <TablerIcons.three_d_cube_sphere_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def three_d_cube_sphere_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 17.6l-2 -1.1v-2.5" />
      <path d="M4 10v-2.5l2 -1.1" />
      <path d="M10 4.1l2 -1.1l2 1.1" />
      <path d="M18 6.4l2 1.1v2.5" />
      <path d="M20 14v2" />
      <path d="M14 19.9l-2 1.1l-2 -1.1" />
      <path d="M18 8.6l2 -1.1" />
      <path d="M12 12v2.5" />
      <path d="M12 18.5v2.5" />
      <path d="M12 12l-2 -1.12" />
      <path d="M6 8.6l-2 -1.1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `three_d_cube_sphere` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.three_d_cube_sphere />
      <TablerIcons.three_d_cube_sphere class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def three_d_cube_sphere(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 17.6l-2 -1.1v-2.5" />
      <path d="M4 10v-2.5l2 -1.1" />
      <path d="M10 4.1l2 -1.1l2 1.1" />
      <path d="M18 6.4l2 1.1v2.5" />
      <path d="M20 14v2.5l-2 1.12" />
      <path d="M14 19.9l-2 1.1l-2 -1.1" />
      <path d="M12 12l2 -1.1" />
      <path d="M18 8.6l2 -1.1" />
      <path d="M12 12l0 2.5" />
      <path d="M12 18.5l0 2.5" />
      <path d="M12 12l-2 -1.12" />
      <path d="M6 8.6l-2 -1.1" />
    </svg>
    """
  end

  @doc """
  Renders the `three_d_rotate` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.three_d_rotate />
      <TablerIcons.three_d_rotate class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def three_d_rotate(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a7 7 0 0 1 7 7v4l-3 -3" />
      <path d="M22 11l-3 3" />
      <path d="M8 15.5l-5 -3l5 -3l5 3v5.5l-5 3z" />
      <path d="M3 12.5v5.5l5 3" />
      <path d="M8 15.545l5 -3.03" />
    </svg>
    """
  end

  @doc """
  Renders the `a_b_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.a_b_2 />
      <TablerIcons.a_b_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def a_b_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 21h3c.81 0 1.48 -.67 1.48 -1.48l.02 -.02c0 -.82 -.69 -1.5 -1.5 -1.5h-3v3z" />
      <path d="M16 15h2.5c.84 -.01 1.5 .66 1.5 1.5s-.66 1.5 -1.5 1.5h-2.5v-3z" />
      <path d="M4 9v-4c0 -1.036 .895 -2 2 -2s2 .964 2 2v4" />
      <path d="M2.99 11.98a9 9 0 0 0 9 9m9 -9a9 9 0 0 0 -9 -9" />
      <path d="M8 7h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `a_b_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.a_b_off />
      <TablerIcons.a_b_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def a_b_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 16v-5.5a2.5 2.5 0 0 1 5 0v5.5m0 -4h-5" />
      <path d="M12 12v6" />
      <path d="M12 6v2" />
      <path d="M16 8h3a2 2 0 1 1 0 4h-3m3 0a2 2 0 0 1 .83 3.82m-3.83 -3.82v-4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `a_b` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.a_b />
      <TablerIcons.a_b class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def a_b(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 16v-5.5a2.5 2.5 0 0 1 5 0v5.5m0 -4h-5" />
      <path d="M12 6l0 12" />
      <path d="M16 16v-8h3a2 2 0 0 1 0 4h-3m3 0a2 2 0 0 1 0 4h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `abacus_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.abacus_off />
      <TablerIcons.abacus_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def abacus_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5v16" />
      <path d="M19 21v-2m0 -4v-12" />
      <path d="M5 7h2m4 0h8" />
      <path d="M5 15h10" />
      <path d="M8 13v4" />
      <path d="M11 13v4" />
      <path d="M16 16v1" />
      <path d="M14 5v4" />
      <path d="M11 5v2" />
      <path d="M8 8v1" />
      <path d="M3 21h18" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `abacus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.abacus />
      <TablerIcons.abacus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def abacus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 3v18" />
      <path d="M19 21v-18" />
      <path d="M5 7h14" />
      <path d="M5 15h14" />
      <path d="M8 13v4" />
      <path d="M11 13v4" />
      <path d="M16 13v4" />
      <path d="M14 5v4" />
      <path d="M11 5v4" />
      <path d="M8 5v4" />
      <path d="M3 21h18" />
    </svg>
    """
  end

  @doc """
  Renders the `abc` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.abc />
      <TablerIcons.abc class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def abc(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 16v-6a2 2 0 1 1 4 0v6" />
      <path d="M3 13h4" />
      <path d="M10 8v6a2 2 0 1 0 4 0v-1a2 2 0 1 0 -4 0v1" />
      <path d="M20.732 12a2 2 0 0 0 -3.732 1v1a2 2 0 0 0 3.726 1.01" />
    </svg>
    """
  end

  @doc """
  Renders the `access_point_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.access_point_off />
      <TablerIcons.access_point_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def access_point_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M14.828 9.172a4 4 0 0 1 1.172 2.828" />
      <path d="M17.657 6.343a8 8 0 0 1 1.635 8.952" />
      <path d="M9.168 14.828a4 4 0 0 1 0 -5.656" />
      <path d="M6.337 17.657a8 8 0 0 1 0 -11.314" />
    </svg>
    """
  end

  @doc """
  Renders the `access_point` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.access_point />
      <TablerIcons.access_point class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def access_point(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12l0 .01" />
      <path d="M14.828 9.172a4 4 0 0 1 0 5.656" />
      <path d="M17.657 6.343a8 8 0 0 1 0 11.314" />
      <path d="M9.168 14.828a4 4 0 0 1 0 -5.656" />
      <path d="M6.337 17.657a8 8 0 0 1 0 -11.314" />
    </svg>
    """
  end

  @doc """
  Renders the `accessible_off_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.accessible_off_filled />
      <TablerIcons.accessible_off_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def accessible_off_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-1.051 6.844a1 1 0 0 0 -1.152 -.663l-.113 .03l-2.684 .895l-2.684 -.895l-.113 -.03a1 1 0 0 0 -.628 1.884l.109 .044l2.316 .771v.976l-1.832 2.75l-.06 .1a1 1 0 0 0 .237 1.21l.1 .076l.101 .06a1 1 0 0 0 1.21 -.237l.076 -.1l1.168 -1.752l1.168 1.752l.07 .093a1 1 0 0 0 1.653 -1.102l-.059 -.1l-1.832 -2.75v-.977l2.316 -.771l.109 -.044a1 1 0 0 0 .524 -1.221zm-3.949 -4.184a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `accessible_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.accessible_off />
      <TablerIcons.accessible_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def accessible_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 16.5l2 -3l2 3m-2 -3v-1.5m2.627 -1.376l.373 -.124m-6 0l2.231 .744" />
      <path d="M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73" />
      <path d="M12 8a.5 .5 0 1 0 -.5 -.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `accessible` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.accessible />
      <TablerIcons.accessible class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def accessible(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 16.5l2 -3l2 3m-2 -3v-2l3 -1m-6 0l3 1" />
      <circle cx="12" cy="7.5" r=".5" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `activity_heartbeat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.activity_heartbeat />
      <TablerIcons.activity_heartbeat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def activity_heartbeat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h4.5l1.5 -6l4 12l2 -9l1.5 3h4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `activity` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.activity />
      <TablerIcons.activity class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def activity(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h4l3 8l4 -16l3 8h4" />
    </svg>
    """
  end

  @doc """
  Renders the `ad_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ad_2 />
      <TablerIcons.ad_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ad_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.933 5h-6.933v16h13v-8" />
      <path d="M14 17h-5" />
      <path d="M9 13h5v-4h-5z" />
      <path d="M15 5v-2" />
      <path d="M18 6l2 -2" />
      <path d="M19 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `ad_circle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ad_circle_filled />
      <TablerIcons.ad_circle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ad_circle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10s-4.477 10 -10 10c-5.43 0 -9.848 -4.327 -9.996 -9.72l-.004 -.28l.004 -.28c.148 -5.393 4.566 -9.72 9.996 -9.72zm-3.5 6a2.5 2.5 0 0 0 -2.495 2.336l-.005 .164v4.5l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-1h1v1l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-4.5l-.005 -.164a2.5 2.5 0 0 0 -2.495 -2.336zm6.5 0h-1a1 1 0 0 0 -1 1v6a1 1 0 0 0 1 1h1a3 3 0 0 0 3 -3v-2a3 3 0 0 0 -3 -3zm0 2a1 1 0 0 1 1 1v2a1 1 0 0 1 -.883 .993l-.117 .007v-4zm-6.5 0a.5 .5 0 0 1 .492 .41l.008 .09v1.5h-1v-1.5l.008 -.09a.5 .5 0 0 1 .492 -.41z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `ad_circle_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ad_circle_off />
      <TablerIcons.ad_circle_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ad_circle_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.91 4.949a9.968 9.968 0 0 0 -2.91 7.051c0 5.523 4.477 10 10 10a9.968 9.968 0 0 0 7.05 -2.909" />
      <path d="M20.778 16.793a9.955 9.955 0 0 0 1.222 -4.793c0 -5.523 -4.477 -10 -10 -10c-1.74 0 -3.376 .444 -4.8 1.225" />
      <path d="M7 15v-4.5a1.5 1.5 0 0 1 2.138 -1.358" />
      <path d="M9.854 9.853c.094 .196 .146 .415 .146 .647v4.5" />
      <path d="M7 13h3" />
      <path d="M14 14v1h1" />
      <path d="M17 13v-2a2 2 0 0 0 -2 -2h-1v1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ad_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ad_circle />
      <TablerIcons.ad_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ad_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-10 0a10 10 0 1 0 20 0a10 10 0 1 0 -20 0" />
      <path d="M7 15v-4.5a1.5 1.5 0 0 1 3 0v4.5" />
      <path d="M7 13h3" />
      <path d="M14 9v6h1a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2h-1z" />
    </svg>
    """
  end

  @doc """
  Renders the `ad_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ad_filled />
      <TablerIcons.ad_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ad_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 4h-14a3 3 0 0 0 -3 3v10a3 3 0 0 0 3 3h14a3 3 0 0 0 3 -3v-10a3 3 0 0 0 -3 -3zm-10 4a3 3 0 0 1 2.995 2.824l.005 .176v4a1 1 0 0 1 -1.993 .117l-.007 -.117v-1h-2v1a1 1 0 0 1 -1.993 .117l-.007 -.117v-4a3 3 0 0 1 3 -3zm0 2a1 1 0 0 0 -.993 .883l-.007 .117v1h2v-1a1 1 0 0 0 -1 -1zm8 -2a1 1 0 0 1 .993 .883l.007 .117v6a1 1 0 0 1 -.883 .993l-.117 .007h-1.5a2.5 2.5 0 1 1 .326 -4.979l.174 .029v-2.05a1 1 0 0 1 .883 -.993l.117 -.007zm-1.41 5.008l-.09 -.008a.5 .5 0 0 0 -.09 .992l.09 .008h.5v-.5l-.008 -.09a.5 .5 0 0 0 -.318 -.379l-.084 -.023z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `ad_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ad_off />
      <TablerIcons.ad_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ad_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h10a2 2 0 0 1 2 2v10m-2 2h-14a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2" />
      <path d="M7 15v-4a2 2 0 0 1 2 -2m2 2v4" />
      <path d="M7 13h4" />
      <path d="M17 9v4" />
      <path d="M16.115 12.131c.33 .149 .595 .412 .747 .74" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ad` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ad />
      <TablerIcons.ad class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ad(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M7 15v-4a2 2 0 0 1 4 0v4" />
      <path d="M7 13l4 0" />
      <path d="M17 9v6h-1.5a1.5 1.5 0 1 1 1.5 -1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `address_book_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.address_book_off />
      <TablerIcons.address_book_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def address_book_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h10a2 2 0 0 1 2 2v10m-.57 3.399c-.363 .37 -.87 .601 -1.43 .601h-10a2 2 0 0 1 -2 -2v-12" />
      <path d="M10 16h6" />
      <path d="M11 11a2 2 0 0 0 2 2m2 -2a2 2 0 0 0 -2 -2" />
      <path d="M4 8h3" />
      <path d="M4 12h3" />
      <path d="M4 16h3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `address_book` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.address_book />
      <TablerIcons.address_book class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def address_book(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 6v12a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2z" />
      <path d="M10 16h6" />
      <path d="M13 11m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M4 8h3" />
      <path d="M4 12h3" />
      <path d="M4 16h3" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_alt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_alt />
      <TablerIcons.adjustments_alt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_alt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8h4v4h-4z" />
      <path d="M6 4l0 4" />
      <path d="M6 12l0 8" />
      <path d="M10 14h4v4h-4z" />
      <path d="M12 4l0 10" />
      <path d="M12 18l0 2" />
      <path d="M16 5h4v4h-4z" />
      <path d="M18 4l0 1" />
      <path d="M18 9l0 11" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_bolt />
      <TablerIcons.adjustments_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M10 16a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 4v10" />
      <path d="M19 16l-2 3h4l-2 3" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v3" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_cancel />
      <TablerIcons.adjustments_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M13.499 14.675a2 2 0 1 0 -1.499 3.325" />
      <path d="M12 4v10" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v3" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_check />
      <TablerIcons.adjustments_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M13.823 15.176a2 2 0 1 0 -2.638 2.651" />
      <path d="M12 4v10" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v5" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_code />
      <TablerIcons.adjustments_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M13.557 14.745a2 2 0 1 0 -1.557 3.255" />
      <path d="M12 4v10" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v4" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_cog />
      <TablerIcons.adjustments_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M13.199 14.399a2 2 0 1 0 -1.199 3.601" />
      <path d="M12 4v10" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v2.5" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_dollar />
      <TablerIcons.adjustments_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M13.366 14.54a2 2 0 1 0 -.216 3.097" />
      <path d="M12 4v10" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v1" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_down />
      <TablerIcons.adjustments_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M13.945 15.53a2 2 0 1 0 -1.945 2.47" />
      <path d="M12 4v10" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v3" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_exclamation />
      <TablerIcons.adjustments_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M10 16a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 4v10" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v3" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_filled />
      <TablerIcons.adjustments_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M6 3a1 1 0 0 1 .993 .883l.007 .117v3.171a3.001 3.001 0 0 1 0 5.658v7.171a1 1 0 0 1 -1.993 .117l-.007 -.117v-7.17a3.002 3.002 0 0 1 -1.995 -2.654l-.005 -.176l.005 -.176a3.002 3.002 0 0 1 1.995 -2.654v-3.17a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 3a1 1 0 0 1 .993 .883l.007 .117v9.171a3.001 3.001 0 0 1 0 5.658v1.171a1 1 0 0 1 -1.993 .117l-.007 -.117v-1.17a3.002 3.002 0 0 1 -1.995 -2.654l-.005 -.176l.005 -.176a3.002 3.002 0 0 1 1.995 -2.654v-9.17a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M18 3a1 1 0 0 1 .993 .883l.007 .117v.171a3.001 3.001 0 0 1 0 5.658v10.171a1 1 0 0 1 -1.993 .117l-.007 -.117v-10.17a3.002 3.002 0 0 1 -1.995 -2.654l-.005 -.176l.005 -.176a3.002 3.002 0 0 1 1.995 -2.654v-.17a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_heart />
      <TablerIcons.adjustments_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M12 4v8.5" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v2.5" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_horizontal />
      <TablerIcons.adjustments_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M4 6l8 0" />
      <path d="M16 6l4 0" />
      <path d="M8 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M4 12l2 0" />
      <path d="M10 12l10 0" />
      <path d="M17 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M4 18l11 0" />
      <path d="M19 18l1 0" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_minus />
      <TablerIcons.adjustments_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M13.954 15.574a2 2 0 1 0 -1.954 2.426" />
      <path d="M12 4v10" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v6" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_off />
      <TablerIcons.adjustments_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 6v2" />
      <path d="M6 12v8" />
      <path d="M10 16a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 4v4m0 4v2" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v5m0 4v2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_pause />
      <TablerIcons.adjustments_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M13.627 14.836a2 2 0 1 0 -.62 2.892" />
      <path d="M12 4v10" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
      <path d="M18 9v4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_pin />
      <TablerIcons.adjustments_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M13.071 14.31a2 2 0 1 0 -1.071 3.69" />
      <path d="M12 4v10" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v2.5" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_plus />
      <TablerIcons.adjustments_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M13.958 15.592a2 2 0 1 0 -1.958 2.408" />
      <path d="M12 4v10" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v3" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_question />
      <TablerIcons.adjustments_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M13.577 14.77a2 2 0 1 0 .117 2.295" />
      <path d="M12 4v10" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v2" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_search />
      <TablerIcons.adjustments_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M12 14a2 2 0 0 0 -1.042 3.707" />
      <path d="M12 4v10" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v2" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_share />
      <TablerIcons.adjustments_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M13.387 14.56a2 2 0 1 0 -.798 3.352" />
      <path d="M12 4v10" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
      <path d="M18 9v4" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_star />
      <TablerIcons.adjustments_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M12 4v9.5" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
      <path d="M18 9v1" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_up />
      <TablerIcons.adjustments_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M13.927 15.462a2 2 0 1 0 -1.927 2.538" />
      <path d="M12 4v10" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v3" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments_x />
      <TablerIcons.adjustments_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M13.653 14.874a2 2 0 1 0 -.586 2.818" />
      <path d="M12 4v10" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v4" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `adjustments` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.adjustments />
      <TablerIcons.adjustments class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def adjustments(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M6 4v4" />
      <path d="M6 12v8" />
      <path d="M10 16a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 4v10" />
      <path d="M12 18v2" />
      <path d="M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M18 4v1" />
      <path d="M18 9v11" />
    </svg>
    """
  end

  @doc """
  Renders the `aerial_lift` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.aerial_lift />
      <TablerIcons.aerial_lift class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def aerial_lift(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 5l16 -2m-8 1v10m-5.106 -6h10.306c2.45 3 2.45 9 -.2 12h-10.106c-2.544 -3 -2.544 -9 0 -12zm-1.894 6h14" />
    </svg>
    """
  end

  @doc """
  Renders the `affiliate_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.affiliate_filled />
      <TablerIcons.affiliate_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def affiliate_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.5 3a2.5 2.5 0 1 1 -.912 4.828l-4.556 4.555a5.475 5.475 0 0 1 .936 3.714l2.624 .787a2.5 2.5 0 1 1 -.575 1.916l-2.623 -.788a5.5 5.5 0 0 1 -10.39 -2.29l-.004 -.222l.004 -.221a5.5 5.5 0 0 1 2.984 -4.673l-.788 -2.624a2.498 2.498 0 0 1 -2.194 -2.304l-.006 -.178l.005 -.164a2.5 2.5 0 1 1 4.111 2.071l.787 2.625a5.475 5.475 0 0 1 3.714 .936l4.555 -4.556a2.487 2.487 0 0 1 -.167 -.748l-.005 -.164l.005 -.164a2.5 2.5 0 0 1 2.495 -2.336z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `affiliate` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.affiliate />
      <TablerIcons.affiliate class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def affiliate(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.931 6.936l1.275 4.249m5.607 5.609l4.251 1.275" />
      <path d="M11.683 12.317l5.759 -5.759" />
      <path d="M5.5 5.5m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M18.5 5.5m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M18.5 18.5m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M8.5 15.5m-4.5 0a4.5 4.5 0 1 0 9 0a4.5 4.5 0 1 0 -9 0" />
    </svg>
    """
  end

  @doc """
  Renders the `air_balloon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.air_balloon />
      <TablerIcons.air_balloon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def air_balloon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 19m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M12 16c3.314 0 6 -4.686 6 -8a6 6 0 1 0 -12 0c0 3.314 2.686 8 6 8z" />
      <path d="M12 9m-2 0a2 7 0 1 0 4 0a2 7 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `air_conditioning_disabled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.air_conditioning_disabled />
      <TablerIcons.air_conditioning_disabled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def air_conditioning_disabled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 8m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M7 16v-3a1 1 0 0 1 1 -1h8a1 1 0 0 1 1 1v3" />
    </svg>
    """
  end

  @doc """
  Renders the `air_conditioning` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.air_conditioning />
      <TablerIcons.air_conditioning class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def air_conditioning(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 16a3 3 0 0 1 -3 3" />
      <path d="M16 16a3 3 0 0 0 3 3" />
      <path d="M12 16v4" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M7 13v-3a1 1 0 0 1 1 -1h8a1 1 0 0 1 1 1v3" />
    </svg>
    """
  end

  @doc """
  Renders the `air_traffic_control` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.air_traffic_control />
      <TablerIcons.air_traffic_control class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def air_traffic_control(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 3h2" />
      <path d="M12 3v3" />
      <path d="M5.998 6h12.004a2 2 0 0 1 1.916 2.575l-1.8 6a2 2 0 0 1 -1.916 1.425h-8.404a2 2 0 0 1 -1.916 -1.425l-1.8 -6a2 2 0 0 1 1.916 -2.575z" />
      <path d="M8.5 6l1.5 10v5" />
      <path d="M15.5 6l-1.5 10v5" />
    </svg>
    """
  end

  @doc """
  Renders the `alarm_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alarm_filled />
      <TablerIcons.alarm_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alarm_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M16 6.072a8 8 0 1 1 -11.995 7.213l-.005 -.285l.005 -.285a8 8 0 0 1 11.995 -6.643zm-4 2.928a1 1 0 0 0 -1 1v3l.007 .117a1 1 0 0 0 .993 .883h2l.117 -.007a1 1 0 0 0 .883 -.993l-.007 -.117a1 1 0 0 0 -.993 -.883h-1v-2l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M6.412 3.191a1 1 0 0 1 1.273 1.539l-.097 .08l-2.75 2a1 1 0 0 1 -1.273 -1.54l.097 -.08l2.75 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M16.191 3.412a1 1 0 0 1 1.291 -.288l.106 .067l2.75 2a1 1 0 0 1 -1.07 1.685l-.106 -.067l-2.75 -2a1 1 0 0 1 -.22 -1.397z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `alarm_minus_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alarm_minus_filled />
      <TablerIcons.alarm_minus_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alarm_minus_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M16 6.072a8 8 0 1 1 -11.995 7.213l-.005 -.285l.005 -.285a8 8 0 0 1 11.995 -6.643zm-2 5.928h-4l-.117 .007a1 1 0 0 0 .117 1.993h4l.117 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M6.412 3.191a1 1 0 0 1 1.273 1.539l-.097 .08l-2.75 2a1 1 0 0 1 -1.273 -1.54l.097 -.08l2.75 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M16.191 3.412a1 1 0 0 1 1.291 -.288l.106 .067l2.75 2a1 1 0 0 1 -1.07 1.685l-.106 -.067l-2.75 -2a1 1 0 0 1 -.22 -1.397z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `alarm_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alarm_minus />
      <TablerIcons.alarm_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alarm_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 13m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M7 4l-2.75 2" />
      <path d="M17 4l2.75 2" />
      <path d="M10 13h4" />
    </svg>
    """
  end

  @doc """
  Renders the `alarm_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alarm_off />
      <TablerIcons.alarm_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alarm_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.587 7.566a7 7 0 1 0 9.833 9.864m1.35 -2.645a7 7 0 0 0 -8.536 -8.56" />
      <path d="M12 12v1h1" />
      <path d="M5.261 5.265l-1.011 .735" />
      <path d="M17 4l2.75 2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `alarm_plus_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alarm_plus_filled />
      <TablerIcons.alarm_plus_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alarm_plus_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M16 6.072a8 8 0 1 1 -11.995 7.213l-.005 -.285l.005 -.285a8 8 0 0 1 11.995 -6.643zm-4 3.928a1 1 0 0 0 -1 1v1h-1l-.117 .007a1 1 0 0 0 .117 1.993h1v1l.007 .117a1 1 0 0 0 1.993 -.117v-1h1l.117 -.007a1 1 0 0 0 -.117 -1.993h-1v-1l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M6.412 3.191a1 1 0 0 1 1.273 1.539l-.097 .08l-2.75 2a1 1 0 0 1 -1.273 -1.54l.097 -.08l2.75 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M16.191 3.412a1 1 0 0 1 1.291 -.288l.106 .067l2.75 2a1 1 0 0 1 -1.07 1.685l-.106 -.067l-2.75 -2a1 1 0 0 1 -.22 -1.397z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `alarm_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alarm_plus />
      <TablerIcons.alarm_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alarm_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 13m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M7 4l-2.75 2" />
      <path d="M17 4l2.75 2" />
      <path d="M10 13h4" />
      <path d="M12 11v4" />
    </svg>
    """
  end

  @doc """
  Renders the `alarm_snooze_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alarm_snooze_filled />
      <TablerIcons.alarm_snooze_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alarm_snooze_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M16 6.072a8 8 0 1 1 -11.995 7.213l-.005 -.285l.005 -.285a8 8 0 0 1 11.995 -6.643zm-2 3.928h-4l-.117 .007a1 1 0 0 0 -.883 .993l.007 .117a1 1 0 0 0 .993 .883h1.584l-2.291 2.293l-.076 .084c-.514 .637 -.07 1.623 .783 1.623h4l.117 -.007a1 1 0 0 0 .883 -.993l-.007 -.117a1 1 0 0 0 -.993 -.883h-1.586l2.293 -2.293l.076 -.084c.514 -.637 .07 -1.623 -.783 -1.623z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M6.412 3.191a1 1 0 0 1 1.273 1.539l-.097 .08l-2.75 2a1 1 0 0 1 -1.273 -1.54l.097 -.08l2.75 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M16.191 3.412a1 1 0 0 1 1.291 -.288l.106 .067l2.75 2a1 1 0 0 1 -1.07 1.685l-.106 -.067l-2.75 -2a1 1 0 0 1 -.22 -1.397z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `alarm_snooze` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alarm_snooze />
      <TablerIcons.alarm_snooze class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alarm_snooze(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 13m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M10 11h4l-4 4h4" />
      <path d="M7 4l-2.75 2" />
      <path d="M17 4l2.75 2" />
    </svg>
    """
  end

  @doc """
  Renders the `alarm` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alarm />
      <TablerIcons.alarm class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alarm(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 13m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M12 10l0 3l2 0" />
      <path d="M7 4l-2.75 2" />
      <path d="M17 4l2.75 2" />
    </svg>
    """
  end

  @doc """
  Renders the `album_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.album_off />
      <TablerIcons.album_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def album_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h10a2 2 0 0 1 2 2v10m-.581 3.41c-.362 .364 -.864 .59 -1.419 .59h-12a2 2 0 0 1 -2 -2v-12c0 -.552 .224 -1.052 .585 -1.413" />
      <path d="M12 4v4m1.503 1.497l.497 -.497l2 2v-7" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `album` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.album />
      <TablerIcons.album class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def album(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M12 4v7l2 -2l2 2v-7" />
    </svg>
    """
  end

  @doc """
  Renders the `alert_circle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alert_circle_filled />
      <TablerIcons.alert_circle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alert_circle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10a10 10 0 0 1 -19.995 .324l-.005 -.324l.004 -.28c.148 -5.393 4.566 -9.72 9.996 -9.72zm.01 13l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm-.01 -8a1 1 0 0 0 -.993 .883l-.007 .117v4l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `alert_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alert_circle />
      <TablerIcons.alert_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alert_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
      <path d="M12 8v4" />
      <path d="M12 16h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `alert_hexagon_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alert_hexagon_filled />
      <TablerIcons.alert_hexagon_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alert_hexagon_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.425 1.414a3.33 3.33 0 0 1 3.026 -.097l.19 .097l6.775 3.995l.096 .063l.092 .077l.107 .075a3.224 3.224 0 0 1 1.266 2.188l.018 .202l.005 .204v7.284c0 1.106 -.57 2.129 -1.454 2.693l-.17 .1l-6.803 4.302c-.918 .504 -2.019 .535 -3.004 .068l-.196 -.1l-6.695 -4.237a3.225 3.225 0 0 1 -1.671 -2.619l-.007 -.207v-7.285c0 -1.106 .57 -2.128 1.476 -2.705l6.95 -4.098zm1.585 13.586l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm-.01 -8a1 1 0 0 0 -.993 .883l-.007 .117v4l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `alert_hexagon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alert_hexagon />
      <TablerIcons.alert_hexagon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alert_hexagon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27c.7 .398 1.13 1.143 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M12 8v4" />
      <path d="M12 16h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `alert_octagon_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alert_octagon_filled />
      <TablerIcons.alert_octagon_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alert_octagon_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.897 1a4 4 0 0 1 2.664 1.016l.165 .156l4.1 4.1a4 4 0 0 1 1.168 2.605l.006 .227v5.794a4 4 0 0 1 -1.016 2.664l-.156 .165l-4.1 4.1a4 4 0 0 1 -2.603 1.168l-.227 .006h-5.795a3.999 3.999 0 0 1 -2.664 -1.017l-.165 -.156l-4.1 -4.1a4 4 0 0 1 -1.168 -2.604l-.006 -.227v-5.794a4 4 0 0 1 1.016 -2.664l.156 -.165l4.1 -4.1a4 4 0 0 1 2.605 -1.168l.227 -.006h5.793zm-2.887 14l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm-.01 -8a1 1 0 0 0 -.993 .883l-.007 .117v4l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `alert_octagon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alert_octagon />
      <TablerIcons.alert_octagon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alert_octagon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.103 2h5.794a3 3 0 0 1 2.122 .879l4.101 4.1a3 3 0 0 1 .88 2.125v5.794a3 3 0 0 1 -.879 2.122l-4.1 4.101a3 3 0 0 1 -2.123 .88h-5.795a3 3 0 0 1 -2.122 -.88l-4.101 -4.1a3 3 0 0 1 -.88 -2.124v-5.794a3 3 0 0 1 .879 -2.122l4.1 -4.101a3 3 0 0 1 2.125 -.88z" />
      <path d="M12 8v4" />
      <path d="M12 16h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `alert_small` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alert_small />
      <TablerIcons.alert_small class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alert_small(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8v4" />
      <path d="M12 16h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `alert_square_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alert_square_filled />
      <TablerIcons.alert_square_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alert_square_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 2.995 2.824l.005 .176v14a3 3 0 0 1 -2.824 2.995l-.176 .005h-14a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-14a3 3 0 0 1 2.824 -2.995l.176 -.005h14zm-6.99 13l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm-.01 -8a1 1 0 0 0 -.993 .883l-.007 .117v4l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `alert_square_rounded_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alert_square_rounded_filled />
      <TablerIcons.alert_square_rounded_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alert_square_rounded_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.642 .005l.616 .017l.299 .013l.579 .034l.553 .046c4.687 .455 6.65 2.333 7.166 6.906l.03 .29l.046 .553l.041 .727l.006 .15l.017 .617l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.455 4.687 -2.333 6.65 -6.906 7.166l-.29 .03l-.553 .046l-.727 .041l-.15 .006l-.617 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.687 -.455 -6.65 -2.333 -7.166 -6.906l-.03 -.29l-.046 -.553l-.041 -.727l-.006 -.15l-.017 -.617l-.004 -.318v-.648l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.455 -4.687 2.333 -6.65 6.906 -7.166l.29 -.03l.553 -.046l.727 -.041l.15 -.006l.617 -.017c.21 -.003 .424 -.005 .642 -.005zm.01 13l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm-.01 -8a1 1 0 0 0 -.993 .883l-.007 .117v4l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `alert_square_rounded` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alert_square_rounded />
      <TablerIcons.alert_square_rounded class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alert_square_rounded(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
      <path d="M12 8v4" />
      <path d="M12 16h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `alert_square` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alert_square />
      <TablerIcons.alert_square class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alert_square(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
      <path d="M12 8v4" />
      <path d="M12 16h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `alert_triangle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alert_triangle_filled />
      <TablerIcons.alert_triangle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alert_triangle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11.94 2a2.99 2.99 0 0 1 2.45 1.279l.108 .164l8.431 14.074a2.989 2.989 0 0 1 -2.366 4.474l-.2 .009h-16.856a2.99 2.99 0 0 1 -2.648 -4.308l.101 -.189l8.425 -14.065a2.989 2.989 0 0 1 2.555 -1.438zm.07 14l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm-.01 -8a1 1 0 0 0 -.993 .883l-.007 .117v4l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `alert_triangle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alert_triangle />
      <TablerIcons.alert_triangle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alert_triangle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.24 3.957l-8.422 14.06a1.989 1.989 0 0 0 1.7 2.983h16.845a1.989 1.989 0 0 0 1.7 -2.983l-8.423 -14.06a1.989 1.989 0 0 0 -3.4 0z" />
      <path d="M12 9v4" />
      <path d="M12 17h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `alien_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alien_filled />
      <TablerIcons.alien_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alien_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12.004 2c4.942 0 8.288 2.503 8.85 6.444a12.884 12.884 0 0 1 -2.163 9.308a11.794 11.794 0 0 1 -3.51 3.356c-1.982 1.19 -4.376 1.19 -6.373 -.008a11.763 11.763 0 0 1 -3.489 -3.34a12.808 12.808 0 0 1 -2.171 -9.306c.564 -3.95 3.91 -6.454 8.856 -6.454zm1.913 14.6a1 1 0 0 0 -1.317 -.517l-.146 .055a1.5 1.5 0 0 1 -1.054 -.055l-.11 -.04a1 1 0 0 0 -.69 1.874a3.5 3.5 0 0 0 2.8 0a1 1 0 0 0 .517 -1.317zm-5.304 -6.39a1 1 0 0 0 -1.32 1.497l2 2l.094 .083a1 1 0 0 0 1.32 -1.497l-2 -2zm8.094 .083a1 1 0 0 0 -1.414 0l-2 2l-.083 .094a1 1 0 0 0 1.497 1.32l2 -2l.083 -.094a1 1 0 0 0 -.083 -1.32z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `alien` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alien />
      <TablerIcons.alien class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alien(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 17a2.5 2.5 0 0 0 2 0" />
      <path d="M12 3c-4.664 0 -7.396 2.331 -7.862 5.595a11.816 11.816 0 0 0 2 8.592a10.777 10.777 0 0 0 3.199 3.064c1.666 1 3.664 1 5.33 0a10.777 10.777 0 0 0 3.199 -3.064a11.89 11.89 0 0 0 2 -8.592c-.466 -3.265 -3.198 -5.595 -7.862 -5.595z" />
      <path d="M8 11l2 2" />
      <path d="M16 11l-2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_bottom_center_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_bottom_center_filled />
      <TablerIcons.align_box_bottom_center_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_bottom_center_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-9.333 13a1 1 0 0 0 -1 1v2l.007 .117a1 1 0 0 0 1.993 -.117v-2l-.007 -.117a1 1 0 0 0 -.993 -.883zm3 -4a1 1 0 0 0 -1 1v6l.007 .117a1 1 0 0 0 1.993 -.117v-6l-.007 -.117a1 1 0 0 0 -.993 -.883zm3 2a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_bottom_center` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_bottom_center />
      <TablerIcons.align_box_bottom_center class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_bottom_center(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 15v2" />
      <path d="M12 11v6" />
      <path d="M15 13v4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_bottom_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_bottom_left_filled />
      <TablerIcons.align_box_bottom_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_bottom_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-12.333 13a1 1 0 0 0 -1 1v2l.007 .117a1 1 0 0 0 1.993 -.117v-2l-.007 -.117a1 1 0 0 0 -.993 -.883zm3 -4a1 1 0 0 0 -1 1v6l.007 .117a1 1 0 0 0 1.993 -.117v-6l-.007 -.117a1 1 0 0 0 -.993 -.883zm3 2a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_bottom_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_bottom_left />
      <TablerIcons.align_box_bottom_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_bottom_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M7 15v2" />
      <path d="M10 11v6" />
      <path d="M13 13v4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_bottom_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_bottom_right_filled />
      <TablerIcons.align_box_bottom_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_bottom_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-6.333 13a1 1 0 0 0 -1 1v2l.007 .117a1 1 0 0 0 1.993 -.117v-2l-.007 -.117a1 1 0 0 0 -.993 -.883zm3 -4a1 1 0 0 0 -1 1v6l.007 .117a1 1 0 0 0 1.993 -.117v-6l-.007 -.117a1 1 0 0 0 -.993 -.883zm3 2a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_bottom_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_bottom_right />
      <TablerIcons.align_box_bottom_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_bottom_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M11 15v2" />
      <path d="M14 11v6" />
      <path d="M17 13v4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_center_bottom` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_center_bottom />
      <TablerIcons.align_box_center_bottom class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_center_bottom(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M11 17h2" />
      <path d="M9 14h6" />
      <path d="M10 11h4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_center_middle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_center_middle_filled />
      <TablerIcons.align_box_center_middle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_center_middle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 2.995 2.824l.005 .176v14a3 3 0 0 1 -2.824 2.995l-.176 .005h-14a3 3 0 0 1 -2.993 -2.802l-.007 -.198v-14a3 3 0 0 1 2.824 -2.995l.176 -.005h14zm-6 12h-2l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h2l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm2 -3h-6l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h6l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm-1 -3h-4l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h4l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_center_middle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_center_middle />
      <TablerIcons.align_box_center_middle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_center_middle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M11 15h2" />
      <path d="M9 12h6" />
      <path d="M10 9h4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_center_stretch` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_center_stretch />
      <TablerIcons.align_box_center_stretch class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_center_stretch(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M11 17h2" />
      <path d="M9 12h6" />
      <path d="M10 7h4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_center_top` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_center_top />
      <TablerIcons.align_box_center_top class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_center_top(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M11 13h2" />
      <path d="M9 10h6" />
      <path d="M10 7h4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_left_bottom_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_left_bottom_filled />
      <TablerIcons.align_box_left_bottom_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_left_bottom_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-10.333 15h-2l-.117 .007a1 1 0 0 0 .117 1.993h2l.117 -.007a1 1 0 0 0 -.117 -1.993zm4 -3h-6l-.117 .007a1 1 0 0 0 .117 1.993h6l.117 -.007a1 1 0 0 0 -.117 -1.993zm-2 -3h-4l-.117 .007a1 1 0 0 0 .117 1.993h4l.117 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_left_bottom` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_left_bottom />
      <TablerIcons.align_box_left_bottom class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_left_bottom(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 17h-2" />
      <path d="M13 14h-6" />
      <path d="M11 11h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_left_middle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_left_middle_filled />
      <TablerIcons.align_box_left_middle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_left_middle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-10.333 12h-2l-.117 .007a1 1 0 0 0 .117 1.993h2l.117 -.007a1 1 0 0 0 -.117 -1.993zm4 -3h-6l-.117 .007a1 1 0 0 0 .117 1.993h6l.117 -.007a1 1 0 0 0 -.117 -1.993zm-2 -3h-4l-.117 .007a1 1 0 0 0 .117 1.993h4l.117 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_left_middle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_left_middle />
      <TablerIcons.align_box_left_middle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_left_middle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 15h-2" />
      <path d="M13 12h-6" />
      <path d="M11 9h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_left_stretch` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_left_stretch />
      <TablerIcons.align_box_left_stretch class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_left_stretch(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
      <path d="M9 17h-2" />
      <path d="M13 12h-6" />
      <path d="M11 7h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_left_top_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_left_top_filled />
      <TablerIcons.align_box_left_top_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_left_top_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-10.333 9h-2l-.117 .007a1 1 0 0 0 .117 1.993h2l.117 -.007a1 1 0 0 0 -.117 -1.993zm4 -3h-6l-.117 .007a1 1 0 0 0 .117 1.993h6l.117 -.007a1 1 0 0 0 -.117 -1.993zm-2 -3h-4l-.117 .007a1 1 0 0 0 .117 1.993h4l.117 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_left_top` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_left_top />
      <TablerIcons.align_box_left_top class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_left_top(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 13h-2" />
      <path d="M13 10h-6" />
      <path d="M11 7h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_right_bottom_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_right_bottom_filled />
      <TablerIcons.align_box_right_bottom_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_right_bottom_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-.333 15h-2l-.117 .007a1 1 0 0 0 .117 1.993h2l.117 -.007a1 1 0 0 0 -.117 -1.993zm0 -3h-6l-.117 .007a1 1 0 0 0 .117 1.993h6l.117 -.007a1 1 0 0 0 -.117 -1.993zm0 -3h-4l-.117 .007a1 1 0 0 0 .117 1.993h4l.117 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_right_bottom` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_right_bottom />
      <TablerIcons.align_box_right_bottom class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_right_bottom(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M15 17h2" />
      <path d="M11 14h6" />
      <path d="M13 11h4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_right_middle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_right_middle_filled />
      <TablerIcons.align_box_right_middle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_right_middle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-.333 12h-2l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h2l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm0 -3h-6l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h6l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm0 -3h-4l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h4l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_right_middle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_right_middle />
      <TablerIcons.align_box_right_middle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_right_middle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 15h2" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
      <path d="M11 12h6" />
      <path d="M13 9h4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_right_stretch` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_right_stretch />
      <TablerIcons.align_box_right_stretch class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_right_stretch(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 17h2" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
      <path d="M11 12h6" />
      <path d="M13 7h4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_right_top_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_right_top_filled />
      <TablerIcons.align_box_right_top_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_right_top_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-.333 9h-2l-.117 .007a1 1 0 0 0 .117 1.993h2l.117 -.007a1 1 0 0 0 -.117 -1.993zm0 -3h-6l-.117 .007a1 1 0 0 0 .117 1.993h6l.117 -.007a1 1 0 0 0 -.117 -1.993zm0 -3h-4l-.117 .007a1 1 0 0 0 .117 1.993h4l.117 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_right_top` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_right_top />
      <TablerIcons.align_box_right_top class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_right_top(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M15 13h2" />
      <path d="M11 10h6" />
      <path d="M13 7h4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_top_center_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_top_center_filled />
      <TablerIcons.align_box_top_center_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_top_center_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-6.333 3a1 1 0 0 0 -1 1v6l.007 .117a1 1 0 0 0 1.993 -.117v-6l-.007 -.117a1 1 0 0 0 -.993 -.883zm3 0a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883zm-6 0a1 1 0 0 0 -1 1v2l.007 .117a1 1 0 0 0 1.993 -.117v-2l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_top_center` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_top_center />
      <TablerIcons.align_box_top_center class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_top_center(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 9v-2" />
      <path d="M12 13v-6" />
      <path d="M15 11v-4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_top_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_top_left_filled />
      <TablerIcons.align_box_top_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_top_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-9.333 3a1 1 0 0 0 -1 1v6l.007 .117a1 1 0 0 0 1.993 -.117v-6l-.007 -.117a1 1 0 0 0 -.993 -.883zm3 0a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883zm-6 0a1 1 0 0 0 -1 1v2l.007 .117a1 1 0 0 0 1.993 -.117v-2l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_top_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_top_left />
      <TablerIcons.align_box_top_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_top_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M7 9v-2" />
      <path d="M10 13v-6" />
      <path d="M13 11v-4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_top_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_top_right_filled />
      <TablerIcons.align_box_top_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_top_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-3.333 3a1 1 0 0 0 -1 1v6l.007 .117a1 1 0 0 0 1.993 -.117v-6l-.007 -.117a1 1 0 0 0 -.993 -.883zm3 0a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883zm-6 0a1 1 0 0 0 -1 1v2l.007 .117a1 1 0 0 0 1.993 -.117v-2l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `align_box_top_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_box_top_right />
      <TablerIcons.align_box_top_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_box_top_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M11 9v-2" />
      <path d="M14 13v-6" />
      <path d="M17 11v-4" />
    </svg>
    """
  end

  @doc """
  Renders the `align_center` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_center />
      <TablerIcons.align_center class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_center(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6l16 0" />
      <path d="M8 12l8 0" />
      <path d="M6 18l12 0" />
    </svg>
    """
  end

  @doc """
  Renders the `align_justified` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_justified />
      <TablerIcons.align_justified class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_justified(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6l16 0" />
      <path d="M4 12l16 0" />
      <path d="M4 18l12 0" />
    </svg>
    """
  end

  @doc """
  Renders the `align_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_left />
      <TablerIcons.align_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6l16 0" />
      <path d="M4 12l10 0" />
      <path d="M4 18l14 0" />
    </svg>
    """
  end

  @doc """
  Renders the `align_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.align_right />
      <TablerIcons.align_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def align_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6l16 0" />
      <path d="M10 12l10 0" />
      <path d="M6 18l14 0" />
    </svg>
    """
  end

  @doc """
  Renders the `alpha` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alpha />
      <TablerIcons.alpha class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alpha(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.1 6c-1.1 2.913 -1.9 4.913 -2.4 6c-1.879 4.088 -3.713 6 -6 6c-2.4 0 -4.8 -2.4 -4.8 -6s2.4 -6 4.8 -6c2.267 0 4.135 1.986 6 6c.512 1.102 1.312 3.102 2.4 6" />
    </svg>
    """
  end

  @doc """
  Renders the `alphabet_cyrillic` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alphabet_cyrillic />
      <TablerIcons.alphabet_cyrillic class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alphabet_cyrillic(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 10h2a2 2 0 0 1 2 2v5h-3a2 2 0 1 1 0 -4h3" />
      <path d="M19 7h-3a2 2 0 0 0 -2 2v6a2 2 0 0 0 2 2h1a2 2 0 0 0 2 -2v-3a2 2 0 0 0 -2 -2h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `alphabet_greek` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alphabet_greek />
      <TablerIcons.alphabet_greek class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alphabet_greek(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10v7" />
      <path d="M5 10m0 2a2 2 0 0 1 2 -2h1a2 2 0 0 1 2 2v3a2 2 0 0 1 -2 2h-1a2 2 0 0 1 -2 -2z" />
      <path d="M14 20v-11a2 2 0 0 1 2 -2h1a2 2 0 0 1 2 2v1a2 2 0 0 1 -2 2a2 2 0 0 1 2 2v1a2 2 0 0 1 -2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `alphabet_latin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.alphabet_latin />
      <TablerIcons.alphabet_latin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def alphabet_latin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 10h2a2 2 0 0 1 2 2v5h-3a2 2 0 1 1 0 -4h3" />
      <path d="M14 7v10" />
      <path d="M14 10m0 2a2 2 0 0 1 2 -2h1a2 2 0 0 1 2 2v3a2 2 0 0 1 -2 2h-1a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `ambulance` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ambulance />
      <TablerIcons.ambulance class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ambulance(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 17h-2v-11a1 1 0 0 1 1 -1h9v12m-4 0h6m4 0h2v-6h-8m0 -5h5l3 5" />
      <path d="M6 10h4m-2 -2v4" />
    </svg>
    """
  end

  @doc """
  Renders the `ampersand` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ampersand />
      <TablerIcons.ampersand class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ampersand(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 20l-10.403 -10.972a2.948 2.948 0 0 1 0 -4.165a2.94 2.94 0 0 1 4.161 0a2.948 2.948 0 0 1 0 4.165l-4.68 4.687a3.685 3.685 0 0 0 0 5.207a3.675 3.675 0 0 0 5.2 0l5.722 -5.922" />
    </svg>
    """
  end

  @doc """
  Renders the `analyze_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.analyze_filled />
      <TablerIcons.analyze_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def analyze_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M4.99 12.862a7.1 7.1 0 0 0 12.171 3.924a1.956 1.956 0 0 1 -.156 -.637l-.005 -.149l.005 -.15a2 2 0 1 1 1.769 2.137a9.099 9.099 0 0 1 -15.764 -4.85a1 1 0 0 1 1.98 -.275z"
        stroke-width="0"
        fill="currentColor"
      />
      <path d="M12 8a4 4 0 1 1 -3.995 4.2l-.005 -.2l.005 -.2a4 4 0 0 1 3.995 -3.8z" stroke-width="0" fill="currentColor" />
      <path
        d="M13.142 3.09a9.1 9.1 0 0 1 7.848 7.772a1 1 0 0 1 -1.98 .276a7.1 7.1 0 0 0 -6.125 -6.064a7.096 7.096 0 0 0 -6.048 2.136a2 2 0 1 1 -3.831 .939l-.006 -.149l.005 -.15a2 2 0 0 1 2.216 -1.838a9.094 9.094 0 0 1 7.921 -2.922z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `analyze_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.analyze_off />
      <TablerIcons.analyze_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def analyze_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 11a8.1 8.1 0 0 0 -6.986 -6.918a8.086 8.086 0 0 0 -4.31 .62m-2.383 1.608a8.089 8.089 0 0 0 -1.326 1.69" />
      <path d="M4 13a8.1 8.1 0 0 0 13.687 4.676" />
      <path d="M20 16a1 1 0 0 0 -1 -1" />
      <path d="M5 8m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M9.888 9.87a3 3 0 1 0 4.233 4.252m.595 -3.397a3.012 3.012 0 0 0 -1.426 -1.435" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `analyze` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.analyze />
      <TablerIcons.analyze class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def analyze(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 11a8.1 8.1 0 0 0 -6.986 -6.918a8.095 8.095 0 0 0 -8.019 3.918" />
      <path d="M4 13a8.1 8.1 0 0 0 15 3" />
      <path d="M19 16m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M5 8m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `anchor_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.anchor_off />
      <TablerIcons.anchor_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def anchor_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12v9" />
      <path d="M4 13a8 8 0 0 0 14.138 5.13m1.44 -2.56a7.99 7.99 0 0 0 .422 -2.57" />
      <path d="M21 13h-2" />
      <path d="M5 13h-2" />
      <path d="M12.866 8.873a3 3 0 1 0 -3.737 -3.747" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `anchor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.anchor />
      <TablerIcons.anchor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def anchor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9v12m-8 -8a8 8 0 0 0 16 0m1 0h-2m-14 0h-2" />
      <path d="M12 6m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `angle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.angle />
      <TablerIcons.angle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def angle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 19h-18l9 -15" />
      <path d="M20.615 15.171h.015" />
      <path d="M19.515 11.771h.015" />
      <path d="M17.715 8.671h.015" />
      <path d="M15.415 5.971h.015" />
    </svg>
    """
  end

  @doc """
  Renders the `ankh` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ankh />
      <TablerIcons.ankh class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ankh(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 13h12" />
      <path d="M12 21v-8l-.422 -.211a6.472 6.472 0 0 1 -3.578 -5.789a4 4 0 1 1 8 0a6.472 6.472 0 0 1 -3.578 5.789l-.422 .211" />
    </svg>
    """
  end

  @doc """
  Renders the `antenna_bars_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.antenna_bars_1 />
      <TablerIcons.antenna_bars_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def antenna_bars_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 18l0 .01" />
      <path d="M10 18l0 .01" />
      <path d="M14 18l0 .01" />
      <path d="M18 18l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `antenna_bars_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.antenna_bars_2 />
      <TablerIcons.antenna_bars_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def antenna_bars_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 18l0 -3" />
      <path d="M10 18l0 .01" />
      <path d="M14 18l0 .01" />
      <path d="M18 18l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `antenna_bars_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.antenna_bars_3 />
      <TablerIcons.antenna_bars_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def antenna_bars_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 18l0 -3" />
      <path d="M10 18l0 -6" />
      <path d="M14 18l0 .01" />
      <path d="M18 18l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `antenna_bars_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.antenna_bars_4 />
      <TablerIcons.antenna_bars_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def antenna_bars_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 18l0 -3" />
      <path d="M10 18l0 -6" />
      <path d="M14 18l0 -9" />
      <path d="M18 18l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `antenna_bars_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.antenna_bars_5 />
      <TablerIcons.antenna_bars_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def antenna_bars_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 18l0 -3" />
      <path d="M10 18l0 -6" />
      <path d="M14 18l0 -9" />
      <path d="M18 18l0 -12" />
    </svg>
    """
  end

  @doc """
  Renders the `antenna_bars_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.antenna_bars_off />
      <TablerIcons.antenna_bars_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def antenna_bars_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 18v-3" />
      <path d="M10 18v-6" />
      <path d="M14 18v-4" />
      <path d="M14 10v-1" />
      <path d="M18 14v-8" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `antenna_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.antenna_off />
      <TablerIcons.antenna_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def antenna_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 4v8" />
      <path d="M16 4.5v7" />
      <path d="M12 5v3m0 4v9" />
      <path d="M8 8v2.5" />
      <path d="M4 6v4" />
      <path d="M20 8h-8m-4 0h-4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `antenna` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.antenna />
      <TablerIcons.antenna class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def antenna(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 4v8" />
      <path d="M16 4.5v7" />
      <path d="M12 5v16" />
      <path d="M8 5.5v5" />
      <path d="M4 6v4" />
      <path d="M20 8h-16" />
    </svg>
    """
  end

  @doc """
  Renders the `aperture_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.aperture_off />
      <TablerIcons.aperture_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def aperture_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.6 15h10.55" />
      <path d="M5.641 5.631a9 9 0 1 0 12.719 12.738m1.68 -2.318a9 9 0 0 0 -12.074 -12.098" />
      <path d="M7.395 7.534l2.416 7.438" />
      <path d="M17.032 4.636l-4.852 3.526m-2.334 1.695l-1.349 .98" />
      <path d="M20.559 14.51l-8.535 -6.201" />
      <path d="M12.257 20.916l2.123 -6.533m.984 -3.028l.154 -.473" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `aperture` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.aperture />
      <TablerIcons.aperture class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def aperture(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M3.6 15h10.55" />
      <path d="M6.551 4.938l3.26 10.034" />
      <path d="M17.032 4.636l-8.535 6.201" />
      <path d="M20.559 14.51l-8.535 -6.201" />
      <path d="M12.257 20.916l3.261 -10.034" />
    </svg>
    """
  end

  @doc """
  Renders the `api_app_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.api_app_off />
      <TablerIcons.api_app_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def api_app_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 15h-6.5a2.5 2.5 0 1 1 0 -5h.5" />
      <path d="M15 15v3.5a2.5 2.5 0 1 1 -5 0v-.5" />
      <path d="M13 9h5.5a2.5 2.5 0 1 1 0 5h-.5" />
      <path d="M9 12v-3m.042 -3.957a2.5 2.5 0 0 1 4.958 .457v.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `api_app` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.api_app />
      <TablerIcons.api_app class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def api_app(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 15h-6.5a2.5 2.5 0 1 1 0 -5h.5" />
      <path d="M15 12v6.5a2.5 2.5 0 1 1 -5 0v-.5" />
      <path d="M12 9h6.5a2.5 2.5 0 1 1 0 5h-.5" />
      <path d="M9 12v-6.5a2.5 2.5 0 0 1 5 0v.5" />
    </svg>
    """
  end

  @doc """
  Renders the `api_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.api_off />
      <TablerIcons.api_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def api_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 13h5" />
      <path d="M12 16v-4m0 -4h3a2 2 0 0 1 2 2v1c0 .554 -.225 1.055 -.589 1.417m-3.411 .583h-1" />
      <path d="M20 8v8" />
      <path d="M9 16v-5.5a2.5 2.5 0 0 0 -5 0v5.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `api` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.api />
      <TablerIcons.api class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def api(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 13h5" />
      <path d="M12 16v-8h3a2 2 0 0 1 2 2v1a2 2 0 0 1 -2 2h-3" />
      <path d="M20 8v8" />
      <path d="M9 16v-5.5a2.5 2.5 0 0 0 -5 0v5.5" />
    </svg>
    """
  end

  @doc """
  Renders the `app_window_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.app_window_filled />
      <TablerIcons.app_window_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def app_window_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 4a3 3 0 0 1 3 3v10a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-10a3 3 0 0 1 3 -3zm-12.99 3l-.127 .007a1 1 0 0 0 .117 1.993l.127 -.007a1 1 0 0 0 -.117 -1.993zm3 0l-.127 .007a1 1 0 0 0 .117 1.993l.127 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `app_window` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.app_window />
      <TablerIcons.app_window class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def app_window(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M6 8h.01" />
      <path d="M9 8h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `apple` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.apple />
      <TablerIcons.apple class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def apple(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 14m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M12 11v-6a2 2 0 0 1 2 -2h2v1a2 2 0 0 1 -2 2h-2" />
      <path d="M10 10.5c1.333 .667 2.667 .667 4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `apps_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.apps_filled />
      <TablerIcons.apps_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def apps_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M9 3h-4a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M9 13h-4a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M19 13h-4a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M17 3a1 1 0 0 1 .993 .883l.007 .117v2h2a1 1 0 0 1 .117 1.993l-.117 .007h-2v2a1 1 0 0 1 -1.993 .117l-.007 -.117v-2h-2a1 1 0 0 1 -.117 -1.993l.117 -.007h2v-2a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `apps_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.apps_off />
      <TablerIcons.apps_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def apps_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h1a1 1 0 0 1 1 1v1m-.29 3.704a1 1 0 0 1 -.71 .296h-4a1 1 0 0 1 -1 -1v-4c0 -.276 .111 -.525 .292 -.706" />
      <path d="M18 14h1a1 1 0 0 1 1 1v1m-.29 3.704a1 1 0 0 1 -.71 .296h-4a1 1 0 0 1 -1 -1v-4c0 -.276 .111 -.525 .292 -.706" />
      <path d="M4 14m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M14 7h6" />
      <path d="M17 4v6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `apps` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.apps />
      <TablerIcons.apps class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def apps(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M4 14m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M14 14m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M14 7l6 0" />
      <path d="M17 4l0 6" />
    </svg>
    """
  end

  @doc """
  Renders the `archive_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.archive_filled />
      <TablerIcons.archive_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def archive_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <rect x="2" y="3" width="20" height="4" rx="2" stroke-width="0" fill="currentColor" />
      <path
        d="M19 9c.513 0 .936 .463 .993 1.06l.007 .14v7.2c0 1.917 -1.249 3.484 -2.824 3.594l-.176 .006h-10c-1.598 0 -2.904 -1.499 -2.995 -3.388l-.005 -.212v-7.2c0 -.663 .448 -1.2 1 -1.2h14zm-5 2h-4l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h4l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `archive_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.archive_off />
      <TablerIcons.archive_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def archive_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h11a2 2 0 1 1 0 4h-7m-4 0h-3a2 2 0 0 1 -.826 -3.822" />
      <path d="M5 8v10a2 2 0 0 0 2 2h10a2 2 0 0 0 1.824 -1.18m.176 -3.82v-7" />
      <path d="M10 12h2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `archive` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.archive />
      <TablerIcons.archive class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def archive(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M5 8v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-10" />
      <path d="M10 12l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `armchair_2_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.armchair_2_off />
      <TablerIcons.armchair_2_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def armchair_2_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 10v-4a3 3 0 0 1 .128 -.869m2.038 -2.013c.264 -.078 .544 -.118 .834 -.118h8a3 3 0 0 1 3 3v4" />
      <path d="M16.124 12.145a3 3 0 1 1 3.756 3.724m-.88 3.131h-14v-3a3 3 0 1 1 3 -3v2" />
      <path d="M8 12h4" />
      <path d="M7 19v2" />
      <path d="M17 19v2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `armchair_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.armchair_2 />
      <TablerIcons.armchair_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def armchair_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 10v-4a3 3 0 0 1 3 -3h8a3 3 0 0 1 3 3v4" />
      <path d="M16 15v-2a3 3 0 1 1 3 3v3h-14v-3a3 3 0 1 1 3 -3v2" />
      <path d="M8 12h8" />
      <path d="M7 19v2" />
      <path d="M17 19v2" />
    </svg>
    """
  end

  @doc """
  Renders the `armchair_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.armchair_off />
      <TablerIcons.armchair_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def armchair_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 13a2 2 0 1 1 4 0v4m-2 2h-14a2 2 0 0 1 -2 -2v-4a2 2 0 1 1 4 0v2h8.036" />
      <path d="M5 11v-5a3 3 0 0 1 .134 -.89m1.987 -1.98a3 3 0 0 1 .879 -.13h8a3 3 0 0 1 3 3v5" />
      <path d="M6 19v2" />
      <path d="M18 19v2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `armchair` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.armchair />
      <TablerIcons.armchair class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def armchair(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 11a2 2 0 0 1 2 2v2h10v-2a2 2 0 1 1 4 0v4a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-4a2 2 0 0 1 2 -2z" />
      <path d="M5 11v-5a3 3 0 0 1 3 -3h8a3 3 0 0 1 3 3v5" />
      <path d="M6 19v2" />
      <path d="M18 19v2" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_autofit_content_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_autofit_content_filled />
      <TablerIcons.arrow_autofit_content_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_autofit_content_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M6.707 3.293a1 1 0 0 1 .083 1.32l-.083 .094l-1.292 1.293h4.585a1 1 0 0 1 .117 1.993l-.117 .007h-4.585l1.292 1.293a1 1 0 0 1 .083 1.32l-.083 .094a1 1 0 0 1 -1.32 .083l-.094 -.083l-3 -3a1.008 1.008 0 0 1 -.097 -.112l-.071 -.11l-.054 -.114l-.035 -.105l-.025 -.118l-.007 -.058l-.004 -.09l.003 -.075l.017 -.126l.03 -.111l.044 -.111l.052 -.098l.064 -.092l.083 -.094l3 -3a1 1 0 0 1 1.414 0z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M18.613 3.21l.094 .083l3 3a.927 .927 0 0 1 .097 .112l.071 .11l.054 .114l.035 .105l.03 .148l.006 .118l-.003 .075l-.017 .126l-.03 .111l-.044 .111l-.052 .098l-.074 .104l-.073 .082l-3 3a1 1 0 0 1 -1.497 -1.32l.083 -.094l1.292 -1.293h-4.585a1 1 0 0 1 -.117 -1.993l.117 -.007h4.585l-1.292 -1.293a1 1 0 0 1 -.083 -1.32l.083 -.094a1 1 0 0 1 1.32 -.083z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M18 13h-12a3 3 0 0 0 -3 3v2a3 3 0 0 0 3 3h12a3 3 0 0 0 3 -3v-2a3 3 0 0 0 -3 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_autofit_content` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_autofit_content />
      <TablerIcons.arrow_autofit_content class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_autofit_content(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 4l-3 3l3 3" />
      <path d="M18 4l3 3l-3 3" />
      <path d="M4 14m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M10 7h-7" />
      <path d="M21 7h-7" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_autofit_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_autofit_down />
      <TablerIcons.arrow_autofit_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_autofit_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-6a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h8" />
      <path d="M18 4v17" />
      <path d="M15 18l3 3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_autofit_height` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_autofit_height />
      <TablerIcons.arrow_autofit_height class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_autofit_height(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-6a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h6" />
      <path d="M18 14v7" />
      <path d="M18 3v7" />
      <path d="M15 18l3 3l3 -3" />
      <path d="M15 6l3 -3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_autofit_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_autofit_left />
      <TablerIcons.arrow_autofit_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_autofit_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12v-6a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8" />
      <path d="M20 18h-17" />
      <path d="M6 15l-3 3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_autofit_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_autofit_right />
      <TablerIcons.arrow_autofit_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_autofit_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 12v-6a2 2 0 0 0 -2 -2h-12a2 2 0 0 0 -2 2v8" />
      <path d="M4 18h17" />
      <path d="M18 15l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_autofit_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_autofit_up />
      <TablerIcons.arrow_autofit_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_autofit_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 4h-6a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h8" />
      <path d="M18 20v-17" />
      <path d="M15 6l3 -3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_autofit_width` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_autofit_width />
      <TablerIcons.arrow_autofit_width class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_autofit_width(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12v-6a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v6" />
      <path d="M10 18h-7" />
      <path d="M21 18h-7" />
      <path d="M6 15l-3 3l3 3" />
      <path d="M18 15l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_back_up_double` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_back_up_double />
      <TablerIcons.arrow_back_up_double class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_back_up_double(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 14l-4 -4l4 -4" />
      <path d="M8 14l-4 -4l4 -4" />
      <path d="M9 10h7a4 4 0 1 1 0 8h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_back_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_back_up />
      <TablerIcons.arrow_back_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_back_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 14l-4 -4l4 -4" />
      <path d="M5 10h11a4 4 0 1 1 0 8h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_back` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_back />
      <TablerIcons.arrow_back class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_back(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11l-4 4l4 4m-4 -4h11a4 4 0 0 0 0 -8h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_badge_down_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_badge_down_filled />
      <TablerIcons.arrow_badge_down_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_badge_down_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M16.375 6.22l-4.375 3.498l-4.375 -3.5a1 1 0 0 0 -1.625 .782v6a1 1 0 0 0 .375 .78l5 4a1 1 0 0 0 1.25 0l5 -4a1 1 0 0 0 .375 -.78v-6a1 1 0 0 0 -1.625 -.78z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_badge_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_badge_down />
      <TablerIcons.arrow_badge_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_badge_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 13v-6l-5 4l-5 -4v6l5 4z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_badge_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_badge_left_filled />
      <TablerIcons.arrow_badge_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_badge_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 6h-6a1 1 0 0 0 -.78 .375l-4 5a1 1 0 0 0 0 1.25l4 5a1 1 0 0 0 .78 .375h6l.112 -.006a1 1 0 0 0 .669 -1.619l-3.501 -4.375l3.5 -4.375a1 1 0 0 0 -.78 -1.625z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_badge_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_badge_left />
      <TablerIcons.arrow_badge_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_badge_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 17h6l-4 -5l4 -5h-6l-4 5z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_badge_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_badge_right_filled />
      <TablerIcons.arrow_badge_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_badge_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M7 6l-.112 .006a1 1 0 0 0 -.669 1.619l3.501 4.375l-3.5 4.375a1 1 0 0 0 .78 1.625h6a1 1 0 0 0 .78 -.375l4 -5a1 1 0 0 0 0 -1.25l-4 -5a1 1 0 0 0 -.78 -.375h-6z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_badge_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_badge_right />
      <TablerIcons.arrow_badge_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_badge_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 7h-6l4 5l-4 5h6l4 -5z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_badge_up_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_badge_up_filled />
      <TablerIcons.arrow_badge_up_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_badge_up_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11.375 6.22l-5 4a1 1 0 0 0 -.375 .78v6l.006 .112a1 1 0 0 0 1.619 .669l4.375 -3.501l4.375 3.5a1 1 0 0 0 1.625 -.78v-6a1 1 0 0 0 -.375 -.78l-5 -4a1 1 0 0 0 -1.25 0z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_badge_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_badge_up />
      <TablerIcons.arrow_badge_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_badge_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 11v6l-5 -4l-5 4v-6l5 -4z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_bar_both` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_bar_both />
      <TablerIcons.arrow_bar_both class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_bar_both(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 12h-6" />
      <path d="M5 15l-3 -3l3 -3" />
      <path d="M22 12h-6" />
      <path d="M19 15l3 -3l-3 -3" />
      <path d="M12 4v16" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_bar_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_bar_down />
      <TablerIcons.arrow_bar_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_bar_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20l0 -10" />
      <path d="M12 20l4 -4" />
      <path d="M12 20l-4 -4" />
      <path d="M4 4l16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_bar_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_bar_left />
      <TablerIcons.arrow_bar_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_bar_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12l10 0" />
      <path d="M4 12l4 4" />
      <path d="M4 12l4 -4" />
      <path d="M20 4l0 16" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_bar_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_bar_right />
      <TablerIcons.arrow_bar_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_bar_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 12l-10 0" />
      <path d="M20 12l-4 4" />
      <path d="M20 12l-4 -4" />
      <path d="M4 4l0 16" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_bar_to_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_bar_to_down />
      <TablerIcons.arrow_bar_to_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_bar_to_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20l16 0" />
      <path d="M12 14l0 -10" />
      <path d="M12 14l4 -4" />
      <path d="M12 14l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_bar_to_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_bar_to_left />
      <TablerIcons.arrow_bar_to_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_bar_to_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12l10 0" />
      <path d="M10 12l4 4" />
      <path d="M10 12l4 -4" />
      <path d="M4 4l0 16" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_bar_to_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_bar_to_right />
      <TablerIcons.arrow_bar_to_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_bar_to_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 12l-10 0" />
      <path d="M14 12l-4 4" />
      <path d="M14 12l-4 -4" />
      <path d="M20 4l0 16" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_bar_to_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_bar_to_up />
      <TablerIcons.arrow_bar_to_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_bar_to_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 10l0 10" />
      <path d="M12 10l4 4" />
      <path d="M12 10l-4 4" />
      <path d="M4 4l16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_bar_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_bar_up />
      <TablerIcons.arrow_bar_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_bar_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 4l0 10" />
      <path d="M12 4l4 4" />
      <path d="M12 4l-4 4" />
      <path d="M4 20l16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_bear_left_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_bear_left_2 />
      <TablerIcons.arrow_bear_left_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_bear_left_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 3h-5v5" />
      <path d="M4 3l7.536 7.536a5 5 0 0 1 1.464 3.534v6.93" />
      <path d="M20 5l-4.5 4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_bear_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_bear_left />
      <TablerIcons.arrow_bear_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_bear_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 3h-5v5" />
      <path d="M8 3l7.536 7.536a5 5 0 0 1 1.464 3.534v6.93" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_bear_right_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_bear_right_2 />
      <TablerIcons.arrow_bear_right_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_bear_right_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 3h5v5" />
      <path d="M20 3l-7.536 7.536a5 5 0 0 0 -1.464 3.534v6.93" />
      <path d="M4 5l4.5 4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_bear_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_bear_right />
      <TablerIcons.arrow_bear_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_bear_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3h5v5" />
      <path d="M17 3l-7.536 7.536a5 5 0 0 0 -1.464 3.534v6.93" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_down_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_down_filled />
      <TablerIcons.arrow_big_down_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_down_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10 2l-.15 .005a2 2 0 0 0 -1.85 1.995v6.999l-2.586 .001a2 2 0 0 0 -1.414 3.414l6.586 6.586a2 2 0 0 0 2.828 0l6.586 -6.586a2 2 0 0 0 .434 -2.18l-.068 -.145a2 2 0 0 0 -1.78 -1.089l-2.586 -.001v-6.999a2 2 0 0 0 -2 -2h-4z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_down_line_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_down_line_filled />
      <TablerIcons.arrow_big_down_line_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_down_line_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M9 5l-.117 .007a1 1 0 0 0 -.883 .993v4.999l-2.586 .001a2 2 0 0 0 -1.414 3.414l6.586 6.586a2 2 0 0 0 2.828 0l6.586 -6.586a2 2 0 0 0 .434 -2.18l-.068 -.145a2 2 0 0 0 -1.78 -1.089l-2.586 -.001v-4.999a1 1 0 0 0 -1 -1h-6z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15 2a1 1 0 0 1 .117 1.993l-.117 .007h-6a1 1 0 0 1 -.117 -1.993l.117 -.007h6z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_down_line` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_down_line />
      <TablerIcons.arrow_big_down_line class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_down_line(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 12h3.586a1 1 0 0 1 .707 1.707l-6.586 6.586a1 1 0 0 1 -1.414 0l-6.586 -6.586a1 1 0 0 1 .707 -1.707h3.586v-6h6v6z" />
      <path d="M15 3h-6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_down_lines_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_down_lines_filled />
      <TablerIcons.arrow_big_down_lines_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_down_lines_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M9 8l-.117 .007a1 1 0 0 0 -.883 .993v1.999l-2.586 .001a2 2 0 0 0 -1.414 3.414l6.586 6.586a2 2 0 0 0 2.828 0l6.586 -6.586a2 2 0 0 0 .434 -2.18l-.068 -.145a2 2 0 0 0 -1.78 -1.089l-2.586 -.001v-1.999a1 1 0 0 0 -1 -1h-6z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15 2a1 1 0 0 1 .117 1.993l-.117 .007h-6a1 1 0 0 1 -.117 -1.993l.117 -.007h6z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15 5a1 1 0 0 1 .117 1.993l-.117 .007h-6a1 1 0 0 1 -.117 -1.993l.117 -.007h6z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_down_lines` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_down_lines />
      <TablerIcons.arrow_big_down_lines class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_down_lines(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 12h3.586a1 1 0 0 1 .707 1.707l-6.586 6.586a1 1 0 0 1 -1.414 0l-6.586 -6.586a1 1 0 0 1 .707 -1.707h3.586v-3h6v3z" />
      <path d="M15 3h-6" />
      <path d="M15 6h-6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_down />
      <TablerIcons.arrow_big_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 4v8h3.586a1 1 0 0 1 .707 1.707l-6.586 6.586a1 1 0 0 1 -1.414 0l-6.586 -6.586a1 1 0 0 1 .707 -1.707h3.586v-8a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_left_filled />
      <TablerIcons.arrow_big_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M9.586 4l-6.586 6.586a2 2 0 0 0 0 2.828l6.586 6.586a2 2 0 0 0 2.18 .434l.145 -.068a2 2 0 0 0 1.089 -1.78v-2.586h7a2 2 0 0 0 2 -2v-4l-.005 -.15a2 2 0 0 0 -1.995 -1.85l-7 -.001v-2.585a2 2 0 0 0 -3.414 -1.414z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_left_line_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_left_line_filled />
      <TablerIcons.arrow_big_left_line_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_left_line_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M9.586 4l-6.586 6.586a2 2 0 0 0 0 2.828l6.586 6.586a2 2 0 0 0 2.18 .434l.145 -.068a2 2 0 0 0 1.089 -1.78v-2.586h5a1 1 0 0 0 1 -1v-6l-.007 -.117a1 1 0 0 0 -.993 -.883l-5 -.001v-2.585a2 2 0 0 0 -3.414 -1.414z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4.415 12l6.585 -6.586v3.586l.007 .117a1 1 0 0 0 .993 .883l5 -.001v4l-5 .001a1 1 0 0 0 -1 1v3.586l-6.585 -6.586z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M21 8a1 1 0 0 1 .993 .883l.007 .117v6a1 1 0 0 1 -1.993 .117l-.007 -.117v-6a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_left_line` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_left_line />
      <TablerIcons.arrow_big_left_line class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_left_line(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 15v3.586a1 1 0 0 1 -1.707 .707l-6.586 -6.586a1 1 0 0 1 0 -1.414l6.586 -6.586a1 1 0 0 1 1.707 .707v3.586h6v6h-6z" />
      <path d="M21 15v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_left_lines_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_left_lines_filled />
      <TablerIcons.arrow_big_left_lines_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_left_lines_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M9.586 4l-6.586 6.586a2 2 0 0 0 0 2.828l6.586 6.586a2 2 0 0 0 2.18 .434l.145 -.068a2 2 0 0 0 1.089 -1.78v-2.586h2a1 1 0 0 0 1 -1v-6l-.007 -.117a1 1 0 0 0 -.993 -.883l-2 -.001v-2.585a2 2 0 0 0 -3.414 -1.414z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M21 8a1 1 0 0 1 .993 .883l.007 .117v6a1 1 0 0 1 -1.993 .117l-.007 -.117v-6a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M18 8a1 1 0 0 1 .993 .883l.007 .117v6a1 1 0 0 1 -1.993 .117l-.007 -.117v-6a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_left_lines` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_left_lines />
      <TablerIcons.arrow_big_left_lines class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_left_lines(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 15v3.586a1 1 0 0 1 -1.707 .707l-6.586 -6.586a1 1 0 0 1 0 -1.414l6.586 -6.586a1 1 0 0 1 1.707 .707v3.586h3v6h-3z" />
      <path d="M21 15v-6" />
      <path d="M18 15v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_left />
      <TablerIcons.arrow_big_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 15h-8v3.586a1 1 0 0 1 -1.707 .707l-6.586 -6.586a1 1 0 0 1 0 -1.414l6.586 -6.586a1 1 0 0 1 1.707 .707v3.586h8a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_right_filled />
      <TablerIcons.arrow_big_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12.089 3.634a2 2 0 0 0 -1.089 1.78l-.001 2.586h-6.999a2 2 0 0 0 -2 2v4l.005 .15a2 2 0 0 0 1.995 1.85l6.999 -.001l.001 2.587a2 2 0 0 0 3.414 1.414l6.586 -6.586a2 2 0 0 0 0 -2.828l-6.586 -6.586a2 2 0 0 0 -2.18 -.434l-.145 .068z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_right_line_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_right_line_filled />
      <TablerIcons.arrow_big_right_line_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_right_line_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12.089 3.634a2 2 0 0 0 -1.089 1.78l-.001 2.586h-4.999a1 1 0 0 0 -1 1v6l.007 .117a1 1 0 0 0 .993 .883l4.999 -.001l.001 2.587a2 2 0 0 0 3.414 1.414l6.586 -6.586a2 2 0 0 0 0 -2.828l-6.586 -6.586a2 2 0 0 0 -2.18 -.434l-.145 .068z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M3 8a1 1 0 0 1 .993 .883l.007 .117v6a1 1 0 0 1 -1.993 .117l-.007 -.117v-6a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_right_line` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_right_line />
      <TablerIcons.arrow_big_right_line class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_right_line(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9v-3.586a1 1 0 0 1 1.707 -.707l6.586 6.586a1 1 0 0 1 0 1.414l-6.586 6.586a1 1 0 0 1 -1.707 -.707v-3.586h-6v-6h6z" />
      <path d="M3 9v6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_right_lines_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_right_lines_filled />
      <TablerIcons.arrow_big_right_lines_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_right_lines_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12.089 3.634a2 2 0 0 0 -1.089 1.78l-.001 2.585l-1.999 .001a1 1 0 0 0 -1 1v6l.007 .117a1 1 0 0 0 .993 .883l1.999 -.001l.001 2.587a2 2 0 0 0 3.414 1.414l6.586 -6.586a2 2 0 0 0 0 -2.828l-6.586 -6.586a2 2 0 0 0 -2.18 -.434l-.145 .068z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M3 8a1 1 0 0 1 .993 .883l.007 .117v6a1 1 0 0 1 -1.993 .117l-.007 -.117v-6a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M6 8a1 1 0 0 1 .993 .883l.007 .117v6a1 1 0 0 1 -1.993 .117l-.007 -.117v-6a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_right_lines` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_right_lines />
      <TablerIcons.arrow_big_right_lines class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_right_lines(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9v-3.586a1 1 0 0 1 1.707 -.707l6.586 6.586a1 1 0 0 1 0 1.414l-6.586 6.586a1 1 0 0 1 -1.707 -.707v-3.586h-3v-6h3z" />
      <path d="M3 9v6" />
      <path d="M6 9v6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_right />
      <TablerIcons.arrow_big_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 9h8v-3.586a1 1 0 0 1 1.707 -.707l6.586 6.586a1 1 0 0 1 0 1.414l-6.586 6.586a1 1 0 0 1 -1.707 -.707v-3.586h-8a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_up_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_up_filled />
      <TablerIcons.arrow_big_up_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_up_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.586 3l-6.586 6.586a2 2 0 0 0 -.434 2.18l.068 .145a2 2 0 0 0 1.78 1.089h2.586v7a2 2 0 0 0 2 2h4l.15 -.005a2 2 0 0 0 1.85 -1.995l-.001 -7h2.587a2 2 0 0 0 1.414 -3.414l-6.586 -6.586a2 2 0 0 0 -2.828 0z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_up_line_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_up_line_filled />
      <TablerIcons.arrow_big_up_line_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_up_line_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.586 3l-6.586 6.586a2 2 0 0 0 -.434 2.18l.068 .145a2 2 0 0 0 1.78 1.089h2.586v5a1 1 0 0 0 1 1h6l.117 -.007a1 1 0 0 0 .883 -.993l-.001 -5h2.587a2 2 0 0 0 1.414 -3.414l-6.586 -6.586a2 2 0 0 0 -2.828 0z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15 20a1 1 0 0 1 .117 1.993l-.117 .007h-6a1 1 0 0 1 -.117 -1.993l.117 -.007h6z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_up_line` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_up_line />
      <TablerIcons.arrow_big_up_line class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_up_line(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 12h-3.586a1 1 0 0 1 -.707 -1.707l6.586 -6.586a1 1 0 0 1 1.414 0l6.586 6.586a1 1 0 0 1 -.707 1.707h-3.586v6h-6v-6z" />
      <path d="M9 21h6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_up_lines_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_up_lines_filled />
      <TablerIcons.arrow_big_up_lines_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_up_lines_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.586 3l-6.586 6.586a2 2 0 0 0 -.434 2.18l.068 .145a2 2 0 0 0 1.78 1.089h2.586v2a1 1 0 0 0 1 1h6l.117 -.007a1 1 0 0 0 .883 -.993l-.001 -2h2.587a2 2 0 0 0 1.414 -3.414l-6.586 -6.586a2 2 0 0 0 -2.828 0z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15 20a1 1 0 0 1 .117 1.993l-.117 .007h-6a1 1 0 0 1 -.117 -1.993l.117 -.007h6z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15 17a1 1 0 0 1 .117 1.993l-.117 .007h-6a1 1 0 0 1 -.117 -1.993l.117 -.007h6z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_up_lines` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_up_lines />
      <TablerIcons.arrow_big_up_lines class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_up_lines(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 12h-3.586a1 1 0 0 1 -.707 -1.707l6.586 -6.586a1 1 0 0 1 1.414 0l6.586 6.586a1 1 0 0 1 -.707 1.707h-3.586v3h-6v-3z" />
      <path d="M9 21h6" />
      <path d="M9 18h6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_big_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_big_up />
      <TablerIcons.arrow_big_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_big_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 20v-8h-3.586a1 1 0 0 1 -.707 -1.707l6.586 -6.586a1 1 0 0 1 1.414 0l6.586 6.586a1 1 0 0 1 -.707 1.707h-3.586v8a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_bounce` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_bounce />
      <TablerIcons.arrow_bounce class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_bounce(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 18h4" />
      <path d="M3 8a9 9 0 0 1 9 9v1l1.428 -4.285a12 12 0 0 1 6.018 -6.938l.554 -.277" />
      <path d="M15 6h5v5" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_capsule` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_capsule />
      <TablerIcons.arrow_capsule class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_capsule(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 15a6 6 0 1 1 -12 0v-6a6 6 0 1 1 12 0v2" />
      <path d="M15 8l3 3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_curve_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_curve_left />
      <TablerIcons.arrow_curve_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_curve_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 7l-4 -4l-4 4" />
      <path d="M10 3v4.394a6.737 6.737 0 0 0 3 5.606a6.737 6.737 0 0 1 3 5.606v2.394" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_curve_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_curve_right />
      <TablerIcons.arrow_curve_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_curve_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 7l4 -4l4 4" />
      <path d="M14 3v4.394a6.737 6.737 0 0 1 -3 5.606a6.737 6.737 0 0 0 -3 5.606v2.394" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_down_bar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_down_bar />
      <TablerIcons.arrow_down_bar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_down_bar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3v18" />
      <path d="M9 18l3 3l3 -3" />
      <path d="M9 3h6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_down_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_down_circle />
      <TablerIcons.arrow_down_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_down_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 7v14" />
      <path d="M9 18l3 3l3 -3" />
      <path d="M12 7a2 2 0 1 0 0 -4a2 2 0 0 0 0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_down_left_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_down_left_circle />
      <TablerIcons.arrow_down_left_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_down_left_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.536 8.464l-9.536 9.536" />
      <path d="M6 14v4h4" />
      <path d="M15.586 8.414a2 2 0 1 0 2.828 -2.828a2 2 0 0 0 -2.828 2.828" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_down_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_down_left />
      <TablerIcons.arrow_down_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_down_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 7l-10 10" />
      <path d="M16 17l-9 0l0 -9" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_down_rhombus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_down_rhombus />
      <TablerIcons.arrow_down_rhombus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_down_rhombus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8v13" />
      <path d="M15 18l-3 3l-3 -3" />
      <path d="M14.5 5.5l-2.5 -2.5l-2.5 2.5l2.5 2.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_down_right_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_down_right_circle />
      <TablerIcons.arrow_down_right_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_down_right_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.464 8.464l9.536 9.536" />
      <path d="M14 18h4v-4" />
      <path d="M8.414 8.414a2 2 0 1 0 -2.828 -2.828a2 2 0 0 0 2.828 2.828" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_down_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_down_right />
      <TablerIcons.arrow_down_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_down_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 7l10 10" />
      <path d="M17 8l0 9l-9 0" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_down_square` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_down_square />
      <TablerIcons.arrow_down_square class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_down_square(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 7v14" />
      <path d="M9 18l3 3l3 -3" />
      <path d="M14 3v4h-4v-4z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_down_tail` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_down_tail />
      <TablerIcons.arrow_down_tail class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_down_tail(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 6v15" />
      <path d="M9 18l3 3l3 -3" />
      <path d="M9 3l3 3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_down />
      <TablerIcons.arrow_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5l0 14" />
      <path d="M18 13l-6 6" />
      <path d="M6 13l6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_elbow_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_elbow_left />
      <TablerIcons.arrow_elbow_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_elbow_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 14v-6h6" />
      <path d="M3 8l9 9l9 -9" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_elbow_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_elbow_right />
      <TablerIcons.arrow_elbow_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_elbow_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 14v-6h-6" />
      <path d="M21 8l-9 9l-9 -9" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_fork` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_fork />
      <TablerIcons.arrow_fork class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_fork(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 3h5v5" />
      <path d="M8 3h-5v5" />
      <path d="M21 3l-7.536 7.536a5 5 0 0 0 -1.464 3.534v6.93" />
      <path d="M3 3l7.536 7.536a5 5 0 0 1 1.464 3.534v.93" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_forward_up_double` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_forward_up_double />
      <TablerIcons.arrow_forward_up_double class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_forward_up_double(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 14l4 -4l-4 -4" />
      <path d="M16 14l4 -4l-4 -4" />
      <path d="M15 10h-7a4 4 0 1 0 0 8h1" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_forward_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_forward_up />
      <TablerIcons.arrow_forward_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_forward_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 14l4 -4l-4 -4" />
      <path d="M19 10h-11a4 4 0 1 0 0 8h1" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_forward` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_forward />
      <TablerIcons.arrow_forward class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_forward(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 11l4 4l-4 4m4 -4h-11a4 4 0 0 1 0 -8h1" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_guide` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_guide />
      <TablerIcons.arrow_guide class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_guide(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 19h3a2 2 0 0 0 2 -2v-8a2 2 0 0 1 2 -2h7" />
      <path d="M18 4l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_iteration` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_iteration />
      <TablerIcons.arrow_iteration class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_iteration(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.5 16a5.5 5.5 0 1 0 -5.5 -5.5v.5" />
      <path d="M3 16h18" />
      <path d="M18 13l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_left_bar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_left_bar />
      <TablerIcons.arrow_left_bar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_left_bar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12h-18" />
      <path d="M6 9l-3 3l3 3" />
      <path d="M21 9v6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_left_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_left_circle />
      <TablerIcons.arrow_left_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_left_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 12h-14" />
      <path d="M6 9l-3 3l3 3" />
      <path d="M19 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_left_rhombus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_left_rhombus />
      <TablerIcons.arrow_left_rhombus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_left_rhombus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 12h-13" />
      <path d="M6 9l-3 3l3 3" />
      <path d="M18.5 9.5l2.5 2.5l-2.5 2.5l-2.5 -2.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_left_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_left_right />
      <TablerIcons.arrow_left_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_left_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 13l4 -4l-4 -4" />
      <path d="M7 13l-4 -4l4 -4" />
      <path d="M12 14a5 5 0 0 1 5 -5h4" />
      <path d="M12 19v-5a5 5 0 0 0 -5 -5h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_left_square` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_left_square />
      <TablerIcons.arrow_left_square class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_left_square(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 12h-14" />
      <path d="M6 9l-3 3l3 3" />
      <path d="M21 14h-4v-4h4z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_left_tail` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_left_tail />
      <TablerIcons.arrow_left_tail class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_left_tail(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 12h-15" />
      <path d="M6 9l-3 3l3 3" />
      <path d="M21 9l-3 3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_left />
      <TablerIcons.arrow_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12l14 0" />
      <path d="M5 12l6 6" />
      <path d="M5 12l6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_loop_left_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_loop_left_2 />
      <TablerIcons.arrow_loop_left_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_loop_left_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21v-6m0 -6v-1a4 4 0 1 1 4 4h-13" />
      <path d="M8 16l-4 -4l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_loop_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_loop_left />
      <TablerIcons.arrow_loop_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_loop_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21v-13a4 4 0 1 1 4 4h-13" />
      <path d="M8 16l-4 -4l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_loop_right_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_loop_right_2 />
      <TablerIcons.arrow_loop_right_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_loop_right_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21v-6m0 -6v-1a4 4 0 1 0 -4 4h13" />
      <path d="M17 16l4 -4l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_loop_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_loop_right />
      <TablerIcons.arrow_loop_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_loop_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21v-13a4 4 0 1 0 -4 4h13" />
      <path d="M17 16l4 -4l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_merge_both` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_merge_both />
      <TablerIcons.arrow_merge_both class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_merge_both(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 8l-4 -4l-4 4" />
      <path d="M12 20v-16" />
      <path d="M18 18c-4 -1.333 -6 -4.667 -6 -10" />
      <path d="M6 18c4 -1.333 6 -4.667 6 -10" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_merge_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_merge_left />
      <TablerIcons.arrow_merge_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_merge_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8l4 -4l4 4" />
      <path d="M12 20v-16" />
      <path d="M6 18c4 -1.333 6 -4.667 6 -10" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_merge_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_merge_right />
      <TablerIcons.arrow_merge_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_merge_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 8l-4 -4l-4 4" />
      <path d="M12 20v-16" />
      <path d="M18 18c-4 -1.333 -6 -4.667 -6 -10" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_merge` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_merge />
      <TablerIcons.arrow_merge class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_merge(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7l4 -4l4 4" />
      <path d="M12 3v5.394a6.737 6.737 0 0 1 -3 5.606a6.737 6.737 0 0 0 -3 5.606v1.394" />
      <path d="M12 3v5.394a6.737 6.737 0 0 0 3 5.606a6.737 6.737 0 0 1 3 5.606v1.394" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_move_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_move_down />
      <TablerIcons.arrow_move_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_move_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 11v10" />
      <path d="M9 18l3 3l3 -3" />
      <path d="M12 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_move_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_move_left />
      <TablerIcons.arrow_move_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_move_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 12h-10" />
      <path d="M6 15l-3 -3l3 -3" />
      <path d="M17 12a2 2 0 1 1 4 0a2 2 0 0 1 -4 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_move_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_move_right />
      <TablerIcons.arrow_move_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_move_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 12h10" />
      <path d="M18 9l3 3l-3 3" />
      <path d="M7 12a2 2 0 1 1 -4 0a2 2 0 0 1 4 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_move_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_move_up />
      <TablerIcons.arrow_move_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_move_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 13v-10" />
      <path d="M9 6l3 -3l3 3" />
      <path d="M12 17a2 2 0 1 1 0 4a2 2 0 0 1 0 -4z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_narrow_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_narrow_down />
      <TablerIcons.arrow_narrow_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_narrow_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5l0 14" />
      <path d="M16 15l-4 4" />
      <path d="M8 15l4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_narrow_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_narrow_left />
      <TablerIcons.arrow_narrow_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_narrow_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12l14 0" />
      <path d="M5 12l4 4" />
      <path d="M5 12l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_narrow_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_narrow_right />
      <TablerIcons.arrow_narrow_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_narrow_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12l14 0" />
      <path d="M15 16l4 -4" />
      <path d="M15 8l4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_narrow_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_narrow_up />
      <TablerIcons.arrow_narrow_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_narrow_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5l0 14" />
      <path d="M16 9l-4 -4" />
      <path d="M8 9l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_ramp_left_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_ramp_left_2 />
      <TablerIcons.arrow_ramp_left_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_ramp_left_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 3v8.707" />
      <path d="M8 14l-4 -4l4 -4" />
      <path d="M18 21c0 -6.075 -4.925 -11 -11 -11h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_ramp_left_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_ramp_left_3 />
      <TablerIcons.arrow_ramp_left_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_ramp_left_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 3v6" />
      <path d="M8 16l-4 -4l4 -4" />
      <path d="M18 21v-6a3 3 0 0 0 -3 -3h-11" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_ramp_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_ramp_left />
      <TablerIcons.arrow_ramp_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_ramp_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 3l0 8.707" />
      <path d="M13 7l4 -4l4 4" />
      <path d="M7 14l-4 -4l4 -4" />
      <path d="M17 21a11 11 0 0 0 -11 -11h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_ramp_right_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_ramp_right_2 />
      <TablerIcons.arrow_ramp_right_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_ramp_right_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 3v8.707" />
      <path d="M16 14l4 -4l-4 -4" />
      <path d="M6 21c0 -6.075 4.925 -11 11 -11h3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_ramp_right_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_ramp_right_3 />
      <TablerIcons.arrow_ramp_right_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_ramp_right_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 3v6" />
      <path d="M16 16l4 -4l-4 -4" />
      <path d="M6 21v-6a3 3 0 0 1 3 -3h11" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_ramp_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_ramp_right />
      <TablerIcons.arrow_ramp_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_ramp_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3l0 8.707" />
      <path d="M11 7l-4 -4l-4 4" />
      <path d="M17 14l4 -4l-4 -4" />
      <path d="M7 21a11 11 0 0 1 11 -11h3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_right_bar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_right_bar />
      <TablerIcons.arrow_right_bar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_right_bar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 15l3 -3l-3 -3" />
      <path d="M3 12h18" />
      <path d="M3 9v6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_right_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_right_circle />
      <TablerIcons.arrow_right_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_right_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 15l3 -3l-3 -3" />
      <path d="M5 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 12h14" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_right_rhombus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_right_rhombus />
      <TablerIcons.arrow_right_rhombus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_right_rhombus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 12h13" />
      <path d="M18 9l3 3l-3 3" />
      <path d="M5.5 9.5l-2.5 2.5l2.5 2.5l2.5 -2.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_right_square` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_right_square />
      <TablerIcons.arrow_right_square class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_right_square(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 12l14 0" />
      <path d="M18 15l3 -3l-3 -3" />
      <path d="M3 10h4v4h-4z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_right_tail` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_right_tail />
      <TablerIcons.arrow_right_tail class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_right_tail(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 15l3 -3l-3 -3" />
      <path d="M3 15l3 -3l-3 -3" />
      <path d="M6 12l15 0" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_right />
      <TablerIcons.arrow_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12l14 0" />
      <path d="M13 18l6 -6" />
      <path d="M13 6l6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_rotary_first_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_rotary_first_left />
      <TablerIcons.arrow_rotary_first_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_rotary_first_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 10a3 3 0 1 1 0 -6a3 3 0 0 1 0 6z" />
      <path d="M16 10v10" />
      <path d="M13.5 9.5l-8.5 8.5" />
      <path d="M10 18h-5v-5" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_rotary_first_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_rotary_first_right />
      <TablerIcons.arrow_rotary_first_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_rotary_first_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M8 10v10" />
      <path d="M10.5 9.5l8.5 8.5" />
      <path d="M14 18h5v-5" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_rotary_last_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_rotary_last_left />
      <TablerIcons.arrow_rotary_last_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_rotary_last_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 15a3 3 0 1 1 0 -6a3 3 0 0 1 0 6z" />
      <path d="M15 15v6" />
      <path d="M12.5 9.5l-6.5 -6.5" />
      <path d="M11 3h-5v5" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_rotary_last_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_rotary_last_right />
      <TablerIcons.arrow_rotary_last_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_rotary_last_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M9 15v6" />
      <path d="M11.5 9.5l6.5 -6.5" />
      <path d="M13 3h5v5" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_rotary_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_rotary_left />
      <TablerIcons.arrow_rotary_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_rotary_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 10a3 3 0 1 1 0 -6a3 3 0 0 1 0 6z" />
      <path d="M16 10v10" />
      <path d="M13 7h-10" />
      <path d="M7 11l-4 -4l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_rotary_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_rotary_right />
      <TablerIcons.arrow_rotary_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_rotary_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M8 10v10" />
      <path d="M17 11l4 -4l-4 -4" />
      <path d="M11 7h10" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_rotary_straight` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_rotary_straight />
      <TablerIcons.arrow_rotary_straight class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_rotary_straight(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 13m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M13 16v5" />
      <path d="M13 3v7" />
      <path d="M9 7l4 -4l4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_roundabout_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_roundabout_left />
      <TablerIcons.arrow_roundabout_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_roundabout_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 9h8a5 5 0 1 1 5 5v7" />
      <path d="M7 5l-4 4l4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_roundabout_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_roundabout_right />
      <TablerIcons.arrow_roundabout_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_roundabout_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 9h-8a5 5 0 1 0 -5 5v7" />
      <path d="M17 5l4 4l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_sharp_turn_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_sharp_turn_left />
      <TablerIcons.arrow_sharp_turn_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_sharp_turn_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 18v-11.31a.7 .7 0 0 0 -1.195 -.495l-9.805 9.805" />
      <path d="M11 16h-5v-5" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_sharp_turn_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_sharp_turn_right />
      <TablerIcons.arrow_sharp_turn_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_sharp_turn_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 18v-11.31a.7 .7 0 0 1 1.195 -.495l9.805 9.805" />
      <path d="M13 16h5v-5" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_up_bar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_up_bar />
      <TablerIcons.arrow_up_bar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_up_bar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21l0 -18" />
      <path d="M15 6l-3 -3l-3 3" />
      <path d="M9 21l6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_up_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_up_circle />
      <TablerIcons.arrow_up_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_up_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 17v-14" />
      <path d="M15 6l-3 -3l-3 3" />
      <path d="M12 17a2 2 0 1 0 0 4a2 2 0 0 0 0 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_up_left_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_up_left_circle />
      <TablerIcons.arrow_up_left_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_up_left_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.536 15.536l-9.536 -9.536" />
      <path d="M10 6h-4v4" />
      <path d="M15.586 15.586a2 2 0 1 0 2.828 2.828a2 2 0 0 0 -2.828 -2.828" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_up_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_up_left />
      <TablerIcons.arrow_up_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_up_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 7l10 10" />
      <path d="M16 7l-9 0l0 9" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_up_rhombus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_up_rhombus />
      <TablerIcons.arrow_up_rhombus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_up_rhombus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 16v-13" />
      <path d="M15 6l-3 -3l-3 3" />
      <path d="M14.5 18.5l-2.5 2.5l-2.5 -2.5l2.5 -2.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_up_right_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_up_right_circle />
      <TablerIcons.arrow_up_right_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_up_right_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.464 15.536l9.536 -9.536" />
      <path d="M18 10v-4h-4" />
      <path d="M8.414 15.586a2 2 0 1 0 -2.828 2.828a2 2 0 0 0 2.828 -2.828" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_up_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_up_right />
      <TablerIcons.arrow_up_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_up_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 7l-10 10" />
      <path d="M8 7l9 0l0 9" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_up_square` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_up_square />
      <TablerIcons.arrow_up_square class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_up_square(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 17l0 -14" />
      <path d="M15 6l-3 -3l-3 3" />
      <path d="M10 21v-4h4v4z" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_up_tail` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_up_tail />
      <TablerIcons.arrow_up_tail class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_up_tail(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18l0 -15" />
      <path d="M15 6l-3 -3l-3 3" />
      <path d="M15 21l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_up />
      <TablerIcons.arrow_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5l0 14" />
      <path d="M18 11l-6 -6" />
      <path d="M6 11l6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_wave_left_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_wave_left_down />
      <TablerIcons.arrow_wave_left_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_wave_left_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 14h-4v-4" />
      <path d="M21 12c-.887 1.284 -2.48 2.033 -4 2c-1.52 .033 -3.113 -.716 -4 -2s-2.48 -2.033 -4 -2c-1.52 -.033 -3 1 -4 2l-2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_wave_left_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_wave_left_up />
      <TablerIcons.arrow_wave_left_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_wave_left_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 10h-4v4" />
      <path d="M21 12c-.887 -1.285 -2.48 -2.033 -4 -2c-1.52 -.033 -3.113 .715 -4 2c-.887 1.284 -2.48 2.033 -4 2c-1.52 .033 -3 -1 -4 -2l-2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_wave_right_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_wave_right_down />
      <TablerIcons.arrow_wave_right_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_wave_right_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 14h4v-4" />
      <path d="M3 12c.887 1.284 2.48 2.033 4 2c1.52 .033 3.113 -.716 4 -2s2.48 -2.033 4 -2c1.52 -.033 3 1 4 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_wave_right_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_wave_right_up />
      <TablerIcons.arrow_wave_right_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_wave_right_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10h4v4" />
      <path d="M3 12c.887 -1.284 2.48 -2.033 4 -2c1.52 -.033 3.113 .716 4 2s2.48 2.033 4 2c1.52 .033 3 -1 4 -2l2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `arrow_zig_zag` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrow_zig_zag />
      <TablerIcons.arrow_zig_zag class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrow_zig_zag(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 20v-10l10 6v-12" />
      <path d="M13 7l3 -3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_cross` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_cross />
      <TablerIcons.arrows_cross class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_cross(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 4h4v4" />
      <path d="M15 9l5 -5" />
      <path d="M4 20l5 -5" />
      <path d="M16 20h4v-4" />
      <path d="M4 4l16 16" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_diagonal_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_diagonal_2 />
      <TablerIcons.arrows_diagonal_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_diagonal_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 20l4 0l0 -4" />
      <path d="M14 14l6 6" />
      <path d="M8 4l-4 0l0 4" />
      <path d="M4 4l6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_diagonal_minimize_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_diagonal_minimize_2 />
      <TablerIcons.arrows_diagonal_minimize_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_diagonal_minimize_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 10h-4v-4" />
      <path d="M20 4l-6 6" />
      <path d="M6 14h4v4" />
      <path d="M10 14l-6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_diagonal_minimize` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_diagonal_minimize />
      <TablerIcons.arrows_diagonal_minimize class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_diagonal_minimize(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 10h4v-4" />
      <path d="M4 4l6 6" />
      <path d="M18 14h-4v4" />
      <path d="M14 14l6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_diagonal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_diagonal />
      <TablerIcons.arrows_diagonal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_diagonal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 4l4 0l0 4" />
      <path d="M14 10l6 -6" />
      <path d="M8 20l-4 0l0 -4" />
      <path d="M4 20l6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_diff` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_diff />
      <TablerIcons.arrows_diff class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_diff(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 16h10" />
      <path d="M11 16l4 4" />
      <path d="M11 16l4 -4" />
      <path d="M13 8h-10" />
      <path d="M13 8l-4 4" />
      <path d="M13 8l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_double_ne_sw` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_double_ne_sw />
      <TablerIcons.arrows_double_ne_sw class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_double_ne_sw(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 14l11 -11" />
      <path d="M10 3h4v4" />
      <path d="M10 17v4h4" />
      <path d="M21 10l-11 11" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_double_nw_se` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_double_nw_se />
      <TablerIcons.arrows_double_nw_se class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_double_nw_se(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 21l-11 -11" />
      <path d="M3 14v-4h4" />
      <path d="M17 14h4v-4" />
      <path d="M10 3l11 11" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_double_se_nw` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_double_se_nw />
      <TablerIcons.arrows_double_se_nw class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_double_se_nw(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 10l11 11" />
      <path d="M14 17v4h-4" />
      <path d="M14 3h-4v4" />
      <path d="M21 14l-11 -11" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_double_sw_ne` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_double_sw_ne />
      <TablerIcons.arrows_double_sw_ne class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_double_sw_ne(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3l-11 11" />
      <path d="M3 10v4h4" />
      <path d="M17 10h4v4" />
      <path d="M10 21l11 -11" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_down_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_down_up />
      <TablerIcons.arrows_down_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_down_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 3l0 18" />
      <path d="M10 18l-3 3l-3 -3" />
      <path d="M7 21l0 -18" />
      <path d="M20 6l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_down />
      <TablerIcons.arrows_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 21l0 -18" />
      <path d="M20 18l-3 3l-3 -3" />
      <path d="M4 18l3 3l3 -3" />
      <path d="M17 21l0 -18" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_exchange_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_exchange_2 />
      <TablerIcons.arrows_exchange_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_exchange_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10h-14l4 -4" />
      <path d="M7 14h14l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_exchange` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_exchange />
      <TablerIcons.arrows_exchange class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_exchange(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 10h14l-4 -4" />
      <path d="M17 14h-14l4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_horizontal />
      <TablerIcons.arrows_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 8l-4 4l4 4" />
      <path d="M17 8l4 4l-4 4" />
      <path d="M3 12l18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_join_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_join_2 />
      <TablerIcons.arrows_join_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_join_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7h1.948c1.913 0 3.705 .933 4.802 2.5a5.861 5.861 0 0 0 4.802 2.5h6.448" />
      <path d="M3 17h1.95a5.854 5.854 0 0 0 4.798 -2.5a5.854 5.854 0 0 1 4.798 -2.5h5.454" />
      <path d="M18 15l3 -3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_join` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_join />
      <TablerIcons.arrows_join class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_join(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7h5l3.5 5h9.5" />
      <path d="M3 17h5l3.495 -5" />
      <path d="M18 15l3 -3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_left_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_left_down />
      <TablerIcons.arrows_left_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_left_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3l-4 4l4 4" />
      <path d="M3 7h11a3 3 0 0 1 3 3v11" />
      <path d="M13 17l4 4l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_left_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_left_right />
      <TablerIcons.arrows_left_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_left_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 17l-18 0" />
      <path d="M6 10l-3 -3l3 -3" />
      <path d="M3 7l18 0" />
      <path d="M18 20l3 -3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_left />
      <TablerIcons.arrows_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7l18 0" />
      <path d="M6 20l-3 -3l3 -3" />
      <path d="M6 4l-3 3l3 3" />
      <path d="M3 17l18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_maximize` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_maximize />
      <TablerIcons.arrows_maximize class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_maximize(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 4l4 0l0 4" />
      <path d="M14 10l6 -6" />
      <path d="M8 20l-4 0l0 -4" />
      <path d="M4 20l6 -6" />
      <path d="M16 20l4 0l0 -4" />
      <path d="M14 14l6 6" />
      <path d="M8 4l-4 0l0 4" />
      <path d="M4 4l6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_minimize` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_minimize />
      <TablerIcons.arrows_minimize class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_minimize(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 9l4 0l0 -4" />
      <path d="M3 3l6 6" />
      <path d="M5 15l4 0l0 4" />
      <path d="M3 21l6 -6" />
      <path d="M19 9l-4 0l0 -4" />
      <path d="M15 9l6 -6" />
      <path d="M19 15l-4 0l0 4" />
      <path d="M15 15l6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_move_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_move_horizontal />
      <TablerIcons.arrows_move_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_move_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 9l3 3l-3 3" />
      <path d="M15 12h6" />
      <path d="M6 9l-3 3l3 3" />
      <path d="M3 12h6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_move_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_move_vertical />
      <TablerIcons.arrows_move_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_move_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 18l3 3l3 -3" />
      <path d="M12 15v6" />
      <path d="M15 6l-3 -3l-3 3" />
      <path d="M12 3v6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_move` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_move />
      <TablerIcons.arrows_move class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_move(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 9l3 3l-3 3" />
      <path d="M15 12h6" />
      <path d="M6 9l-3 3l3 3" />
      <path d="M3 12h6" />
      <path d="M9 18l3 3l3 -3" />
      <path d="M12 15v6" />
      <path d="M15 6l-3 -3l-3 3" />
      <path d="M12 3v6" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_random` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_random />
      <TablerIcons.arrows_random class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_random(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 21h-4v-4" />
      <path d="M16 21l5 -5" />
      <path d="M6.5 9.504l-3.5 -2l2 -3.504" />
      <path d="M3 7.504l6.83 -1.87" />
      <path d="M4 16l4 -1l1 4" />
      <path d="M8 15l-3.5 6" />
      <path d="M21 5l-.5 4l-4 -.5" />
      <path d="M20.5 9l-4.5 -5.5" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_right_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_right_down />
      <TablerIcons.arrows_right_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_right_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17l4 4l4 -4" />
      <path d="M7 21v-11a3 3 0 0 1 3 -3h11" />
      <path d="M17 11l4 -4l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_right_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_right_left />
      <TablerIcons.arrows_right_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_right_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 7l-18 0" />
      <path d="M18 10l3 -3l-3 -3" />
      <path d="M6 20l-3 -3l3 -3" />
      <path d="M3 17l18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_right />
      <TablerIcons.arrows_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 17l-18 0" />
      <path d="M18 4l3 3l-3 3" />
      <path d="M18 20l3 -3l-3 -3" />
      <path d="M21 7l-18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_shuffle_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_shuffle_2 />
      <TablerIcons.arrows_shuffle_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_shuffle_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 4l3 3l-3 3" />
      <path d="M18 20l3 -3l-3 -3" />
      <path d="M3 7h3a5 5 0 0 1 5 5a5 5 0 0 0 5 5h5" />
      <path d="M3 17h3a5 5 0 0 0 5 -5a5 5 0 0 1 5 -5h5" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_shuffle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_shuffle />
      <TablerIcons.arrows_shuffle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_shuffle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 4l3 3l-3 3" />
      <path d="M18 20l3 -3l-3 -3" />
      <path d="M3 7h3a5 5 0 0 1 5 5a5 5 0 0 0 5 5h5" />
      <path d="M21 7h-5a4.978 4.978 0 0 0 -3 1m-4 8a4.984 4.984 0 0 1 -3 1h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_sort` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_sort />
      <TablerIcons.arrows_sort class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_sort(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 9l4 -4l4 4m-4 -4v14" />
      <path d="M21 15l-4 4l-4 -4m4 4v-14" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_split_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_split_2 />
      <TablerIcons.arrows_split_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_split_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 17h-5.397a5 5 0 0 1 -4.096 -2.133l-.514 -.734a5 5 0 0 0 -4.096 -2.133h-3.897" />
      <path d="M21 7h-5.395a5 5 0 0 0 -4.098 2.135l-.51 .73a5 5 0 0 1 -4.097 2.135h-3.9" />
      <path d="M18 10l3 -3l-3 -3" />
      <path d="M18 20l3 -3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_split` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_split />
      <TablerIcons.arrows_split class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_split(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 17h-8l-3.5 -5h-6.5" />
      <path d="M21 7h-8l-3.495 5" />
      <path d="M18 10l3 -3l-3 -3" />
      <path d="M18 20l3 -3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_transfer_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_transfer_down />
      <TablerIcons.arrows_transfer_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_transfer_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 3v6" />
      <path d="M10 18l-3 3l-3 -3" />
      <path d="M7 21v-18" />
      <path d="M20 6l-3 -3l-3 3" />
      <path d="M17 21v-2" />
      <path d="M17 15v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_transfer_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_transfer_up />
      <TablerIcons.arrows_transfer_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_transfer_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 21v-6" />
      <path d="M20 6l-3 -3l-3 3" />
      <path d="M17 3v18" />
      <path d="M10 18l-3 3l-3 -3" />
      <path d="M7 3v2" />
      <path d="M7 9v2" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_up_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_up_down />
      <TablerIcons.arrows_up_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_up_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3l0 18" />
      <path d="M10 6l-3 -3l-3 3" />
      <path d="M20 18l-3 3l-3 -3" />
      <path d="M17 21l0 -18" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_up_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_up_left />
      <TablerIcons.arrows_up_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_up_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 7l-4 -4l-4 4" />
      <path d="M17 3v11a3 3 0 0 1 -3 3h-11" />
      <path d="M7 13l-4 4l4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_up_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_up_right />
      <TablerIcons.arrows_up_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_up_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 21l4 -4l-4 -4" />
      <path d="M21 17h-11a3 3 0 0 1 -3 -3v-11" />
      <path d="M11 7l-4 -4l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_up />
      <TablerIcons.arrows_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 3l0 18" />
      <path d="M4 6l3 -3l3 3" />
      <path d="M20 6l-3 -3l-3 3" />
      <path d="M7 3l0 18" />
    </svg>
    """
  end

  @doc """
  Renders the `arrows_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.arrows_vertical />
      <TablerIcons.arrows_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def arrows_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7l4 -4l4 4" />
      <path d="M8 17l4 4l4 -4" />
      <path d="M12 3l0 18" />
    </svg>
    """
  end

  @doc """
  Renders the `artboard_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.artboard_filled />
      <TablerIcons.artboard_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def artboard_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M15 7h-6a2 2 0 0 0 -2 2v6a2 2 0 0 0 2 2h6a2 2 0 0 0 2 -2v-6a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 7a1 1 0 0 1 .117 1.993l-.117 .007h-1a1 1 0 0 1 -.117 -1.993l.117 -.007h1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 15a1 1 0 0 1 .117 1.993l-.117 .007h-1a1 1 0 0 1 -.117 -1.993l.117 -.007h1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M8 2a1 1 0 0 1 .993 .883l.007 .117v1a1 1 0 0 1 -1.993 .117l-.007 -.117v-1a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M16 2a1 1 0 0 1 .993 .883l.007 .117v1a1 1 0 0 1 -1.993 .117l-.007 -.117v-1a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M21 7a1 1 0 0 1 .117 1.993l-.117 .007h-1a1 1 0 0 1 -.117 -1.993l.117 -.007h1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M21 15a1 1 0 0 1 .117 1.993l-.117 .007h-1a1 1 0 0 1 -.117 -1.993l.117 -.007h1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M8 19a1 1 0 0 1 .993 .883l.007 .117v1a1 1 0 0 1 -1.993 .117l-.007 -.117v-1a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M16 19a1 1 0 0 1 .993 .883l.007 .117v1a1 1 0 0 1 -1.993 .117l-.007 -.117v-1a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `artboard_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.artboard_off />
      <TablerIcons.artboard_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def artboard_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8h3a1 1 0 0 1 1 1v3" />
      <path d="M15.716 15.698a1 1 0 0 1 -.716 .302h-6a1 1 0 0 1 -1 -1v-6c0 -.273 .11 -.52 .287 -.7" />
      <path d="M3 8h1" />
      <path d="M3 16h1" />
      <path d="M8 3v1" />
      <path d="M16 3v1" />
      <path d="M20 8h1" />
      <path d="M20 16h1" />
      <path d="M8 20v1" />
      <path d="M16 20v1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `artboard` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.artboard />
      <TablerIcons.artboard class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def artboard(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8m0 1a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1z" />
      <path d="M3 8l1 0" />
      <path d="M3 16l1 0" />
      <path d="M8 3l0 1" />
      <path d="M16 3l0 1" />
      <path d="M20 8l1 0" />
      <path d="M20 16l1 0" />
      <path d="M8 20l0 1" />
      <path d="M16 20l0 1" />
    </svg>
    """
  end

  @doc """
  Renders the `article_filled_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.article_filled_filled />
      <TablerIcons.article_filled_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def article_filled_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 3a3 3 0 0 1 2.995 2.824l.005 .176v12a3 3 0 0 1 -2.824 2.995l-.176 .005h-14a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-12a3 3 0 0 1 2.824 -2.995l.176 -.005h14zm-2 12h-10l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h10l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm0 -4h-10l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h10l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm0 -4h-10l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h10l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `article_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.article_off />
      <TablerIcons.article_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def article_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h11a2 2 0 0 1 2 2v11m-1.172 2.821a1.993 1.993 0 0 1 -.828 .179h-14a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 1.156 -1.814" />
      <path d="M7 8h1m4 0h5" />
      <path d="M7 12h5m4 0h1" />
      <path d="M7 16h9" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `article` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.article />
      <TablerIcons.article class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def article(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M7 8h10" />
      <path d="M7 12h10" />
      <path d="M7 16h10" />
    </svg>
    """
  end

  @doc """
  Renders the `aspect_ratio_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.aspect_ratio_filled />
      <TablerIcons.aspect_ratio_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def aspect_ratio_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 4h-14a3 3 0 0 0 -3 3v10a3 3 0 0 0 3 3h14a3 3 0 0 0 3 -3v-10a3 3 0 0 0 -3 -3zm-10 3a1 1 0 0 1 .117 1.993l-.117 .007h-2v2a1 1 0 0 1 -.883 .993l-.117 .007a1 1 0 0 1 -.993 -.883l-.007 -.117v-3a1 1 0 0 1 .883 -.993l.117 -.007h3zm9 5a1 1 0 0 1 .993 .883l.007 .117v3a1 1 0 0 1 -.883 .993l-.117 .007h-3a1 1 0 0 1 -.117 -1.993l.117 -.007h2v-2a1 1 0 0 1 .883 -.993l.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `aspect_ratio_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.aspect_ratio_off />
      <TablerIcons.aspect_ratio_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def aspect_ratio_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h10a2 2 0 0 1 2 2v10m-2 2h-14a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2" />
      <path d="M7 12v-3h2" />
      <path d="M17 12v1m-2 2h-1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `aspect_ratio` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.aspect_ratio />
      <TablerIcons.aspect_ratio class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def aspect_ratio(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M7 12v-3h3" />
      <path d="M17 12v3h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `assembly_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.assembly_off />
      <TablerIcons.assembly_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def assembly_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.703 4.685l2.326 -1.385a2.056 2.056 0 0 1 2 0l6 3.573h-.029a2 2 0 0 1 1 1.747v6.536c0 .248 -.046 .49 -.132 .715m-2.156 1.837l-4.741 3.029a2 2 0 0 1 -1.942 0l-6 -3.833a2 2 0 0 1 -1.029 -1.747v-6.537a2 2 0 0 1 1.029 -1.748l1.157 -.689" />
      <path d="M11.593 7.591c.295 -.133 .637 -.12 .921 .04l3 1.79h-.014c.312 .181 .503 .516 .5 .877v1.702m-1.152 2.86l-2.363 1.514a1 1 0 0 1 -.97 0l-3 -1.922a1 1 0 0 1 -.515 -.876v-3.278c0 -.364 .197 -.7 .514 -.877l.568 -.339" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `assembly` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.assembly />
      <TablerIcons.assembly class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def assembly(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M15.5 9.422c.312 .18 .503 .515 .5 .876v3.277c0 .364 -.197 .7 -.515 .877l-3 1.922a1 1 0 0 1 -.97 0l-3 -1.922a1 1 0 0 1 -.515 -.876v-3.278c0 -.364 .197 -.7 .514 -.877l3 -1.79c.311 -.174 .69 -.174 1 0l3 1.79h-.014z" />
    </svg>
    """
  end

  @doc """
  Renders the `asset` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.asset />
      <TablerIcons.asset class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def asset(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15m-6 0a6 6 0 1 0 12 0a6 6 0 1 0 -12 0" />
      <path d="M9 15m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M14.218 17.975l6.619 -12.174" />
      <path d="M6.079 9.756l12.217 -6.631" />
      <path d="M9 15m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `asterisk_simple` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.asterisk_simple />
      <TablerIcons.asterisk_simple class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def asterisk_simple(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12v-9" />
      <path d="M12 12l-9 -2.5" />
      <path d="M12 12l9 -2.5" />
      <path d="M12 12l6 8.5" />
      <path d="M12 12l-6 8.5" />
    </svg>
    """
  end

  @doc """
  Renders the `asterisk` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.asterisk />
      <TablerIcons.asterisk class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def asterisk(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12l8 -4.5" />
      <path d="M12 12v9" />
      <path d="M12 12l-8 -4.5" />
      <path d="M12 12l8 4.5" />
      <path d="M12 3v9" />
      <path d="M12 12l-8 4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `at_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.at_off />
      <TablerIcons.at_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def at_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.174 9.17a4 4 0 0 0 5.646 5.668m1.18 -2.838a4 4 0 0 0 -4 -4" />
      <path d="M19.695 15.697a2.5 2.5 0 0 0 1.305 -2.197v-1.5a9 9 0 0 0 -13.055 -8.047m-2.322 1.683a9 9 0 0 0 9.877 14.644" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `at` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.at />
      <TablerIcons.at class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def at(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M16 12v1.5a2.5 2.5 0 0 0 5 0v-1.5a9 9 0 1 0 -5.5 8.28" />
    </svg>
    """
  end

  @doc """
  Renders the `atom_2_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.atom_2_filled />
      <TablerIcons.atom_2_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def atom_2_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8a4 4 0 1 1 -3.995 4.2l-.005 -.2l.005 -.2a4 4 0 0 1 3.995 -3.8z" stroke-width="0" fill="currentColor" />
      <path
        d="M12 20a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M3 8a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M21 8a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M2.89 12.006a1 1 0 0 1 1.104 .884a8 8 0 0 0 4.444 6.311a1 1 0 1 1 -.876 1.799a10 10 0 0 1 -5.556 -7.89a1 1 0 0 1 .884 -1.103z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20.993 12l.117 .006a1 1 0 0 1 .884 1.104a10 10 0 0 1 -5.556 7.889a1 1 0 1 1 -.876 -1.798a8 8 0 0 0 4.444 -6.31a1 1 0 0 1 .987 -.891z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M5.567 4.226a10 10 0 0 1 12.666 0a1 1 0 1 1 -1.266 1.548a8 8 0 0 0 -10.134 0a1 1 0 1 1 -1.266 -1.548z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `atom_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.atom_2 />
      <TablerIcons.atom_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def atom_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12 21l0 .01" />
      <path d="M3 9l0 .01" />
      <path d="M21 9l0 .01" />
      <path d="M8 20.1a9 9 0 0 1 -5 -7.1" />
      <path d="M16 20.1a9 9 0 0 0 5 -7.1" />
      <path d="M6.2 5a9 9 0 0 1 11.4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `atom_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.atom_off />
      <TablerIcons.atom_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def atom_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12v.01" />
      <path d="M9.172 9.172c-3.906 3.905 -5.805 8.337 -4.243 9.9c1.562 1.561 6 -.338 9.9 -4.244m1.884 -2.113c2.587 -3.277 3.642 -6.502 2.358 -7.786c-1.284 -1.284 -4.508 -.23 -7.784 2.357" />
      <path d="M4.929 4.929c-1.562 1.562 .337 6 4.243 9.9c3.905 3.905 8.337 5.804 9.9 4.242m-.072 -4.071c-.767 -1.794 -2.215 -3.872 -4.172 -5.828c-1.944 -1.945 -4.041 -3.402 -5.828 -4.172" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `atom` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.atom />
      <TablerIcons.atom class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def atom(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12v.01" />
      <path d="M19.071 4.929c-1.562 -1.562 -6 .337 -9.9 4.243c-3.905 3.905 -5.804 8.337 -4.242 9.9c1.562 1.561 6 -.338 9.9 -4.244c3.905 -3.905 5.804 -8.337 4.242 -9.9" />
      <path d="M4.929 4.929c-1.562 1.562 .337 6 4.243 9.9c3.905 3.905 8.337 5.804 9.9 4.242c1.561 -1.562 -.338 -6 -4.244 -9.9c-3.905 -3.905 -8.337 -5.804 -9.9 -4.242" />
    </svg>
    """
  end

  @doc """
  Renders the `augmented_reality_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.augmented_reality_2 />
      <TablerIcons.augmented_reality_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def augmented_reality_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 21h-2a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v3.5" />
      <path d="M17 17l-4 -2.5l4 -2.5l4 2.5v4.5l-4 2.5z" />
      <path d="M13 14.5v4.5l4 2.5" />
      <path d="M17 17l4 -2.5" />
      <path d="M11 4h2" />
    </svg>
    """
  end

  @doc """
  Renders the `augmented_reality_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.augmented_reality_off />
      <TablerIcons.augmented_reality_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def augmented_reality_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v-2c0 -.557 .228 -1.061 .595 -1.424" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2c.558 0 1.062 -.228 1.425 -.596" />
      <path d="M12 12.5l.312 -.195m2.457 -1.536l1.231 -.769" />
      <path d="M9.225 9.235l-1.225 .765l4 2.5v4.5l3.076 -1.923m.924 -3.077v-2l-4 -2.5l-.302 .189" />
      <path d="M8 10v4.5l4 2.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `augmented_reality` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.augmented_reality />
      <TablerIcons.augmented_reality class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def augmented_reality(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v-2a2 2 0 0 1 2 -2h2" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2a2 2 0 0 0 2 -2v-2" />
      <path d="M12 12.5l4 -2.5" />
      <path d="M8 10l4 2.5v4.5l4 -2.5v-4.5l-4 -2.5z" />
      <path d="M8 10v4.5l4 2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `award_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.award_filled />
      <TablerIcons.award_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def award_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19.496 13.983l1.966 3.406a1.001 1.001 0 0 1 -.705 1.488l-.113 .011l-.112 -.001l-2.933 -.19l-1.303 2.636a1.001 1.001 0 0 1 -1.608 .26l-.082 -.094l-.072 -.11l-1.968 -3.407a8.994 8.994 0 0 0 6.93 -3.999z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M11.43 17.982l-1.966 3.408a1.001 1.001 0 0 1 -1.622 .157l-.076 -.1l-.064 -.114l-1.304 -2.635l-2.931 .19a1.001 1.001 0 0 1 -1.022 -1.29l.04 -.107l.05 -.1l1.968 -3.409a8.994 8.994 0 0 0 6.927 4.001z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 2l.24 .004a7 7 0 0 1 6.76 6.996l-.003 .193l-.007 .192l-.018 .245l-.026 .242l-.024 .178a6.985 6.985 0 0 1 -.317 1.268l-.116 .308l-.153 .348a7.001 7.001 0 0 1 -12.688 -.028l-.13 -.297l-.052 -.133l-.08 -.217l-.095 -.294a6.96 6.96 0 0 1 -.093 -.344l-.06 -.271l-.049 -.271l-.02 -.139l-.039 -.323l-.024 -.365l-.006 -.292a7 7 0 0 1 6.76 -6.996l.24 -.004z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `award_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.award_off />
      <TablerIcons.award_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def award_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.72 12.704a6 6 0 0 0 -8.433 -8.418m-1.755 2.24a6 6 0 0 0 7.936 7.944" />
      <path d="M12 15l3.4 5.89l1.598 -3.233l.707 .046m1.108 -2.902l-1.617 -2.8" />
      <path d="M6.802 12l-3.4 5.89l3.598 -.233l1.598 3.232l3.4 -5.889" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `award` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.award />
      <TablerIcons.award class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def award(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9m-6 0a6 6 0 1 0 12 0a6 6 0 1 0 -12 0" />
      <path d="M12 15l3.4 5.89l1.598 -3.233l3.598 .232l-3.4 -5.889" />
      <path d="M6.802 12l-3.4 5.89l3.598 -.233l1.598 3.232l3.4 -5.889" />
    </svg>
    """
  end

  @doc """
  Renders the `axe` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.axe />
      <TablerIcons.axe class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def axe(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 9l7.383 7.418c.823 .82 .823 2.148 0 2.967a2.11 2.11 0 0 1 -2.976 0l-7.407 -7.385" />
      <path d="M6.66 15.66l-3.32 -3.32a1.25 1.25 0 0 1 .42 -2.044l3.24 -1.296l6 -6l3 3l-6 6l-1.296 3.24a1.25 1.25 0 0 1 -2.044 .42z" />
    </svg>
    """
  end

  @doc """
  Renders the `axis_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.axis_x />
      <TablerIcons.axis_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def axis_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 13v.01" />
      <path d="M4 9v.01" />
      <path d="M4 5v.01" />
      <path d="M17 20l3 -3l-3 -3" />
      <path d="M4 17h16" />
    </svg>
    """
  end

  @doc """
  Renders the `axis_y` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.axis_y />
      <TablerIcons.axis_y class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def axis_y(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 20h-.01" />
      <path d="M15 20h-.01" />
      <path d="M19 20h-.01" />
      <path d="M4 7l3 -3l3 3" />
      <path d="M7 20v-16" />
    </svg>
    """
  end

  @doc """
  Renders the `baby_bottle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.baby_bottle />
      <TablerIcons.baby_bottle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def baby_bottle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 10h14" />
      <path d="M12 2v2" />
      <path d="M12 4a5 5 0 0 1 5 5v11a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2v-11a5 5 0 0 1 5 -5z" />
    </svg>
    """
  end

  @doc """
  Renders the `baby_carriage` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.baby_carriage />
      <TablerIcons.baby_carriage class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def baby_carriage(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M2 5h2.5l1.632 4.897a6 6 0 0 0 5.693 4.103h2.675a5.5 5.5 0 0 0 0 -11h-.5v6" />
      <path d="M6 9h14" />
      <path d="M9 17l1 -3" />
      <path d="M16 14l1 3" />
    </svg>
    """
  end

  @doc """
  Renders the `backhoe` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.backhoe />
      <TablerIcons.backhoe class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def backhoe(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M13 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M13 19l-9 0" />
      <path d="M4 15l9 0" />
      <path d="M8 12v-5h2a3 3 0 0 1 3 3v5" />
      <path d="M5 15v-2a1 1 0 0 1 1 -1h7" />
      <path d="M21.12 9.88l-3.12 -4.88l-5 5" />
      <path d="M21.12 9.88a3 3 0 0 1 -2.12 5.12a3 3 0 0 1 -2.12 -.88l4.24 -4.24z" />
    </svg>
    """
  end

  @doc """
  Renders the `backpack_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.backpack_off />
      <TablerIcons.backpack_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def backpack_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 6h3a6 6 0 0 1 6 6v3m-.129 3.872a3 3 0 0 1 -2.871 2.128h-8a3 3 0 0 1 -3 -3v-6a5.99 5.99 0 0 1 2.285 -4.712" />
      <path d="M10 6v-1a2 2 0 1 1 4 0v1" />
      <path d="M9 21v-4a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `backpack` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.backpack />
      <TablerIcons.backpack class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def backpack(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 18v-6a6 6 0 0 1 6 -6h2a6 6 0 0 1 6 6v6a3 3 0 0 1 -3 3h-8a3 3 0 0 1 -3 -3z" />
      <path d="M10 6v-1a2 2 0 1 1 4 0v1" />
      <path d="M9 21v-4a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v4" />
      <path d="M11 10h2" />
    </svg>
    """
  end

  @doc """
  Renders the `backslash` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.backslash />
      <TablerIcons.backslash class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def backslash(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 5l10 14" />
    </svg>
    """
  end

  @doc """
  Renders the `backspace_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.backspace_filled />
      <TablerIcons.backspace_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def backspace_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M20 5a2 2 0 0 1 1.995 1.85l.005 .15v10a2 2 0 0 1 -1.85 1.995l-.15 .005h-11a1 1 0 0 1 -.608 -.206l-.1 -.087l-5.037 -5.04c-.809 -.904 -.847 -2.25 -.083 -3.23l.12 -.144l5 -5a1 1 0 0 1 .577 -.284l.131 -.009h11zm-7.489 4.14a1 1 0 0 0 -1.301 1.473l.083 .094l1.292 1.293l-1.292 1.293l-.083 .094a1 1 0 0 0 1.403 1.403l.094 -.083l1.293 -1.292l1.293 1.292l.094 .083a1 1 0 0 0 1.403 -1.403l-.083 -.094l-1.292 -1.293l1.292 -1.293l.083 -.094a1 1 0 0 0 -1.403 -1.403l-.094 .083l-1.293 1.292l-1.293 -1.292l-.094 -.083l-.102 -.07z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `backspace` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.backspace />
      <TablerIcons.backspace class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def backspace(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 6a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-11l-5 -5a1.5 1.5 0 0 1 0 -2l5 -5z" />
      <path d="M12 10l4 4m0 -4l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `badge_3d` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badge_3d />
      <TablerIcons.badge_3d class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badge_3d(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M7 9.5a.5 .5 0 0 1 .5 -.5h1a1.5 1.5 0 0 1 0 3h-.5h.5a1.5 1.5 0 0 1 0 3h-1a.5 .5 0 0 1 -.5 -.5" />
      <path d="M14 9v6h1a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2h-1z" />
    </svg>
    """
  end

  @doc """
  Renders the `badge_4k` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badge_4k />
      <TablerIcons.badge_4k class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badge_4k(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M7 9v2a1 1 0 0 0 1 1h1" />
      <path d="M10 9v6" />
      <path d="M14 9v6" />
      <path d="M17 9l-2 3l2 3" />
      <path d="M15 12h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `badge_8k` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badge_8k />
      <TablerIcons.badge_8k class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badge_8k(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M14 9v6" />
      <path d="M17 9l-2 3l2 3" />
      <path d="M15 12h-1" />
      <path d="M8.5 12h-.5a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-1a1 1 0 0 0 -1 1v1a1 1 0 0 0 1 1h1a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `badge_ad` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badge_ad />
      <TablerIcons.badge_ad class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badge_ad(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M14 9v6h1a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2h-1z" />
      <path d="M7 15v-4.5a1.5 1.5 0 0 1 3 0v4.5" />
      <path d="M7 13h3" />
    </svg>
    """
  end

  @doc """
  Renders the `badge_ar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badge_ar />
      <TablerIcons.badge_ar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badge_ar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M7 15v-4.5a1.5 1.5 0 0 1 3 0v4.5" />
      <path d="M7 13h3" />
      <path d="M14 12h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6m3 0l-2 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `badge_cc` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badge_cc />
      <TablerIcons.badge_cc class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badge_cc(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 10.5a1.5 1.5 0 0 0 -3 0v3a1.5 1.5 0 0 0 3 0" />
      <path d="M17 10.5a1.5 1.5 0 0 0 -3 0v3a1.5 1.5 0 0 0 3 0" />
    </svg>
    """
  end

  @doc """
  Renders the `badge_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badge_filled />
      <TablerIcons.badge_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badge_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M16.486 3.143l-4.486 2.69l-4.486 -2.69a1 1 0 0 0 -1.514 .857v13a1 1 0 0 0 .486 .857l5 3a1 1 0 0 0 1.028 0l5 -3a1 1 0 0 0 .486 -.857v-13a1 1 0 0 0 -1.514 -.857z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `badge_hd` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badge_hd />
      <TablerIcons.badge_hd class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badge_hd(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M14 9v6h1a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2h-1z" />
      <path d="M7 15v-6" />
      <path d="M10 15v-6" />
      <path d="M7 12h3" />
    </svg>
    """
  end

  @doc """
  Renders the `badge_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badge_off />
      <TablerIcons.badge_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badge_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 7v10l5 3l5 -3m0 -4v-9l-5 3l-2.496 -1.497" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `badge_sd` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badge_sd />
      <TablerIcons.badge_sd class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badge_sd(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M14 9v6h1a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2h-1z" />
      <path d="M7 14.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `badge_tm` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badge_tm />
      <TablerIcons.badge_tm class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badge_tm(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M6 9h4" />
      <path d="M8 9v6" />
      <path d="M13 15v-6l2 3l2 -3v6" />
    </svg>
    """
  end

  @doc """
  Renders the `badge_vo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badge_vo />
      <TablerIcons.badge_vo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badge_vo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M7 9l2 6l2 -6" />
      <path d="M15.5 9a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1 -3 0v-3a1.5 1.5 0 0 1 1.5 -1.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `badge_vr` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badge_vr />
      <TablerIcons.badge_vr class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badge_vr(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M14 12h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6m3 0l-2 -3" />
      <path d="M7 9l2 6l2 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `badge_wc` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badge_wc />
      <TablerIcons.badge_wc class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badge_wc(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M6.5 9l.5 6l2 -4l2 4l.5 -6" />
      <path d="M17 10.5a1.5 1.5 0 0 0 -3 0v3a1.5 1.5 0 0 0 3 0" />
    </svg>
    """
  end

  @doc """
  Renders the `badge` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badge />
      <TablerIcons.badge class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badge(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 17v-13l-5 3l-5 -3v13l5 3z" />
    </svg>
    """
  end

  @doc """
  Renders the `badges_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badges_filled />
      <TablerIcons.badges_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badges_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M16.486 12.143l-4.486 2.69l-4.486 -2.69a1 1 0 0 0 -1.514 .857v4a1 1 0 0 0 .486 .857l5 3a1 1 0 0 0 1.028 0l5 -3a1 1 0 0 0 .486 -.857v-4a1 1 0 0 0 -1.514 -.857z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M16.486 3.143l-4.486 2.69l-4.486 -2.69a1 1 0 0 0 -1.514 .857v4a1 1 0 0 0 .486 .857l5 3a1 1 0 0 0 1.028 0l5 -3a1 1 0 0 0 .486 -.857v-4a1 1 0 0 0 -1.514 -.857z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `badges_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badges_off />
      <TablerIcons.badges_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badges_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.505 14.497l-2.505 1.503l-5 -3v4l5 3l5 -3" />
      <path d="M13.873 9.876l3.127 -1.876v-4l-5 3l-2.492 -1.495m-2.508 1.495v1l2.492 1.495" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `badges` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.badges />
      <TablerIcons.badges class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def badges(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 17v-4l-5 3l-5 -3v4l5 3z" />
      <path d="M17 8v-4l-5 3l-5 -3v4l5 3z" />
    </svg>
    """
  end

  @doc """
  Renders the `baguette` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.baguette />
      <TablerIcons.baguette class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def baguette(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.628 11.283l5.644 -5.637c2.665 -2.663 5.924 -3.747 8.663 -1.205l.188 .181a2.987 2.987 0 0 1 0 4.228l-11.287 11.274a3 3 0 0 1 -4.089 .135l-.143 -.135c-2.728 -2.724 -1.704 -6.117 1.024 -8.841z" />
      <path d="M9.5 7.5l1.5 3.5" />
      <path d="M6.5 10.5l1.5 3.5" />
      <path d="M12.5 4.5l1.5 3.5" />
    </svg>
    """
  end

  @doc """
  Renders the `ball_american_football_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ball_american_football_off />
      <TablerIcons.ball_american_football_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ball_american_football_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 9l-1 1m-2 2l-3 3" />
      <path d="M10 12l2 2" />
      <path d="M8 21a5 5 0 0 0 -5 -5" />
      <path d="M6.813 6.802a12.96 12.96 0 0 0 -3.813 9.198a5 5 0 0 0 5 5a12.96 12.96 0 0 0 9.186 -3.801m1.789 -2.227a12.94 12.94 0 0 0 2.025 -6.972a5 5 0 0 0 -5 -5a12.94 12.94 0 0 0 -6.967 2.022" />
      <path d="M16 3a5 5 0 0 0 5 5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ball_american_football` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ball_american_football />
      <TablerIcons.ball_american_football class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ball_american_football(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 9l-6 6" />
      <path d="M10 12l2 2" />
      <path d="M12 10l2 2" />
      <path d="M8 21a5 5 0 0 0 -5 -5" />
      <path d="M16 3c-7.18 0 -13 5.82 -13 13a5 5 0 0 0 5 5c7.18 0 13 -5.82 13 -13a5 5 0 0 0 -5 -5" />
      <path d="M16 3a5 5 0 0 0 5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `ball_baseball` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ball_baseball />
      <TablerIcons.ball_baseball class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ball_baseball(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.636 18.364a9 9 0 1 0 12.728 -12.728a9 9 0 0 0 -12.728 12.728z" />
      <path d="M12.495 3.02a9 9 0 0 1 -9.475 9.475" />
      <path d="M20.98 11.505a9 9 0 0 0 -9.475 9.475" />
      <path d="M9 9l2 2" />
      <path d="M13 13l2 2" />
      <path d="M11 7l2 1" />
      <path d="M7 11l1 2" />
      <path d="M16 11l1 2" />
      <path d="M11 16l2 1" />
    </svg>
    """
  end

  @doc """
  Renders the `ball_basketball` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ball_basketball />
      <TablerIcons.ball_basketball class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ball_basketball(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M5.65 5.65l12.7 12.7" />
      <path d="M5.65 18.35l12.7 -12.7" />
      <path d="M12 3a9 9 0 0 0 9 9" />
      <path d="M3 12a9 9 0 0 1 9 9" />
    </svg>
    """
  end

  @doc """
  Renders the `ball_bowling` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ball_bowling />
      <TablerIcons.ball_bowling class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ball_bowling(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M11 9l0 .01" />
      <path d="M15 8l0 .01" />
      <path d="M14 12l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `ball_football_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ball_football_off />
      <TablerIcons.ball_football_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ball_football_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.041 16.046a9 9 0 0 0 -12.084 -12.09m-2.323 1.683a9 9 0 0 0 12.726 12.73" />
      <path d="M12 7l4.755 3.455l-.566 1.743l-.98 3.014l-.209 .788h-6l-1.755 -5.545l1.86 -1.351l2.313 -1.681z" />
      <path d="M12 7v-4" />
      <path d="M15 16l2.5 3" />
      <path d="M16.755 10.455l3.745 -1.455" />
      <path d="M9.061 16.045l-2.561 2.955" />
      <path d="M7.245 10.455l-3.745 -1.455" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ball_football` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ball_football />
      <TablerIcons.ball_football class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ball_football(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 7l4.76 3.45l-1.76 5.55h-6l-1.76 -5.55z" />
      <path d="M12 7v-4m3 13l2.5 3m-.74 -8.55l3.74 -1.45m-11.44 7.05l-2.56 2.95m.74 -8.55l-3.74 -1.45" />
    </svg>
    """
  end

  @doc """
  Renders the `ball_tennis` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ball_tennis />
      <TablerIcons.ball_tennis class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ball_tennis(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M6 5.3a9 9 0 0 1 0 13.4" />
      <path d="M18 5.3a9 9 0 0 0 0 13.4" />
    </svg>
    """
  end

  @doc """
  Renders the `ball_volleyball` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ball_volleyball />
      <TablerIcons.ball_volleyball class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ball_volleyball(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12a8 8 0 0 0 8 4" />
      <path d="M7.5 13.5a12 12 0 0 0 8.5 6.5" />
      <path d="M12 12a8 8 0 0 0 -7.464 4.928" />
      <path d="M12.951 7.353a12 12 0 0 0 -9.88 4.111" />
      <path d="M12 12a8 8 0 0 0 -.536 -8.928" />
      <path d="M15.549 15.147a12 12 0 0 0 1.38 -10.611" />
    </svg>
    """
  end

  @doc """
  Renders the `balloon_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.balloon_filled />
      <TablerIcons.balloon_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def balloon_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 1a7 7 0 0 1 7 7c0 5.457 -3.028 10 -7 10c-3.9 0 -6.89 -4.379 -6.997 -9.703l-.003 -.297l.004 -.24a7 7 0 0 1 6.996 -6.76zm0 4a1 1 0 0 0 0 2l.117 .007a1 1 0 0 1 .883 .993l.007 .117a1 1 0 0 0 1.993 -.117a3 3 0 0 0 -3 -3z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 16a1 1 0 0 1 .993 .883l.007 .117v1a3 3 0 0 1 -2.824 2.995l-.176 .005h-3a1 1 0 0 0 -.993 .883l-.007 .117a1 1 0 0 1 -2 0a3 3 0 0 1 2.824 -2.995l.176 -.005h3a1 1 0 0 0 .993 -.883l.007 -.117v-1a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `balloon_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.balloon_off />
      <TablerIcons.balloon_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def balloon_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 8a2 2 0 0 0 -2 -2" />
      <path d="M7.762 3.753a6 6 0 0 1 10.238 4.247c0 1.847 -.37 3.564 -1.007 4.993m-1.59 2.42c-.967 1 -2.14 1.587 -3.403 1.587c-3.314 0 -6 -4.03 -6 -9c0 -.593 .086 -1.166 .246 -1.707" />
      <path d="M12 17v1a2 2 0 0 1 -2 2h-3a2 2 0 0 0 -2 2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `balloon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.balloon />
      <TablerIcons.balloon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def balloon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 8a2 2 0 0 0 -2 -2" />
      <path d="M6 8a6 6 0 1 1 12 0c0 4.97 -2.686 9 -6 9s-6 -4.03 -6 -9" />
      <path d="M12 17v1a2 2 0 0 1 -2 2h-3a2 2 0 0 0 -2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `ballpen_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ballpen_filled />
      <TablerIcons.ballpen_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ballpen_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17.828 2a3 3 0 0 1 1.977 .743l.145 .136l1.171 1.17a3 3 0 0 1 .136 4.1l-.136 .144l-1.706 1.707l2.292 2.293a1 1 0 0 1 .083 1.32l-.083 .094l-4 4a1 1 0 0 1 -1.497 -1.32l.083 -.094l3.292 -3.293l-1.586 -1.585l-7.464 7.464a3.828 3.828 0 0 1 -2.474 1.114l-.233 .008c-.674 0 -1.33 -.178 -1.905 -.508l-1.216 1.214a1 1 0 0 1 -1.497 -1.32l.083 -.094l1.214 -1.216a3.828 3.828 0 0 1 .454 -4.442l.16 -.17l10.586 -10.586a3 3 0 0 1 1.923 -.873l.198 -.006zm0 2a1 1 0 0 0 -.608 .206l-.099 .087l-1.707 1.707l2.586 2.585l1.707 -1.706a1 1 0 0 0 .284 -.576l.01 -.131a1 1 0 0 0 -.207 -.609l-.087 -.099l-1.171 -1.171a1 1 0 0 0 -.708 -.293z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `ballpen_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ballpen_off />
      <TablerIcons.ballpen_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ballpen_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 6l7 7l-2 2" />
      <path d="M10 10l-4.172 4.172a2.828 2.828 0 1 0 4 4l4.172 -4.172" />
      <path d="M16 12l4.414 -4.414a2 2 0 0 0 0 -2.829l-1.171 -1.171a2 2 0 0 0 -2.829 0l-4.414 4.414" />
      <path d="M4 20l1.768 -1.768" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ballpen` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ballpen />
      <TablerIcons.ballpen class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ballpen(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 6l7 7l-4 4" />
      <path d="M5.828 18.172a2.828 2.828 0 0 0 4 0l10.586 -10.586a2 2 0 0 0 0 -2.829l-1.171 -1.171a2 2 0 0 0 -2.829 0l-10.586 10.586a2.828 2.828 0 0 0 0 4z" />
      <path d="M4 20l1.768 -1.768" />
    </svg>
    """
  end

  @doc """
  Renders the `ban` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ban />
      <TablerIcons.ban class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ban(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M5.7 5.7l12.6 12.6" />
    </svg>
    """
  end

  @doc """
  Renders the `bandage_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bandage_filled />
      <TablerIcons.bandage_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bandage_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M20.207 3.793a5.95 5.95 0 0 1 .179 8.228l-.179 .186l-8 8a5.95 5.95 0 0 1 -8.593 -8.228l.179 -.186l8 -8a5.95 5.95 0 0 1 8.414 0zm-8.207 9.207a1 1 0 0 0 -1 1l.007 .127a1 1 0 0 0 1.993 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm2 -2a1 1 0 0 0 -1 1l.007 .127a1 1 0 0 0 1.993 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm-4 0a1 1 0 0 0 -1 1l.007 .127a1 1 0 0 0 1.993 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm2 -2a1 1 0 0 0 -1 1l.007 .127a1 1 0 0 0 1.993 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `bandage_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bandage_off />
      <TablerIcons.bandage_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bandage_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12v.01" />
      <path d="M12 14v.01" />
      <path d="M10.513 6.487l1.987 -1.987a4.95 4.95 0 0 1 7 7l-2.018 2.018m-1.982 1.982l-4 4a4.95 4.95 0 0 1 -7 -7l4 -4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bandage` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bandage />
      <TablerIcons.bandage class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bandage(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 12l0 .01" />
      <path d="M10 12l0 .01" />
      <path d="M12 10l0 .01" />
      <path d="M12 14l0 .01" />
      <path d="M4.5 12.5l8 -8a4.94 4.94 0 0 1 7 7l-8 8a4.94 4.94 0 0 1 -7 -7" />
    </svg>
    """
  end

  @doc """
  Renders the `barbell_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.barbell_off />
      <TablerIcons.barbell_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def barbell_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 12h1" />
      <path d="M6 8h-2a1 1 0 0 0 -1 1v6a1 1 0 0 0 1 1h2" />
      <path d="M6.298 6.288a1 1 0 0 0 -.298 .712v10a1 1 0 0 0 1 1h1a1 1 0 0 0 1 -1v-8" />
      <path d="M9 12h3" />
      <path d="M15 15v2a1 1 0 0 0 1 1h1c.275 0 .523 -.11 .704 -.29m.296 -3.71v-7a1 1 0 0 0 -1 -1h-1a1 1 0 0 0 -1 1v4" />
      <path d="M18 8h2a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1" />
      <path d="M22 12h-1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `barbell` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.barbell />
      <TablerIcons.barbell class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def barbell(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 12h1" />
      <path d="M6 8h-2a1 1 0 0 0 -1 1v6a1 1 0 0 0 1 1h2" />
      <path d="M6 7v10a1 1 0 0 0 1 1h1a1 1 0 0 0 1 -1v-10a1 1 0 0 0 -1 -1h-1a1 1 0 0 0 -1 1z" />
      <path d="M9 12h6" />
      <path d="M15 7v10a1 1 0 0 0 1 1h1a1 1 0 0 0 1 -1v-10a1 1 0 0 0 -1 -1h-1a1 1 0 0 0 -1 1z" />
      <path d="M18 8h2a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1h-2" />
      <path d="M22 12h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `barcode_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.barcode_off />
      <TablerIcons.barcode_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def barcode_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 7v-1c0 -.552 .224 -1.052 .586 -1.414" />
      <path d="M4 17v1a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v1" />
      <path d="M16 20h2c.551 0 1.05 -.223 1.412 -.584" />
      <path d="M5 11h1v2h-1z" />
      <path d="M10 11v2" />
      <path d="M15 11v.01" />
      <path d="M19 11v2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `barcode` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.barcode />
      <TablerIcons.barcode class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def barcode(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 7v-1a2 2 0 0 1 2 -2h2" />
      <path d="M4 17v1a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v1" />
      <path d="M16 20h2a2 2 0 0 0 2 -2v-1" />
      <path d="M5 11h1v2h-1z" />
      <path d="M10 11l0 2" />
      <path d="M14 11h1v2h-1z" />
      <path d="M19 11l0 2" />
    </svg>
    """
  end

  @doc """
  Renders the `barrel_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.barrel_off />
      <TablerIcons.barrel_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def barrel_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h8.722a2 2 0 0 1 1.841 1.22c.958 2.26 1.437 4.52 1.437 6.78a16.35 16.35 0 0 1 -.407 3.609m-.964 3.013l-.066 .158a2 2 0 0 1 -1.841 1.22h-9.444a2 2 0 0 1 -1.841 -1.22c-.958 -2.26 -1.437 -4.52 -1.437 -6.78c0 -2.21 .458 -4.42 1.374 -6.63" />
      <path d="M14 4c.585 2.337 .913 4.674 .985 7.01m-.114 3.86a33.415 33.415 0 0 1 -.871 5.13" />
      <path d="M10 4a34.42 34.42 0 0 0 -.366 1.632m-.506 3.501a32.126 32.126 0 0 0 -.128 2.867c0 2.667 .333 5.333 1 8" />
      <path d="M4.5 16h11.5" />
      <path d="M19.5 8h-7.5m-4 0h-3.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `barrel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.barrel />
      <TablerIcons.barrel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def barrel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.278 4h9.444a2 2 0 0 1 1.841 1.22c.958 2.26 1.437 4.52 1.437 6.78c0 2.26 -.479 4.52 -1.437 6.78a2 2 0 0 1 -1.841 1.22h-9.444a2 2 0 0 1 -1.841 -1.22c-.958 -2.26 -1.437 -4.52 -1.437 -6.78c0 -2.26 .479 -4.52 1.437 -6.78a2 2 0 0 1 1.841 -1.22z" />
      <path d="M14 4c.667 2.667 1 5.333 1 8s-.333 5.333 -1 8" />
      <path d="M10 4c-.667 2.667 -1 5.333 -1 8s.333 5.333 1 8" />
      <path d="M4.5 16h15" />
      <path d="M19.5 8h-15" />
    </svg>
    """
  end

  @doc """
  Renders the `barrier_block_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.barrier_block_off />
      <TablerIcons.barrier_block_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def barrier_block_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 7h8a1 1 0 0 1 1 1v7c0 .27 -.107 .516 -.282 .696" />
      <path d="M16 16h-11a1 1 0 0 1 -1 -1v-7a1 1 0 0 1 1 -1h2" />
      <path d="M7 16v4" />
      <path d="M7.5 16l4.244 -4.244" />
      <path d="M13.745 9.755l2.755 -2.755" />
      <path d="M13.5 16l1.249 -1.249" />
      <path d="M16.741 12.759l3.259 -3.259" />
      <path d="M4 13.5l4.752 -4.752" />
      <path d="M17 17v3" />
      <path d="M5 20h4" />
      <path d="M15 20h4" />
      <path d="M17 7v-2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `barrier_block` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.barrier_block />
      <TablerIcons.barrier_block class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def barrier_block(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 7m0 1a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1v7a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1z" />
      <path d="M7 16v4" />
      <path d="M7.5 16l9 -9" />
      <path d="M13.5 16l6.5 -6.5" />
      <path d="M4 13.5l6.5 -6.5" />
      <path d="M17 16v4" />
      <path d="M5 20h4" />
      <path d="M15 20h4" />
      <path d="M17 7v-2" />
      <path d="M7 7v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `baseline_density_large` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.baseline_density_large />
      <TablerIcons.baseline_density_large class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def baseline_density_large(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4h16" />
      <path d="M4 20h16" />
    </svg>
    """
  end

  @doc """
  Renders the `baseline_density_medium` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.baseline_density_medium />
      <TablerIcons.baseline_density_medium class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def baseline_density_medium(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h16" />
      <path d="M4 12h16" />
      <path d="M4 4h16" />
    </svg>
    """
  end

  @doc """
  Renders the `baseline_density_small` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.baseline_density_small />
      <TablerIcons.baseline_density_small class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def baseline_density_small(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 3h16" />
      <path d="M4 9h16" />
      <path d="M4 15h16" />
      <path d="M4 21h16" />
    </svg>
    """
  end

  @doc """
  Renders the `baseline` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.baseline />
      <TablerIcons.baseline class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def baseline(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h16" />
      <path d="M8 16v-8a4 4 0 1 1 8 0v8" />
      <path d="M8 10h8" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_bolt />
      <TablerIcons.basket_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M13 20h-5.756a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.358 2.04" />
      <path d="M10 14a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_cancel />
      <TablerIcons.basket_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M12 20h-4.756a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.3 1.713" />
      <path d="M10 14a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_check />
      <TablerIcons.basket_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M11 20h-3.756a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.479 2.729" />
      <path d="M10 14a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_code />
      <TablerIcons.basket_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M11 20h-3.756a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304c-.21 1.202 -.37 2.104 -.475 2.705" />
      <path d="M10 14a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_cog />
      <TablerIcons.basket_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M12 20h-4.756a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.267 1.522" />
      <path d="M10 14a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_discount` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_discount />
      <TablerIcons.basket_discount class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_discount(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M12.5 20h-5.256a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.394 2.248" />
      <path d="M13.856 13.254a2 2 0 1 0 -1.856 2.746" />
      <path d="M16 21l5 -5" />
      <path d="M21 21v.01" />
      <path d="M16 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_dollar />
      <TablerIcons.basket_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M13 20h-5.756a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304" />
      <path d="M10 14a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_down />
      <TablerIcons.basket_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M12 20h-4.756a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.349 1.989" />
      <path d="M10 14a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_exclamation />
      <TablerIcons.basket_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M15 20h-7.756a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.36 2.055" />
      <path d="M10 14a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_filled />
      <TablerIcons.basket_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12.684 3.27l.084 .09l4.7 5.64h3.532a1 1 0 0 1 .991 1.131l-.02 .112l-1.984 7.918c-.258 1.578 -1.41 2.781 -2.817 2.838l-.17 .001l-10.148 -.002c-1.37 -.053 -2.484 -1.157 -2.787 -2.57l-.035 -.185l-2 -8a1 1 0 0 1 .857 -1.237l.113 -.006h3.53l4.702 -5.64a1 1 0 0 1 1.452 -.09zm-.684 8.73a3 3 0 0 0 -2.98 2.65l-.015 .174l-.005 .176l.005 .176a3 3 0 1 0 2.995 -3.176zm0 -6.438l-2.865 3.438h5.73l-2.865 -3.438z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `basket_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_heart />
      <TablerIcons.basket_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M10.5 20h-3.256a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.143 .817" />
      <path d="M12.602 12.092a2 2 0 0 0 -2.233 3.066" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_minus />
      <TablerIcons.basket_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M12 20h-4.756a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.833 4.75" />
      <path d="M10 14a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_off />
      <TablerIcons.basket_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l.75 -2.252m1.001 -3.002l.249 -.746" />
      <path d="M12 8h7a2 2 0 0 1 1.977 2.304c-.442 2.516 -.756 4.438 -.977 5.696m-1.01 3.003a2.997 2.997 0 0 1 -2.234 .997h-9.512a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h2.999" />
      <path d="M12 12a2 2 0 1 0 2 2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_pause />
      <TablerIcons.basket_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M13 20h-5.756a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.478 2.725" />
      <path d="M10 14a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_pin />
      <TablerIcons.basket_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M12 20h-4.756a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.161 .92" />
      <path d="M13.866 13.28a2 2 0 1 0 -1.866 2.72" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_plus />
      <TablerIcons.basket_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M12 20h-4.756a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.359 2.043" />
      <path d="M10 14a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_question />
      <TablerIcons.basket_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M15 20h-7.756a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.161 .918" />
      <path d="M12 16a2 2 0 1 0 0 -4a2 2 0 0 0 0 4z" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_search />
      <TablerIcons.basket_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M11 20h-3.756a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.215 1.227" />
      <path d="M13.483 12.658a2 2 0 1 0 -2.162 3.224" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_share />
      <TablerIcons.basket_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M12.5 20h-5.256a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.478 2.723" />
      <path d="M14 14a2 2 0 1 0 -2 2" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_star />
      <TablerIcons.basket_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M10.5 20h-3.256a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.133 .757" />
      <path d="M13.596 12.794a2 2 0 0 0 -3.377 2.116" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_up />
      <TablerIcons.basket_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M12 20h-4.756a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.358 2.04" />
      <path d="M10 14a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `basket_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket_x />
      <TablerIcons.basket_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
      <path d="M13.5 20h-6.256a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304h13.999a2 2 0 0 1 1.977 2.304l-.532 3.03" />
      <path d="M10 14a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `basket` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.basket />
      <TablerIcons.basket class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def basket(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 14a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M5.001 8h13.999a2 2 0 0 1 1.977 2.304l-1.255 7.152a3 3 0 0 1 -2.966 2.544h-9.512a3 3 0 0 1 -2.965 -2.544l-1.255 -7.152a2 2 0 0 1 1.977 -2.304z" />
      <path d="M17 10l-2 -6" />
      <path d="M7 10l2 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `bat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bat />
      <TablerIcons.bat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 16c.74 -2.286 2.778 -3.762 5 -3c-.173 -2.595 .13 -5.314 -2 -7.5c-1.708 2.648 -3.358 2.557 -5 2.5v-4l-3 2l-3 -2v4c-1.642 .057 -3.292 .148 -5 -2.5c-2.13 2.186 -1.827 4.905 -2 7.5c2.222 -.762 4.26 .714 5 3c2.593 0 3.889 .952 5 4c1.111 -3.048 2.407 -4 5 -4z" />
      <path d="M9 8a3 3 0 0 0 6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `bath_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bath_filled />
      <TablerIcons.bath_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bath_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11 2a1 1 0 0 1 .993 .883l.007 .117v2.25a1 1 0 0 1 -1.993 .117l-.007 -.117v-1.25h-2a1 1 0 0 0 -.993 .883l-.007 .117v6h13a2 2 0 0 1 1.995 1.85l.005 .15v3c0 1.475 -.638 2.8 -1.654 3.715l.486 .73a1 1 0 0 1 -1.594 1.203l-.07 -.093l-.55 -.823a4.98 4.98 0 0 1 -1.337 .26l-.281 .008h-10a4.994 4.994 0 0 1 -1.619 -.268l-.549 .823a1 1 0 0 1 -1.723 -1.009l.059 -.1l.486 -.73a4.987 4.987 0 0 1 -1.647 -3.457l-.007 -.259v-3a2 2 0 0 1 1.85 -1.995l.15 -.005h1v-6a3 3 0 0 1 2.824 -2.995l.176 -.005h3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `bath_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bath_off />
      <TablerIcons.bath_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bath_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 12h4a1 1 0 0 1 1 1v3c0 .311 -.036 .614 -.103 .904m-1.61 2.378a3.982 3.982 0 0 1 -2.287 .718h-10a4 4 0 0 1 -4 -4v-3a1 1 0 0 1 1 -1h8" />
      <path d="M6 12v-6m1.178 -2.824c.252 -.113 .53 -.176 .822 -.176h3v2.25" />
      <path d="M4 21l1 -1.5" />
      <path d="M20 21l-1 -1.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bath` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bath />
      <TablerIcons.bath class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bath(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12h16a1 1 0 0 1 1 1v3a4 4 0 0 1 -4 4h-10a4 4 0 0 1 -4 -4v-3a1 1 0 0 1 1 -1z" />
      <path d="M6 12v-7a2 2 0 0 1 2 -2h3v2.25" />
      <path d="M4 21l1 -1.5" />
      <path d="M20 21l-1 -1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `battery_1_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.battery_1_filled />
      <TablerIcons.battery_1_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def battery_1_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 6a3 3 0 0 1 2.995 2.824l.005 .176v.086l.052 .019a1.5 1.5 0 0 1 .941 1.25l.007 .145v3a1.5 1.5 0 0 1 -.948 1.395l-.052 .018v.087a3 3 0 0 1 -2.824 2.995l-.176 .005h-11a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-6a3 3 0 0 1 2.824 -2.995l.176 -.005h11zm-10 3a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `battery_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.battery_1 />
      <TablerIcons.battery_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def battery_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 7h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2" />
      <path d="M7 10l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `battery_2_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.battery_2_filled />
      <TablerIcons.battery_2_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def battery_2_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 6a3 3 0 0 1 2.995 2.824l.005 .176v.086l.052 .019a1.5 1.5 0 0 1 .941 1.25l.007 .145v3a1.5 1.5 0 0 1 -.948 1.395l-.052 .018v.087a3 3 0 0 1 -2.824 2.995l-.176 .005h-11a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-6a3 3 0 0 1 2.824 -2.995l.176 -.005h11zm-10 3a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883zm3 0a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `battery_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.battery_2 />
      <TablerIcons.battery_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def battery_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 7h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2" />
      <path d="M7 10l0 4" />
      <path d="M10 10l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `battery_3_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.battery_3_filled />
      <TablerIcons.battery_3_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def battery_3_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 6a3 3 0 0 1 2.995 2.824l.005 .176v.086l.052 .019a1.5 1.5 0 0 1 .941 1.25l.007 .145v3a1.5 1.5 0 0 1 -.948 1.395l-.052 .018v.087a3 3 0 0 1 -2.824 2.995l-.176 .005h-11a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-6a3 3 0 0 1 2.824 -2.995l.176 -.005h11zm-10 3a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883zm3 0a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883zm3 0a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `battery_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.battery_3 />
      <TablerIcons.battery_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def battery_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 7h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2" />
      <path d="M7 10l0 4" />
      <path d="M10 10l0 4" />
      <path d="M13 10l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `battery_4_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.battery_4_filled />
      <TablerIcons.battery_4_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def battery_4_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 6a3 3 0 0 1 2.995 2.824l.005 .176v.086l.052 .019a1.5 1.5 0 0 1 .941 1.25l.007 .145v3a1.5 1.5 0 0 1 -.948 1.395l-.052 .018v.087a3 3 0 0 1 -2.824 2.995l-.176 .005h-11a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-6a3 3 0 0 1 2.824 -2.995l.176 -.005h11zm-10 3a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883zm3 0a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883zm3 0a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883zm3 0a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `battery_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.battery_4 />
      <TablerIcons.battery_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def battery_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 7h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2" />
      <path d="M7 10l0 4" />
      <path d="M10 10l0 4" />
      <path d="M13 10l0 4" />
      <path d="M16 10l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `battery_automotive` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.battery_automotive />
      <TablerIcons.battery_automotive class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def battery_automotive(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 6m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M6 6v-2" />
      <path d="M19 4l0 2" />
      <path d="M6.5 13l3 0" />
      <path d="M14.5 13l3 0" />
      <path d="M16 11.5l0 3" />
    </svg>
    """
  end

  @doc """
  Renders the `battery_charging_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.battery_charging_2 />
      <TablerIcons.battery_charging_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def battery_charging_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 9a2 2 0 0 1 2 -2h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-4.5" />
      <path d="M3 15h6v2a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2v-2z" />
      <path d="M6 22v-3" />
      <path d="M4 15v-2.5" />
      <path d="M8 15v-2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `battery_charging` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.battery_charging />
      <TablerIcons.battery_charging class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def battery_charging(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 7h1a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-2" />
      <path d="M8 7h-2a2 2 0 0 0 -2 2v6a2 2 0 0 0 2 2h1" />
      <path d="M12 8l-2 4h3l-2 4" />
    </svg>
    """
  end

  @doc """
  Renders the `battery_eco` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.battery_eco />
      <TablerIcons.battery_eco class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def battery_eco(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 9a2 2 0 0 1 2 -2h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-5.5" />
      <path d="M3 16.143c0 -2.84 2.09 -5.143 4.667 -5.143h2.333v.857c0 2.84 -2.09 5.143 -4.667 5.143h-2.333v-.857z" />
      <path d="M3 20v-3" />
    </svg>
    """
  end

  @doc """
  Renders the `battery_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.battery_filled />
      <TablerIcons.battery_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def battery_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 6a3 3 0 0 1 2.995 2.824l.005 .176v.086l.052 .019a1.5 1.5 0 0 1 .941 1.25l.007 .145v3a1.5 1.5 0 0 1 -.948 1.395l-.052 .018v.087a3 3 0 0 1 -2.824 2.995l-.176 .005h-11a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-6a3 3 0 0 1 2.824 -2.995l.176 -.005h11z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `battery_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.battery_off />
      <TablerIcons.battery_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def battery_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M11 7h6a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5m-2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h1" />
    </svg>
    """
  end

  @doc """
  Renders the `battery` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.battery />
      <TablerIcons.battery class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def battery(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 7h11a2 2 0 0 1 2 2v.5a.5 .5 0 0 0 .5 .5a.5 .5 0 0 1 .5 .5v3a.5 .5 0 0 1 -.5 .5a.5 .5 0 0 0 -.5 .5v.5a2 2 0 0 1 -2 2h-11a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `beach_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.beach_off />
      <TablerIcons.beach_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def beach_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.071 15.102a7.502 7.502 0 0 0 -8.124 1.648" />
      <path d="M10.27 6.269l9.926 5.731a6 6 0 0 0 -10.32 -6.123" />
      <path d="M16.732 10c1.658 -2.87 2.225 -5.644 1.268 -6.196c-.957 -.552 -3.075 1.326 -4.732 4.196" />
      <path d="M15 9l-.739 1.279" />
      <path d="M12.794 12.82l-.794 1.376" />
      <path d="M3 19.25a2.4 2.4 0 0 1 1 -.25a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 1.135 -.858" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `beach` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.beach />
      <TablerIcons.beach class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def beach(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.553 16.75a7.5 7.5 0 0 0 -10.606 0" />
      <path d="M18 3.804a6 6 0 0 0 -8.196 2.196l10.392 6a6 6 0 0 0 -2.196 -8.196z" />
      <path d="M16.732 10c1.658 -2.87 2.225 -5.644 1.268 -6.196c-.957 -.552 -3.075 1.326 -4.732 4.196" />
      <path d="M15 9l-3 5.196" />
      <path d="M3 19.25a2.4 2.4 0 0 1 1 -.25a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 1 .25" />
    </svg>
    """
  end

  @doc """
  Renders the `bed_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bed_filled />
      <TablerIcons.bed_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bed_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M3 6a1 1 0 0 1 .993 .883l.007 .117v6h6v-5a1 1 0 0 1 .883 -.993l.117 -.007h8a3 3 0 0 1 2.995 2.824l.005 .176v8a1 1 0 0 1 -1.993 .117l-.007 -.117v-3h-16v3a1 1 0 0 1 -1.993 .117l-.007 -.117v-11a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path d="M7 8a2 2 0 1 1 -1.995 2.15l-.005 -.15l.005 -.15a2 2 0 0 1 1.995 -1.85z" stroke-width="0" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `bed_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bed_off />
      <TablerIcons.bed_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bed_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7v11" />
      <path d="M3 14h11" />
      <path d="M18 14h3" />
      <path d="M21 18v-8a2 2 0 0 0 -2 -2h-7" />
      <path d="M11 11v3" />
      <path d="M7 10m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bed` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bed />
      <TablerIcons.bed class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bed(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7v11m0 -4h18m0 4v-8a2 2 0 0 0 -2 -2h-8v6" />
      <path d="M7 10m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `beer_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.beer_filled />
      <TablerIcons.beer_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def beer_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 2a2 2 0 0 1 1.995 1.85l.005 .15v4c0 1.335 -.229 2.386 -.774 3.692l-.157 .363l-.31 .701a8.902 8.902 0 0 0 -.751 3.242l-.008 .377v3.625a2 2 0 0 1 -1.85 1.995l-.15 .005h-6a2 2 0 0 1 -1.995 -1.85l-.005 -.15v-3.625c0 -1.132 -.21 -2.25 -.617 -3.28l-.142 -.34l-.31 -.699c-.604 -1.358 -.883 -2.41 -.925 -3.698l-.006 -.358v-4a2 2 0 0 1 1.85 -1.995l.15 -.005h10zm0 2h-10v3h10v-3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `beer_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.beer_off />
      <TablerIcons.beer_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def beer_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 7v1.111c0 1.242 .29 2.467 .845 3.578l.31 .622a8 8 0 0 1 .845 3.578v4.111h6v-4.111a8 8 0 0 1 .045 -.85m.953 -3.035l.157 -.315a8 8 0 0 0 .845 -3.578v-4.111h-9" />
      <path d="M7 8h1m4 0h5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `beer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.beer />
      <TablerIcons.beer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def beer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 21h6a1 1 0 0 0 1 -1v-3.625c0 -1.397 .29 -2.775 .845 -4.025l.31 -.7c.556 -1.25 .845 -2.253 .845 -3.65v-4a1 1 0 0 0 -1 -1h-10a1 1 0 0 0 -1 1v4c0 1.397 .29 2.4 .845 3.65l.31 .7a9.931 9.931 0 0 1 .845 4.025v3.625a1 1 0 0 0 1 1z" />
      <path d="M6 8h12" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_bolt />
      <TablerIcons.bell_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 17h-9.5a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6v1" />
      <path d="M9 17v1a3 3 0 0 0 4.368 2.67" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_cancel />
      <TablerIcons.bell_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 17h-8.5a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6v1" />
      <path d="M9 17v1a3 3 0 0 0 3 3" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_check />
      <TablerIcons.bell_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 17h-7.5a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3c.016 .129 .037 .256 .065 .382" />
      <path d="M9 17v1a3 3 0 0 0 2.502 2.959" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_code />
      <TablerIcons.bell_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 17h-7.5a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6v2" />
      <path d="M9 17v1a3 3 0 0 0 2.498 2.958" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_cog />
      <TablerIcons.bell_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 17h-8a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6v.5" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
      <path d="M9 17v1a3 3 0 0 0 3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_dollar />
      <TablerIcons.bell_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 17h-9a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 3.911 5.17" />
      <path d="M9 17v1a3 3 0 0 0 4.02 2.822" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_down />
      <TablerIcons.bell_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 17h-8.5a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6v1" />
      <path d="M9 17v1a3 3 0 0 0 3.518 2.955" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_exclamation />
      <TablerIcons.bell_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 17h-11a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6v1.5" />
      <path d="M9 17v1a3 3 0 0 0 6 0v-1" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_filled />
      <TablerIcons.bell_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.235 19c.865 0 1.322 1.024 .745 1.668a3.992 3.992 0 0 1 -2.98 1.332a3.992 3.992 0 0 1 -2.98 -1.332c-.552 -.616 -.158 -1.579 .634 -1.661l.11 -.006h4.471z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 2c1.358 0 2.506 .903 2.875 2.141l.046 .171l.008 .043a8.013 8.013 0 0 1 4.024 6.069l.028 .287l.019 .289v2.931l.021 .136a3 3 0 0 0 1.143 1.847l.167 .117l.162 .099c.86 .487 .56 1.766 -.377 1.864l-.116 .006h-16c-1.028 0 -1.387 -1.364 -.493 -1.87a3 3 0 0 0 1.472 -2.063l.021 -.143l.001 -2.97a8 8 0 0 1 3.821 -6.454l.248 -.146l.01 -.043a3.003 3.003 0 0 1 2.562 -2.29l.182 -.017l.176 -.004z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `bell_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_heart />
      <TablerIcons.bell_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 17h-6a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6" />
      <path d="M9 17v1c0 1.408 .97 2.59 2.28 2.913" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_minus_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_minus_filled />
      <TablerIcons.bell_minus_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_minus_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.235 19c.865 0 1.322 1.024 .745 1.668a3.992 3.992 0 0 1 -2.98 1.332a3.992 3.992 0 0 1 -2.98 -1.332c-.552 -.616 -.158 -1.579 .634 -1.661l.11 -.006h4.471z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 2c1.358 0 2.506 .903 2.875 2.141l.046 .171l.008 .043a8.013 8.013 0 0 1 4.024 6.069l.028 .287l.019 .289v2.931l.021 .136a3 3 0 0 0 1.143 1.847l.167 .117l.162 .099c.86 .487 .56 1.766 -.377 1.864l-.116 .006h-16c-1.028 0 -1.387 -1.364 -.493 -1.87a3 3 0 0 0 1.472 -2.063l.021 -.143l.001 -2.97a8 8 0 0 1 3.821 -6.454l.248 -.146l.01 -.043a3.003 3.003 0 0 1 2.562 -2.29l.182 -.017l.176 -.004zm2 8h-4l-.117 .007a1 1 0 0 0 .117 1.993h4l.117 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `bell_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_minus />
      <TablerIcons.bell_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 17h-8.5a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3c.047 .386 .149 .758 .3 1.107" />
      <path d="M9 17v1a3 3 0 0 0 3.504 2.958" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_off />
      <TablerIcons.bell_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.346 5.353c.21 -.129 .428 -.246 .654 -.353a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3m-1 3h-13a4 4 0 0 0 2 -3v-3a6.996 6.996 0 0 1 1.273 -3.707" />
      <path d="M9 17v1a3 3 0 0 0 6 0v-1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_pause />
      <TablerIcons.bell_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 17h-9a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6v2" />
      <path d="M9 17v1a3 3 0 0 0 4.022 2.821" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_pin />
      <TablerIcons.bell_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 17h-8a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6" />
      <path d="M9 17v1a3 3 0 0 0 3.64 2.931" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_plus_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_plus_filled />
      <TablerIcons.bell_plus_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_plus_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.235 19c.865 0 1.322 1.024 .745 1.668a3.992 3.992 0 0 1 -2.98 1.332a3.992 3.992 0 0 1 -2.98 -1.332c-.552 -.616 -.158 -1.579 .634 -1.661l.11 -.006h4.471z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 2c1.358 0 2.506 .903 2.875 2.141l.046 .171l.008 .043a8.013 8.013 0 0 1 4.024 6.069l.028 .287l.019 .289v2.931l.021 .136a3 3 0 0 0 1.143 1.847l.167 .117l.162 .099c.86 .487 .56 1.766 -.377 1.864l-.116 .006h-16c-1.028 0 -1.387 -1.364 -.493 -1.87a3 3 0 0 0 1.472 -2.063l.021 -.143l.001 -2.97a8 8 0 0 1 3.821 -6.454l.248 -.146l.01 -.043a3.003 3.003 0 0 1 2.562 -2.29l.182 -.017l.176 -.004zm0 6a1 1 0 0 0 -1 1v1h-1l-.117 .007a1 1 0 0 0 .117 1.993h1v1l.007 .117a1 1 0 0 0 1.993 -.117v-1h1l.117 -.007a1 1 0 0 0 -.117 -1.993h-1v-1l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `bell_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_plus />
      <TablerIcons.bell_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 17h-8.5a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6v1" />
      <path d="M9 17v1a3 3 0 0 0 3.51 2.957" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_question />
      <TablerIcons.bell_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 17h-9.5a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6" />
      <path d="M9 17v1a3 3 0 0 0 5.914 .716" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_ringing_2_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_ringing_2_filled />
      <TablerIcons.bell_ringing_2_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_ringing_2_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M9.63 17.531c.612 .611 .211 1.658 -.652 1.706a3.992 3.992 0 0 1 -3.05 -1.166a3.992 3.992 0 0 1 -1.165 -3.049c.046 -.826 1.005 -1.228 1.624 -.726l.082 .074l3.161 3.16z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20.071 3.929c.96 .96 1.134 2.41 .52 3.547l-.09 .153l-.024 .036a8.013 8.013 0 0 1 -1.446 7.137l-.183 .223l-.191 .218l-2.073 2.072l-.08 .112a3 3 0 0 0 -.499 2.113l.035 .201l.045 .185c.264 .952 -.853 1.645 -1.585 1.051l-.086 -.078l-11.313 -11.313c-.727 -.727 -.017 -1.945 .973 -1.671a3 3 0 0 0 2.5 -.418l.116 -.086l2.101 -2.1a8 8 0 0 1 7.265 -1.86l.278 .071l.037 -.023a3.003 3.003 0 0 1 3.432 .192l.14 .117l.128 .12z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `bell_ringing_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_ringing_2 />
      <TablerIcons.bell_ringing_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_ringing_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.364 4.636a2 2 0 0 1 0 2.828a7 7 0 0 1 -1.414 7.072l-2.122 2.12a4 4 0 0 0 -.707 3.536l-11.313 -11.312a4 4 0 0 0 3.535 -.707l2.121 -2.123a7 7 0 0 1 7.072 -1.414a2 2 0 0 1 2.828 0z" />
      <path d="M7.343 12.414l-.707 .707a3 3 0 0 0 4.243 4.243l.707 -.707" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_ringing_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_ringing_filled />
      <TablerIcons.bell_ringing_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_ringing_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17.451 2.344a1 1 0 0 1 1.41 -.099a12.05 12.05 0 0 1 3.048 4.064a1 1 0 1 1 -1.818 .836a10.05 10.05 0 0 0 -2.54 -3.39a1 1 0 0 1 -.1 -1.41z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M5.136 2.245a1 1 0 0 1 1.312 1.51a10.05 10.05 0 0 0 -2.54 3.39a1 1 0 1 1 -1.817 -.835a12.05 12.05 0 0 1 3.045 -4.065z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M14.235 19c.865 0 1.322 1.024 .745 1.668a3.992 3.992 0 0 1 -2.98 1.332a3.992 3.992 0 0 1 -2.98 -1.332c-.552 -.616 -.158 -1.579 .634 -1.661l.11 -.006h4.471z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 2c1.358 0 2.506 .903 2.875 2.141l.046 .171l.008 .043a8.013 8.013 0 0 1 4.024 6.069l.028 .287l.019 .289v2.931l.021 .136a3 3 0 0 0 1.143 1.847l.167 .117l.162 .099c.86 .487 .56 1.766 -.377 1.864l-.116 .006h-16c-1.028 0 -1.387 -1.364 -.493 -1.87a3 3 0 0 0 1.472 -2.063l.021 -.143l.001 -2.97a8 8 0 0 1 3.821 -6.454l.248 -.146l.01 -.043a3.003 3.003 0 0 1 2.562 -2.29l.182 -.017l.176 -.004z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `bell_ringing` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_ringing />
      <TablerIcons.bell_ringing class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_ringing(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 5a2 2 0 0 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6" />
      <path d="M9 17v1a3 3 0 0 0 6 0v-1" />
      <path d="M21 6.727a11.05 11.05 0 0 0 -2.794 -3.727" />
      <path d="M3 6.727a11.05 11.05 0 0 1 2.792 -3.727" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_school` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_school />
      <TablerIcons.bell_school class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_school(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10m-6 0a6 6 0 1 0 12 0a6 6 0 1 0 -12 0" />
      <path d="M13.5 15h.5a2 2 0 0 1 2 2v1a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-1a2 2 0 0 1 2 -2h.5" />
      <path d="M16 17a5.698 5.698 0 0 0 4.467 -7.932l-.467 -1.068" />
      <path d="M10 10v.01" />
      <path d="M20 8m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_search />
      <TablerIcons.bell_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 17h-7a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6" />
      <path d="M9 17v1a3 3 0 0 0 2.685 2.984" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_share />
      <TablerIcons.bell_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 17h-8.5a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6v2" />
      <path d="M9 17v1a3 3 0 0 0 3 3" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_star />
      <TablerIcons.bell_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.5 17h-5.5a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 3.88 5" />
      <path d="M9 17v1a3 3 0 0 0 2.15 2.878" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_up />
      <TablerIcons.bell_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 17h-8.5a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6v1" />
      <path d="M9 17v1a3 3 0 0 0 3.49 2.96" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_x_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_x_filled />
      <TablerIcons.bell_x_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_x_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.235 19c.865 0 1.322 1.024 .745 1.668a3.992 3.992 0 0 1 -2.98 1.332a3.992 3.992 0 0 1 -2.98 -1.332c-.552 -.616 -.158 -1.579 .634 -1.661l.11 -.006h4.471z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 2c1.358 0 2.506 .903 2.875 2.141l.046 .171l.008 .043a8.013 8.013 0 0 1 4.024 6.069l.028 .287l.019 .289v2.931l.021 .136a3 3 0 0 0 1.143 1.847l.167 .117l.162 .099c.86 .487 .56 1.766 -.377 1.864l-.116 .006h-16c-1.028 0 -1.387 -1.364 -.493 -1.87a3 3 0 0 0 1.472 -2.063l.021 -.143l.001 -2.97a8 8 0 0 1 3.821 -6.454l.248 -.146l.01 -.043a3.003 3.003 0 0 1 2.562 -2.29l.182 -.017l.176 -.004zm-1.489 6.14a1 1 0 0 0 -1.218 1.567l1.292 1.293l-1.292 1.293l-.083 .094a1 1 0 0 0 1.497 1.32l1.293 -1.292l1.293 1.292l.094 .083a1 1 0 0 0 1.32 -1.497l-1.292 -1.293l1.292 -1.293l.083 -.094a1 1 0 0 0 -1.497 -1.32l-1.293 1.292l-1.293 -1.292l-.094 -.083z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `bell_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_x />
      <TablerIcons.bell_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 17h-9a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6a2 2 0 1 1 4 0a7 7 0 0 1 4 6v2" />
      <path d="M9 17v1a3 3 0 0 0 4.194 2.753" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `bell_z_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_z_filled />
      <TablerIcons.bell_z_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_z_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.235 19c.865 0 1.322 1.024 .745 1.668a3.992 3.992 0 0 1 -2.98 1.332a3.992 3.992 0 0 1 -2.98 -1.332c-.552 -.616 -.158 -1.579 .634 -1.661l.11 -.006h4.471z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 2c1.358 0 2.506 .903 2.875 2.141l.046 .171l.008 .043a8.013 8.013 0 0 1 4.024 6.069l.028 .287l.019 .289v2.931l.021 .136a3 3 0 0 0 1.143 1.847l.167 .117l.162 .099c.86 .487 .56 1.766 -.377 1.864l-.116 .006h-16c-1.028 0 -1.387 -1.364 -.493 -1.87a3 3 0 0 0 1.472 -2.063l.021 -.143l.001 -2.97a8 8 0 0 1 3.821 -6.454l.248 -.146l.01 -.043a3.003 3.003 0 0 1 2.562 -2.29l.182 -.017l.176 -.004zm2 6h-4l-.117 .007a1 1 0 0 0 -.883 .993l.007 .117a1 1 0 0 0 .993 .883h1.584l-2.291 2.293l-.076 .084c-.514 .637 -.07 1.623 .783 1.623h4l.117 -.007a1 1 0 0 0 .883 -.993l-.007 -.117a1 1 0 0 0 -.993 -.883h-1.586l2.293 -2.293l.076 -.084c.514 -.637 .07 -1.623 -.783 -1.623z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `bell_z` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell_z />
      <TablerIcons.bell_z class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell_z(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6" />
      <path d="M9 17v1a3 3 0 0 0 6 0v-1" />
      <path d="M10 9h4l-4 4h4" />
    </svg>
    """
  end

  @doc """
  Renders the `bell` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bell />
      <TablerIcons.bell class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bell(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6" />
      <path d="M9 17v1a3 3 0 0 0 6 0v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `beta` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.beta />
      <TablerIcons.beta class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def beta(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 22v-14a4 4 0 0 1 4 -4h.5a3.5 3.5 0 0 1 0 7h-.5h.5a4.5 4.5 0 1 1 -4.5 4.5v-.5" />
    </svg>
    """
  end

  @doc """
  Renders the `bible` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bible />
      <TablerIcons.bible class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bible(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 4v16h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12z" />
      <path d="M19 16h-12a2 2 0 0 0 -2 2" />
      <path d="M12 7v6" />
      <path d="M10 9h4" />
    </svg>
    """
  end

  @doc """
  Renders the `bike_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bike_off />
      <TablerIcons.bike_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bike_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M16.437 16.44a3 3 0 0 0 4.123 4.123m1.44 -2.563a3 3 0 0 0 -3 -3" />
      <path d="M12 19v-4l-3 -3l1.665 -1.332m2.215 -1.772l1.12 -.896l2 3h3" />
      <path d="M17 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bike` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bike />
      <TablerIcons.bike class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bike(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M19 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12 19l0 -4l-3 -3l5 -4l2 3l3 0" />
      <path d="M17 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `binary_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.binary_off />
      <TablerIcons.binary_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def binary_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 7v-2h-1" />
      <path d="M18 19v-1" />
      <path d="M15.5 5h2a.5 .5 0 0 1 .5 .5v4a.5 .5 0 0 1 -.5 .5h-2a.5 .5 0 0 1 -.5 -.5v-4a.5 .5 0 0 1 .5 -.5z" />
      <path d="M10.5 14h2a.5 .5 0 0 1 .5 .5v4a.5 .5 0 0 1 -.5 .5h-2a.5 .5 0 0 1 -.5 -.5v-4a.5 .5 0 0 1 .5 -.5z" />
      <path d="M6 10v.01" />
      <path d="M6 19v.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `binary_tree_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.binary_tree_2 />
      <TablerIcons.binary_tree_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def binary_tree_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 6a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M7 14a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M21 14a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M14 18a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M12 8v8" />
      <path d="M6.316 12.496l4.368 -4.992" />
      <path d="M17.684 12.496l-4.366 -4.99" />
    </svg>
    """
  end

  @doc """
  Renders the `binary_tree` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.binary_tree />
      <TablerIcons.binary_tree class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def binary_tree(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 20a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M16 4a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M16 20a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M11 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M21 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M5.058 18.306l2.88 -4.606" />
      <path d="M10.061 10.303l2.877 -4.604" />
      <path d="M10.065 13.705l2.876 4.6" />
      <path d="M15.063 5.7l2.881 4.61" />
    </svg>
    """
  end

  @doc """
  Renders the `binary` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.binary />
      <TablerIcons.binary class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def binary(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 10v-5h-1m8 14v-5h-1" />
      <path d="M15 5m0 .5a.5 .5 0 0 1 .5 -.5h2a.5 .5 0 0 1 .5 .5v4a.5 .5 0 0 1 -.5 .5h-2a.5 .5 0 0 1 -.5 -.5z" />
      <path d="M10 14m0 .5a.5 .5 0 0 1 .5 -.5h2a.5 .5 0 0 1 .5 .5v4a.5 .5 0 0 1 -.5 .5h-2a.5 .5 0 0 1 -.5 -.5z" />
      <path d="M6 10h.01m-.01 9h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `biohazard_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.biohazard_off />
      <TablerIcons.biohazard_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def biohazard_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.586 10.586a2 2 0 1 0 2.836 2.82" />
      <path d="M11.939 14c0 .173 .048 .351 .056 .533v.217a4.75 4.75 0 0 1 -4.533 4.745h-.217" />
      <path d="M2.495 14.745a4.75 4.75 0 0 1 7.737 -3.693" />
      <path d="M16.745 19.495a4.75 4.75 0 0 1 -4.69 -5.503h-.06" />
      <path d="M14.533 10.538a4.75 4.75 0 0 1 6.957 3.987v.217" />
      <path d="M10.295 10.929a4.75 4.75 0 0 1 -2.988 -3.64m.66 -3.324a4.75 4.75 0 0 1 .5 -.66l.164 -.172" />
      <path d="M15.349 3.133a4.75 4.75 0 0 1 -.836 7.385" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `biohazard` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.biohazard />
      <TablerIcons.biohazard class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def biohazard(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M11.939 14c0 .173 .048 .351 .056 .533l0 .217a4.75 4.75 0 0 1 -4.533 4.745l-.217 0m-4.75 -4.75a4.75 4.75 0 0 1 7.737 -3.693m6.513 8.443a4.75 4.75 0 0 1 -4.69 -5.503l-.06 0m1.764 -2.944a4.75 4.75 0 0 1 7.731 3.477l0 .217m-11.195 -3.813a4.75 4.75 0 0 1 -1.828 -7.624l.164 -.172m6.718 0a4.75 4.75 0 0 1 -1.665 7.798" />
    </svg>
    """
  end

  @doc """
  Renders the `blade_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.blade_filled />
      <TablerIcons.blade_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def blade_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11.586 3a2 2 0 0 1 2.828 0l.586 .585l.586 -.585a2 2 0 0 1 2.7 -.117l.128 .117l2.586 2.586a2 2 0 0 1 0 2.828l-.586 .586l.586 .586a2 2 0 0 1 0 2.828l-8.586 8.586a2 2 0 0 1 -2.828 0l-.586 -.586l-.586 .586a2 2 0 0 1 -2.828 0l-2.586 -2.586a2 2 0 0 1 0 -2.828l.585 -.587l-.585 -.585a2 2 0 0 1 -.117 -2.7l.117 -.129zm3.027 4.21a1 1 0 0 0 -1.32 1.497l.292 .293l-1.068 1.067a2.003 2.003 0 0 0 -2.512 1.784l-.005 .149l.005 .15c.01 .125 .03 .248 .062 .367l-1.067 1.068l-.293 -.292l-.094 -.083a1 1 0 0 0 -1.32 1.497l.292 .293l-.292 .293l-.083 .094a1 1 0 0 0 1.497 1.32l.293 -.292l.293 .292l.094 .083a1 1 0 0 0 1.32 -1.497l-.292 -.293l1.069 -1.067a2.003 2.003 0 0 0 2.449 -2.45l1.067 -1.068l.293 .292l.094 .083a1 1 0 0 0 1.32 -1.497l-.292 -.293l.292 -.293l.083 -.094a1 1 0 0 0 -1.497 -1.32l-.293 .292l-.293 -.292z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `blade` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.blade />
      <TablerIcons.blade class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def blade(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.707 3.707l2.586 2.586a1 1 0 0 1 0 1.414l-.586 .586a1 1 0 0 0 0 1.414l.586 .586a1 1 0 0 1 0 1.414l-8.586 8.586a1 1 0 0 1 -1.414 0l-.586 -.586a1 1 0 0 0 -1.414 0l-.586 .586a1 1 0 0 1 -1.414 0l-2.586 -2.586a1 1 0 0 1 0 -1.414l.586 -.586a1 1 0 0 0 0 -1.414l-.586 -.586a1 1 0 0 1 0 -1.414l8.586 -8.586a1 1 0 0 1 1.414 0l.586 .586a1 1 0 0 0 1.414 0l.586 -.586a1 1 0 0 1 1.414 0z" />
      <path d="M8 16l3.2 -3.2" />
      <path d="M12.8 11.2l3.2 -3.2" />
      <path d="M14 8l2 2" />
      <path d="M8 14l2 2" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `bleach_chlorine` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bleach_chlorine />
      <TablerIcons.bleach_chlorine class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bleach_chlorine(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 19h14a2 2 0 0 0 1.84 -2.75l-7.1 -12.25a2 2 0 0 0 -3.5 0l-7.1 12.25a2 2 0 0 0 1.75 2.75" />
      <path d="M11 12h-1a2 2 0 1 0 0 4h1" />
      <path d="M14 12v4h2" />
    </svg>
    """
  end

  @doc """
  Renders the `bleach_no_chlorine` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bleach_no_chlorine />
      <TablerIcons.bleach_no_chlorine class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bleach_no_chlorine(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 19h14a2 2 0 0 0 1.84 -2.75l-7.1 -12.25a2 2 0 0 0 -3.5 0l-7.1 12.25a2 2 0 0 0 1.75 2.75" />
      <path d="M6.576 19l7.907 -13.733" />
      <path d="M11.719 19.014l5.346 -9.284" />
    </svg>
    """
  end

  @doc """
  Renders the `bleach_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bleach_off />
      <TablerIcons.bleach_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bleach_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 19h14m1.986 -1.977a2 2 0 0 0 -.146 -.773l-7.1 -12.25a2 2 0 0 0 -3.5 0l-.815 1.405m-1.488 2.568l-4.797 8.277a2 2 0 0 0 1.75 2.75" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bleach` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bleach />
      <TablerIcons.bleach class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bleach(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 19h14a2 2 0 0 0 1.84 -2.75l-7.1 -12.25a2 2 0 0 0 -3.5 0l-7.1 12.25a2 2 0 0 0 1.75 2.75" />
    </svg>
    """
  end

  @doc """
  Renders the `blockquote` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.blockquote />
      <TablerIcons.blockquote class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def blockquote(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 15h15" />
      <path d="M21 19h-15" />
      <path d="M15 11h6" />
      <path d="M21 7h-6" />
      <path d="M9 9h1a1 1 0 1 1 -1 1v-2.5a2 2 0 0 1 2 -2" />
      <path d="M3 9h1a1 1 0 1 1 -1 1v-2.5a2 2 0 0 1 2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `bluetooth_connected` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bluetooth_connected />
      <TablerIcons.bluetooth_connected class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bluetooth_connected(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 8l10 8l-5 4l0 -16l5 4l-10 8" />
      <path d="M4 12l1 0" />
      <path d="M18 12l1 0" />
    </svg>
    """
  end

  @doc """
  Renders the `bluetooth_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bluetooth_off />
      <TablerIcons.bluetooth_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bluetooth_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M16.438 16.45l-4.438 3.55v-8m0 -4v-4l5 4l-2.776 2.22m-2.222 1.779l-5 4" />
    </svg>
    """
  end

  @doc """
  Renders the `bluetooth_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bluetooth_x />
      <TablerIcons.bluetooth_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bluetooth_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 8l10 8l-5 4v-16l1 .802m0 6.396l-6 4.802" />
      <path d="M16 6l4 4" />
      <path d="M20 6l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `bluetooth` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bluetooth />
      <TablerIcons.bluetooth class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bluetooth(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 8l10 8l-5 4l0 -16l5 4l-10 8" />
    </svg>
    """
  end

  @doc """
  Renders the `blur_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.blur_off />
      <TablerIcons.blur_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def blur_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3v5m0 4v8" />
      <path d="M5.641 5.631a9 9 0 1 0 12.719 12.738m1.68 -2.318a9 9 0 0 0 -12.074 -12.098" />
      <path d="M16 12h5" />
      <path d="M13 9h7" />
      <path d="M12 6h6" />
      <path d="M12 18h6" />
      <path d="M12 15h3m4 0h1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `blur` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.blur />
      <TablerIcons.blur class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def blur(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9.01 9.01 0 0 0 2.32 -.302a9 9 0 0 0 1.74 -16.733a9 9 0 1 0 -4.06 17.035z" />
      <path d="M12 3v17" />
      <path d="M12 12h9" />
      <path d="M12 9h8" />
      <path d="M12 6h6" />
      <path d="M12 18h6" />
      <path d="M12 15h8" />
    </svg>
    """
  end

  @doc """
  Renders the `bmp` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bmp />
      <TablerIcons.bmp class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bmp(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 16v-8h2a2 2 0 1 1 0 4h-2" />
      <path d="M6 14a2 2 0 0 1 -2 2h-2v-8h2a2 2 0 1 1 0 4h-2h2a2 2 0 0 1 2 2z" />
      <path d="M9 16v-8l3 6l3 -6v8" />
    </svg>
    """
  end

  @doc """
  Renders the `bold_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bold_off />
      <TablerIcons.bold_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bold_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h4a3.5 3.5 0 0 1 2.222 6.204m-3.222 .796h-5v-5" />
      <path d="M17.107 17.112a3.5 3.5 0 0 1 -3.107 1.888h-7v-7" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bold` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bold />
      <TablerIcons.bold class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bold(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 5h6a3.5 3.5 0 0 1 0 7h-6z" />
      <path d="M13 12h1a3.5 3.5 0 0 1 0 7h-7v-7" />
    </svg>
    """
  end

  @doc """
  Renders the `bolt_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bolt_off />
      <TablerIcons.bolt_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bolt_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M15.212 15.21l-4.212 5.79v-7h-6l3.79 -5.21m1.685 -2.32l2.525 -3.47v6m1 1h5l-2.104 2.893" />
    </svg>
    """
  end

  @doc """
  Renders the `bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bolt />
      <TablerIcons.bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 3l0 7l6 0l-8 11l0 -7l-6 0l8 -11" />
    </svg>
    """
  end

  @doc """
  Renders the `bomb_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bomb_filled />
      <TablerIcons.bomb_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bomb_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.499 3.996a2.2 2.2 0 0 1 1.556 .645l3.302 3.301a2.2 2.2 0 0 1 0 3.113l-.567 .567l.043 .192a8.5 8.5 0 0 1 -3.732 8.83l-.23 .144a8.5 8.5 0 1 1 -2.687 -15.623l.192 .042l.567 -.566a2.2 2.2 0 0 1 1.362 -.636zm-4.499 5.004a4 4 0 0 0 -4 4a1 1 0 0 0 2 0a2 2 0 0 1 2 -2a1 1 0 0 0 0 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M21 2a1 1 0 0 1 .117 1.993l-.117 .007h-1c0 .83 -.302 1.629 -.846 2.25l-.154 .163l-1.293 1.293a1 1 0 0 1 -1.497 -1.32l.083 -.094l1.293 -1.292c.232 -.232 .375 -.537 .407 -.86l.007 -.14a2 2 0 0 1 1.85 -1.995l.15 -.005h1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `bomb` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bomb />
      <TablerIcons.bomb class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bomb(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.349 5.349l3.301 3.301a1.2 1.2 0 0 1 0 1.698l-.972 .972a7.5 7.5 0 1 1 -5 -5l.972 -.972a1.2 1.2 0 0 1 1.698 0z" />
      <path d="M17 7l1.293 -1.293a2.414 2.414 0 0 0 .707 -1.707a1 1 0 0 1 1 -1h1" />
      <path d="M7 13a3 3 0 0 1 3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `bone_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bone_off />
      <TablerIcons.bone_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bone_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 8.502l.38 -.38a3 3 0 1 1 5.12 -2.122a3 3 0 1 1 -2.12 5.122l-.372 .372m-2.008 2.008l-2.378 2.378a3 3 0 1 1 -5.117 2.297l0 -.177l-.176 0a3 3 0 1 1 2.298 -5.115l2.378 -2.378" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bone` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bone />
      <TablerIcons.bone class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bone(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 3a3 3 0 0 1 3 3a3 3 0 1 1 -2.12 5.122l-4.758 4.758a3 3 0 1 1 -5.117 2.297l0 -.177l-.176 0a3 3 0 1 1 2.298 -5.115l4.758 -4.758a3 3 0 0 1 2.12 -5.122z" />
    </svg>
    """
  end

  @doc """
  Renders the `bong_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bong_off />
      <TablerIcons.bong_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bong_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5v-2h4v6m1.5 1.5l2.5 -2.5l2 2l-2.5 2.5m-.5 3.505a5 5 0 1 1 -7 -4.589v-2.416" />
      <path d="M8 3h6" />
      <path d="M6.1 17h9.8" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bong` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bong />
      <TablerIcons.bong class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bong(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 3v8.416c.134 .059 .265 .123 .393 .193l3.607 -3.609l2 2l-3.608 3.608a5 5 0 1 1 -6.392 -2.192v-8.416h4z" />
      <path d="M8 3h6" />
      <path d="M6.1 17h9.8" />
    </svg>
    """
  end

  @doc """
  Renders the `book_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.book_2 />
      <TablerIcons.book_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def book_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 4v16h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12z" />
      <path d="M19 16h-12a2 2 0 0 0 -2 2" />
      <path d="M9 8h6" />
    </svg>
    """
  end

  @doc """
  Renders the `book_download` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.book_download />
      <TablerIcons.book_download class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def book_download(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-6a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12v5" />
      <path d="M13 16h-7a2 2 0 0 0 -2 2" />
      <path d="M15 19l3 3l3 -3" />
      <path d="M18 22v-9" />
    </svg>
    """
  end

  @doc """
  Renders the `book_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.book_filled />
      <TablerIcons.book_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def book_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12.088 4.82a10 10 0 0 1 9.412 .314a1 1 0 0 1 .493 .748l.007 .118v13a1 1 0 0 1 -1.5 .866a8 8 0 0 0 -8 0a1 1 0 0 1 -1 0a8 8 0 0 0 -7.733 -.148l-.327 .18l-.103 .044l-.049 .016l-.11 .026l-.061 .01l-.117 .006h-.042l-.11 -.012l-.077 -.014l-.108 -.032l-.126 -.056l-.095 -.056l-.089 -.067l-.06 -.056l-.073 -.082l-.064 -.089l-.022 -.036l-.032 -.06l-.044 -.103l-.016 -.049l-.026 -.11l-.01 -.061l-.004 -.049l-.002 -.068v-13a1 1 0 0 1 .5 -.866a10 10 0 0 1 9.412 -.314l.088 .044l.088 -.044z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `book_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.book_off />
      <TablerIcons.book_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def book_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19a9 9 0 0 1 9 0a9 9 0 0 1 5.899 -1.096" />
      <path d="M3 6a9 9 0 0 1 2.114 -.884m3.8 -.21c1.07 .17 2.116 .534 3.086 1.094a9 9 0 0 1 9 0" />
      <path d="M3 6v13" />
      <path d="M12 6v2m0 4v7" />
      <path d="M21 6v11" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `book_upload` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.book_upload />
      <TablerIcons.book_upload class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def book_upload(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 20h-8a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12v5" />
      <path d="M11 16h-5a2 2 0 0 0 -2 2" />
      <path d="M15 16l3 -3l3 3" />
      <path d="M18 13v9" />
    </svg>
    """
  end

  @doc """
  Renders the `book` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.book />
      <TablerIcons.book class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def book(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19a9 9 0 0 1 9 0a9 9 0 0 1 9 0" />
      <path d="M3 6a9 9 0 0 1 9 0a9 9 0 0 1 9 0" />
      <path d="M3 6l0 13" />
      <path d="M12 6l0 13" />
      <path d="M21 6l0 13" />
    </svg>
    """
  end

  @doc """
  Renders the `bookmark_edit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bookmark_edit />
      <TablerIcons.bookmark_edit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bookmark_edit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.35 17.39l-4.35 2.61v-14a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v6" />
      <path d="M18.42 15.61a2.1 2.1 0 0 1 2.97 2.97l-3.39 3.42h-3v-3l3.42 -3.39z" />
    </svg>
    """
  end

  @doc """
  Renders the `bookmark_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bookmark_filled />
      <TablerIcons.bookmark_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bookmark_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M15 3a3 3 0 0 1 2.995 2.824l.005 .176v14a1 1 0 0 1 -1.413 .911l-.101 -.054l-4.487 -2.691l-4.485 2.691a1 1 0 0 1 -1.508 -.743l-.006 -.114v-14a3 3 0 0 1 2.824 -2.995l.176 -.005h6z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `bookmark_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bookmark_minus />
      <TablerIcons.bookmark_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bookmark_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.427 17.256l-.427 -.256l-5 3v-14a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v9" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `bookmark_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bookmark_off />
      <TablerIcons.bookmark_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bookmark_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M17 17v3l-5 -3l-5 3v-13m1.178 -2.818c.252 -.113 .53 -.176 .822 -.176h6a2 2 0 0 1 2 2v7" />
    </svg>
    """
  end

  @doc """
  Renders the `bookmark_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bookmark_plus />
      <TablerIcons.bookmark_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bookmark_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.357 17.214l-.357 -.214l-5 3v-14a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v6.5" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `bookmark_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bookmark_question />
      <TablerIcons.bookmark_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bookmark_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.006 18.804l-3.006 -1.804l-5 3v-14a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v5.5" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `bookmark` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bookmark />
      <TablerIcons.bookmark class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bookmark(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 4h6a2 2 0 0 1 2 2v14l-5 -3l-5 3v-14a2 2 0 0 1 2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `bookmarks_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bookmarks_filled />
      <TablerIcons.bookmarks_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bookmarks_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M13 6h-6a3 3 0 0 0 -3 3v12l.006 .114a1 1 0 0 0 1.508 .743l4.486 -2.691l4.486 2.691a1 1 0 0 0 1.514 -.857v-12a3 3 0 0 0 -3 -3z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M17 2a3 3 0 0 1 2.995 2.824l.005 .176v12a1 1 0 0 1 -1.413 .911l-.101 -.054l-1 -.6a1 1 0 0 1 .489 -1.857l.025 .001v-10.401a1 1 0 0 0 -.883 -.993l-.117 -.007h-6.001a1 1 0 0 0 -.803 .401l-.13 .197a1 1 0 0 1 -1.666 -1.098a3 3 0 0 1 2.4 -1.494l.2 -.006h6z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `bookmarks_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bookmarks_off />
      <TablerIcons.bookmarks_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bookmarks_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 7h2a2 2 0 0 1 2 2v2m0 4v6l-5 -3l-5 3v-12a2 2 0 0 1 2 -2" />
      <path d="M9.265 4a2 2 0 0 1 1.735 -1h6a2 2 0 0 1 2 2v10" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bookmarks` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bookmarks />
      <TablerIcons.bookmarks class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bookmarks(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 7a2 2 0 0 1 2 2v12l-5 -3l-5 3v-12a2 2 0 0 1 2 -2h6z" />
      <path d="M9.265 4a2 2 0 0 1 1.735 -1h6a2 2 0 0 1 2 2v12l-1 -.6" />
    </svg>
    """
  end

  @doc """
  Renders the `books_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.books_off />
      <TablerIcons.books_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def books_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 9v10a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-14" />
      <path d="M8 4a1 1 0 0 1 1 1" />
      <path d="M9 5a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4" />
      <path d="M13 13v6a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-10" />
      <path d="M5 8h3" />
      <path d="M9 16h4" />
      <path d="M14.254 10.244l-1.218 -4.424a1.02 1.02 0 0 1 .634 -1.219l.133 -.041l2.184 -.53c.562 -.135 1.133 .19 1.282 .732l3.236 11.75" />
      <path d="M19.585 19.589l-1.572 .38c-.562 .136 -1.133 -.19 -1.282 -.731l-.952 -3.458" />
      <path d="M14 9l4 -1" />
      <path d="M19.207 15.199l.716 -.18" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `books` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.books />
      <TablerIcons.books class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def books(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M9 4m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M5 8h4" />
      <path d="M9 16h4" />
      <path d="M13.803 4.56l2.184 -.53c.562 -.135 1.133 .19 1.282 .732l3.695 13.418a1.02 1.02 0 0 1 -.634 1.219l-.133 .041l-2.184 .53c-.562 .135 -1.133 -.19 -1.282 -.732l-3.695 -13.418a1.02 1.02 0 0 1 .634 -1.219l.133 -.041z" />
      <path d="M14 9l4 -1" />
      <path d="M16 16l3.923 -.98" />
    </svg>
    """
  end

  @doc """
  Renders the `border_all` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.border_all />
      <TablerIcons.border_all class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def border_all(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M4 12l16 0" />
      <path d="M12 4l0 16" />
    </svg>
    """
  end

  @doc """
  Renders the `border_bottom` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.border_bottom />
      <TablerIcons.border_bottom class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def border_bottom(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 20l-16 0" />
      <path d="M4 4l0 .01" />
      <path d="M8 4l0 .01" />
      <path d="M12 4l0 .01" />
      <path d="M16 4l0 .01" />
      <path d="M20 4l0 .01" />
      <path d="M4 8l0 .01" />
      <path d="M12 8l0 .01" />
      <path d="M20 8l0 .01" />
      <path d="M4 12l0 .01" />
      <path d="M8 12l0 .01" />
      <path d="M12 12l0 .01" />
      <path d="M16 12l0 .01" />
      <path d="M20 12l0 .01" />
      <path d="M4 16l0 .01" />
      <path d="M12 16l0 .01" />
      <path d="M20 16l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `border_corners` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.border_corners />
      <TablerIcons.border_corners class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def border_corners(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M20 16v2a2 2 0 0 1 -2 2h-2" />
      <path d="M8 20h-2a2 2 0 0 1 -2 -2v-2" />
      <path d="M4 8v-2a2 2 0 0 1 2 -2h2" />
    </svg>
    """
  end

  @doc """
  Renders the `border_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.border_horizontal />
      <TablerIcons.border_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def border_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12l16 0" />
      <path d="M4 4l0 .01" />
      <path d="M8 4l0 .01" />
      <path d="M12 4l0 .01" />
      <path d="M16 4l0 .01" />
      <path d="M20 4l0 .01" />
      <path d="M4 8l0 .01" />
      <path d="M12 8l0 .01" />
      <path d="M20 8l0 .01" />
      <path d="M4 16l0 .01" />
      <path d="M12 16l0 .01" />
      <path d="M20 16l0 .01" />
      <path d="M4 20l0 .01" />
      <path d="M8 20l0 .01" />
      <path d="M12 20l0 .01" />
      <path d="M16 20l0 .01" />
      <path d="M20 20l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `border_inner` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.border_inner />
      <TablerIcons.border_inner class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def border_inner(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12l16 0" />
      <path d="M12 4l0 16" />
      <path d="M4 4l0 .01" />
      <path d="M8 4l0 .01" />
      <path d="M16 4l0 .01" />
      <path d="M20 4l0 .01" />
      <path d="M4 8l0 .01" />
      <path d="M20 8l0 .01" />
      <path d="M4 16l0 .01" />
      <path d="M20 16l0 .01" />
      <path d="M4 20l0 .01" />
      <path d="M8 20l0 .01" />
      <path d="M16 20l0 .01" />
      <path d="M20 20l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `border_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.border_left />
      <TablerIcons.border_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def border_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20l0 -16" />
      <path d="M8 4l0 .01" />
      <path d="M12 4l0 .01" />
      <path d="M16 4l0 .01" />
      <path d="M20 4l0 .01" />
      <path d="M12 8l0 .01" />
      <path d="M20 8l0 .01" />
      <path d="M8 12l0 .01" />
      <path d="M12 12l0 .01" />
      <path d="M16 12l0 .01" />
      <path d="M20 12l0 .01" />
      <path d="M12 16l0 .01" />
      <path d="M20 16l0 .01" />
      <path d="M8 20l0 .01" />
      <path d="M12 20l0 .01" />
      <path d="M16 20l0 .01" />
      <path d="M20 20l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `border_none` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.border_none />
      <TablerIcons.border_none class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def border_none(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4l0 .01" />
      <path d="M8 4l0 .01" />
      <path d="M12 4l0 .01" />
      <path d="M16 4l0 .01" />
      <path d="M20 4l0 .01" />
      <path d="M4 8l0 .01" />
      <path d="M12 8l0 .01" />
      <path d="M20 8l0 .01" />
      <path d="M4 12l0 .01" />
      <path d="M8 12l0 .01" />
      <path d="M12 12l0 .01" />
      <path d="M16 12l0 .01" />
      <path d="M20 12l0 .01" />
      <path d="M4 16l0 .01" />
      <path d="M12 16l0 .01" />
      <path d="M20 16l0 .01" />
      <path d="M4 20l0 .01" />
      <path d="M8 20l0 .01" />
      <path d="M12 20l0 .01" />
      <path d="M16 20l0 .01" />
      <path d="M20 20l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `border_outer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.border_outer />
      <TablerIcons.border_outer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def border_outer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M12 8l0 .01" />
      <path d="M8 12l0 .01" />
      <path d="M12 12l0 .01" />
      <path d="M16 12l0 .01" />
      <path d="M12 16l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `border_radius` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.border_radius />
      <TablerIcons.border_radius class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def border_radius(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12v-4a4 4 0 0 1 4 -4h4" />
      <path d="M16 4l0 .01" />
      <path d="M20 4l0 .01" />
      <path d="M20 8l0 .01" />
      <path d="M20 12l0 .01" />
      <path d="M4 16l0 .01" />
      <path d="M20 16l0 .01" />
      <path d="M4 20l0 .01" />
      <path d="M8 20l0 .01" />
      <path d="M12 20l0 .01" />
      <path d="M16 20l0 .01" />
      <path d="M20 20l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `border_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.border_right />
      <TablerIcons.border_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def border_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 4l0 16" />
      <path d="M4 4l0 .01" />
      <path d="M8 4l0 .01" />
      <path d="M12 4l0 .01" />
      <path d="M16 4l0 .01" />
      <path d="M4 8l0 .01" />
      <path d="M12 8l0 .01" />
      <path d="M4 12l0 .01" />
      <path d="M8 12l0 .01" />
      <path d="M12 12l0 .01" />
      <path d="M16 12l0 .01" />
      <path d="M4 16l0 .01" />
      <path d="M12 16l0 .01" />
      <path d="M4 20l0 .01" />
      <path d="M8 20l0 .01" />
      <path d="M12 20l0 .01" />
      <path d="M16 20l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `border_sides` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.border_sides />
      <TablerIcons.border_sides class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def border_sides(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v8" />
      <path d="M20 16v-8" />
      <path d="M8 4h8" />
      <path d="M8 20h8" />
    </svg>
    """
  end

  @doc """
  Renders the `border_style_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.border_style_2 />
      <TablerIcons.border_style_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def border_style_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 18v.01" />
      <path d="M8 18v.01" />
      <path d="M12 18v.01" />
      <path d="M16 18v.01" />
      <path d="M20 18v.01" />
      <path d="M18 12h2" />
      <path d="M11 12h2" />
      <path d="M4 12h2" />
      <path d="M4 6h16" />
    </svg>
    """
  end

  @doc """
  Renders the `border_style` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.border_style />
      <TablerIcons.border_style class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def border_style(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20v-14a2 2 0 0 1 2 -2h14" />
      <path d="M20 8v.01" />
      <path d="M20 12v.01" />
      <path d="M20 16v.01" />
      <path d="M8 20v.01" />
      <path d="M12 20v.01" />
      <path d="M16 20v.01" />
      <path d="M20 20v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `border_top` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.border_top />
      <TablerIcons.border_top class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def border_top(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4l16 0" />
      <path d="M4 8l0 .01" />
      <path d="M12 8l0 .01" />
      <path d="M20 8l0 .01" />
      <path d="M4 12l0 .01" />
      <path d="M8 12l0 .01" />
      <path d="M12 12l0 .01" />
      <path d="M16 12l0 .01" />
      <path d="M20 12l0 .01" />
      <path d="M4 16l0 .01" />
      <path d="M12 16l0 .01" />
      <path d="M20 16l0 .01" />
      <path d="M4 20l0 .01" />
      <path d="M8 20l0 .01" />
      <path d="M12 20l0 .01" />
      <path d="M16 20l0 .01" />
      <path d="M20 20l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `border_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.border_vertical />
      <TablerIcons.border_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def border_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 4l0 16" />
      <path d="M4 4l0 .01" />
      <path d="M8 4l0 .01" />
      <path d="M16 4l0 .01" />
      <path d="M20 4l0 .01" />
      <path d="M4 8l0 .01" />
      <path d="M20 8l0 .01" />
      <path d="M4 12l0 .01" />
      <path d="M8 12l0 .01" />
      <path d="M16 12l0 .01" />
      <path d="M20 12l0 .01" />
      <path d="M4 16l0 .01" />
      <path d="M20 16l0 .01" />
      <path d="M4 20l0 .01" />
      <path d="M8 20l0 .01" />
      <path d="M16 20l0 .01" />
      <path d="M20 20l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `bottle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bottle_filled />
      <TablerIcons.bottle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bottle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M13 1a2 2 0 0 1 1.995 1.85l.005 .15v.5c0 1.317 .381 2.604 1.094 3.705l.17 .25l.05 .072a9.093 9.093 0 0 1 1.68 4.92l.006 .354v6.199a3 3 0 0 1 -2.824 2.995l-.176 .005h-6a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-6.2a9.1 9.1 0 0 1 1.486 -4.982l.2 -.292l.05 -.069a6.823 6.823 0 0 0 1.264 -3.957v-.5a2 2 0 0 1 1.85 -1.995l.15 -.005h2zm.362 5h-2.724a8.827 8.827 0 0 1 -1.08 2.334l-.194 .284l-.05 .069a7.091 7.091 0 0 0 -1.307 3.798l-.003 .125a3.33 3.33 0 0 1 1.975 -.61a3.4 3.4 0 0 1 2.833 1.417c.27 .375 .706 .593 1.209 .583a1.4 1.4 0 0 0 1.166 -.583a3.4 3.4 0 0 1 .81 -.8l.003 .183c0 -1.37 -.396 -2.707 -1.137 -3.852l-.228 -.332a8.827 8.827 0 0 1 -1.273 -2.616z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `bottle_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bottle_off />
      <TablerIcons.bottle_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bottle_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 5h4v-2a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v2z" />
      <path d="M14 3.5c0 1.626 .507 3.212 1.45 4.537l.05 .07a8.093 8.093 0 0 1 1.5 4.694v.199m0 4v2a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2v-6.2a8.09 8.09 0 0 1 1.35 -4.474m1.336 -2.63a7.822 7.822 0 0 0 .314 -2.196" />
      <path d="M7 14.803a2.4 2.4 0 0 0 1 -.803a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 .866 -.142" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bottle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bottle />
      <TablerIcons.bottle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bottle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 5h4v-2a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v2z" />
      <path d="M14 3.5c0 1.626 .507 3.212 1.45 4.537l.05 .07a8.093 8.093 0 0 1 1.5 4.694v6.199a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2v-6.2c0 -1.682 .524 -3.322 1.5 -4.693l.05 -.07a7.823 7.823 0 0 0 1.45 -4.537" />
      <path d="M7 14.803a2.4 2.4 0 0 0 1 -.803a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 1 -.805" />
    </svg>
    """
  end

  @doc """
  Renders the `bounce_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bounce_left_filled />
      <TablerIcons.bounce_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bounce_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M8.486 11.143a1 1 0 0 1 1.371 .343c1.045 1.74 1.83 3.443 2.392 5.237l.172 .581l.092 -.13c2.093 -2.921 4.48 -3.653 7.565 -2.7l.238 .077a1 1 0 1 1 -.632 1.898c-2.932 -.978 -4.73 -.122 -6.79 3.998c-.433 .866 -1.721 .673 -1.88 -.283c-.46 -2.76 -1.369 -5.145 -2.871 -7.65a1 1 0 0 1 .343 -1.371z"
        stroke-width="0"
        fill="currentColor"
      />
      <path d="M6 4a3 3 0 1 0 0 6a3 3 0 0 0 0 -6z" stroke-width="0" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `bounce_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bounce_left />
      <TablerIcons.bounce_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bounce_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 15.5c-3 -1 -5.5 -.5 -8 4.5c-.5 -3 -1.5 -5.5 -3 -8" />
      <path d="M6 9a2 2 0 1 1 0 -4a2 2 0 0 1 0 4z" />
    </svg>
    """
  end

  @doc """
  Renders the `bounce_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bounce_right_filled />
      <TablerIcons.bounce_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bounce_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.143 11.486a1 1 0 0 1 1.714 1.028c-1.502 2.505 -2.41 4.89 -2.87 7.65c-.16 .956 -1.448 1.15 -1.881 .283c-2.06 -4.12 -3.858 -4.976 -6.79 -3.998a1 1 0 1 1 -.632 -1.898c3.2 -1.067 5.656 -.373 7.803 2.623l.091 .13l.011 -.04c.522 -1.828 1.267 -3.55 2.273 -5.3l.28 -.478z"
        stroke-width="0"
        fill="currentColor"
      />
      <path d="M18 4a3 3 0 1 0 0 6a3 3 0 0 0 0 -6z" stroke-width="0" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `bounce_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bounce_right />
      <TablerIcons.bounce_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bounce_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 15.5c3 -1 5.5 -.5 8 4.5c.5 -3 1.5 -5.5 3 -8" />
      <path d="M18 9a2 2 0 1 1 0 -4a2 2 0 0 1 0 4z" />
    </svg>
    """
  end

  @doc """
  Renders the `bow` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bow />
      <TablerIcons.bow class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bow(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 3h4v4" />
      <path d="M21 3l-15 15" />
      <path d="M3 18h3v3" />
      <path d="M16.5 20c1.576 -1.576 2.5 -4.095 2.5 -6.5c0 -4.81 -3.69 -8.5 -8.5 -8.5c-2.415 0 -4.922 .913 -6.5 2.5l12.5 12.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `bowl_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bowl_filled />
      <TablerIcons.bowl_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bowl_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M20 7h-16a2 2 0 0 0 -2 2v.5l.007 .18c.134 1.806 2.169 5.275 3.928 6.771l.065 .053v.496a2 2 0 0 0 2 2h8l.15 -.005a2 2 0 0 0 1.85 -1.995v-.504l.017 -.013c1.736 -1.494 3.983 -5.289 3.983 -6.983v-.5a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `bowl` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bowl />
      <TablerIcons.bowl class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bowl(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8h16a1 1 0 0 1 1 1v.5c0 1.5 -2.517 5.573 -4 6.5v1a1 1 0 0 1 -1 1h-8a1 1 0 0 1 -1 -1v-1c-1.687 -1.054 -4 -5 -4 -6.5v-.5a1 1 0 0 1 1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_bottom_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_bottom_filled />
      <TablerIcons.box_align_bottom_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_bottom_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M20 13h-16a1 1 0 0 0 -1 1v5a2 2 0 0 0 2 2h14a2 2 0 0 0 2 -2v-5a1 1 0 0 0 -1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 8a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 3a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M9 3a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15 3a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 3a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 8a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_bottom_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_bottom_left_filled />
      <TablerIcons.box_align_bottom_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_bottom_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10 12h-5a2 2 0 0 0 -2 2v5a2 2 0 0 0 2 2h5a2 2 0 0 0 2 -2v-5a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 8a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 3a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M9 3a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15 3a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15 19a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 3a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 8a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 14a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 19a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_bottom_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_bottom_left />
      <TablerIcons.box_align_bottom_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_bottom_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 13h5a1 1 0 0 1 1 1v5a1 1 0 0 1 -1 1h-5a1 1 0 0 1 -1 -1v-5a1 1 0 0 1 1 -1z" />
      <path d="M4 9v.01" />
      <path d="M4 4v.01" />
      <path d="M9 4v.01" />
      <path d="M15 4v.01" />
      <path d="M15 20v.01" />
      <path d="M20 4v.01" />
      <path d="M20 9v.01" />
      <path d="M20 15v.01" />
      <path d="M20 20v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_bottom_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_bottom_right_filled />
      <TablerIcons.box_align_bottom_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_bottom_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 12h-5a2 2 0 0 0 -2 2v5a2 2 0 0 0 2 2h5a2 2 0 0 0 2 -2v-5a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 8a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 3a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15 3a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M9 3a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M9 19a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 3a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 8a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 14a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 19a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_bottom_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_bottom_right />
      <TablerIcons.box_align_bottom_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_bottom_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 13h-5a1 1 0 0 0 -1 1v5a1 1 0 0 0 1 1h5a1 1 0 0 0 1 -1v-5a1 1 0 0 0 -1 -1z" />
      <path d="M20 9v.01" />
      <path d="M20 4v.01" />
      <path d="M15 4v.01" />
      <path d="M9 4v.01" />
      <path d="M9 20v.01" />
      <path d="M4 4v.01" />
      <path d="M4 9v.01" />
      <path d="M4 15v.01" />
      <path d="M4 20v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_bottom` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_bottom />
      <TablerIcons.box_align_bottom class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_bottom(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 14h16v5a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1v-5z" />
      <path d="M4 9v.01" />
      <path d="M4 4v.01" />
      <path d="M9 4v.01" />
      <path d="M15 4v.01" />
      <path d="M20 4v.01" />
      <path d="M20 9v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_left_filled />
      <TablerIcons.box_align_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.002 3.003h-5a2 2 0 0 0 -2 2v14a2 2 0 0 0 2 2h5a1 1 0 0 0 1 -1v-16a1 1 0 0 0 -1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15.002 19.003a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20.003 19.003a1 1 0 0 1 .117 1.993l-.128 .007a1 1 0 0 1 -.117 -1.993l.128 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20.003 14.002a1 1 0 0 1 .117 1.993l-.128 .007a1 1 0 0 1 -.117 -1.993l.128 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20.003 8.002a1 1 0 0 1 .117 1.993l-.128 .007a1 1 0 0 1 -.117 -1.993l.128 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20.003 3.002a1 1 0 0 1 .117 1.993l-.128 .007a1 1 0 0 1 -.117 -1.993l.128 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15.002 3.002a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_left />
      <TablerIcons.box_align_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.002 20.003v-16h-5a1 1 0 0 0 -1 1v14a1 1 0 0 0 1 1h5z" />
      <path d="M15.002 20.003h-.01" />
      <path d="M20.003 20.003h-.011" />
      <path d="M20.003 15.002h-.011" />
      <path d="M20.003 9.002h-.011" />
      <path d="M20.003 4.002h-.011" />
      <path d="M15.002 4.002h-.01" />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_right_filled />
      <TablerIcons.box_align_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.998 3.003h-5a1 1 0 0 0 -1 1v16a1 1 0 0 0 1 1h5a2 2 0 0 0 2 -2v-14a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M9.008 19.003a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4.008 19.003a1 1 0 0 1 .117 1.993l-.128 .007a1 1 0 0 1 -.117 -1.993l.128 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4.008 14.002a1 1 0 0 1 .117 1.993l-.128 .007a1 1 0 0 1 -.117 -1.993l.128 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4.008 8.002a1 1 0 0 1 .117 1.993l-.128 .007a1 1 0 0 1 -.117 -1.993l.128 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4.008 3.002a1 1 0 0 1 .117 1.993l-.128 .007a1 1 0 0 1 -.117 -1.993l.128 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M9.008 3.002a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_right />
      <TablerIcons.box_align_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.998 20.003v-16h5a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-5z" />
      <path d="M8.998 20.003h.01" />
      <path d="M3.997 20.003h.011" />
      <path d="M3.997 15.002h.011" />
      <path d="M3.997 9.002h.011" />
      <path d="M3.997 4.002h.011" />
      <path d="M8.998 4.002h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_top_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_top_filled />
      <TablerIcons.box_align_top_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_top_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 3.005h-14a2 2 0 0 0 -2 2v5a1 1 0 0 0 1 1h16a1 1 0 0 0 1 -1v-5a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 13.995a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 18.995a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M9 18.995a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15 18.995a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 18.995a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 13.995a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_top_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_top_left_filled />
      <TablerIcons.box_align_top_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_top_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10 3h-5a2 2 0 0 0 -2 2v5a2 2 0 0 0 2 2h5a2 2 0 0 0 2 -2v-5a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15 3a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 3a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 8a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 14a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 14a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 19a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15 19a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M9 19a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 19a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_top_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_top_left />
      <TablerIcons.box_align_top_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_top_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 5v5a1 1 0 0 1 -1 1h-5a1 1 0 0 1 -1 -1v-5a1 1 0 0 1 1 -1h5a1 1 0 0 1 1 1z" />
      <path d="M15 4h-.01" />
      <path d="M20 4h-.01" />
      <path d="M20 9h-.01" />
      <path d="M20 15h-.01" />
      <path d="M4 15h-.01" />
      <path d="M20 20h-.01" />
      <path d="M15 20h-.01" />
      <path d="M9 20h-.01" />
      <path d="M4 20h-.01" />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_top_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_top_right_filled />
      <TablerIcons.box_align_top_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_top_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 3.01h-5a2 2 0 0 0 -2 2v5a2 2 0 0 0 2 2h5a2 2 0 0 0 2 -2v-5a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 14a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 19a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15 19a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M9 19a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M9 3a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 19a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 14a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 8a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 3a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_top_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_top_right />
      <TablerIcons.box_align_top_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_top_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 11.01h-5a1 1 0 0 1 -1 -1v-5a1 1 0 0 1 1 -1h5a1 1 0 0 1 1 1v5a1 1 0 0 1 -1 1z" />
      <path d="M20 15.01v-.01" />
      <path d="M20 20.01v-.01" />
      <path d="M15 20.01v-.01" />
      <path d="M9 20.01v-.01" />
      <path d="M9 4.01v-.01" />
      <path d="M4 20.01v-.01" />
      <path d="M4 15.01v-.01" />
      <path d="M4 9.01v-.01" />
      <path d="M4 4.01v-.01" />
    </svg>
    """
  end

  @doc """
  Renders the `box_align_top` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_align_top />
      <TablerIcons.box_align_top class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_align_top(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10.005h16v-5a1 1 0 0 0 -1 -1h-14a1 1 0 0 0 -1 1v5z" />
      <path d="M4 15.005v-.01" />
      <path d="M4 20.005v-.01" />
      <path d="M9 20.005v-.01" />
      <path d="M15 20.005v-.01" />
      <path d="M20 20.005v-.01" />
      <path d="M20 15.005v-.01" />
    </svg>
    """
  end

  @doc """
  Renders the `box_margin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_margin />
      <TablerIcons.box_margin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_margin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8h8v8h-8z" />
      <path d="M4 4v.01" />
      <path d="M8 4v.01" />
      <path d="M12 4v.01" />
      <path d="M16 4v.01" />
      <path d="M20 4v.01" />
      <path d="M4 20v.01" />
      <path d="M8 20v.01" />
      <path d="M12 20v.01" />
      <path d="M16 20v.01" />
      <path d="M20 20v.01" />
      <path d="M20 16v.01" />
      <path d="M20 12v.01" />
      <path d="M20 8v.01" />
      <path d="M4 16v.01" />
      <path d="M4 12v.01" />
      <path d="M4 8v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `box_model_2_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_model_2_off />
      <TablerIcons.box_model_2_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_model_2_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h10a2 2 0 0 1 2 2v10m-.586 3.414a2 2 0 0 1 -1.414 .586h-12a2 2 0 0 1 -2 -2v-12c0 -.547 .22 -1.043 .576 -1.405" />
      <path d="M12 8h4v4m0 4h-8v-8" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `box_model_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_model_2 />
      <TablerIcons.box_model_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_model_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8h8v8h-8z" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `box_model_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_model_off />
      <TablerIcons.box_model_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_model_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8h4v4m0 4h-8v-8" />
      <path d="M8 4h10a2 2 0 0 1 2 2v10m-.586 3.414a2 2 0 0 1 -1.414 .586h-12a2 2 0 0 1 -2 -2v-12c0 -.547 .22 -1.043 .576 -1.405" />
      <path d="M16 16l3.3 3.3" />
      <path d="M16 8l3.3 -3.3" />
      <path d="M8 8l-3.3 -3.3" />
      <path d="M8 16l-3.3 3.3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `box_model` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_model />
      <TablerIcons.box_model class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_model(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8h8v8h-8z" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M16 16l3.3 3.3" />
      <path d="M16 8l3.3 -3.3" />
      <path d="M8 8l-3.3 -3.3" />
      <path d="M8 16l-3.3 3.3" />
    </svg>
    """
  end

  @doc """
  Renders the `box_multiple_0` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_multiple_0 />
      <TablerIcons.box_multiple_0 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_multiple_0(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 6a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
      <path d="M7 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2" />
    </svg>
    """
  end

  @doc """
  Renders the `box_multiple_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_multiple_1 />
      <TablerIcons.box_multiple_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_multiple_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2" />
      <path d="M14 14v-8l-2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `box_multiple_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_multiple_2 />
      <TablerIcons.box_multiple_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_multiple_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2" />
      <path d="M12 8a2 2 0 1 1 4 0c0 .591 -.417 1.318 -.816 1.858l-3.184 4.143l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `box_multiple_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_multiple_3 />
      <TablerIcons.box_multiple_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_multiple_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2" />
      <path d="M14 10a2 2 0 1 0 -2 -2" />
      <path d="M12 12a2 2 0 1 0 2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `box_multiple_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_multiple_4 />
      <TablerIcons.box_multiple_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_multiple_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2" />
      <path d="M15 14v-8l-4 6h5" />
    </svg>
    """
  end

  @doc """
  Renders the `box_multiple_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_multiple_5 />
      <TablerIcons.box_multiple_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_multiple_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M12 14h2a2 2 0 1 0 0 -4h-2v-4h4" />
      <path d="M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2" />
    </svg>
    """
  end

  @doc """
  Renders the `box_multiple_6` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_multiple_6 />
      <TablerIcons.box_multiple_6 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_multiple_6(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M14 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M16 8a2 2 0 1 0 -4 0v4" />
      <path d="M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2" />
    </svg>
    """
  end

  @doc """
  Renders the `box_multiple_7` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_multiple_7 />
      <TablerIcons.box_multiple_7 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_multiple_7(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M12 6h4l-2 8" />
      <path d="M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2" />
    </svg>
    """
  end

  @doc """
  Renders the `box_multiple_8` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_multiple_8 />
      <TablerIcons.box_multiple_8 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_multiple_8(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M14 8m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M14 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2" />
    </svg>
    """
  end

  @doc """
  Renders the `box_multiple_9` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_multiple_9 />
      <TablerIcons.box_multiple_9 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_multiple_9(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M14 8m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 12a2 2 0 1 0 4 0v-4" />
      <path d="M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2" />
    </svg>
    """
  end

  @doc """
  Renders the `box_multiple` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_multiple />
      <TablerIcons.box_multiple class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_multiple(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2" />
    </svg>
    """
  end

  @doc """
  Renders the `box_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_off />
      <TablerIcons.box_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.765 17.757l-5.765 3.243l-8 -4.5v-9l2.236 -1.258m2.57 -1.445l3.194 -1.797l8 4.5v8.5" />
      <path d="M14.561 10.559l5.439 -3.059" />
      <path d="M12 12v9" />
      <path d="M12 12l-8 -4.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `box_padding` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_padding />
      <TablerIcons.box_padding class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_padding(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M8 16v.01" />
      <path d="M8 12v.01" />
      <path d="M8 8v.01" />
      <path d="M16 16v.01" />
      <path d="M16 12v.01" />
      <path d="M16 8v.01" />
      <path d="M12 8v.01" />
      <path d="M12 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `box_seam` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box_seam />
      <TablerIcons.box_seam class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box_seam(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3l8 4.5v9l-8 4.5l-8 -4.5v-9l8 -4.5" />
      <path d="M12 12l8 -4.5" />
      <path d="M8.2 9.8l7.6 -4.6" />
      <path d="M12 12v9" />
      <path d="M12 12l-8 -4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `box` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.box />
      <TablerIcons.box class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def box(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3l8 4.5l0 9l-8 4.5l-8 -4.5l0 -9l8 -4.5" />
      <path d="M12 12l8 -4.5" />
      <path d="M12 12l0 9" />
      <path d="M12 12l-8 -4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `braces_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.braces_off />
      <TablerIcons.braces_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def braces_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.176 5.177c-.113 .251 -.176 .53 -.176 .823v3c0 1.657 -.895 3 -2 3c1.105 0 2 1.343 2 3v3a2 2 0 0 0 2 2" />
      <path d="M17 4a2 2 0 0 1 2 2v3c0 1.657 .895 3 2 3c-1.105 0 -2 1.343 -2 3m-.176 3.821a2 2 0 0 1 -1.824 1.179" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `braces` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.braces />
      <TablerIcons.braces class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def braces(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 4a2 2 0 0 0 -2 2v3a2 3 0 0 1 -2 3a2 3 0 0 1 2 3v3a2 2 0 0 0 2 2" />
      <path d="M17 4a2 2 0 0 1 2 2v3a2 3 0 0 0 2 3a2 3 0 0 0 -2 3v3a2 2 0 0 1 -2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `brackets_contain_end` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brackets_contain_end />
      <TablerIcons.brackets_contain_end class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brackets_contain_end(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 4h4v16h-4" />
      <path d="M5 16h.01" />
      <path d="M9 16h.01" />
      <path d="M13 16h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `brackets_contain_start` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brackets_contain_start />
      <TablerIcons.brackets_contain_start class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brackets_contain_start(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 4h-4v16h4" />
      <path d="M18 16h-.01" />
      <path d="M14 16h-.01" />
      <path d="M10 16h-.01" />
    </svg>
    """
  end

  @doc """
  Renders the `brackets_contain` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brackets_contain />
      <TablerIcons.brackets_contain class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brackets_contain(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 4h-4v16h4" />
      <path d="M17 4h4v16h-4" />
      <path d="M8 16h.01" />
      <path d="M12 16h.01" />
      <path d="M16 16h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `brackets_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brackets_off />
      <TablerIcons.brackets_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brackets_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5v15h3" />
      <path d="M16 4h3v11m0 4v1h-3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `brackets` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brackets />
      <TablerIcons.brackets class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brackets(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h-3v16h3" />
      <path d="M16 4h3v16h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `braille` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.braille />
      <TablerIcons.braille class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def braille(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 5a1 1 0 1 0 2 0a1 1 0 0 0 -2 0z" />
      <path d="M7 5a1 1 0 1 0 2 0a1 1 0 0 0 -2 0z" />
      <path d="M7 19a1 1 0 1 0 2 0a1 1 0 0 0 -2 0z" />
      <path d="M16 12h.01" />
      <path d="M8 12h.01" />
      <path d="M16 19h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `brain` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brain />
      <TablerIcons.brain class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brain(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.5 13a3.5 3.5 0 0 0 -3.5 3.5v1a3.5 3.5 0 0 0 7 0v-1.8" />
      <path d="M8.5 13a3.5 3.5 0 0 1 3.5 3.5v1a3.5 3.5 0 0 1 -7 0v-1.8" />
      <path d="M17.5 16a3.5 3.5 0 0 0 0 -7h-.5" />
      <path d="M19 9.3v-2.8a3.5 3.5 0 0 0 -7 0" />
      <path d="M6.5 16a3.5 3.5 0 0 1 0 -7h.5" />
      <path d="M5 9.3v-2.8a3.5 3.5 0 0 1 7 0v10" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_4chan` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_4chan />
      <TablerIcons.brand_4chan class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_4chan(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 11s6.054 -1.05 6 -4.5c-.038 -2.324 -2.485 -3.19 -3.016 -1.5c0 0 -.502 -2 -2.01 -2c-1.508 0 -2.984 3 -.974 8z" />
      <path d="M13.98 11s6.075 -1.05 6.02 -4.5c-.038 -2.324 -2.493 -3.19 -3.025 -1.5c0 0 -.505 -2 -2.017 -2c-1.513 0 -3 3 -.977 8z" />
      <path d="M13 13.98l.062 .309l.081 .35l.075 .29l.092 .328l.11 .358l.061 .188l.139 .392c.64 1.73 1.841 3.837 3.88 3.805c2.324 -.038 3.19 -2.493 1.5 -3.025l.148 -.045l.165 -.058a4.13 4.13 0 0 0 .098 -.039l.222 -.098c.586 -.28 1.367 -.832 1.367 -1.777c0 -1.513 -3 -3 -8 -.977z" />
      <path d="M10.02 13l-.309 .062l-.35 .081l-.29 .075l-.328 .092l-.358 .11l-.188 .061l-.392 .139c-1.73 .64 -3.837 1.84 -3.805 3.88c.038 2.324 2.493 3.19 3.025 1.5l.045 .148l.058 .165l.039 .098l.098 .222c.28 .586 .832 1.367 1.777 1.367c1.513 0 3 -3 .977 -8z" />
      <path d="M11 10.02l-.062 -.309l-.081 -.35l-.075 -.29l-.092 -.328l-.11 -.358l-.128 -.382l-.148 -.399c-.658 -1.687 -1.844 -3.634 -3.804 -3.604c-2.324 .038 -3.19 2.493 -1.5 3.025l-.148 .045l-.164 .058a4.13 4.13 0 0 0 -.1 .039l-.22 .098c-.588 .28 -1.368 .832 -1.368 1.777c0 1.513 3 3 8 .977z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_abstract` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_abstract />
      <TablerIcons.brand_abstract class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_abstract(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
      <path d="M10.5 13.5m-2.5 0a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0 -5 0" />
      <path d="M8 8h8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_adobe` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_adobe />
      <TablerIcons.brand_adobe class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_adobe(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.893 4.514l7.977 14a.993 .993 0 0 1 -.394 1.365a1.04 1.04 0 0 1 -.5 .127h-3.476l-4.5 -8l-2.5 4h1.5l2 4h-8.977c-.565 0 -1.023 -.45 -1.023 -1c0 -.171 .045 -.34 .13 -.49l7.977 -13.993a1.034 1.034 0 0 1 1.786 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_adonis_js` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_adonis_js />
      <TablerIcons.brand_adonis_js class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_adonis_js(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
      <path d="M8.863 16.922c1.137 -.422 1.637 -.922 3.137 -.922s2 .5 3.138 .922c.713 .264 1.516 -.102 1.778 -.772c.126 -.32 .11 -.673 -.044 -.983l-3.708 -7.474c-.297 -.598 -1.058 -.859 -1.7 -.583a1.24 1.24 0 0 0 -.627 .583l-3.709 7.474c-.321 .648 -.017 1.415 .679 1.714c.332 .143 .715 .167 1.056 .04z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_airbnb` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_airbnb />
      <TablerIcons.brand_airbnb class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_airbnb(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 10c-2 0 -3 1 -3 3c0 1.5 1.494 3.535 3 5.5c1 1 1.5 1.5 2.5 2s2.5 1 4.5 -.5s1.5 -3.5 .5 -6s-2.333 -5.5 -5 -9.5c-.834 -1 -1.5 -1.5 -2.503 -1.5c-1 0 -1.623 .45 -2.497 1.5c-2.667 4 -4 7 -5 9.5s-1.5 4.5 .5 6s3.5 1 4.5 .5s1.5 -1 2.5 -2c1.506 -1.965 3 -4 3 -5.5c0 -2 -1 -3 -3 -3z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_airtable` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_airtable />
      <TablerIcons.brand_airtable class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_airtable(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 10v8l7 -3v-2.6z" />
      <path d="M3 6l9 3l9 -3l-9 -3z" />
      <path d="M14 12.3v8.7l7 -3v-8z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_algolia` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_algolia />
      <TablerIcons.brand_algolia class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_algolia(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.5 11c-.414 -1.477 -1.886 -2.5 -3.5 -2.5a3.47 3.47 0 0 0 -3.5 3.5a3.47 3.47 0 0 0 3.5 3.5c.974 0 1.861 -.357 2.5 -1l4.5 4.5v-15h-7c-4.386 0 -8 3.582 -8 8s3.614 8 8 8a7.577 7.577 0 0 0 2.998 -.614" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_alipay` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_alipay />
      <TablerIcons.brand_alipay class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_alipay(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 3h-14a2 2 0 0 0 -2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2 -2v-14a2 2 0 0 0 -2 -2z" />
      <path d="M7 7h10" />
      <path d="M12 3v7" />
      <path d="M21 17.314c-2.971 -1.923 -15 -8.779 -15 -1.864c0 1.716 1.52 2.55 2.985 2.55c3.512 0 6.814 -5.425 6.814 -8h-6.604" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_alpine_js` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_alpine_js />
      <TablerIcons.brand_alpine_js class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_alpine_js(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 11.5l4.5 4.5h9l-9 -9z" />
      <path d="M16.5 16l4.5 -4.5l-4.5 -4.5l-4.5 4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_amazon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_amazon />
      <TablerIcons.brand_amazon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_amazon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 12.5a15.198 15.198 0 0 1 -7.37 1.44a14.62 14.62 0 0 1 -6.63 -2.94" />
      <path d="M19.5 15c.907 -1.411 1.451 -3.323 1.5 -5c-1.197 -.773 -2.577 -.935 -4 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_amd` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_amd />
      <TablerIcons.brand_amd class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_amd(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 16v-7c0 -.566 -.434 -1 -1 -1h-7l-5 -5h17c.566 0 1 .434 1 1v17l-5 -5z" />
      <path d="M11.293 20.707l4.707 -4.707h-7a1 1 0 0 1 -1 -1v-7l-4.707 4.707a1 1 0 0 0 -.293 .707v6.586a1 1 0 0 0 1 1h6.586a1 1 0 0 0 .707 -.293z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_amigo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_amigo />
      <TablerIcons.brand_amigo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_amigo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M9.591 3.635l-7.13 14.082c-1.712 3.38 1.759 5.45 3.69 3.573l1.86 -1.81c3.142 -3.054 4.959 -2.99 8.039 .11l1.329 1.337c2.372 2.387 5.865 .078 4.176 -3.225l-7.195 -14.067c-1.114 -2.18 -3.666 -2.18 -4.77 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_among_us` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_among_us />
      <TablerIcons.brand_among_us class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_among_us(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.646 12.774c-1.939 .396 -4.467 .317 -6.234 -.601c-2.454 -1.263 -1.537 -4.66 1.423 -4.982c2.254 -.224 3.814 -.354 5.65 .214c.835 .256 1.93 .569 1.355 3.281c-.191 1.067 -1.07 1.904 -2.194 2.088z" />
      <path d="M5.84 7.132c.083 -.564 .214 -1.12 .392 -1.661c.456 -.936 1.095 -2.068 3.985 -2.456a22.464 22.464 0 0 1 2.867 .08c1.776 .14 2.643 1.234 3.287 3.368c.339 1.157 .46 2.342 .629 3.537v11l-12.704 -.019c-.552 -2.386 -.262 -5.894 .204 -8.481" />
      <path d="M17 10c.991 .163 2.105 .383 3.069 .67c.255 .13 .52 .275 .534 .505c.264 3.434 .57 7.448 .278 9.825h-3.881" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_android` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_android />
      <TablerIcons.brand_android class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_android(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10l0 6" />
      <path d="M20 10l0 6" />
      <path d="M7 9h10v8a1 1 0 0 1 -1 1h-8a1 1 0 0 1 -1 -1v-8a5 5 0 0 1 10 0" />
      <path d="M8 3l1 2" />
      <path d="M16 3l-1 2" />
      <path d="M9 18l0 3" />
      <path d="M15 18l0 3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_angular` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_angular />
      <TablerIcons.brand_angular class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_angular(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.428 17.245l6.076 3.471a1 1 0 0 0 .992 0l6.076 -3.471a1 1 0 0 0 .495 -.734l1.323 -9.704a1 1 0 0 0 -.658 -1.078l-7.4 -2.612a1 1 0 0 0 -.665 0l-7.399 2.613a1 1 0 0 0 -.658 1.078l1.323 9.704a1 1 0 0 0 .495 .734z" />
      <path d="M9 15l3 -8l3 8" />
      <path d="M10 13h4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_ansible` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_ansible />
      <TablerIcons.brand_ansible class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_ansible(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9.647 12.294l6.353 3.706l-4 -9l-4 9" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_ao3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_ao3 />
      <TablerIcons.brand_ao3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_ao3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 5c7.109 4.1 10.956 10.131 12 14c1.074 -4.67 4.49 -8.94 8 -11" />
      <path d="M14 8m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 9c-.278 5.494 -2.337 7.33 -4 10c4.013 -2 6.02 -5 15.05 -5c4.012 0 3.51 2.5 1 3c2 .5 2.508 5 -2.007 2" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_appgallery` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_appgallery />
      <TablerIcons.brand_appgallery class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_appgallery(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 4a4 4 0 0 1 4 -4h8a4 4 0 0 1 4 4v8a4 4 0 0 1 -4 4h-8a4 4 0 0 1 -4 -4z" />
      <path d="M9 8a3 3 0 0 0 6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_apple_arcade` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_apple_arcade />
      <TablerIcons.brand_apple_arcade class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_apple_arcade(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M20 12.5v4.75a.734 .734 0 0 1 -.055 .325a.704 .704 0 0 1 -.348 .366l-5.462 2.58a5 5 0 0 1 -4.27 0l-5.462 -2.58a.705 .705 0 0 1 -.401 -.691l0 -4.75" />
      <path d="M4.431 12.216l5.634 -2.332a5.065 5.065 0 0 1 3.87 0l5.634 2.332a.692 .692 0 0 1 .028 1.269l-5.462 2.543a5.064 5.064 0 0 1 -4.27 0l-5.462 -2.543a.691 .691 0 0 1 .028 -1.27z" />
      <path d="M12 7l0 6" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_apple_podcast` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_apple_podcast />
      <TablerIcons.brand_apple_podcast class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_apple_podcast(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.364 18.364a9 9 0 1 0 -12.728 0" />
      <path d="M11.766 22h.468a2 2 0 0 0 1.985 -1.752l.5 -4a2 2 0 0 0 -1.985 -2.248h-1.468a2 2 0 0 0 -1.985 2.248l.5 4a2 2 0 0 0 1.985 1.752z" />
      <path d="M12 9m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_apple` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_apple />
      <TablerIcons.brand_apple class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_apple(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 7c-3 0 -4 3 -4 5.5c0 3 2 7.5 4 7.5c1.088 -.046 1.679 -.5 3 -.5c1.312 0 1.5 .5 3 .5s4 -3 4 -5c-.028 -.01 -2.472 -.403 -2.5 -3c-.019 -2.17 2.416 -2.954 2.5 -3c-1.023 -1.492 -2.951 -1.963 -3.5 -2c-1.433 -.111 -2.83 1 -3.5 1c-.68 0 -1.9 -1 -3 -1z" />
      <path d="M12 4a2 2 0 0 0 2 -2a2 2 0 0 0 -2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_appstore` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_appstore />
      <TablerIcons.brand_appstore class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_appstore(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M8 16l1.106 -1.99m1.4 -2.522l2.494 -4.488" />
      <path d="M7 14h5m2.9 0h2.1" />
      <path d="M16 16l-2.51 -4.518m-1.487 -2.677l-1 -1.805" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_asana` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_asana />
      <TablerIcons.brand_asana class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_asana(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 7m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 16m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M7 16m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_aws` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_aws />
      <TablerIcons.brand_aws class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_aws(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 18.5a15.198 15.198 0 0 1 -7.37 1.44a14.62 14.62 0 0 1 -6.63 -2.94" />
      <path d="M19.5 21c.907 -1.411 1.451 -3.323 1.5 -5c-1.197 -.773 -2.577 -.935 -4 -1" />
      <path d="M3 11v-4.5a1.5 1.5 0 0 1 3 0v4.5" />
      <path d="M3 9h3" />
      <path d="M9 5l1.2 6l1.8 -4l1.8 4l1.2 -6" />
      <path d="M18 10.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_azure` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_azure />
      <TablerIcons.brand_azure class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_azure(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 7.5l-4 9.5h4l6 -15z" />
      <path d="M22 20l-7 -15l-3 7l4 5l-8 3z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_backbone` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_backbone />
      <TablerIcons.brand_backbone class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_backbone(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 20l14 -8l-14 -8z" />
      <path d="M19 20l-14 -8l14 -8z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_badoo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_badoo />
      <TablerIcons.brand_badoo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_badoo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 9.43c0 5.838 -4.477 10.57 -10 10.57s-10 -4.662 -10 -10.5c0 -2.667 1.83 -5.01 4.322 -5.429c2.492 -.418 4.9 1.392 5.678 3.929c.768 -2.54 3.177 -4.354 5.668 -3.931c2.495 .417 4.332 2.69 4.332 5.36z" />
      <path d="M7.5 10c0 2.761 2.015 5 4.5 5s4.5 -2.239 4.5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_baidu` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_baidu />
      <TablerIcons.brand_baidu class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_baidu(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 9.5m-1 0a1 1.5 0 1 0 2 0a1 1.5 0 1 0 -2 0" />
      <path d="M14.463 11.596c1.282 1.774 3.476 3.416 3.476 3.416s1.921 1.574 .593 3.636c-1.328 2.063 -4.892 1.152 -4.892 1.152s-1.416 -.44 -3.06 -.088c-1.644 .356 -3.06 .22 -3.06 .22s-2.055 -.22 -2.47 -2.304c-.416 -2.084 1.918 -3.638 2.102 -3.858c.182 -.222 1.409 -.966 2.284 -2.394c.875 -1.428 3.337 -2.287 5.027 .221z" />
      <path d="M9 4.5m-1 0a1 1.5 0 1 0 2 0a1 1.5 0 1 0 -2 0" />
      <path d="M15 4.5m-1 0a1 1.5 0 1 0 2 0a1 1.5 0 1 0 -2 0" />
      <path d="M19 9.5m-1 0a1 1.5 0 1 0 2 0a1 1.5 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_bandcamp` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_bandcamp />
      <TablerIcons.brand_bandcamp class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_bandcamp(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.5 6h13.5l-7 12h-13z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_bandlab` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_bandlab />
      <TablerIcons.brand_bandlab class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_bandlab(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.885 7l-2.536 4.907c-2.021 3.845 -2.499 8.775 3.821 9.093h6.808c4.86 -.207 7.989 -2.975 4.607 -9.093l-2.988 -4.907" />
      <path d="M15.078 4h-5.136l3.678 8.768c.547 1.14 .847 1.822 .162 2.676c-.053 .093 -1.332 1.907 -3.053 1.495c-.825 -.187 -1.384 -.926 -1.32 -1.74c.04 -.91 .62 -1.717 1.488 -2.074a4.463 4.463 0 0 1 2.723 -.358" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_beats` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_beats />
      <TablerIcons.brand_beats class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_beats(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12.5 12.5m-3.5 0a3.5 3.5 0 1 0 7 0a3.5 3.5 0 1 0 -7 0" />
      <path d="M9 12v-8" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_behance` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_behance />
      <TablerIcons.brand_behance class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_behance(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 18v-12h4.5a3 3 0 0 1 0 6a3 3 0 0 1 0 6h-4.5" />
      <path d="M3 12l4.5 0" />
      <path d="M14 13h7a3.5 3.5 0 0 0 -7 0v2a3.5 3.5 0 0 0 6.64 1" />
      <path d="M16 6l3 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_bilibili` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_bilibili />
      <TablerIcons.brand_bilibili class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_bilibili(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 10a4 4 0 0 1 4 -4h10a4 4 0 0 1 4 4v6a4 4 0 0 1 -4 4h-10a4 4 0 0 1 -4 -4v-6z" />
      <path d="M8 3l2 3" />
      <path d="M16 3l-2 3" />
      <path d="M9 13v-2" />
      <path d="M15 11v2" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_binance` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_binance />
      <TablerIcons.brand_binance class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_binance(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 8l2 2l4 -4l4 4l2 -2l-6 -6z" />
      <path d="M6 16l2 -2l4 4l3.5 -3.5l2 2l-5.5 5.5z" />
      <path d="M20 10l2 2l-2 2l-2 -2z" />
      <path d="M4 10l2 2l-2 2l-2 -2z" />
      <path d="M12 10l2 2l-2 2l-2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_bing` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_bing />
      <TablerIcons.brand_bing class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_bing(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 3l4 1.5v12l6 -2.5l-2 -1l-1 -4l7 2.5v4.5l-10 5l-4 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_bitbucket` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_bitbucket />
      <TablerIcons.brand_bitbucket class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_bitbucket(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.648 4a.64 .64 0 0 0 -.64 .744l3.14 14.528c.07 .417 .43 .724 .852 .728h10a.644 .644 0 0 0 .642 -.539l3.35 -14.71a.641 .641 0 0 0 -.64 -.744l-16.704 -.007z" />
      <path d="M14 15h-4l-1 -6h6z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_blackberry` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_blackberry />
      <TablerIcons.brand_blackberry class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_blackberry(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 6a1 1 0 0 0 -1 -1h-2l-.5 2h2.5a1 1 0 0 0 1 -1z" />
      <path d="M6 12a1 1 0 0 0 -1 -1h-2l-.5 2h2.5a1 1 0 0 0 1 -1z" />
      <path d="M13 12a1 1 0 0 0 -1 -1h-2l-.5 2h2.5a1 1 0 0 0 1 -1z" />
      <path d="M14 6a1 1 0 0 0 -1 -1h-2l-.5 2h2.5a1 1 0 0 0 1 -1z" />
      <path d="M12 18a1 1 0 0 0 -1 -1h-2l-.5 2h2.5a1 1 0 0 0 1 -1z" />
      <path d="M20 15a1 1 0 0 0 -1 -1h-2l-.5 2h2.5a1 1 0 0 0 1 -1z" />
      <path d="M21 9a1 1 0 0 0 -1 -1h-2l-.5 2h2.5a1 1 0 0 0 1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_blender` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_blender />
      <TablerIcons.brand_blender class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_blender(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 14m-6 0a6 5 0 1 0 12 0a6 5 0 1 0 -12 0" />
      <path d="M15 14m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M3 16l9 -6.5" />
      <path d="M6 9h9" />
      <path d="M13 5l5.65 5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_blogger` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_blogger />
      <TablerIcons.brand_blogger class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_blogger(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 21h8a5 5 0 0 0 5 -5v-3a3 3 0 0 0 -3 -3h-1v-2a5 5 0 0 0 -5 -5h-4a5 5 0 0 0 -5 5v8a5 5 0 0 0 5 5z" />
      <path d="M7 7m0 1.5a1.5 1.5 0 0 1 1.5 -1.5h3a1.5 1.5 0 0 1 1.5 1.5v0a1.5 1.5 0 0 1 -1.5 1.5h-3a1.5 1.5 0 0 1 -1.5 -1.5z" />
      <path d="M7 14m0 1.5a1.5 1.5 0 0 1 1.5 -1.5h7a1.5 1.5 0 0 1 1.5 1.5v0a1.5 1.5 0 0 1 -1.5 1.5h-7a1.5 1.5 0 0 1 -1.5 -1.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_booking` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_booking />
      <TablerIcons.brand_booking class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_booking(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 18v-9.5a4.5 4.5 0 0 1 4.5 -4.5h7a4.5 4.5 0 0 1 4.5 4.5v7a4.5 4.5 0 0 1 -4.5 4.5h-9.5a2 2 0 0 1 -2 -2z" />
      <path d="M8 12h3.5a2 2 0 1 1 0 4h-3.5v-7a1 1 0 0 1 1 -1h1.5a2 2 0 1 1 0 4h-1.5" />
      <path d="M16 16l.01 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_bootstrap` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_bootstrap />
      <TablerIcons.brand_bootstrap class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_bootstrap(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 12a2 2 0 0 0 2 -2v-4a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v4a2 2 0 0 0 2 2" />
      <path d="M2 12a2 2 0 0 1 2 2v4a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-4a2 2 0 0 1 2 -2" />
      <path d="M9 16v-8h3.5a2 2 0 1 1 0 4h-3.5h4a2 2 0 1 1 0 4h-4z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_bulma` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_bulma />
      <TablerIcons.brand_bulma class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_bulma(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 16l1 -9l5 -5l6.5 6l-3.5 4l5 5l-8 5z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_bumble` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_bumble />
      <TablerIcons.brand_bumble class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_bumble(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 12h10" />
      <path d="M9 8h6" />
      <path d="M10 16h4" />
      <path d="M16.268 3h-8.536a1.46 1.46 0 0 0 -1.268 .748l-4.268 7.509a1.507 1.507 0 0 0 0 1.486l4.268 7.509c.26 .462 .744 .747 1.268 .748h8.536a1.46 1.46 0 0 0 1.268 -.748l4.268 -7.509a1.507 1.507 0 0 0 0 -1.486l-4.268 -7.509a1.46 1.46 0 0 0 -1.268 -.748z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_bunpo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_bunpo />
      <TablerIcons.brand_bunpo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_bunpo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.9 7.205a17.764 17.764 0 0 0 4.008 2.753a7.917 7.917 0 0 0 4.57 .567c1.5 -.33 2.907 -1 4.121 -1.956a12.107 12.107 0 0 0 2.892 -2.903c.603 -.94 .745 -1.766 .484 -2.231c-.261 -.465 -.927 -.568 -1.72 -.257a7.564 7.564 0 0 0 -2.608 2.034a18.425 18.425 0 0 0 -2.588 3.884a34.927 34.927 0 0 0 -2.093 5.073a12.908 12.908 0 0 0 -.677 3.515c-.07 .752 .07 1.51 .405 2.184c.323 .562 1.06 1.132 2.343 1.132c3.474 0 5.093 -3.53 5.463 -5.62c.24 -1.365 -.085 -3.197 -1.182 -4.01" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_c_sharp` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_c_sharp />
      <TablerIcons.brand_c_sharp class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_c_sharp(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 9a3 3 0 0 0 -3 -3h-.5a3.5 3.5 0 0 0 -3.5 3.5v5a3.5 3.5 0 0 0 3.5 3.5h.5a3 3 0 0 0 3 -3" />
      <path d="M16 7l-1 10" />
      <path d="M20 7l-1 10" />
      <path d="M14 10h7.5" />
      <path d="M21 14h-7.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_cake` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_cake />
      <TablerIcons.brand_cake class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_cake(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.84 12c0 2.05 .985 3.225 -.04 5c-1.026 1.775 -2.537 1.51 -4.314 2.534c-1.776 1.026 -2.302 2.466 -4.353 2.466c-2.051 0 -2.576 -1.441 -4.353 -2.466c-1.776 -1.024 -3.288 -.759 -4.314 -2.534c-1.025 -1.775 -.04 -2.95 -.04 -5s-.985 -3.225 .04 -5c1.026 -1.775 2.537 -1.51 4.314 -2.534c1.776 -1.026 2.302 -2.466 4.353 -2.466s2.577 1.441 4.353 2.466c1.776 1.024 3.288 .759 4.313 2.534c1.026 1.775 .04 2.95 .04 5z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_cakephp` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_cakephp />
      <TablerIcons.brand_cakephp class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_cakephp(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 11l8 2c1.361 -.545 2 -1.248 2 -2v-3.8c0 -1.765 -4.479 -3.2 -10.002 -3.2c-5.522 0 -9.998 1.435 -9.998 3.2v2.8c0 1.766 4.478 4 10 4v-3z" />
      <path d="M12 14v3l8 2c1.362 -.547 2 -1.246 2 -2v-3c0 .754 -.638 1.453 -2 2l-8 -2z" />
      <path d="M2 17c0 1.766 4.476 3 9.998 3l.002 -3c-5.522 0 -10 -1.734 -10 -3.5v3.5z" />
      <path d="M2 10v4" />
      <path d="M22 10v4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_campaignmonitor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_campaignmonitor />
      <TablerIcons.brand_campaignmonitor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_campaignmonitor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 18l9 -6.462l-9 -5.538v12h18v-12l-9 5.538" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_carbon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_carbon />
      <TablerIcons.brand_carbon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_carbon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 10v-.2a1.8 1.8 0 0 0 -1.8 -1.8h-.4a1.8 1.8 0 0 0 -1.8 1.8v4.4a1.8 1.8 0 0 0 1.8 1.8h.4a1.8 1.8 0 0 0 1.8 -1.8v-.2" />
      <path d="M3 3m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_cashapp` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_cashapp />
      <TablerIcons.brand_cashapp class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_cashapp(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.1 8.648a.568 .568 0 0 1 -.761 .011a5.682 5.682 0 0 0 -3.659 -1.34c-1.102 0 -2.205 .363 -2.205 1.374c0 1.023 1.182 1.364 2.546 1.875c2.386 .796 4.363 1.796 4.363 4.137c0 2.545 -1.977 4.295 -5.204 4.488l-.295 1.364a.557 .557 0 0 1 -.546 .443h-2.034l-.102 -.011a.568 .568 0 0 1 -.432 -.67l.318 -1.444a7.432 7.432 0 0 1 -3.273 -1.784v-.011a.545 .545 0 0 1 0 -.773l1.137 -1.102c.214 -.2 .547 -.2 .761 0a5.495 5.495 0 0 0 3.852 1.5c1.478 0 2.466 -.625 2.466 -1.614c0 -.989 -1 -1.25 -2.886 -1.954c-2 -.716 -3.898 -1.728 -3.898 -4.091c0 -2.75 2.284 -4.091 4.989 -4.216l.284 -1.398a.545 .545 0 0 1 .545 -.432h2.023l.114 .012a.544 .544 0 0 1 .42 .647l-.307 1.557a8.528 8.528 0 0 1 2.818 1.58l.023 .022c.216 .228 .216 .569 0 .773l-1.057 1.057z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_chrome` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_chrome />
      <TablerIcons.brand_chrome class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_chrome(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12 9h8.4" />
      <path d="M14.598 13.5l-4.2 7.275" />
      <path d="M9.402 13.5l-4.2 -7.275" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_cinema_4d` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_cinema_4d />
      <TablerIcons.brand_cinema_4d class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_cinema_4d(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.65 6.956a5.39 5.39 0 0 0 7.494 7.495" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M17.7 12.137a5.738 5.738 0 1 1 -5.737 -5.737" />
      <path d="M17.7 12.338v-1.175c0 -.47 .171 -.92 .476 -1.253a1.56 1.56 0 0 1 1.149 -.52c.827 0 1.523 .676 1.62 1.573c.037 .344 .055 .69 .055 1.037" />
      <path d="M11.662 6.4h1.175c.47 0 .92 -.176 1.253 -.49c.333 -.314 .52 -.74 .52 -1.184c0 -.852 -.676 -1.57 -1.573 -1.67a9.496 9.496 0 0 0 -1.037 -.056" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_citymapper` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_citymapper />
      <TablerIcons.brand_citymapper class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_citymapper(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 11a1 1 0 1 1 -1 1.013a1 1 0 0 1 1 -1v-.013z" />
      <path d="M21 11a1 1 0 1 1 -1 1.013a1 1 0 0 1 1 -1v-.013z" />
      <path d="M8 12h8" />
      <path d="M13 9l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_cloudflare` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_cloudflare />
      <TablerIcons.brand_cloudflare class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_cloudflare(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.031 7.007c2.469 -.007 3.295 1.293 3.969 2.993c4 0 4.994 3.825 5 6h-20c-.001 -1.64 1.36 -2.954 3 -3c0 -1.5 1 -3 3 -3c.66 -1.942 2.562 -2.986 5.031 -2.993z" />
      <path d="M12 13h6" />
      <path d="M17 10l-2.5 6" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_codecov` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_codecov />
      <TablerIcons.brand_codecov class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_codecov(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.695 12.985a5.972 5.972 0 0 0 -3.295 -.985c-1.257 0 -2.436 .339 -3.4 1a9 9 0 1 1 18 0c-.966 -.664 -2.14 -1 -3.4 -1a6 6 0 0 0 -5.605 8.144" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_codepen` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_codepen />
      <TablerIcons.brand_codepen class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_codepen(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 15l9 6l9 -6l-9 -6l-9 6" />
      <path d="M3 9l9 6l9 -6l-9 -6l-9 6" />
      <path d="M3 9l0 6" />
      <path d="M21 9l0 6" />
      <path d="M12 3l0 6" />
      <path d="M12 15l0 6" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_codesandbox` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_codesandbox />
      <TablerIcons.brand_codesandbox class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_codesandbox(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 7.5v9l-4 2.25l-4 2.25l-4 -2.25l-4 -2.25v-9l4 -2.25l4 -2.25l4 2.25z" />
      <path d="M12 12l4 -2.25l4 -2.25" />
      <path d="M12 12l0 9" />
      <path d="M12 12l-4 -2.25l-4 -2.25" />
      <path d="M20 12l-4 2v4.75" />
      <path d="M4 12l4 2l0 4.75" />
      <path d="M8 5.25l4 2.25l4 -2.25" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_cohost` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_cohost />
      <TablerIcons.brand_cohost class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_cohost(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 14m-3 0a3 2 0 1 0 6 0a3 2 0 1 0 -6 0" />
      <path d="M4.526 17.666c-1.133 -.772 -1.897 -1.924 -2.291 -3.456c-.398 -1.54 -.29 -2.937 .32 -4.19c.61 -1.255 1.59 -2.34 2.938 -3.254c1.348 -.914 2.93 -1.625 4.749 -2.132c1.81 -.504 3.516 -.708 5.12 -.61c1.608 .1 2.979 .537 4.112 1.31s1.897 1.924 2.291 3.456c.398 1.541 .29 2.938 -.32 4.192c-.61 1.253 -1.59 2.337 -2.938 3.252c-1.348 .915 -2.93 1.626 -4.749 2.133c-1.81 .503 -3.516 .707 -5.12 .61c-1.608 -.102 -2.979 -.538 -4.112 -1.31z" />
      <path d="M11 12.508c-.53 -.316 -1.23 -.508 -2 -.508c-1.657 0 -3 .895 -3 2s1.343 2 3 2c.767 0 1.467 -.192 2 -.508" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_coinbase` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_coinbase />
      <TablerIcons.brand_coinbase class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_coinbase(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.95 22c-4.503 0 -8.445 -3.04 -9.61 -7.413c-1.165 -4.373 .737 -8.988 4.638 -11.25a9.906 9.906 0 0 1 12.008 1.598l-3.335 3.367a5.185 5.185 0 0 0 -7.354 .013a5.252 5.252 0 0 0 0 7.393a5.185 5.185 0 0 0 7.354 .013l3.349 3.367a9.887 9.887 0 0 1 -7.05 2.912z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_comedy_central` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_comedy_central />
      <TablerIcons.brand_comedy_central class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_comedy_central(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.343 17.657a8 8 0 1 0 0 -11.314" />
      <path d="M13.828 9.172a4 4 0 1 0 0 5.656" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_coreos` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_coreos />
      <TablerIcons.brand_coreos class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_coreos(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 1 -18 0a9 9 0 0 1 18 0z" />
      <path d="M12 3c-3.263 3.212 -3 7.654 -3 12c4.59 .244 8.814 -.282 12 -3" />
      <path d="M9.5 9a4.494 4.494 0 0 1 5.5 5.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_couchdb` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_couchdb />
      <TablerIcons.brand_couchdb class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_couchdb(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 12h12v-2a2 2 0 0 1 2 -2a2 2 0 0 0 -2 -2h-12a2 2 0 0 0 -2 2a2 2 0 0 1 2 2v2z" />
      <path d="M6 15h12" />
      <path d="M6 18h12" />
      <path d="M21 11v7" />
      <path d="M3 11v7" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_couchsurfing` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_couchsurfing />
      <TablerIcons.brand_couchsurfing class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_couchsurfing(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.1 13c3.267 0 5.9 -.167 7.9 -.5c3 -.5 4 -2 4 -3.5a3 3 0 1 0 -6 0c0 1.554 1.807 3 3 4c1.193 1 2 2.5 2 3.5a1.5 1.5 0 1 1 -3 0c0 -2 4 -3.5 7 -3.5h2.9" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_cpp` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_cpp />
      <TablerIcons.brand_cpp class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_cpp(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 12h4" />
      <path d="M20 10v4" />
      <path d="M11 12h4" />
      <path d="M13 10v4" />
      <path d="M9 9a3 3 0 0 0 -3 -3h-.5a3.5 3.5 0 0 0 -3.5 3.5v5a3.5 3.5 0 0 0 3.5 3.5h.5a3 3 0 0 0 3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_craft` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_craft />
      <TablerIcons.brand_craft class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_craft(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 4h-8a8 8 0 1 0 0 16h8a8 8 0 0 0 -8 -8a8 8 0 0 0 8 -8" />
      <path d="M4 12h8" />
      <path d="M12 4v16" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_crunchbase` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_crunchbase />
      <TablerIcons.brand_crunchbase class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_crunchbase(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10.414 11.586a2 2 0 1 0 0 2.828" />
      <path d="M15 13m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M13 7v6" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_css3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_css3 />
      <TablerIcons.brand_css3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_css3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 4l-2 14.5l-6 2l-6 -2l-2 -14.5z" />
      <path d="M8.5 8h7l-4.5 4h4l-.5 3.5l-2.5 .75l-2.5 -.75l-.1 -.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_ctemplar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_ctemplar />
      <TablerIcons.brand_ctemplar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_ctemplar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.04 14.831l4.46 -4.331" />
      <path d="M12.555 20.82c4.55 -3.456 7.582 -8.639 8.426 -14.405a1.668 1.668 0 0 0 -.934 -1.767a19.647 19.647 0 0 0 -8.047 -1.648a19.647 19.647 0 0 0 -8.047 1.647a1.668 1.668 0 0 0 -.934 1.767c.844 5.766 3.875 10.95 8.426 14.406a.948 .948 0 0 0 1.11 0z" />
      <path d="M20 5c-2 0 -4.37 3.304 -8 6.644c-3.63 -3.34 -6 -6.644 -8 -6.644" />
      <path d="M17.738 15l-4.238 -4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_cucumber` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_cucumber />
      <TablerIcons.brand_cucumber class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_cucumber(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 10.99c-.01 5.52 -4.48 10 -10 10.01v-2.26l-.01 -.01c-4.28 -1.11 -6.86 -5.47 -5.76 -9.75a8 8 0 0 1 9.74 -5.76c3.53 .91 6.03 4.13 6.03 7.78v-.01z" />
      <path d="M10.5 8l-.5 -1" />
      <path d="M13.5 14l.5 1" />
      <path d="M9 12.5l-1 .5" />
      <path d="M11 14l-.5 1" />
      <path d="M13 8l.5 -1" />
      <path d="M16 12.5l-1 -.5" />
      <path d="M9 10l-1 -.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_cupra` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_cupra />
      <TablerIcons.brand_cupra class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_cupra(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.5 10l-2.5 -4l15.298 6.909a.2 .2 0 0 1 .09 .283l-3.388 5.808" />
      <path d="M10 19l-3.388 -5.808a.2 .2 0 0 1 .09 -.283l15.298 -6.909l-2.5 4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_cypress` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_cypress />
      <TablerIcons.brand_cypress class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_cypress(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.48 17.007a9 9 0 1 0 -7.48 3.993c.896 0 1.691 -.573 1.974 -1.423l3.526 -10.577" />
      <path d="M13.5 9l2 6" />
      <path d="M10.764 9.411a3 3 0 1 0 -.023 5.19" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_d3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_d3 />
      <TablerIcons.brand_d3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_d3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4h1.8c3.976 0 7.2 3.582 7.2 8s-3.224 8 -7.2 8h-1.8" />
      <path d="M12 4h5.472c1.948 0 3.528 1.79 3.528 4s-1.58 4 -3.528 4" />
      <path d="M17.472 12h-2.472" />
      <path d="M17.472 12h-2.352" />
      <path d="M17.472 12c1.948 0 3.528 1.79 3.528 4s-1.58 4 -3.528 4h-5.472" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_days_counter` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_days_counter />
      <TablerIcons.brand_days_counter class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_days_counter(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.779 10.007a9 9 0 1 0 -10.77 10.772" />
      <path d="M13 21h8v-7" />
      <path d="M12 8v4l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_dcos` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_dcos />
      <TablerIcons.brand_dcos class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_dcos(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 18l18 -12h-18l9 14l9 -14v10l-18 -10z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_debian` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_debian />
      <TablerIcons.brand_debian class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_debian(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 17c-2.397 -.943 -4 -3.153 -4 -5.635c0 -2.19 1.039 -3.14 1.604 -3.595c2.646 -2.133 6.396 -.27 6.396 3.23c0 2.5 -2.905 2.121 -3.5 1.5c-.595 -.621 -1 -1.5 -.5 -2.5" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_deezer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_deezer />
      <TablerIcons.brand_deezer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_deezer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 16.5h2v.5h-2z" />
      <path d="M8 16.5h2.5v.5h-2.5z" />
      <path d="M16 17h-2.5v-.5h2.5z" />
      <path d="M21.5 17h-2.5v-.5h2.5z" />
      <path d="M21.5 13h-2.5v.5h2.5z" />
      <path d="M21.5 9.5h-2.5v.5h2.5z" />
      <path d="M21.5 6h-2.5v.5h2.5z" />
      <path d="M16 13h-2.5v.5h2.5z" />
      <path d="M8 13.5h2.5v-.5h-2.5z" />
      <path d="M8 9.5h2.5v.5h-2.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_deliveroo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_deliveroo />
      <TablerIcons.brand_deliveroo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_deliveroo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 11l1 -9l5 .5l-1 13.5l-3 6l-12.5 -2.5l-1.5 -6l7 -1.5l-1.5 -7.5l4.5 -1z" />
      <circle cx="15.5" cy="15.5" r="1" fill="currentColor" />
      <circle cx="11.5" cy="14.5" r="1" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_deno` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_deno />
      <TablerIcons.brand_deno class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_deno(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M13.47 20.882l-1.47 -5.882c-2.649 -.088 -5 -1.624 -5 -3.5c0 -1.933 2.239 -3.5 5 -3.5s4 1 5 3c.024 .048 .69 2.215 2 6.5" />
      <path d="M12 11h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_denodo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_denodo />
      <TablerIcons.brand_denodo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_denodo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 11h2v2h-2z" />
      <path d="M3.634 15.634l1.732 -1l1 1.732l-1.732 1z" />
      <path d="M11 19h2v2h-2z" />
      <path d="M18.634 14.634l1.732 1l-1 1.732l-1.732 -1z" />
      <path d="M17.634 7.634l1.732 -1l1 1.732l-1.732 1z" />
      <path d="M11 3h2v2h-2z" />
      <path d="M3.634 8.366l1 -1.732l1.732 1l-1 1.732z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_deviantart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_deviantart />
      <TablerIcons.brand_deviantart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_deviantart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 3v4l-3.857 6h3.857v4h-6.429l-2.571 4h-3v-4l3.857 -6h-3.857v-4h6.429l2.571 -4z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_digg` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_digg />
      <TablerIcons.brand_digg class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_digg(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 15h-3v-4h3" />
      <path d="M15 15h-3v-4h3" />
      <path d="M9 15v-4" />
      <path d="M15 11v7h-3" />
      <path d="M6 7v8" />
      <path d="M21 15h-3v-4h3" />
      <path d="M21 11v7h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_dingtalk` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_dingtalk />
      <TablerIcons.brand_dingtalk class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_dingtalk(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 1 -18 0a9 9 0 0 1 18 0z" />
      <path d="M8 7.5l7.02 2.632a1 1 0 0 1 .567 1.33l-1.087 2.538h1.5l-5 4l1 -4c-3.1 .03 -3.114 -3.139 -4 -6.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_discord_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_discord_filled />
      <TablerIcons.brand_discord_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_discord_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.983 3l.123 .006c2.014 .214 3.527 .672 4.966 1.673a1 1 0 0 1 .371 .488c1.876 5.315 2.373 9.987 1.451 12.28c-1.003 2.005 -2.606 3.553 -4.394 3.553c-.732 0 -1.693 -.968 -2.328 -2.045a21.512 21.512 0 0 0 2.103 -.493a1 1 0 1 0 -.55 -1.924c-3.32 .95 -6.13 .95 -9.45 0a1 1 0 0 0 -.55 1.924c.717 .204 1.416 .37 2.103 .494c-.635 1.075 -1.596 2.044 -2.328 2.044c-1.788 0 -3.391 -1.548 -4.428 -3.629c-.888 -2.217 -.39 -6.89 1.485 -12.204a1 1 0 0 1 .371 -.488c1.439 -1.001 2.952 -1.459 4.966 -1.673a1 1 0 0 1 .935 .435l.063 .107l.651 1.285l.137 -.016a12.97 12.97 0 0 1 2.643 0l.134 .016l.65 -1.284a1 1 0 0 1 .754 -.54l.122 -.009zm-5.983 7a2 2 0 0 0 -1.977 1.697l-.018 .154l-.005 .149l.005 .15a2 2 0 1 0 1.995 -2.15zm6 0a2 2 0 0 0 -1.977 1.697l-.018 .154l-.005 .149l.005 .15a2 2 0 1 0 1.995 -2.15z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `brand_discord` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_discord />
      <TablerIcons.brand_discord class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_discord(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 12a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M14 12a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M15.5 17c0 1 1.5 3 2 3c1.5 0 2.833 -1.667 3.5 -3c.667 -1.667 .5 -5.833 -1.5 -11.5c-1.457 -1.015 -3 -1.34 -4.5 -1.5l-.972 1.923a11.913 11.913 0 0 0 -4.053 0l-.975 -1.923c-1.5 .16 -3.043 .485 -4.5 1.5c-2 5.667 -2.167 9.833 -1.5 11.5c.667 1.333 2 3 3.5 3c.5 0 2 -2 2 -3" />
      <path d="M7 16.5c3.5 1 6.5 1 10 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_disney` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_disney />
      <TablerIcons.brand_disney class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_disney(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.22 5.838c-1.307 -.15 -1.22 -.578 -1.22 -.794c0 -.216 .424 -1.044 4.34 -1.044c4.694 0 14.66 3.645 14.66 10.042s-8.71 4.931 -10.435 4.52c-1.724 -.412 -5.565 -2.256 -5.565 -4.174c0 -1.395 3.08 -2.388 6.715 -2.388c3.634 0 5.285 1.041 5.285 2c0 .5 -.074 1.229 -1 1.5" />
      <path d="M10.02 8a505.153 505.153 0 0 0 0 13" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_disqus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_disqus />
      <TablerIcons.brand_disqus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_disqus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.847 21c-2.259 0 -4.323 -.667 -5.919 -2h-3.928l1.708 -3.266c-.545 -1.174 -.759 -2.446 -.758 -3.734c0 -4.97 3.84 -9 8.898 -9c5.052 0 9.152 4.03 9.152 9c0 4.972 -4.098 9 -9.153 9z" />
      <path d="M11.485 15h-1.485v-6h1.485c2.112 0 3.515 .823 3.515 2.981v.035c0 2.18 -1.403 2.984 -3.515 2.984z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_django` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_django />
      <TablerIcons.brand_django class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_django(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M12 7v8.5l-2.015 .201a2.715 2.715 0 1 1 0 -5.402l2.015 .201" />
      <path d="M16 7v.01" />
      <path d="M16 10v5.586c0 .905 -.36 1.774 -1 2.414" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_docker` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_docker />
      <TablerIcons.brand_docker class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_docker(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12.54c-1.804 -.345 -2.701 -1.08 -3.523 -2.94c-.487 .696 -1.102 1.568 -.92 2.4c.028 .238 -.32 1 -.557 1h-14c0 5.208 3.164 7 6.196 7c4.124 .022 7.828 -1.376 9.854 -5c1.146 -.101 2.296 -1.505 2.95 -2.46z" />
      <path d="M5 10h3v3h-3z" />
      <path d="M8 10h3v3h-3z" />
      <path d="M11 10h3v3h-3z" />
      <path d="M8 7h3v3h-3z" />
      <path d="M11 7h3v3h-3z" />
      <path d="M11 4h3v3h-3z" />
      <path d="M4.571 18c1.5 0 2.047 -.074 2.958 -.78" />
      <path d="M10 16l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_doctrine` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_doctrine />
      <TablerIcons.brand_doctrine class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_doctrine(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 14m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M9 14h6" />
      <path d="M12 11l3 3l-3 3" />
      <path d="M10 3l6.9 6" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_dolby_digital` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_dolby_digital />
      <TablerIcons.brand_dolby_digital class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_dolby_digital(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 6v12h-.89c-3.34 0 -6.047 -2.686 -6.047 -6s2.707 -6 6.046 -6h.891z" />
      <path d="M3.063 6v12h.891c3.34 0 6.046 -2.686 6.046 -6s-2.707 -6 -6.046 -6h-.89z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_douban` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_douban />
      <TablerIcons.brand_douban class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_douban(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h16" />
      <path d="M5 4h14" />
      <path d="M8 8h8a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-2a2 2 0 0 1 2 -2z" />
      <path d="M16 14l-2 6" />
      <path d="M8 17l1 3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_dribbble_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_dribbble_filled />
      <TablerIcons.brand_dribbble_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_dribbble_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.384 14.38a22.877 22.877 0 0 1 1.056 4.863l.064 .644l.126 1.431a10 10 0 0 1 -9.15 -.98l2.08 -2.087l.246 -.24c1.793 -1.728 3.41 -2.875 5.387 -3.566l.191 -.065zm6.09 -.783l.414 .003l.981 .014a9.997 9.997 0 0 1 -4.319 6.704l-.054 -.605c-.18 -2.057 -.55 -3.958 -1.163 -5.814c1.044 -.182 2.203 -.278 3.529 -.298l.611 -.004zm-7.869 -3.181a24.91 24.91 0 0 1 1.052 2.098c-2.276 .77 -4.142 2.053 -6.144 3.967l-.355 .344l-2.236 2.24a10 10 0 0 1 -2.917 -6.741l-.005 -.324l.004 -.25h1.096l.467 -.002c3.547 -.026 6.356 -.367 8.938 -1.295l.1 -.037zm9.388 1.202l-1.515 -.02c-1.86 -.003 -3.45 .124 -4.865 .402a26.112 26.112 0 0 0 -1.163 -2.38c1.393 -.695 2.757 -1.597 4.179 -2.75l.428 -.354l.816 -.682a10 10 0 0 1 2.098 5.409l.022 .375zm-14.663 -8.46l1.266 1.522c1.145 1.398 2.121 2.713 2.949 3.985c-2.26 .766 -4.739 1.052 -7.883 1.081l-.562 .004h-.844a10 10 0 0 1 5.074 -6.593zm9.67 .182c.53 .306 1.026 .657 1.483 1.046l-1.025 .857c-1.379 1.128 -2.688 1.993 -4.034 2.649c-.89 -1.398 -1.943 -2.836 -3.182 -4.358l-.474 -.574l-.485 -.584a10 10 0 0 1 7.717 .964z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `brand_dribbble` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_dribbble />
      <TablerIcons.brand_dribbble class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_dribbble(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 3.6c5 6 7 10.5 7.5 16.2" />
      <path d="M6.4 19c3.5 -3.5 6 -6.5 14.5 -6.4" />
      <path d="M3.1 10.75c5 0 9.814 -.38 15.314 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_drops` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_drops />
      <TablerIcons.brand_drops class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_drops(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.637 7.416a7.907 7.907 0 0 1 1.76 8.666a8 8 0 0 1 -7.397 4.918a8 8 0 0 1 -7.396 -4.918a7.907 7.907 0 0 1 1.759 -8.666l5.637 -5.416l5.637 5.416z" />
      <path d="M14.466 10.923a3.595 3.595 0 0 1 .77 3.877a3.5 3.5 0 0 1 -3.236 2.2a3.5 3.5 0 0 1 -3.236 -2.2a3.595 3.595 0 0 1 .77 -3.877l2.466 -2.423l2.466 2.423z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_drupal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_drupal />
      <TablerIcons.brand_drupal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_drupal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 2c0 4.308 -7 6 -7 12a7 7 0 0 0 14 0c0 -6 -7 -7.697 -7 -12z" />
      <path d="M12 11.33a65.753 65.753 0 0 1 -2.012 2.023c-1 .957 -1.988 1.967 -1.988 3.647c0 2.17 1.79 4 4 4s4 -1.827 4 -4c0 -1.676 -.989 -2.685 -1.983 -3.642c-.42 -.404 -2.259 -2.357 -5.517 -5.858l3.5 3.83z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_edge` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_edge />
      <TablerIcons.brand_edge class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_edge(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.978 11.372a9 9 0 1 0 -1.593 5.773" />
      <path d="M20.978 11.372c.21 2.993 -5.034 2.413 -6.913 1.486c1.392 -1.6 .402 -4.038 -2.274 -3.851c-1.745 .122 -2.927 1.157 -2.784 3.202c.28 3.99 4.444 6.205 10.36 4.79" />
      <path d="M3.022 12.628c-.283 -4.043 8.717 -7.228 11.248 -2.688" />
      <path d="M12.628 20.978c-2.993 .21 -5.162 -4.725 -3.567 -9.748" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_elastic` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_elastic />
      <TablerIcons.brand_elastic class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_elastic(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 2a5 5 0 0 1 5 5c0 .712 -.232 1.387 -.5 2c1.894 .042 3.5 1.595 3.5 3.5c0 1.869 -1.656 3.4 -3.5 3.5c.333 .625 .5 1.125 .5 1.5a2.5 2.5 0 0 1 -2.5 2.5c-.787 0 -1.542 -.432 -2 -1c-.786 1.73 -2.476 3 -4.5 3a5 5 0 0 1 -4.583 -7a3.5 3.5 0 0 1 -.11 -6.992l.195 0a2.5 2.5 0 0 1 2 -4c.787 0 1.542 .432 2 1c.786 -1.73 2.476 -3 4.5 -3z" />
      <path d="M8.5 9l-3 -1" />
      <path d="M9.5 5l-1 4l1 2l5 2l4 -4" />
      <path d="M18.499 16l-3 -.5l-1 -2.5" />
      <path d="M14.5 19l1 -3.5" />
      <path d="M5.417 15l4.083 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_electronic_arts` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_electronic_arts />
      <TablerIcons.brand_electronic_arts class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_electronic_arts(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M17.5 15l-3 -6l-3 6h-5l1.5 -3" />
      <path d="M17 14h-2" />
      <path d="M6.5 12h3.5" />
      <path d="M8 9h3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_ember` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_ember />
      <TablerIcons.brand_ember class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_ember(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12.958c8.466 1.647 11.112 -1.196 12.17 -2.294c2.116 -2.196 0 -6.589 -2.646 -5.49c-2.644 1.096 -6.35 7.686 -3.174 12.078c2.116 2.928 6 2.178 11.65 -2.252" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_envato` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_envato />
      <TablerIcons.brand_envato class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_envato(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.711 17.875c-.534 -1.339 -1.35 -4.178 .129 -6.47c1.415 -2.193 3.769 -3.608 5.099 -4.278l-5.229 10.748z" />
      <path d="M19.715 12.508c-.54 3.409 -2.094 6.156 -4.155 7.348c-4.069 2.353 -8.144 .45 -9.297 -.188c.877 -1.436 4.433 -7.22 6.882 -10.591c2.714 -3.737 5.864 -5.978 6.565 -6.077c0 .201 .03 .55 .071 1.03c.144 1.709 .443 5.264 -.066 8.478z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_etsy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_etsy />
      <TablerIcons.brand_etsy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_etsy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 12h-5" />
      <path d="M3 3m0 5a5 5 0 0 1 5 -5h8a5 5 0 0 1 5 5v8a5 5 0 0 1 -5 5h-8a5 5 0 0 1 -5 -5z" />
      <path d="M15 16h-5a1 1 0 0 1 -1 -1v-6a1 1 0 0 1 1 -1h5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_evernote` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_evernote />
      <TablerIcons.brand_evernote class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_evernote(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8h5v-5" />
      <path d="M17.9 19c.6 -2.5 1.1 -5.471 1.1 -9c0 -4.5 -2 -5 -3 -5c-1.906 0 -3 -.5 -3.5 -1c-.354 -.354 -.5 -1 -1.5 -1h-2l-5 5c0 6 2.5 8 5 8c1 0 1.5 -.5 2 -1.5s1.414 -.326 2.5 0c1.044 .313 2.01 .255 2.5 .5c1 .5 2 1.5 2 3c0 .5 0 3 -3 3s-3 -3 -1 -3" />
      <path d="M15 10h1" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_facebook_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_facebook_filled />
      <TablerIcons.brand_facebook_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_facebook_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 2a1 1 0 0 1 .993 .883l.007 .117v4a1 1 0 0 1 -.883 .993l-.117 .007h-3v1h3a1 1 0 0 1 .991 1.131l-.02 .112l-1 4a1 1 0 0 1 -.858 .75l-.113 .007h-2v6a1 1 0 0 1 -.883 .993l-.117 .007h-4a1 1 0 0 1 -.993 -.883l-.007 -.117v-6h-2a1 1 0 0 1 -.993 -.883l-.007 -.117v-4a1 1 0 0 1 .883 -.993l.117 -.007h2v-1a6 6 0 0 1 5.775 -5.996l.225 -.004h3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `brand_facebook` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_facebook />
      <TablerIcons.brand_facebook class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_facebook(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 10v4h3v7h4v-7h3l1 -4h-4v-2a1 1 0 0 1 1 -1h3v-4h-3a5 5 0 0 0 -5 5v2h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_feedly` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_feedly />
      <TablerIcons.brand_feedly class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_feedly(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.833 12.278l4.445 -4.445" />
      <path d="M10.055 14.5l2.223 -2.222" />
      <path d="M12.278 16.722l.555 -.555" />
      <path d="M19.828 14.828a4 4 0 0 0 0 -5.656l-5 -5a4 4 0 0 0 -5.656 0l-5 5a4 4 0 0 0 0 5.656l6.171 6.172h3.314l6.171 -6.172z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_figma` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_figma />
      <TablerIcons.brand_figma class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_figma(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M6 3m0 3a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v0a3 3 0 0 1 -3 3h-6a3 3 0 0 1 -3 -3z" />
      <path d="M9 9a3 3 0 0 0 0 6h3m-3 0a3 3 0 1 0 3 3v-15" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_filezilla` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_filezilla />
      <TablerIcons.brand_filezilla class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_filezilla(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 15.824a4.062 4.062 0 0 1 -2.25 .033c-.738 -.201 -2.018 -.08 -2.75 .143l4.583 -5h-6.583" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M8 15l2 -8h5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_finder` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_finder />
      <TablerIcons.brand_finder class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_finder(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4m0 1a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1z" />
      <path d="M7 8v1" />
      <path d="M17 8v1" />
      <path d="M12.5 4c-.654 1.486 -1.26 3.443 -1.5 9h2.5c-.19 2.867 .094 5.024 .5 7" />
      <path d="M7 15.5c3.667 2 6.333 2 10 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_firebase` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_firebase />
      <TablerIcons.brand_firebase class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_firebase(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.53 17.05l6.15 -11.72h-.02c.38 -.74 1.28 -1.02 2.01 -.63c.26 .14 .48 .36 .62 .62l1.06 2.01" />
      <path d="M15.47 6.45c.58 -.59 1.53 -.59 2.11 -.01c.22 .22 .36 .5 .41 .81l1.5 9.11c.1 .62 -.2 1.24 -.76 1.54l-6.07 2.9c-.46 .25 -1.01 .26 -1.46 0l-6.02 -2.92c-.55 -.31 -.85 -.92 -.75 -1.54l1.96 -12.04c.12 -.82 .89 -1.38 1.7 -1.25c.46 .07 .87 .36 1.09 .77l1.24 1.76" />
      <path d="M4.57 17.18l10.93 -10.68" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_firefox` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_firefox />
      <TablerIcons.brand_firefox class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_firefox(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.028 7.82a9 9 0 1 0 12.823 -3.4c-1.636 -1.02 -3.064 -1.02 -4.851 -1.02h-1.647" />
      <path d="M4.914 9.485c-1.756 -1.569 -.805 -5.38 .109 -6.17c.086 .896 .585 1.208 1.111 1.685c.88 -.275 1.313 -.282 1.867 0c.82 -.91 1.694 -2.354 2.628 -2.093c-1.082 1.741 -.07 3.733 1.371 4.173c-.17 .975 -1.484 1.913 -2.76 2.686c-1.296 .938 -.722 1.85 0 2.234c.949 .506 3.611 -1 4.545 .354c-1.698 .102 -1.536 3.107 -3.983 2.727c2.523 .957 4.345 .462 5.458 -.34c1.965 -1.52 2.879 -3.542 2.879 -5.557c-.014 -1.398 .194 -2.695 -1.26 -4.75" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_fiverr` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_fiverr />
      <TablerIcons.brand_fiverr class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_fiverr(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 3h-2a6 6 0 0 0 -6 6h-3v4h3v8h4v-7h4v7h4v-11h-8v-1.033a1.967 1.967 0 0 1 2 -1.967h2v-4z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_flickr` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_flickr />
      <TablerIcons.brand_flickr class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_flickr(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_flightradar24` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_flightradar24 />
      <TablerIcons.brand_flightradar24 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_flightradar24(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M8.5 20l3.5 -8l-6.5 6" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_flipboard` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_flipboard />
      <TablerIcons.brand_flipboard class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_flipboard(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.973 3h16.054c.537 0 .973 .436 .973 .973v4.052a.973 .973 0 0 1 -.973 .973h-5.025v4.831c0 .648 -.525 1.173 -1.173 1.173h-4.829v5.025a.973 .973 0 0 1 -.974 .973h-4.053a.973 .973 0 0 1 -.973 -.973v-16.054c0 -.537 .436 -.973 .973 -.973z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_flutter` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_flutter />
      <TablerIcons.brand_flutter class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_flutter(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 14l-3 -3l8 -8h6z" />
      <path d="M14 21l-5 -5l5 -5h5l-5 5l5 5z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_fortnite` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_fortnite />
      <TablerIcons.brand_fortnite class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_fortnite(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 3h7.5l-.5 4h-3v3h3v3.5h-3v6.5l-4 1z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_foursquare` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_foursquare />
      <TablerIcons.brand_foursquare class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_foursquare(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h10c.644 0 1.11 .696 .978 1.33l-1.984 9.859a1.014 1.014 0 0 1 -1 .811h-2.254c-.308 0 -.6 .141 -.793 .382l-4.144 5.25c-.599 .752 -1.809 .331 -1.809 -.632v-16c0 -.564 .44 -1 1 -1z" />
      <path d="M12 9l5 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_framer_motion` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_framer_motion />
      <TablerIcons.brand_framer_motion class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_framer_motion(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12l-8 -8v16l16 -16v16l-4 -4" />
      <path d="M20 12l-8 8l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_framer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_framer />
      <TablerIcons.brand_framer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_framer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 15h12l-12 -12h12v6h-12v6l6 6v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_funimation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_funimation />
      <TablerIcons.brand_funimation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_funimation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M8 13h8a4 4 0 1 1 -8 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_gatsby` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_gatsby />
      <TablerIcons.brand_gatsby class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_gatsby(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.296 14.297l6.407 6.407a9.018 9.018 0 0 1 -6.325 -6.116l-.082 -.291z" />
      <path d="M16 13h5c-.41 3.603 -3.007 6.59 -6.386 7.614l-11.228 -11.229a9 9 0 0 1 15.66 -2.985" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_git` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_git />
      <TablerIcons.brand_git class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_git(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 8m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 16m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 15v-6" />
      <path d="M15 11l-2 -2" />
      <path d="M11 7l-1.9 -1.9" />
      <path d="M13.446 2.6l7.955 7.954a2.045 2.045 0 0 1 0 2.892l-7.955 7.955a2.045 2.045 0 0 1 -2.892 0l-7.955 -7.955a2.045 2.045 0 0 1 0 -2.892l7.955 -7.955a2.045 2.045 0 0 1 2.892 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_github_copilot` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_github_copilot />
      <TablerIcons.brand_github_copilot class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_github_copilot(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 18v-5.5c0 -.667 .167 -1.333 .5 -2" />
      <path d="M12 7.5c0 -1 -.01 -4.07 -4 -3.5c-3.5 .5 -4 2.5 -4 3.5c0 1.5 0 4 3 4c4 0 5 -2.5 5 -4z" />
      <path d="M4 12c-1.333 .667 -2 1.333 -2 2c0 1 0 3 1.5 4c3 2 6.5 3 8.5 3s5.499 -1 8.5 -3c1.5 -1 1.5 -3 1.5 -4c0 -.667 -.667 -1.333 -2 -2" />
      <path d="M20 18v-5.5c0 -.667 -.167 -1.333 -.5 -2" />
      <path d="M12 7.5l0 -.297l.01 -.269l.027 -.298l.013 -.105l.033 -.215c.014 -.073 .029 -.146 .046 -.22l.06 -.223c.336 -1.118 1.262 -2.237 3.808 -1.873c2.838 .405 3.703 1.797 3.93 2.842l.036 .204c0 .033 .01 .066 .013 .098l.016 .185l0 .171l0 .49l-.015 .394l-.02 .271c-.122 1.366 -.655 2.845 -2.962 2.845c-3.256 0 -4.524 -1.656 -4.883 -3.081l-.053 -.242a3.865 3.865 0 0 1 -.036 -.235l-.021 -.227a3.518 3.518 0 0 1 -.007 -.215z" />
      <path d="M10 15v2" />
      <path d="M14 15v2" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_github_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_github_filled />
      <TablerIcons.brand_github_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_github_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M5.315 2.1c.791 -.113 1.9 .145 3.333 .966l.272 .161l.16 .1l.397 -.083a13.3 13.3 0 0 1 4.59 -.08l.456 .08l.396 .083l.161 -.1c1.385 -.84 2.487 -1.17 3.322 -1.148l.164 .008l.147 .017l.076 .014l.05 .011l.144 .047a1 1 0 0 1 .53 .514a5.2 5.2 0 0 1 .397 2.91l-.047 .267l-.046 .196l.123 .163c.574 .795 .93 1.728 1.03 2.707l.023 .295l.007 .272c0 3.855 -1.659 5.883 -4.644 6.68l-.245 .061l-.132 .029l.014 .161l.008 .157l.004 .365l-.002 .213l-.003 3.834a1 1 0 0 1 -.883 .993l-.117 .007h-6a1 1 0 0 1 -.993 -.883l-.007 -.117v-.734c-1.818 .26 -3.03 -.424 -4.11 -1.878l-.535 -.766c-.28 -.396 -.455 -.579 -.589 -.644l-.048 -.019a1 1 0 0 1 .564 -1.918c.642 .188 1.074 .568 1.57 1.239l.538 .769c.76 1.079 1.36 1.459 2.609 1.191l.001 -.678l-.018 -.168a5.03 5.03 0 0 1 -.021 -.824l.017 -.185l.019 -.12l-.108 -.024c-2.976 -.71 -4.703 -2.573 -4.875 -6.139l-.01 -.31l-.004 -.292a5.6 5.6 0 0 1 .908 -3.051l.152 -.222l.122 -.163l-.045 -.196a5.2 5.2 0 0 1 .145 -2.642l.1 -.282l.106 -.253a1 1 0 0 1 .529 -.514l.144 -.047l.154 -.03z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `brand_github` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_github />
      <TablerIcons.brand_github class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_github(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_gitlab` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_gitlab />
      <TablerIcons.brand_gitlab class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_gitlab(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 14l-9 7l-9 -7l3 -11l3 7h6l3 -7z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_gmail` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_gmail />
      <TablerIcons.brand_gmail class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_gmail(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 20h3a1 1 0 0 0 1 -1v-14a1 1 0 0 0 -1 -1h-3v16z" />
      <path d="M5 20h3v-16h-3a1 1 0 0 0 -1 1v14a1 1 0 0 0 1 1z" />
      <path d="M16 4l-4 4l-4 -4" />
      <path d="M4 6.5l8 7.5l8 -7.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_golang` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_golang />
      <TablerIcons.brand_golang class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_golang(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.695 14.305c1.061 1.06 2.953 .888 4.226 -.384c1.272 -1.273 1.444 -3.165 .384 -4.226c-1.061 -1.06 -2.953 -.888 -4.226 .384c-1.272 1.273 -1.444 3.165 -.384 4.226z" />
      <path d="M12.68 9.233c-1.084 -.497 -2.545 -.191 -3.591 .846c-1.284 1.273 -1.457 3.165 -.388 4.226c1.07 1.06 2.978 .888 4.261 -.384a3.669 3.669 0 0 0 1.038 -1.921h-2.427" />
      <path d="M5.5 15h-1.5" />
      <path d="M6 9h-2" />
      <path d="M5 12h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_google_analytics` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_google_analytics />
      <TablerIcons.brand_google_analytics class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_google_analytics(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 9m0 1.105a1.105 1.105 0 0 1 1.105 -1.105h1.79a1.105 1.105 0 0 1 1.105 1.105v9.79a1.105 1.105 0 0 1 -1.105 1.105h-1.79a1.105 1.105 0 0 1 -1.105 -1.105z" />
      <path d="M17 3m0 1.105a1.105 1.105 0 0 1 1.105 -1.105h1.79a1.105 1.105 0 0 1 1.105 1.105v15.79a1.105 1.105 0 0 1 -1.105 1.105h-1.79a1.105 1.105 0 0 1 -1.105 -1.105z" />
      <path d="M5 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_google_big_query` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_google_big_query />
      <TablerIcons.brand_google_big_query class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_google_big_query(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.73 19.875a2.225 2.225 0 0 1 -1.948 1.125h-7.283a2.222 2.222 0 0 1 -1.947 -1.158l-4.272 -6.75a2.269 2.269 0 0 1 0 -2.184l4.272 -6.75a2.225 2.225 0 0 1 1.946 -1.158h7.285c.809 0 1.554 .443 1.947 1.158l3.98 6.75a2.33 2.33 0 0 1 0 2.25l-3.98 6.75v-.033z" />
      <path d="M11.5 11.5m-3.5 0a3.5 3.5 0 1 0 7 0a3.5 3.5 0 1 0 -7 0" />
      <path d="M14 14l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_google_drive` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_google_drive />
      <TablerIcons.brand_google_drive class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_google_drive(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 10l-6 10l-3 -5l6 -10z" />
      <path d="M9 15h12l-3 5h-12" />
      <path d="M15 15l-6 -10h6l6 10z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_google_fit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_google_fit />
      <TablerIcons.brand_google_fit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_google_fit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9.314l-2.343 -2.344a3.314 3.314 0 0 0 -4.686 4.686l2.343 2.344l4.686 4.686l7.03 -7.03a3.314 3.314 0 0 0 -4.687 -4.685l-7.03 7.029" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_google_home` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_google_home />
      <TablerIcons.brand_google_home class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_google_home(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.072 21h-14.144a1.928 1.928 0 0 1 -1.928 -1.928v-6.857c0 -.512 .203 -1 .566 -1.365l7.07 -7.063a1.928 1.928 0 0 1 2.727 0l7.071 7.063c.363 .362 .566 .853 .566 1.365v6.857a1.928 1.928 0 0 1 -1.928 1.928z" />
      <path d="M7 13v4h10v-4l-5 -5" />
      <path d="M14.8 5.2l-11.8 11.8" />
      <path d="M7 17v4" />
      <path d="M17 17v4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_google_maps` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_google_maps />
      <TablerIcons.brand_google_maps class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_google_maps(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9.5m-2.5 0a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0 -5 0" />
      <path d="M6.428 12.494l7.314 -9.252" />
      <path d="M10.002 7.935l-2.937 -2.545" />
      <path d="M17.693 6.593l-8.336 9.979" />
      <path d="M17.591 6.376c.472 .907 .715 1.914 .709 2.935a7.263 7.263 0 0 1 -.72 3.18a19.085 19.085 0 0 1 -2.089 3c-.784 .933 -1.49 1.93 -2.11 2.98c-.314 .62 -.568 1.27 -.757 1.938c-.121 .36 -.277 .591 -.622 .591c-.315 0 -.463 -.136 -.626 -.593a10.595 10.595 0 0 0 -.779 -1.978a18.18 18.18 0 0 0 -1.423 -2.091c-.877 -1.184 -2.179 -2.535 -2.853 -4.071a7.077 7.077 0 0 1 -.621 -2.967a6.226 6.226 0 0 1 1.476 -4.055a6.25 6.25 0 0 1 4.811 -2.245a6.462 6.462 0 0 1 1.918 .284a6.255 6.255 0 0 1 3.686 3.092z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_google_one` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_google_one />
      <TablerIcons.brand_google_one class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_google_one(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 5v13.982a2 2 0 0 0 4 0v-13.982a2 2 0 1 0 -4 0z" />
      <path d="M6.63 8.407a2.125 2.125 0 0 0 -.074 2.944c.77 .834 2.051 .869 2.862 .077l4.95 -4.834c.812 -.792 .846 -2.11 .076 -2.945a1.984 1.984 0 0 0 -2.861 -.077l-4.953 4.835z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_google_photos` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_google_photos />
      <TablerIcons.brand_google_photos class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_google_photos(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.5 7c2.485 0 4.5 1.974 4.5 4.409v.591h-8.397a.61 .61 0 0 1 -.426 -.173a.585 .585 0 0 1 -.177 -.418c0 -2.435 2.015 -4.409 4.5 -4.409z" />
      <path d="M16.5 17c-2.485 0 -4.5 -1.974 -4.5 -4.409v-.591h8.397c.333 0 .603 .265 .603 .591c0 2.435 -2.015 4.409 -4.5 4.409z" />
      <path d="M7 16.5c0 -2.485 1.972 -4.5 4.405 -4.5h.595v8.392a.61 .61 0 0 1 -.173 .431a.584 .584 0 0 1 -.422 .177c-2.433 0 -4.405 -2.015 -4.405 -4.5z" />
      <path d="M17 7.5c0 2.485 -1.972 4.5 -4.405 4.5h-.595v-8.397a.61 .61 0 0 1 .175 -.428a.584 .584 0 0 1 .42 -.175c2.433 0 4.405 2.015 4.405 4.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_google_play` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_google_play />
      <TablerIcons.brand_google_play class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_google_play(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 3.71v16.58a.7 .7 0 0 0 1.05 .606l14.622 -8.42a.55 .55 0 0 0 0 -.953l-14.622 -8.419a.7 .7 0 0 0 -1.05 .607z" />
      <path d="M15 9l-10.5 11.5" />
      <path d="M4.5 3.5l10.5 11.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_google_podcasts` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_google_podcasts />
      <TablerIcons.brand_google_podcasts class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_google_podcasts(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3v2" />
      <path d="M12 19v2" />
      <path d="M12 8v8" />
      <path d="M8 17v2" />
      <path d="M4 11v2" />
      <path d="M20 11v2" />
      <path d="M8 5v8" />
      <path d="M16 7v-2" />
      <path d="M16 19v-8" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_google` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_google />
      <TablerIcons.brand_google class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_google(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.788 5.108a9 9 0 1 0 3.212 6.892h-8" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_grammarly` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_grammarly />
      <TablerIcons.brand_grammarly class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_grammarly(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M15.697 9.434a4.5 4.5 0 1 0 .217 4.788" />
      <path d="M13.5 14h2.5v2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_graphql` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_graphql />
      <TablerIcons.brand_graphql class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_graphql(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.308 7.265l5.385 -3.029" />
      <path d="M13.308 4.235l5.384 3.03" />
      <path d="M20 9.5v5" />
      <path d="M18.693 16.736l-5.385 3.029" />
      <path d="M10.692 19.765l-5.384 -3.03" />
      <path d="M4 14.5v-5" />
      <path d="M12.772 4.786l6.121 10.202" />
      <path d="M18.5 16h-13" />
      <path d="M5.107 14.988l6.122 -10.201" />
      <path d="M12 3.5m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M12 20.5m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M4 8m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M4 16m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M20 16m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M20 8m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_gravatar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_gravatar />
      <TablerIcons.brand_gravatar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_gravatar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.64 5.632a9 9 0 1 0 6.36 -2.632v7.714" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_grindr` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_grindr />
      <TablerIcons.brand_grindr class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_grindr(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 13.282c0 .492 .784 1.718 2.102 1.718c1.318 0 2.898 -.966 2.898 -2.062c0 -.817 -.932 -.938 -1.409 -.938c-.228 0 -3.591 .111 -3.591 1.282z" />
      <path d="M12 21c-2.984 0 -6.471 -2.721 -6.63 -2.982c-2.13 -3.49 -2.37 -13.703 -2.37 -13.703l1.446 -1.315c2.499 .39 5.023 .617 7.554 .68a58.626 58.626 0 0 0 7.554 -.68l1.446 1.315s-.24 10.213 -2.37 13.704c-.16 .26 -3.646 2.981 -6.63 2.981z" />
      <path d="M11 13.282c0 .492 -.784 1.718 -2.102 1.718c-1.318 0 -2.898 -.966 -2.898 -2.062c0 -.817 .932 -.938 1.409 -.938c.228 0 3.591 .111 3.591 1.282z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_guardian` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_guardian />
      <TablerIcons.brand_guardian class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_guardian(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 13h6" />
      <path d="M4 12c0 -9.296 9.5 -9 9.5 -9c-2.808 0 -4.5 4.373 -4.5 9s1.763 8.976 4.572 8.976c0 .023 -9.572 1.092 -9.572 -8.976z" />
      <path d="M14.5 3c1.416 0 3.853 1.16 4.5 2v3.5" />
      <path d="M15 13v8s2.77 -.37 4 -2v-6" />
      <path d="M13.5 21h1.5" />
      <path d="M13.5 3h1" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_gumroad` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_gumroad />
      <TablerIcons.brand_gumroad class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_gumroad(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 1 -18 0a9 9 0 0 1 18 0z" />
      <path d="M13.5 13h2.5v3" />
      <path d="M15.024 9.382a4 4 0 1 0 -3.024 6.618c1.862 0 2.554 -1.278 3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_hbo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_hbo />
      <TablerIcons.brand_hbo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_hbo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 16v-8" />
      <path d="M6 8v8" />
      <path d="M2 12h4" />
      <path d="M9 16h2a2 2 0 1 0 0 -4h-2h2a2 2 0 1 0 0 -4h-2v8z" />
      <path d="M19 8a4 4 0 1 1 0 8a4 4 0 0 1 0 -8z" />
      <path d="M19 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_headlessui` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_headlessui />
      <TablerIcons.brand_headlessui class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_headlessui(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.744 4.325l7.82 -1.267a4.456 4.456 0 0 1 5.111 3.686l1.267 7.82a4.456 4.456 0 0 1 -3.686 5.111l-7.82 1.267a4.456 4.456 0 0 1 -5.111 -3.686l-1.267 -7.82a4.456 4.456 0 0 1 3.686 -5.111z" />
      <path d="M7.252 7.704l7.897 -1.28a1 1 0 0 1 1.147 .828l.36 2.223l-9.562 3.51l-.67 -4.134a1 1 0 0 1 .828 -1.147z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_hexo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_hexo />
      <TablerIcons.brand_hexo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_hexo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27c.7 .398 1.13 1.143 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M9 8v8" />
      <path d="M15 8v8" />
      <path d="M9 12h6" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_hipchat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_hipchat />
      <TablerIcons.brand_hipchat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_hipchat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.802 17.292s.077 -.055 .2 -.149c1.843 -1.425 3 -3.49 3 -5.789c0 -4.286 -4.03 -7.764 -9 -7.764c-4.97 0 -9 3.478 -9 7.764c0 4.288 4.03 7.646 9 7.646c.424 0 1.12 -.028 2.088 -.084c1.262 .82 3.104 1.493 4.716 1.493c.499 0 .734 -.41 .414 -.828c-.486 -.596 -1.156 -1.551 -1.416 -2.29z" />
      <path d="M7.5 13.5c2.5 2.5 6.5 2.5 9 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_html5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_html5 />
      <TablerIcons.brand_html5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_html5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 4l-2 14.5l-6 2l-6 -2l-2 -14.5z" />
      <path d="M15.5 8h-7l.5 4h6l-.5 3.5l-2.5 .75l-2.5 -.75l-.1 -.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_inertia` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_inertia />
      <TablerIcons.brand_inertia class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_inertia(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 8l4 4l-4 4h4.5l4 -4l-4 -4z" />
      <path d="M3.5 8l4 4l-4 4h4.5l4 -4l-4 -4z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_instagram` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_instagram />
      <TablerIcons.brand_instagram class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_instagram(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 4a4 4 0 0 1 4 -4h8a4 4 0 0 1 4 4v8a4 4 0 0 1 -4 4h-8a4 4 0 0 1 -4 -4z" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M16.5 7.5l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_intercom` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_intercom />
      <TablerIcons.brand_intercom class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_intercom(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M7 8v3" />
      <path d="M10 7v6" />
      <path d="M14 7v6" />
      <path d="M17 8v3" />
      <path d="M7 15c4 2.667 6 2.667 10 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_itch` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_itch />
      <TablerIcons.brand_itch class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_itch(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 7v1c0 1.087 1.078 2 2 2c1.107 0 2 -.91 2 -2c0 1.09 .893 2 2 2s2 -.91 2 -2c0 1.09 .893 2 2 2s2 -.91 2 -2c0 1.09 .893 2 2 2s2 -.91 2 -2c0 1.09 .893 2 2 2c.922 0 2 -.913 2 -2v-1c-.009 -.275 -.538 -.964 -1.588 -2.068a3 3 0 0 0 -2.174 -.932h-12.476a3 3 0 0 0 -2.174 .932c-1.05 1.104 -1.58 1.793 -1.588 2.068z" />
      <path d="M4 10c-.117 6.28 .154 9.765 .814 10.456c1.534 .367 4.355 .535 7.186 .536c2.83 -.001 5.652 -.169 7.186 -.536c.99 -1.037 .898 -9.559 .814 -10.456" />
      <path d="M10 16l2 -2l2 2" />
      <path d="M12 14v4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_javascript` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_javascript />
      <TablerIcons.brand_javascript class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_javascript(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 4l-2 14.5l-6 2l-6 -2l-2 -14.5z" />
      <path d="M7.5 8h3v8l-2 -1" />
      <path d="M16.5 8h-2.5a.5 .5 0 0 0 -.5 .5v3a.5 .5 0 0 0 .5 .5h1.423a.5 .5 0 0 1 .495 .57l-.418 2.93l-2 .5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_juejin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_juejin />
      <TablerIcons.brand_juejin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_juejin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 12l10 7.422l10 -7.422" />
      <path d="M7 9l5 4l5 -4" />
      <path d="M11 6l1 .8l1 -.8l-1 -.8z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_kbin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_kbin />
      <TablerIcons.brand_kbin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_kbin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <g stroke-width="1.838">
        <path d="M10.586 9.506h-2.43c-.434 -.932 -.7 -1.506 -1.596 -1.506l-2.404 .019c-.662 0 -1.353 .592 -1.103 1.487l2.216 9.436c.486 1.743 .811 2.058 1.145 2.058h.64" />
        <path d="M14.275 3h5.645c.84 0 1.24 .714 1.02 1.287l-4.687 15.109c-.42 1.133 -1.159 1.603 -2.354 1.603h-7.485c.39 0 .76 -.618 1.296 -2.061l4.457 -14.49c.326 -.83 .76 -1.448 2.108 -1.448z" />
      </g>
    </svg>
    """
  end

  @doc """
  Renders the `brand_kick` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_kick />
      <TablerIcons.brand_kick class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_kick(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4h5v4h3v-2h2v-2h6v4h-2v2h-2v4h2v2h2v4h-6v-2h-2v-2h-3v4h-5z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_kickstarter` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_kickstarter />
      <TablerIcons.brand_kickstarter class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_kickstarter(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 9l2.975 -4.65c.615 -.9 1.405 -1.35 2.377 -1.35c.79 0 1.474 .286 2.054 .858c.576 .574 .866 1.256 .866 2.054c0 .588 -.153 1.109 -.46 1.559l-2.812 4.029l3.465 4.912c.356 .46 .535 1 .535 1.613a2.92 2.92 0 0 1 -.843 2.098c-.561 .584 -1.242 .877 -2.04 .877c-.876 0 -1.545 -.29 -2 -.87l-4.112 -5.697v3.067c0 .876 -.313 1.69 -.611 2.175c-.543 .883 -1.35 1.325 -2.389 1.325c-.944 0 -1.753 -.327 -2.271 -.974c-.486 -.6 -.729 -1.392 -.729 -2.38v-11.371c0 -.934 .247 -1.706 .74 -2.313c.512 -.641 1.347 -.962 2.26 -.962c.868 0 1.821 .321 2.4 .962c.323 .356 .515 .714 .6 1.08c.052 .224 0 .643 0 1.26v2.698z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_kotlin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_kotlin />
      <TablerIcons.brand_kotlin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_kotlin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 20h-16v-16h16" />
      <path d="M4 20l16 -16" />
      <path d="M4 12l8 -8" />
      <path d="M12 12l8 8" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_laravel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_laravel />
      <TablerIcons.brand_laravel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_laravel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17l8 5l7 -4v-8l-4 -2.5l4 -2.5l4 2.5v4l-11 6.5l-4 -2.5v-7.5l-4 -2.5z" />
      <path d="M11 18v4" />
      <path d="M7 15.5l7 -4" />
      <path d="M14 7.5v4" />
      <path d="M14 11.5l4 2.5" />
      <path d="M11 13v-7.5l-4 -2.5l-4 2.5" />
      <path d="M7 8l4 -2.5" />
      <path d="M18 10l4 -2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_lastfm` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_lastfm />
      <TablerIcons.brand_lastfm class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_lastfm(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 8c-.83 -1 -1.388 -1 -2 -1c-.612 0 -2 .271 -2 2s1.384 2.233 3 3c1.616 .767 2.125 1.812 2 3s-1 2 -3 2s-3 -1 -3.5 -2s-1.585 -4.78 -2.497 -6a5 5 0 1 0 -1 7" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_leetcode` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_leetcode />
      <TablerIcons.brand_leetcode class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_leetcode(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 13h7.5" />
      <path d="M9.424 7.268l4.999 -4.999" />
      <path d="M16.633 16.644l-2.402 2.415a3.189 3.189 0 0 1 -4.524 0l-3.77 -3.787a3.223 3.223 0 0 1 0 -4.544l3.77 -3.787a3.189 3.189 0 0 1 4.524 0l2.302 2.313" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_letterboxd` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_letterboxd />
      <TablerIcons.brand_letterboxd class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_letterboxd(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M8 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M16 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_line` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_line />
      <TablerIcons.brand_line class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_line(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 10.663c0 -4.224 -4.041 -7.663 -9 -7.663s-9 3.439 -9 7.663c0 3.783 3.201 6.958 7.527 7.56c1.053 .239 .932 .644 .696 2.133c-.039 .238 -.184 .932 .777 .512c.96 -.42 5.18 -3.201 7.073 -5.48c1.304 -1.504 1.927 -3.029 1.927 -4.715v-.01z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_linkedin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_linkedin />
      <TablerIcons.brand_linkedin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_linkedin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M8 11l0 5" />
      <path d="M8 8l0 .01" />
      <path d="M12 16l0 -5" />
      <path d="M16 16v-3a2 2 0 0 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_linktree` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_linktree />
      <TablerIcons.brand_linktree class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_linktree(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 3l-7 12h3v5h5v-5h-2l4 -7z" />
      <path d="M15 3l7 12h-3v5h-5v-5h2l-4 -7z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_linqpad` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_linqpad />
      <TablerIcons.brand_linqpad class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_linqpad(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 21h3.5l2.5 -6l2.5 -1l2.5 7h4l1 -4.5l-2 -1l-7 -12l-6 -.5l1.5 4l2.5 .5l1 2.5l-7 8z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_loom` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_loom />
      <TablerIcons.brand_loom class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_loom(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.464 6.518a6 6 0 1 0 -3.023 7.965" />
      <path d="M17.482 17.464a6 6 0 1 0 -7.965 -3.023" />
      <path d="M6.54 17.482a6 6 0 1 0 3.024 -7.965" />
      <path d="M6.518 6.54a6 6 0 1 0 7.965 3.024" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_mailgun` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_mailgun />
      <TablerIcons.brand_mailgun class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_mailgun(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 12a2 2 0 1 0 4 0a9 9 0 1 0 -2.987 6.697" />
      <path d="M12 12m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_mantine` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_mantine />
      <TablerIcons.brand_mantine class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_mantine(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M11 16c1.22 -.912 2 -2.36 2 -4a5.01 5.01 0 0 0 -2 -4" />
      <path d="M14 9h-2" />
      <path d="M14 15h-2" />
      <path d="M10 12h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_mastercard` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_mastercard />
      <TablerIcons.brand_mastercard class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_mastercard(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12 9.765a3 3 0 1 0 0 4.47" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_mastodon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_mastodon />
      <TablerIcons.brand_mastodon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_mastodon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.648 15.254c-1.816 1.763 -6.648 1.626 -6.648 1.626a18.262 18.262 0 0 1 -3.288 -.256c1.127 1.985 4.12 2.81 8.982 2.475c-1.945 2.013 -13.598 5.257 -13.668 -7.636l-.026 -1.154c0 -3.036 .023 -4.115 1.352 -5.633c1.671 -1.91 6.648 -1.666 6.648 -1.666s4.977 -.243 6.648 1.667c1.329 1.518 1.352 2.597 1.352 5.633s-.456 4.074 -1.352 4.944z" />
      <path d="M12 11.204v-2.926c0 -1.258 -.895 -2.278 -2 -2.278s-2 1.02 -2 2.278v4.722m4 -4.722c0 -1.258 .895 -2.278 2 -2.278s2 1.02 2 2.278v4.722" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_matrix` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_matrix />
      <TablerIcons.brand_matrix class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_matrix(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 3h-1v18h1" />
      <path d="M20 21h1v-18h-1" />
      <path d="M7 9v6" />
      <path d="M12 15v-3.5a2.5 2.5 0 1 0 -5 0v.5" />
      <path d="M17 15v-3.5a2.5 2.5 0 1 0 -5 0v.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_mcdonalds` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_mcdonalds />
      <TablerIcons.brand_mcdonalds class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_mcdonalds(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 20c0 -3.952 -.966 -16 -4.038 -16s-3.962 9.087 -3.962 14.756c0 -5.669 -.896 -14.756 -3.962 -14.756c-3.065 0 -4.038 12.048 -4.038 16" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_medium` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_medium />
      <TablerIcons.brand_medium class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_medium(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M8 9h1l3 3l3 -3h1" />
      <path d="M8 15l2 0" />
      <path d="M14 15l2 0" />
      <path d="M9 9l0 6" />
      <path d="M15 9l0 6" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_mercedes` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_mercedes />
      <TablerIcons.brand_mercedes class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_mercedes(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 3v9" />
      <path d="M12 12l7 5" />
      <path d="M12 12l-7 5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_messenger` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_messenger />
      <TablerIcons.brand_messenger class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_messenger(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 20l1.3 -3.9a9 8 0 1 1 3.4 2.9l-4.7 1" />
      <path d="M8 13l3 -2l2 2l3 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_meta` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_meta />
      <TablerIcons.brand_meta class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_meta(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 10.174c1.766 -2.784 3.315 -4.174 4.648 -4.174c2 0 3.263 2.213 4 5.217c.704 2.869 .5 6.783 -2 6.783c-1.114 0 -2.648 -1.565 -4.148 -3.652a27.627 27.627 0 0 1 -2.5 -4.174z" />
      <path d="M12 10.174c-1.766 -2.784 -3.315 -4.174 -4.648 -4.174c-2 0 -3.263 2.213 -4 5.217c-.704 2.869 -.5 6.783 2 6.783c1.114 0 2.648 -1.565 4.148 -3.652c1 -1.391 1.833 -2.783 2.5 -4.174z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_microsoft_teams` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_microsoft_teams />
      <TablerIcons.brand_microsoft_teams class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_microsoft_teams(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7h10v10h-10z" />
      <path d="M6 10h4" />
      <path d="M8 10v4" />
      <path d="M8.104 17c.47 2.274 2.483 4 4.896 4a5 5 0 0 0 5 -5v-7h-5" />
      <path d="M18 18a4 4 0 0 0 4 -4v-5h-4" />
      <path d="M13.003 8.83a3 3 0 1 0 -1.833 -1.833" />
      <path d="M15.83 8.36a2.5 2.5 0 1 0 .594 -4.117" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_minecraft` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_minecraft />
      <TablerIcons.brand_minecraft class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_minecraft(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 16.008v-8.018a1.98 1.98 0 0 0 -1 -1.717l-7 -4.008a2.016 2.016 0 0 0 -2 0l-7 4.008c-.619 .355 -1 1.01 -1 1.718v8.018c0 .709 .381 1.363 1 1.717l7 4.008c.62 .354 1.38 .354 2 0l7 -4.008c.619 -.355 1 -1.01 1 -1.718z" />
      <path d="M12 22v-10" />
      <path d="M12 12l8.73 -5.04" />
      <path d="M3.27 6.96l8.73 5.04" />
      <path d="M12 17l3.003 -1.668m3 -1.667l2.997 -1.665m-9 5l-9 -5" />
      <path d="M15 17l3 -1.67v-3l-3 1.67z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_miniprogram` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_miniprogram />
      <TablerIcons.brand_miniprogram class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_miniprogram(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 1 -18 0a9 9 0 0 1 18 0z" />
      <path d="M8 11.503a2.5 2.5 0 1 0 4 2v-3a2.5 2.5 0 1 1 4 2" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_mixpanel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_mixpanel />
      <TablerIcons.brand_mixpanel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_mixpanel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.5 12m-2.5 0a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0 -5 0" />
      <path d="M20.5 12m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M13 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_monday` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_monday />
      <TablerIcons.brand_monday class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_monday(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.5 15.5m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M9.5 7a1.5 1.5 0 0 1 1.339 2.177l-4.034 7.074c-.264 .447 -.75 .749 -1.305 .749a1.5 1.5 0 0 1 -1.271 -2.297l3.906 -6.827a1.5 1.5 0 0 1 1.365 -.876z" />
      <path d="M16.5 7a1.5 1.5 0 0 1 1.339 2.177l-4.034 7.074c-.264 .447 -.75 .749 -1.305 .749a1.5 1.5 0 0 1 -1.271 -2.297l3.906 -6.827a1.5 1.5 0 0 1 1.365 -.876z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_mongodb` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_mongodb />
      <TablerIcons.brand_mongodb class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_mongodb(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3v19" />
      <path d="M18 11.227c0 3.273 -1.812 4.77 -6 9.273c-4.188 -4.503 -6 -6 -6 -9.273c0 -4.454 3.071 -6.927 6 -9.227c2.929 2.3 6 4.773 6 9.227z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_my_oppo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_my_oppo />
      <TablerIcons.brand_my_oppo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_my_oppo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.316 5h-12.632l-3.418 4.019a1.089 1.089 0 0 0 .019 1.447l9.714 10.534l9.715 -10.49a1.09 1.09 0 0 0 .024 -1.444l-3.422 -4.066z" />
      <path d="M9 11l3 3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_mysql` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_mysql />
      <TablerIcons.brand_mysql class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_mysql(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21c-1.427 -1.026 -3.59 -3.854 -4 -6c-.486 .77 -1.501 2 -2 2c-1.499 -.888 -.574 -3.973 0 -6c-1.596 -1.433 -2.468 -2.458 -2.5 -4c-3.35 -3.44 -.444 -5.27 2.5 -3h1c8.482 .5 6.421 8.07 9 11.5c2.295 .522 3.665 2.254 5 3.5c-2.086 -.2 -2.784 -.344 -3.5 0c.478 1.64 2.123 2.2 3.5 3" />
      <path d="M9 7h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_national_geographic` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_national_geographic />
      <TablerIcons.brand_national_geographic class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_national_geographic(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h10v18h-10z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_nem` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_nem />
      <TablerIcons.brand_nem class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_nem(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.182 2c1.94 .022 3.879 .382 5.818 1.08l.364 .135a23.075 23.075 0 0 1 3.636 1.785c0 5.618 -1.957 10.258 -5.87 13.92c-1.24 1.239 -2.5 2.204 -3.78 2.898l-.35 .182c-1.4 -.703 -2.777 -1.729 -4.13 -3.079c-3.912 -3.663 -5.87 -8.303 -5.87 -13.921c2.545 -1.527 5.09 -2.471 7.636 -2.832l.364 -.048a16.786 16.786 0 0 1 1.818 -.12h.364z" />
      <path d="M2.1 7.07c2.073 6.72 5.373 7.697 9.9 2.93c0 -4 1.357 -6.353 4.07 -7.06l.59 -.11" />
      <path d="M16.35 18.51s2.65 -5.51 -4.35 -8.51" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_netbeans` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_netbeans />
      <TablerIcons.brand_netbeans class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_netbeans(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M15.5 9.43a1 1 0 0 1 .5 .874v3.268a1 1 0 0 1 -.515 .874l-3 1.917a1 1 0 0 1 -.97 0l-3 -1.917a1 1 0 0 1 -.515 -.873v-3.269a1 1 0 0 1 .514 -.874l3 -1.786c.311 -.173 .69 -.173 1 0l3 1.787h-.014z" />
      <path d="M12 21v-9l-7.5 -4.5" />
      <path d="M12 12l7.5 -4.5" />
      <path d="M12 3v4.5" />
      <path d="M19.5 16l-3.5 -2" />
      <path d="M8 14l-3.5 2" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_netease_music` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_netease_music />
      <TablerIcons.brand_netease_music class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_netease_music(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 4c-2.93 1.346 -5 5.046 -5 8.492c0 4.508 4 7.508 8 7.508s8 -3 8 -7c0 -3.513 -3.5 -5.513 -6 -5.513s-5 1.513 -5 4.513c0 2 1.5 3 3 3s3 -1 3 -3c0 -3.513 -2 -4.508 -2 -6.515c0 -3.504 3.5 -2.603 4 -1.502" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_netflix` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_netflix />
      <TablerIcons.brand_netflix class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_netflix(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 3l10 18h-4l-10 -18z" />
      <path d="M5 3v18h4v-10.5" />
      <path d="M19 21v-18h-4v10.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_nexo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_nexo />
      <TablerIcons.brand_nexo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_nexo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 3l5 3v12l-5 3l-10 -6v-6l10 6v-6l-5 -3z" />
      <path d="M12 6l-5 -3l-5 3v12l5 3l4.7 -3.13" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_nextcloud` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_nextcloud />
      <TablerIcons.brand_nextcloud class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_nextcloud(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M4.5 12.5m-2.5 0a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0 -5 0" />
      <path d="M19.5 12.5m-2.5 0a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0 -5 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_nextjs` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_nextjs />
      <TablerIcons.brand_nextjs class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_nextjs(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15v-6l7.745 10.65a9 9 0 1 1 2.255 -1.993" />
      <path d="M15 12v-3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_nodejs` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_nodejs />
      <TablerIcons.brand_nodejs class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_nodejs(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 9v8.044a2 2 0 0 1 -2.996 1.734l-1.568 -.9a3 3 0 0 1 -1.436 -2.561v-6.635a3 3 0 0 1 1.436 -2.56l6 -3.667a3 3 0 0 1 3.128 0l6 3.667a3 3 0 0 1 1.436 2.561v6.634a3 3 0 0 1 -1.436 2.56l-6 3.667a3 3 0 0 1 -3.128 0" />
      <path d="M17 9h-3.5a1.5 1.5 0 0 0 0 3h2a1.5 1.5 0 0 1 0 3h-3.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_nord_vpn` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_nord_vpn />
      <TablerIcons.brand_nord_vpn class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_nord_vpn(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.992 15l-2.007 -3l-4.015 8c-2.212 -3.061 -2.625 -7.098 -.915 -10.463a10.14 10.14 0 0 1 8.945 -5.537a10.14 10.14 0 0 1 8.945 5.537c1.71 3.365 1.297 7.402 -.915 10.463l-4.517 -8l-1.505 1.5" />
      <path d="M14.5 15l-3 -6l-2.5 4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_notion` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_notion />
      <TablerIcons.brand_notion class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_notion(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M7 7h3l6 6" />
      <path d="M8 7v10" />
      <path d="M7 17h2" />
      <path d="M15 7h2" />
      <path d="M16 7v10h-1l-7 -7" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_npm` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_npm />
      <TablerIcons.brand_npm class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_npm(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M1 8h22v7h-12v2h-4v-2h-6z" />
      <path d="M7 8v7" />
      <path d="M14 8v7" />
      <path d="M17 11v4" />
      <path d="M4 11v4" />
      <path d="M11 11v1" />
      <path d="M20 11v4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_nuxt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_nuxt />
      <TablerIcons.brand_nuxt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_nuxt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.146 8.583l-1.3 -2.09a1.046 1.046 0 0 0 -1.786 .017l-5.91 9.908a1.046 1.046 0 0 0 .897 1.582h3.913" />
      <path d="M20.043 18c.743 0 1.201 -.843 .82 -1.505l-4.044 -7.013a.936 .936 0 0 0 -1.638 0l-4.043 7.013c-.382 .662 .076 1.505 .819 1.505h8.086z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_nytimes` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_nytimes />
      <TablerIcons.brand_nytimes class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_nytimes(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.036 5.058a8 8 0 1 0 8.706 9.965" />
      <path d="M12 21v-11l-7.5 4" />
      <path d="M17.5 3a2.5 2.5 0 1 1 0 5l-11 -5a2.5 2.5 0 0 0 -.67 4.91" />
      <path d="M9 12v8" />
      <path d="M16 13h-.01" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_oauth` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_oauth />
      <TablerIcons.brand_oauth class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_oauth(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-10 0a10 10 0 1 0 20 0a10 10 0 1 0 -20 0" />
      <path d="M12.556 6c.65 0 1.235 .373 1.508 .947l2.839 7.848a1.646 1.646 0 0 1 -1.01 2.108a1.673 1.673 0 0 1 -2.068 -.851l-.46 -1.052h-2.73l-.398 .905a1.67 1.67 0 0 1 -1.977 1.045l-.153 -.047a1.647 1.647 0 0 1 -1.056 -1.956l2.824 -7.852a1.664 1.664 0 0 1 1.409 -1.087l1.272 -.008z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_office` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_office />
      <TablerIcons.brand_office class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_office(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 18h9v-12l-5 2v5l-4 2v-8l9 -4l7 2v13l-7 3z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_ok_ru` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_ok_ru />
      <TablerIcons.brand_ok_ru class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_ok_ru(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M20 12c0 8 0 8 -8 8s-8 0 -8 -8s0 -8 8 -8s8 0 8 8z" />
      <path d="M9.5 13c1.333 .667 3.667 .667 5 0" />
      <path d="M9.5 17l2.5 -3l2.5 3" />
      <path d="M12 13.5v.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_onedrive` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_onedrive />
      <TablerIcons.brand_onedrive class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_onedrive(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.456 10.45a6.45 6.45 0 0 0 -12 -2.151a4.857 4.857 0 0 0 -4.44 5.241a4.856 4.856 0 0 0 5.236 4.444h10.751a3.771 3.771 0 0 0 3.99 -3.54a3.772 3.772 0 0 0 -3.538 -3.992z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_onlyfans` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_onlyfans />
      <TablerIcons.brand_onlyfans class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_onlyfans(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.5 6a6.5 6.5 0 1 0 0 13a6.5 6.5 0 0 0 0 -13z" />
      <path d="M8.5 15a2.5 2.5 0 1 1 0 -5a2.5 2.5 0 0 1 0 5z" />
      <path d="M14 16c2.5 0 6.42 -1.467 7 -4h-6c3 -1 6.44 -3.533 7 -6h-4c-3.03 0 -3.764 -.196 -5 1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_open_source` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_open_source />
      <TablerIcons.brand_open_source class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_open_source(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a9 9 0 0 1 3.618 17.243l-2.193 -5.602a3 3 0 1 0 -2.849 0l-2.193 5.603a9 9 0 0 1 3.617 -17.244z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_openai` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_openai />
      <TablerIcons.brand_openai class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_openai(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.217 19.384a3.501 3.501 0 0 0 6.783 -1.217v-5.167l-6 -3.35" />
      <path d="M5.214 15.014a3.501 3.501 0 0 0 4.446 5.266l4.34 -2.534v-6.946" />
      <path d="M6 7.63c-1.391 -.236 -2.787 .395 -3.534 1.689a3.474 3.474 0 0 0 1.271 4.745l4.263 2.514l6 -3.348" />
      <path d="M12.783 4.616a3.501 3.501 0 0 0 -6.783 1.217v5.067l6 3.45" />
      <path d="M18.786 8.986a3.501 3.501 0 0 0 -4.446 -5.266l-4.34 2.534v6.946" />
      <path d="M18 16.302c1.391 .236 2.787 -.395 3.534 -1.689a3.474 3.474 0 0 0 -1.271 -4.745l-4.308 -2.514l-5.955 3.42" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_openvpn` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_openvpn />
      <TablerIcons.brand_openvpn class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_openvpn(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.618 20.243l-2.193 -5.602a3 3 0 1 0 -2.849 0l-2.193 5.603" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_opera` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_opera />
      <TablerIcons.brand_opera class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_opera(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12m-3 0a3 5 0 1 0 6 0a3 5 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_pagekit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_pagekit />
      <TablerIcons.brand_pagekit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_pagekit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.077 20h-5.077v-16h11v14h-5.077" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_patreon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_patreon />
      <TablerIcons.brand_patreon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_patreon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3h3v18h-3z" />
      <path d="M15 9.5m-6.5 0a6.5 6.5 0 1 0 13 0a6.5 6.5 0 1 0 -13 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_paypal_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_paypal_filled />
      <TablerIcons.brand_paypal_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_paypal_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12.5 2c3.113 0 5.309 1.785 5.863 4.565c1.725 1.185 2.637 3.152 2.637 5.435c0 2.933 -2.748 5.384 -5.783 5.496l-.217 .004h-1.754l-.466 2.8a1.998 1.998 0 0 1 -1.823 1.597l-.157 .003h-2.68a1.5 1.5 0 0 1 -1.182 -.54a1.495 1.495 0 0 1 -.348 -1.07l.042 -.29h-1.632c-1.004 0 -1.914 -.864 -1.994 -1.857l-.006 -.143l.01 -.141l1.993 -13.954l.003 -.048c.072 -.894 .815 -1.682 1.695 -1.832l.156 -.02l.143 -.005h5.5zm5.812 7.35l-.024 .087c-.706 2.403 -3.072 4.436 -5.555 4.557l-.233 .006h-2.503v.05l-.025 .183l-1.2 5a1.007 1.007 0 0 1 -.019 .07l-.088 .597h2.154l.595 -3.564a1 1 0 0 1 .865 -.829l.121 -.007h2.6c2.073 0 4 -1.67 4 -3.5c0 -1.022 -.236 -1.924 -.688 -2.65z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `brand_paypal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_paypal />
      <TablerIcons.brand_paypal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_paypal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 13l2.5 0c2.5 0 5 -2.5 5 -5c0 -3 -1.9 -5 -5 -5h-5.5c-.5 0 -1 .5 -1 1l-2 14c0 .5 .5 1 1 1h2.8l1.2 -5c.1 -.6 .4 -1 1 -1zm7.5 -5.8c1.7 1 2.5 2.8 2.5 4.8c0 2.5 -2.5 4.5 -5 4.5h-2.6l-.6 3.6a1 1 0 0 1 -1 .8l-2.7 0a.5 .5 0 0 1 -.5 -.6l.2 -1.4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_paypay` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_paypay />
      <TablerIcons.brand_paypay class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_paypay(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.375 21l3.938 -13.838" />
      <path d="M3 6c16.731 0 21.231 9.881 4.5 11" />
      <path d="M21 19v-14a2 2 0 0 0 -2 -2h-14a2 2 0 0 0 -2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_peanut` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_peanut />
      <TablerIcons.brand_peanut class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_peanut(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 16.25l-.816 -.36l-.462 -.196c-1.444 -.592 -2 -.593 -3.447 0l-.462 .195l-.817 .359a4.5 4.5 0 1 1 0 -8.49v0l1.054 .462l.434 .178c1.292 .507 1.863 .48 3.237 -.082l.462 -.195l.817 -.359a4.5 4.5 0 1 1 0 8.49" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_pepsi` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_pepsi />
      <TablerIcons.brand_pepsi class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_pepsi(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M4 16c5.713 -2.973 11 -3.5 13.449 -11.162" />
      <path d="M5 17.5c5.118 -2.859 15 0 14 -11" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_php` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_php />
      <TablerIcons.brand_php class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_php(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-10 0a10 9 0 1 0 20 0a10 9 0 1 0 -20 0" />
      <path d="M5.5 15l.395 -1.974l.605 -3.026h1.32a1 1 0 0 1 .986 1.164l-.167 1a1 1 0 0 1 -.986 .836h-1.653" />
      <path d="M15.5 15l.395 -1.974l.605 -3.026h1.32a1 1 0 0 1 .986 1.164l-.167 1a1 1 0 0 1 -.986 .836h-1.653" />
      <path d="M12 7.5l-1 5.5" />
      <path d="M11.6 10h2.4l-.5 3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_picsart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_picsart />
      <TablerIcons.brand_picsart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_picsart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M12 9m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M5 9v11a2 2 0 1 0 4 0v-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_pinterest` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_pinterest />
      <TablerIcons.brand_pinterest class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_pinterest(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 20l4 -9" />
      <path d="M10.7 14c.437 1.263 1.43 2 2.55 2c2.071 0 3.75 -1.554 3.75 -4a5 5 0 1 0 -9.7 1.7" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_planetscale` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_planetscale />
      <TablerIcons.brand_planetscale class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_planetscale(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.993 11.63a9 9 0 0 1 -9.362 9.362l9.362 -9.362z" />
      <path d="M12 3a9.001 9.001 0 0 1 8.166 5.211l-11.955 11.955a9 9 0 0 1 3.789 -17.166z" />
      <path d="M12 12l-6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_pocket` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_pocket />
      <TablerIcons.brand_pocket class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_pocket(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4h14a2 2 0 0 1 2 2v6a9 9 0 0 1 -18 0v-6a2 2 0 0 1 2 -2" />
      <path d="M8 11l4 4l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_polymer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_polymer />
      <TablerIcons.brand_polymer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_polymer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.706 6l-3.706 6l3.706 6h1.059l8.47 -12h1.06l3.705 6l-3.706 6" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_powershell` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_powershell />
      <TablerIcons.brand_powershell class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_powershell(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.887 20h11.868c.893 0 1.664 -.665 1.847 -1.592l2.358 -12c.212 -1.081 -.442 -2.14 -1.462 -2.366a1.784 1.784 0 0 0 -.385 -.042h-11.868c-.893 0 -1.664 .665 -1.847 1.592l-2.358 12c-.212 1.081 .442 2.14 1.462 2.366c.127 .028 .256 .042 .385 .042z" />
      <path d="M9 8l4 4l-6 4" />
      <path d="M12 16h3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_prisma` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_prisma />
      <TablerIcons.brand_prisma class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_prisma(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.186 16.202l3.615 5.313c.265 .39 .754 .57 1.215 .447l10.166 -2.718a1.086 1.086 0 0 0 .713 -1.511l-7.505 -15.483a.448 .448 0 0 0 -.787 -.033l-7.453 12.838a1.07 1.07 0 0 0 .037 1.147z" />
      <path d="M8.5 22l3.5 -20" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_producthunt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_producthunt />
      <TablerIcons.brand_producthunt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_producthunt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 16v-8h2.5a2.5 2.5 0 1 1 0 5h-2.5" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_pushbullet` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_pushbullet />
      <TablerIcons.brand_pushbullet class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_pushbullet(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M11 8v8h2a4 4 0 1 0 0 -8h-2z" />
      <path d="M8 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_pushover` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_pushover />
      <TablerIcons.brand_pushover class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_pushover(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.16 10.985c-.83 -1.935 1.53 -7.985 8.195 -7.985c3.333 0 4.645 1.382 4.645 3.9c0 2.597 -2.612 6.1 -9 6.1" />
      <path d="M12.5 6l-5.5 15" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_python` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_python />
      <TablerIcons.brand_python class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_python(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9h-7a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h3" />
      <path d="M12 15h7a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-3" />
      <path d="M8 9v-4a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v5a2 2 0 0 1 -2 2h-4a2 2 0 0 0 -2 2v5a2 2 0 0 0 2 2h4a2 2 0 0 0 2 -2v-4" />
      <path d="M11 6l0 .01" />
      <path d="M13 18l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_qq` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_qq />
      <TablerIcons.brand_qq class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_qq(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 9.748a14.716 14.716 0 0 0 11.995 -.052c.275 -9.236 -11.104 -11.256 -11.995 .052z" />
      <path d="M18 10c.984 2.762 1.949 4.765 2 7.153c.014 .688 -.664 1.346 -1.184 .303c-.346 -.696 -.952 -1.181 -1.816 -1.456" />
      <path d="M17 16c.031 1.831 .147 3.102 -1 4" />
      <path d="M8 20c-1.099 -.87 -.914 -2.24 -1 -4" />
      <path d="M6 10c-.783 2.338 -1.742 4.12 -1.968 6.43c-.217 2.227 .716 1.644 1.16 .917c.296 -.487 .898 -.934 1.808 -1.347" />
      <path d="M15.898 13l-.476 -2" />
      <path d="M8 20l-1.5 1c-.5 .5 -.5 1 .5 1h10c1 0 1 -.5 .5 -1l-1.5 -1" />
      <path d="M13.75 7m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M10.25 7m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_radix_ui` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_radix_ui />
      <TablerIcons.brand_radix_ui class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_radix_ui(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.5 5.5m-2.5 0a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0 -5 0" />
      <path d="M6 3h5v5h-5z" />
      <path d="M11 11v10a5 5 0 0 1 -.217 -9.995l.217 -.005z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_react_native` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_react_native />
      <TablerIcons.brand_react_native class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_react_native(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.357 9c-2.637 .68 -4.357 1.845 -4.357 3.175c0 2.107 4.405 3.825 9.85 3.825c.74 0 1.26 -.039 1.95 -.097" />
      <path d="M9.837 15.9c-.413 -.596 -.806 -1.133 -1.18 -1.8c-2.751 -4.9 -3.488 -9.77 -1.63 -10.873c1.15 -.697 3.047 .253 4.974 2.254" />
      <path d="M6.429 15.387c-.702 2.688 -.56 4.716 .56 5.395c1.783 1.08 5.387 -1.958 8.043 -6.804c.36 -.67 .683 -1.329 .968 -1.978" />
      <path d="M12 18.52c1.928 2 3.817 2.95 4.978 2.253c1.85 -1.102 1.121 -5.972 -1.633 -10.873c-.384 -.677 -.777 -1.204 -1.18 -1.8" />
      <path d="M17.66 15c2.612 -.687 4.34 -1.85 4.34 -3.176c0 -2.11 -4.408 -3.824 -9.845 -3.824c-.747 0 -1.266 .029 -1.955 .087" />
      <path d="M8 12c.285 -.66 .607 -1.308 .968 -1.978c2.647 -4.844 6.253 -7.89 8.046 -6.801c1.11 .679 1.262 2.706 .56 5.393" />
      <path d="M12.26 12.015h-.01c-.01 .13 -.12 .24 -.26 .24a.263 .263 0 0 1 -.25 -.26c0 -.14 .11 -.25 .24 -.25h-.01c.13 -.01 .25 .11 .25 .24" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_react` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_react />
      <TablerIcons.brand_react class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_react(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.306 8.711c-2.602 .723 -4.306 1.926 -4.306 3.289c0 2.21 4.477 4 10 4c.773 0 1.526 -.035 2.248 -.102" />
      <path d="M17.692 15.289c2.603 -.722 4.308 -1.926 4.308 -3.289c0 -2.21 -4.477 -4 -10 -4c-.773 0 -1.526 .035 -2.25 .102" />
      <path d="M6.305 15.287c-.676 2.615 -.485 4.693 .695 5.373c1.913 1.105 5.703 -1.877 8.464 -6.66c.387 -.67 .733 -1.339 1.036 -2" />
      <path d="M17.694 8.716c.677 -2.616 .487 -4.696 -.694 -5.376c-1.913 -1.105 -5.703 1.877 -8.464 6.66c-.387 .67 -.733 1.34 -1.037 2" />
      <path d="M12 5.424c-1.925 -1.892 -3.82 -2.766 -5 -2.084c-1.913 1.104 -1.226 5.877 1.536 10.66c.386 .67 .793 1.304 1.212 1.896" />
      <path d="M12 18.574c1.926 1.893 3.821 2.768 5 2.086c1.913 -1.104 1.226 -5.877 -1.536 -10.66c-.375 -.65 -.78 -1.283 -1.212 -1.897" />
      <path d="M11.5 12.866a1 1 0 1 0 1 -1.732a1 1 0 0 0 -1 1.732z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_reason` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_reason />
      <TablerIcons.brand_reason class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_reason(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M18 18h-3v-6h3" />
      <path d="M18 15h-3" />
      <path d="M8 18v-6h2.5a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M12 18l-2 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_reddit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_reddit />
      <TablerIcons.brand_reddit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_reddit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8c2.648 0 5.028 .826 6.675 2.14a2.5 2.5 0 0 1 2.326 4.36c0 3.59 -4.03 6.5 -9 6.5c-4.875 0 -8.845 -2.8 -9 -6.294l-1 -.206a2.5 2.5 0 0 1 2.326 -4.36c1.646 -1.313 4.026 -2.14 6.674 -2.14z" />
      <path d="M12 8l1 -5l6 1" />
      <path d="M19 4m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <circle cx="9" cy="13" r=".5" fill="currentColor" />
      <circle cx="15" cy="13" r=".5" fill="currentColor" />
      <path d="M10 17c.667 .333 1.333 .5 2 .5s1.333 -.167 2 -.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_redhat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_redhat />
      <TablerIcons.brand_redhat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_redhat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 10.5l1.436 -4c.318 -.876 .728 -1.302 1.359 -1.302c.219 0 1.054 .365 1.88 .583c.825 .219 .733 -.329 .908 -.487c.176 -.158 .355 -.294 .61 -.294c.242 0 .553 .048 1.692 .448c.759 .267 1.493 .574 2.204 .922c1.175 .582 1.426 .913 1.595 1.507l.816 4.623c2.086 .898 3.5 2.357 3.5 3.682c0 1.685 -1.2 3.818 -5.957 3.818c-6.206 0 -14.043 -4.042 -14.043 -7.32c0 -1.044 1.333 -1.77 4 -2.18z" />
      <path d="M6 10.5c0 .969 4.39 3.5 9.5 3.5c1.314 0 3 .063 3 -1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_redux` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_redux />
      <TablerIcons.brand_redux class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_redux(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.54 7c-.805 -2.365 -2.536 -4 -4.54 -4c-2.774 0 -5.023 2.632 -5.023 6.496c0 1.956 1.582 4.727 2.512 6" />
      <path d="M4.711 11.979c-1.656 1.877 -2.214 4.185 -1.211 5.911c1.387 2.39 5.138 2.831 8.501 .9c1.703 -.979 2.875 -3.362 3.516 -4.798" />
      <path d="M15.014 19.99c2.511 0 4.523 -.438 5.487 -2.1c1.387 -2.39 -.215 -5.893 -3.579 -7.824c-1.702 -.979 -4.357 -1.235 -5.927 -1.07" />
      <path d="M10.493 9.862c.48 .276 1.095 .112 1.372 -.366a1 1 0 0 0 -.367 -1.365a1.007 1.007 0 0 0 -1.373 .366a1 1 0 0 0 .368 1.365z" />
      <path d="M9.5 15.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M15.5 14m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_revolut` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_revolut />
      <TablerIcons.brand_revolut class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_revolut(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.908 6c-.091 .363 -.908 5 -.908 5h1.228c1.59 0 2.772 -1.168 2.772 -2.943c0 -1.249 -.818 -2.057 -2.087 -2.057h-1z" />
      <path d="M15.5 13.5l1.791 4.558c.535 1.352 1.13 2.008 1.709 2.442c-1 .5 -2.616 .522 -3.605 .497c-.973 0 -2.28 -.24 -3.106 -2.6l-1.289 -3.397h-1.5s-.465 2.243 -.65 3.202c-.092 .704 .059 1.594 .15 2.298c-1 .5 -2.5 .5 -3.5 .5c-.727 0 -1.45 -.248 -1.5 -1.5l0 -.311a7 7 0 0 1 .149 -1.409c.75 -3.577 1.366 -7.17 1.847 -10.78c.23 -1.722 0 -3.5 0 -3.5c.585 -.144 2.709 -.602 6.787 -.471a10.26 10.26 0 0 1 3.641 .722c.308 .148 .601 .326 .875 .531c.254 .212 .497 .437 .727 .674c.3 .382 .545 .804 .727 1.253c.155 .483 .237 .987 .243 1.493c0 2.462 -1.412 4.676 -3.5 5.798z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_rumble` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_rumble />
      <TablerIcons.brand_rumble class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_rumble(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.993 9.108c.383 .4 .687 .863 .893 1.368a4.195 4.195 0 0 1 .006 3.166a4.37 4.37 0 0 1 -.887 1.372a20.233 20.233 0 0 1 -2.208 2a20.615 20.615 0 0 1 -2.495 1.669a21.322 21.322 0 0 1 -5.622 2.202a4.213 4.213 0 0 1 -3.002 -.404a3.98 3.98 0 0 1 -1.163 -.967a3.796 3.796 0 0 1 -.695 -1.312c-1.199 -3.902 -1.022 -8.312 .134 -12.23c.609 -2.057 2.643 -3.349 4.737 -2.874c3.88 .88 7.52 3.147 10.302 6.01z" />
      <path d="M14.044 13.034c.67 -.505 .67 -1.489 0 -2.01a14.824 14.824 0 0 0 -1.498 -1.044a15.783 15.783 0 0 0 -1.62 -.865c-.77 -.35 -1.63 .139 -1.753 .973a15.385 15.385 0 0 0 -.1 3.786a1.232 1.232 0 0 0 1.715 1.027a14.783 14.783 0 0 0 1.694 -.827a14.46 14.46 0 0 0 1.562 -1.035v-.005z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_rust` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_rust />
      <TablerIcons.brand_rust class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_rust(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.139 3.463c.473 -1.95 3.249 -1.95 3.722 0a1.916 1.916 0 0 0 2.859 1.185c1.714 -1.045 3.678 .918 2.633 2.633a1.916 1.916 0 0 0 1.184 2.858c1.95 .473 1.95 3.249 0 3.722a1.916 1.916 0 0 0 -1.185 2.859c1.045 1.714 -.918 3.678 -2.633 2.633a1.916 1.916 0 0 0 -2.858 1.184c-.473 1.95 -3.249 1.95 -3.722 0a1.916 1.916 0 0 0 -2.859 -1.185c-1.714 1.045 -3.678 -.918 -2.633 -2.633a1.916 1.916 0 0 0 -1.184 -2.858c-1.95 -.473 -1.95 -3.249 0 -3.722a1.916 1.916 0 0 0 1.185 -2.859c-1.045 -1.714 .918 -3.678 2.633 -2.633a1.914 1.914 0 0 0 2.858 -1.184z" />
      <path d="M8 12h6a2 2 0 1 0 0 -4h-6v8v-4z" />
      <path d="M19 16h-2a2 2 0 0 1 -2 -2a2 2 0 0 0 -2 -2h-1" />
      <path d="M9 8h-4" />
      <path d="M5 16h4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_safari` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_safari />
      <TablerIcons.brand_safari class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_safari(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 16l2 -6l6 -2l-2 6l-6 2" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_samsungpass` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_samsungpass />
      <TablerIcons.brand_samsungpass class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_samsungpass(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v7a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M7 10v-1.862c0 -2.838 2.239 -5.138 5 -5.138s5 2.3 5 5.138v1.862" />
      <path d="M10.485 17.577c.337 .29 .7 .423 1.515 .423h.413c.323 0 .633 -.133 .862 -.368a1.27 1.27 0 0 0 .356 -.886c0 -.332 -.128 -.65 -.356 -.886a1.203 1.203 0 0 0 -.862 -.368h-.826a1.2 1.2 0 0 1 -.861 -.367a1.27 1.27 0 0 1 -.356 -.886c0 -.332 .128 -.651 .356 -.886a1.2 1.2 0 0 1 .861 -.368h.413c.816 0 1.178 .133 1.515 .423" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_sass` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_sass />
      <TablerIcons.brand_sass class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_sass(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 10.523c2.46 -.826 4 -.826 4 -2.155c0 -1.366 -1.347 -1.366 -2.735 -1.366c-1.91 0 -3.352 .49 -4.537 1.748c-.848 .902 -1.027 2.449 -.153 3.307c.973 .956 3.206 1.789 2.884 3.493c-.233 1.235 -1.469 1.823 -2.617 1.202c-.782 -.424 -.454 -1.746 .626 -2.512s2.822 -.992 4.1 -.24c.98 .575 1.046 1.724 .434 2.193" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_sentry` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_sentry />
      <TablerIcons.brand_sentry class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_sentry(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 18a1.93 1.93 0 0 0 .306 1.076a2 2 0 0 0 1.584 .924c.646 .033 -.537 0 .11 0h3a4.992 4.992 0 0 0 -3.66 -4.81c.558 -.973 1.24 -2.149 2.04 -3.531a9 9 0 0 1 5.62 8.341h4c.663 0 2.337 0 3 0a2 2 0 0 0 1.84 -2.75l-7.1 -12.25a2 2 0 0 0 -3.5 0l-1.84 3.176c4.482 2.05 7.6 6.571 7.6 11.824" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_sharik` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_sharik />
      <TablerIcons.brand_sharik class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_sharik(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.281 16.606a8.968 8.968 0 0 1 1.363 -10.977a9.033 9.033 0 0 1 11.011 -1.346c-1.584 4.692 -2.415 6.96 -4.655 8.717c-1.584 1.242 -3.836 2.24 -7.719 3.606zm16.335 -7.306c2.113 7.59 -4.892 13.361 -11.302 11.264c1.931 -3.1 3.235 -4.606 4.686 -6.065c1.705 -1.715 3.591 -3.23 6.616 -5.199z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_shazam` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_shazam />
      <TablerIcons.brand_shazam class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_shazam(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12l2 -2a2.828 2.828 0 0 1 4 0a2.828 2.828 0 0 1 0 4l-3 3" />
      <path d="M14 12l-2 2a2.828 2.828 0 1 1 -4 -4l3 -3" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_shopee` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_shopee />
      <TablerIcons.brand_shopee class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_shopee(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 7l.867 12.143a2 2 0 0 0 2 1.857h10.276a2 2 0 0 0 2 -1.857l.867 -12.143h-16z" />
      <path d="M8.5 7c0 -1.653 1.5 -4 3.5 -4s3.5 2.347 3.5 4" />
      <path d="M9.5 17c.413 .462 1 1 2.5 1s2.5 -.897 2.5 -2s-1 -1.5 -2.5 -2s-2 -1.47 -2 -2c0 -1.104 1 -2 2 -2s1.5 0 2.5 1" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_sketch` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_sketch />
      <TablerIcons.brand_sketch class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_sketch(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.262 10.878l8 8.789c.4 .44 1.091 .44 1.491 0l8 -8.79c.313 -.344 .349 -.859 .087 -1.243l-3.537 -5.194a1 1 0 0 0 -.823 -.436h-8.926a1 1 0 0 0 -.823 .436l-3.54 5.192c-.263 .385 -.227 .901 .087 1.246z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_skype` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_skype />
      <TablerIcons.brand_skype class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_skype(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a9 9 0 0 1 8.603 11.65a4.5 4.5 0 0 1 -5.953 5.953a9 9 0 0 1 -11.253 -11.253a4.5 4.5 0 0 1 5.953 -5.954a8.987 8.987 0 0 1 2.65 -.396z" />
      <path d="M8 14.5c.5 2 2.358 2.5 4 2.5c2.905 0 4 -1.187 4 -2.5c0 -1.503 -1.927 -2.5 -4 -2.5s-4 -1 -4 -2.5c0 -1.313 1.095 -2.5 4 -2.5c1.642 0 3.5 .5 4 2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_slack` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_slack />
      <TablerIcons.brand_slack class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_slack(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12v-6a2 2 0 0 1 4 0v6m0 -2a2 2 0 1 1 2 2h-6" />
      <path d="M12 12h6a2 2 0 0 1 0 4h-6m2 0a2 2 0 1 1 -2 2v-6" />
      <path d="M12 12v6a2 2 0 0 1 -4 0v-6m0 2a2 2 0 1 1 -2 -2h6" />
      <path d="M12 12h-6a2 2 0 0 1 0 -4h6m-2 0a2 2 0 1 1 2 -2v6" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_snapchat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_snapchat />
      <TablerIcons.brand_snapchat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_snapchat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.882 7.842a4.882 4.882 0 0 0 -9.764 0c0 4.273 -.213 6.409 -4.118 8.118c2 .882 2 .882 3 3c3 0 4 2 6 2s3 -2 6 -2c1 -2.118 1 -2.118 3 -3c-3.906 -1.709 -4.118 -3.845 -4.118 -8.118zm-13.882 8.119c4 -2.118 4 -4.118 1 -7.118m17 7.118c-4 -2.118 -4 -4.118 -1 -7.118" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_snapseed` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_snapseed />
      <TablerIcons.brand_snapseed class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_snapseed(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.152 3.115a.46 .46 0 0 0 -.609 0c-2.943 2.58 -4.529 5.441 -4.543 8.378c0 2.928 1.586 5.803 4.543 8.392a.46 .46 0 0 0 .61 0c2.957 -2.589 4.547 -5.464 4.547 -8.392c0 -2.928 -1.6 -5.799 -4.548 -8.378z" />
      <path d="M8 20l12.09 -.011c.503 0 .91 -.434 .91 -.969v-6.063c0 -.535 -.407 -.968 -.91 -.968h-7.382" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_snowflake` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_snowflake />
      <TablerIcons.brand_snowflake class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_snowflake(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 21v-5.5l4.5 2.5" />
      <path d="M10 21v-5.5l-4.5 2.5" />
      <path d="M3.5 14.5l4.5 -2.5l-4.5 -2.5" />
      <path d="M20.5 9.5l-4.5 2.5l4.5 2.5" />
      <path d="M10 3v5.5l-4.5 -2.5" />
      <path d="M14 3v5.5l4.5 -2.5" />
      <path d="M12 11l1 1l-1 1l-1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_socket_io` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_socket_io />
      <TablerIcons.brand_socket_io class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_socket_io(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M11 11h1l3 -4z" />
      <path d="M12 13h1l-4 4z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_solidjs` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_solidjs />
      <TablerIcons.brand_solidjs class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_solidjs(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 17.5c4.667 3 8 4.5 10 4.5c2.5 0 4 -1.5 4 -3.5s-1.5 -3.5 -4 -3.5c-2 0 -5.333 .833 -10 2.5z" />
      <path d="M5 13.5c4.667 -1.667 8 -2.5 10 -2.5c2.5 0 4 1.5 4 3.5c0 .738 -.204 1.408 -.588 1.96l-2.883 3.825" />
      <path d="M22 6.5c-4 -3 -8 -4.5 -10 -4.5c-2.04 0 -2.618 .463 -3.419 1.545" />
      <path d="M2 17.5l3 -4" />
      <path d="M22 6.5l-3 4" />
      <path d="M8.581 3.545l-2.953 3.711" />
      <path d="M7.416 12.662c-1.51 -.476 -2.416 -1.479 -2.416 -3.162c0 -2.5 1.5 -3.5 4 -3.5c1.688 0 5.087 1.068 8.198 3.204a114.76 114.76 0 0 1 1.802 1.296l-2.302 .785" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_soundcloud` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_soundcloud />
      <TablerIcons.brand_soundcloud class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_soundcloud(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 11h1c1.38 0 3 1.274 3 3c0 1.657 -1.5 3 -3 3l-6 0v-10c3 0 4.5 1.5 5 4z" />
      <path d="M9 8l0 9" />
      <path d="M6 17l0 -7" />
      <path d="M3 16l0 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_spacehey` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_spacehey />
      <TablerIcons.brand_spacehey class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_spacehey(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M14 20h6v-6a3 3 0 0 0 -6 0v6z" />
      <path d="M11 8v2.5a3.5 3.5 0 0 1 -3.5 3.5h-.5a3 3 0 0 1 0 -6h4z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_speedtest` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_speedtest />
      <TablerIcons.brand_speedtest class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_speedtest(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.636 19.364a9 9 0 1 1 12.728 0" />
      <path d="M16 9l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_spotify` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_spotify />
      <TablerIcons.brand_spotify class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_spotify(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M8 11.973c2.5 -1.473 5.5 -.973 7.5 .527" />
      <path d="M9 15c1.5 -1 4 -1 5 .5" />
      <path d="M7 9c2 -1 6 -2 10 .5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_stackoverflow` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_stackoverflow />
      <TablerIcons.brand_stackoverflow class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_stackoverflow(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 17v1a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-1" />
      <path d="M8 16h8" />
      <path d="M8.322 12.582l7.956 .836" />
      <path d="M8.787 9.168l7.826 1.664" />
      <path d="M10.096 5.764l7.608 2.472" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_stackshare` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_stackshare />
      <TablerIcons.brand_stackshare class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_stackshare(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 12h3l3.5 6h3.5" />
      <path d="M17 6h-3.5l-3.5 6" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_steam` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_steam />
      <TablerIcons.brand_steam class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_steam(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.5 5a4.5 4.5 0 1 1 -.653 8.953l-4.347 3.009l0 .038a3 3 0 0 1 -2.824 3l-.176 0a3 3 0 0 1 -2.94 -2.402l-2.56 -1.098v-3.5l3.51 1.755a2.989 2.989 0 0 1 2.834 -.635l2.727 -3.818a4.5 4.5 0 0 1 4.429 -5.302z" />
      <circle cx="16.5" cy="9.5" r="1" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_storj` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_storj />
      <TablerIcons.brand_storj class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_storj(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 17m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M4 7m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M20 17m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M20 7m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 3m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 21m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 21l-8 -4v-10l8 -4l8 4v10z" />
      <path d="M9.1 15a2.1 2.1 0 0 1 -.648 -4.098c.282 -1.648 1.319 -2.902 3.048 -2.902c1.694 0 2.906 1.203 3.23 2.8h.17a2.1 2.1 0 0 1 .202 4.19l-.202 .01h-5.8z" />
      <path d="M4 7l4.323 2.702" />
      <path d="M16.413 14.758l3.587 2.242" />
      <path d="M4 17l3.529 -2.206" />
      <path d="M14.609 10.37l5.391 -3.37" />
      <path d="M12 3v5" />
      <path d="M12 15v6" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_storybook` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_storybook />
      <TablerIcons.brand_storybook class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_storybook(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4l.5 16.5l13.5 .5v-18z" />
      <path d="M9 15c.6 1.5 1.639 2 3.283 2h-.283c1.8 0 3 -.974 3 -2.435c0 -1.194 -.831 -1.799 -2.147 -2.333l-1.975 -.802c-1.15 -.467 -1.878 -1.422 -1.878 -2.467c0 -.97 .899 -1.786 2.087 -1.893l.613 -.055c1.528 -.138 3 .762 3.3 1.985" />
      <path d="M16 3.5v1" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_storytel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_storytel />
      <TablerIcons.brand_storytel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_storytel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.103 22c2.292 -2.933 16.825 -2.43 16.825 -11.538c0 -6.298 -4.974 -8.462 -8.451 -8.462c-3.477 0 -9.477 3.036 -9.477 11.241c0 6.374 1.103 8.759 1.103 8.759z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_strava` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_strava />
      <TablerIcons.brand_strava class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_strava(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 13l-5 -10l-5 10m6 0l4 8l4 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_stripe` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_stripe />
      <TablerIcons.brand_stripe class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_stripe(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.453 8.056c0 -.623 .518 -.979 1.442 -.979c1.69 0 3.41 .343 4.605 .923l.5 -4c-.948 -.449 -2.82 -1 -5.5 -1c-1.895 0 -3.373 .087 -4.5 1c-1.172 .956 -2 2.33 -2 4c0 3.03 1.958 4.906 5 6c1.961 .69 3 .743 3 1.5c0 .735 -.851 1.5 -2 1.5c-1.423 0 -3.963 -.609 -5.5 -1.5l-.5 4c1.321 .734 3.474 1.5 6 1.5c2 0 3.957 -.468 5.084 -1.36c1.263 -.979 1.916 -2.268 1.916 -4.14c0 -3.096 -1.915 -4.547 -5 -5.637c-1.646 -.605 -2.544 -1.07 -2.544 -1.807z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_sublime_text` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_sublime_text />
      <TablerIcons.brand_sublime_text class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_sublime_text(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 8l-14 4.5v-5.5l14 -4.5z" />
      <path d="M19 17l-14 4.5v-5.5l14 -4.5z" />
      <path d="M19 11.5l-14 -4.5" />
      <path d="M5 12.5l14 4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_sugarizer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_sugarizer />
      <TablerIcons.brand_sugarizer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_sugarizer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.277 16l3.252 -3.252a1.61 1.61 0 0 0 -2.277 -2.276l-3.252 3.251l-3.252 -3.251a1.61 1.61 0 0 0 -2.276 2.276l3.251 3.252l-3.251 3.252a1.61 1.61 0 1 0 2.276 2.277l3.252 -3.252l3.252 3.252a1.61 1.61 0 1 0 2.277 -2.277l-3.252 -3.252z" />
      <path d="M12 5m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_supabase` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_supabase />
      <TablerIcons.brand_supabase class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_supabase(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 14h8v7l8 -11h-8v-7z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_superhuman` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_superhuman />
      <TablerIcons.brand_superhuman class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_superhuman(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 12l4 3l-8 7l-8 -7l4 -3" />
      <path d="M12 3l-8 6l8 6l8 -6z" />
      <path d="M12 15h8" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_supernova` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_supernova />
      <TablerIcons.brand_supernova class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_supernova(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M15 15h.5c3.038 0 5.5 -1.343 5.5 -3s-2.462 -3 -5.5 -3c-1.836 0 -3.462 .49 -4.46 1.245" />
      <path d="M9 9h-.5c-3.038 0 -5.5 1.343 -5.5 3s2.462 3 5.5 3c1.844 0 3.476 -.495 4.474 -1.255" />
      <path d="M15 9v-.5c0 -3.038 -1.343 -5.5 -3 -5.5s-3 2.462 -3 5.5c0 1.833 .49 3.457 1.241 4.456" />
      <path d="M9 15v.5c0 3.038 1.343 5.5 3 5.5s3 -2.462 3 -5.5c0 -1.842 -.494 -3.472 -1.252 -4.47" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_surfshark` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_surfshark />
      <TablerIcons.brand_surfshark class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_surfshark(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.954 9.447c-.237 -6.217 0 -6.217 -6 -6.425c-5.774 -.208 -6.824 1 -7.91 5.382c-2.884 11.816 -3.845 14.716 4.792 11.198c9.392 -3.831 9.297 -5.382 9.114 -10.155z" />
      <path d="M8 16h.452c1.943 .007 3.526 -1.461 3.543 -3.286v-2.428c.018 -1.828 1.607 -3.298 3.553 -3.286h.452" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_svelte` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_svelte />
      <TablerIcons.brand_svelte class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_svelte(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8l-5 3l.821 -.495c1.86 -1.15 4.412 -.49 5.574 1.352a3.91 3.91 0 0 1 -1.264 5.42l-5.053 3.126c-1.86 1.151 -4.312 .591 -5.474 -1.251a3.91 3.91 0 0 1 1.263 -5.42l.26 -.16" />
      <path d="M8 17l5 -3l-.822 .496c-1.86 1.151 -4.411 .491 -5.574 -1.351a3.91 3.91 0 0 1 1.264 -5.42l5.054 -3.127c1.86 -1.15 4.311 -.59 5.474 1.252a3.91 3.91 0 0 1 -1.264 5.42l-.26 .16" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_swift` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_swift />
      <TablerIcons.brand_swift class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_swift(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.547 15.828c1.33 -4.126 -1.384 -9.521 -6.047 -12.828c-.135 -.096 2.39 6.704 1.308 9.124c-2.153 -1.454 -4.756 -3.494 -7.808 -6.124l-.5 2l-3.5 -1c4.36 4.748 7.213 7.695 8.56 8.841c-4.658 2.089 -10.65 -.978 -10.56 -.841c1.016 1.545 6 6 11 6c2 0 3.788 -.502 4.742 -1.389c.005 -.005 .432 -.446 1.378 -.17c.504 .148 1.463 .667 2.88 1.559v-1.507c0 -1.377 -.515 -2.67 -1.453 -3.665z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_symfony` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_symfony />
      <TablerIcons.brand_symfony class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_symfony(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 13c.458 .667 1.125 1 2 1c1.313 0 2 -.875 2 -1.5c0 -1.5 -2 -1 -2 -2c0 -.625 .516 -1.5 1.5 -1.5c2.5 0 1.563 2 5.5 2c.667 0 1 -.333 1 -1" />
      <path d="M9 17c-.095 .667 .238 1 1 1c1.714 0 2.714 -2 3 -6c.286 -4 1.571 -6 3 -6c.571 0 .905 .333 1 1" />
      <path d="M22 12c0 5.523 -4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10a10 10 0 0 1 10 10z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_tabler` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_tabler />
      <TablerIcons.brand_tabler class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_tabler(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9l3 3l-3 3" />
      <path d="M13 15l3 0" />
      <path d="M4 4m0 4a4 4 0 0 1 4 -4h8a4 4 0 0 1 4 4v8a4 4 0 0 1 -4 4h-8a4 4 0 0 1 -4 -4z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_tailwind` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_tailwind />
      <TablerIcons.brand_tailwind class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_tailwind(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.667 6c-2.49 0 -4.044 1.222 -4.667 3.667c.933 -1.223 2.023 -1.68 3.267 -1.375c.71 .174 1.217 .68 1.778 1.24c.916 .912 2 1.968 4.288 1.968c2.49 0 4.044 -1.222 4.667 -3.667c-.933 1.223 -2.023 1.68 -3.267 1.375c-.71 -.174 -1.217 -.68 -1.778 -1.24c-.916 -.912 -1.975 -1.968 -4.288 -1.968zm-4 6.5c-2.49 0 -4.044 1.222 -4.667 3.667c.933 -1.223 2.023 -1.68 3.267 -1.375c.71 .174 1.217 .68 1.778 1.24c.916 .912 1.975 1.968 4.288 1.968c2.49 0 4.044 -1.222 4.667 -3.667c-.933 1.223 -2.023 1.68 -3.267 1.375c-.71 -.174 -1.217 -.68 -1.778 -1.24c-.916 -.912 -1.975 -1.968 -4.288 -1.968z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_taobao` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_taobao />
      <TablerIcons.brand_taobao class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_taobao(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 5c.968 .555 1.335 1.104 2 2" />
      <path d="M2 10c5.007 3.674 2.85 6.544 0 10" />
      <path d="M10 4c-.137 4.137 -2.258 5.286 -3.709 6.684" />
      <path d="M10 6c2.194 -.8 3.736 -.852 6.056 -.993c4.206 -.158 5.523 2.264 5.803 5.153c.428 4.396 -.077 7.186 -2.117 9.298c-1.188 1.23 -3.238 2.62 -7.207 .259" />
      <path d="M11 10h6" />
      <path d="M13 10v6.493" />
      <path d="M8 13h10" />
      <path d="M16 15.512l.853 1.72" />
      <path d="M16.5 17c-1.145 .361 -7 3 -8.5 -.5" />
      <path d="M11.765 8.539l-1.765 2.461" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_ted` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_ted />
      <TablerIcons.brand_ted class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_ted(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 8h4" />
      <path d="M4 8v8" />
      <path d="M13 8h-4v8h4" />
      <path d="M9 12h2.5" />
      <path d="M16 8v8h2a3 3 0 0 0 3 -3v-2a3 3 0 0 0 -3 -3h-2z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_telegram` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_telegram />
      <TablerIcons.brand_telegram class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_telegram(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 10l-4 4l6 6l4 -16l-18 7l4 2l2 6l3 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_terraform` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_terraform />
      <TablerIcons.brand_terraform class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_terraform(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 15.5l-11.476 -6.216a1 1 0 0 1 -.524 -.88v-4.054a1.35 1.35 0 0 1 2.03 -1.166l9.97 5.816v10.65a1.35 1.35 0 0 1 -2.03 1.166l-3.474 -2.027a1 1 0 0 1 -.496 -.863v-11.926" />
      <path d="M15 15.5l5.504 -3.21a1 1 0 0 0 .496 -.864v-3.576a1.35 1.35 0 0 0 -2.03 -1.166l-3.97 2.316" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_tether` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_tether />
      <TablerIcons.brand_tether class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_tether(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.08 20.188c-1.15 1.083 -3.02 1.083 -4.17 0l-6.93 -6.548c-.96 -.906 -1.27 -2.624 -.69 -3.831l2.4 -5.018c.47 -.991 1.72 -1.791 2.78 -1.791h9.06c1.06 0 2.31 .802 2.78 1.79l2.4 5.019c.58 1.207 .26 2.925 -.69 3.83c-3.453 3.293 -3.466 3.279 -6.94 6.549z" />
      <path d="M12 15v-7" />
      <path d="M8 8h8" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_threads` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_threads />
      <TablerIcons.brand_threads class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_threads(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 7.5c-1.333 -3 -3.667 -4.5 -7 -4.5c-5 0 -8 2.5 -8 9s3.5 9 8 9s7 -3 7 -5s-1 -5 -7 -5c-2.5 0 -3 1.25 -3 2.5c0 1.5 1 2.5 2.5 2.5c2.5 0 3.5 -1.5 3.5 -5s-2 -4 -3 -4s-1.833 .333 -2.5 1" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_threejs` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_threejs />
      <TablerIcons.brand_threejs class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_threejs(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 22l-5 -19l19 5.5z" />
      <path d="M12.573 17.58l-6.152 -1.576l8.796 -9.466l1.914 6.64" />
      <path d="M12.573 17.58l-1.573 -6.58l6.13 2.179" />
      <path d="M9.527 4.893l1.473 6.107l-6.31 -1.564z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_tidal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_tidal />
      <TablerIcons.brand_tidal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_tidal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.333 6l3.334 3.25l3.333 -3.25l3.333 3.25l3.334 -3.25l3.333 3.25l-3.333 3.25l-3.334 -3.25l-3.333 3.25l3.333 3.25l-3.333 3.25l-3.333 -3.25l3.333 -3.25l-3.333 -3.25l-3.334 3.25l-3.333 -3.25z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_tikto_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_tikto_filled />
      <TablerIcons.brand_tikto_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_tikto_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M16.083 2h-4.083a1 1 0 0 0 -1 1v11.5a1.5 1.5 0 1 1 -2.519 -1.1l.12 -.1a1 1 0 0 0 .399 -.8v-4.326a1 1 0 0 0 -1.23 -.974a7.5 7.5 0 0 0 1.73 14.8l.243 -.005a7.5 7.5 0 0 0 7.257 -7.495v-2.7l.311 .153c1.122 .53 2.333 .868 3.59 .993a1 1 0 0 0 1.099 -.996v-4.033a1 1 0 0 0 -.834 -.986a5.005 5.005 0 0 1 -4.097 -4.096a1 1 0 0 0 -.986 -.835z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `brand_tiktok` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_tiktok />
      <TablerIcons.brand_tiktok class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_tiktok(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 7.917v4.034a9.948 9.948 0 0 1 -5 -1.951v4.5a6.5 6.5 0 1 1 -8 -6.326v4.326a2.5 2.5 0 1 0 4 2v-11.5h4.083a6.005 6.005 0 0 0 4.917 4.917z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_tinder` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_tinder />
      <TablerIcons.brand_tinder class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_tinder(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.918 8.174c2.56 4.982 .501 11.656 -5.38 12.626c-7.702 1.687 -12.84 -7.716 -7.054 -13.229c.309 -.305 1.161 -1.095 1.516 -1.349c0 .528 .27 3.475 1 3.167c3 0 4 -4.222 3.587 -7.389c2.7 1.411 4.987 3.376 6.331 6.174z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_topbuzz` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_topbuzz />
      <TablerIcons.brand_topbuzz class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_topbuzz(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.417 8.655a.524 .524 0 0 1 -.405 -.622l.986 -4.617a.524 .524 0 0 1 .626 -.404l14.958 3.162c.285 .06 .467 .339 .406 .622l-.987 4.618a.524 .524 0 0 1 -.625 .404l-4.345 -.92c-.198 -.04 -.315 .024 -.353 .197l-2.028 9.49a.527 .527 0 0 1 -.625 .404l-4.642 -.982a.527 .527 0 0 1 -.406 -.622l2.028 -9.493c.037 -.17 -.031 -.274 -.204 -.31l-4.384 -.927z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_torchain` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_torchain />
      <TablerIcons.brand_torchain class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_torchain(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.588 15.537l-3.553 -3.537l-7.742 8.18c-.791 .85 .153 2.18 1.238 1.73l9.616 -4.096a1.398 1.398 0 0 0 .44 -2.277z" />
      <path d="M8.412 8.464l3.553 3.536l7.742 -8.18c.791 -.85 -.153 -2.18 -1.238 -1.73l-9.616 4.098a1.398 1.398 0 0 0 -.44 2.277z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_toyota` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_toyota />
      <TablerIcons.brand_toyota class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_toyota(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-10 0a10 7 0 1 0 20 0a10 7 0 1 0 -20 0" />
      <path d="M9 12c0 3.866 1.343 7 3 7s3 -3.134 3 -7s-1.343 -7 -3 -7s-3 3.134 -3 7z" />
      <path d="M6.415 6.191c-.888 .503 -1.415 1.13 -1.415 1.809c0 1.657 3.134 3 7 3s7 -1.343 7 -3c0 -.678 -.525 -1.304 -1.41 -1.806" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_trello` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_trello />
      <TablerIcons.brand_trello class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_trello(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M7 7h3v10h-3z" />
      <path d="M14 7h3v6h-3z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_tripadvisor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_tripadvisor />
      <TablerIcons.brand_tripadvisor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_tripadvisor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.5 13.5m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M17.5 13.5m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M17.5 9a4.5 4.5 0 1 0 3.5 1.671l1 -1.671h-4.5z" />
      <path d="M6.5 9a4.5 4.5 0 1 1 -3.5 1.671l-1 -1.671h4.5z" />
      <path d="M10.5 15.5l1.5 2l1.5 -2" />
      <path d="M9 6.75c2 -.667 4 -.667 6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_tumblr` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_tumblr />
      <TablerIcons.brand_tumblr class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_tumblr(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 21h4v-4h-4v-6h4v-4h-4v-4h-4v1a3 3 0 0 1 -3 3h-1v4h4v6a4 4 0 0 0 4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_twilio` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_twilio />
      <TablerIcons.brand_twilio class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_twilio(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 1 -18 0a9 9 0 0 1 18 0z" />
      <path d="M9 9m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M15 9m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M15 15m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M9 15m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_twitch` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_twitch />
      <TablerIcons.brand_twitch class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_twitch(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 5v11a1 1 0 0 0 1 1h2v4l4 -4h5.584c.266 0 .52 -.105 .707 -.293l2.415 -2.414c.187 -.188 .293 -.442 .293 -.708v-8.585a1 1 0 0 0 -1 -1h-14a1 1 0 0 0 -1 1z" />
      <path d="M16 8l0 4" />
      <path d="M12 8l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_twitter_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_twitter_filled />
      <TablerIcons.brand_twitter_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_twitter_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.058 3.41c-1.807 .767 -2.995 2.453 -3.056 4.38l-.002 .182l-.243 -.023c-2.392 -.269 -4.498 -1.512 -5.944 -3.531a1 1 0 0 0 -1.685 .092l-.097 .186l-.049 .099c-.719 1.485 -1.19 3.29 -1.017 5.203l.03 .273c.283 2.263 1.5 4.215 3.779 5.679l.173 .107l-.081 .043c-1.315 .663 -2.518 .952 -3.827 .9c-1.056 -.04 -1.446 1.372 -.518 1.878c3.598 1.961 7.461 2.566 10.792 1.6c4.06 -1.18 7.152 -4.223 8.335 -8.433l.127 -.495c.238 -.993 .372 -2.006 .401 -3.024l.003 -.332l.393 -.779l.44 -.862l.214 -.434l.118 -.247c.265 -.565 .456 -1.033 .574 -1.43l.014 -.056l.008 -.018c.22 -.593 -.166 -1.358 -.941 -1.358l-.122 .007a.997 .997 0 0 0 -.231 .057l-.086 .038a7.46 7.46 0 0 1 -.88 .36l-.356 .115l-.271 .08l-.772 .214c-1.336 -1.118 -3.144 -1.254 -5.012 -.554l-.211 .084z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `brand_twitter` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_twitter />
      <TablerIcons.brand_twitter class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_twitter(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 4.01c-1 .49 -1.98 .689 -3 .99c-1.121 -1.265 -2.783 -1.335 -4.38 -.737s-2.643 2.06 -2.62 3.737v1c-3.245 .083 -6.135 -1.395 -8 -4c0 0 -4.182 7.433 4 11c-1.872 1.247 -3.739 2.088 -6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58 -1.04 6.522 -3.723 7.651 -7.742a13.84 13.84 0 0 0 .497 -3.753c0 -.249 1.51 -2.772 1.818 -4.013z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_typescript` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_typescript />
      <TablerIcons.brand_typescript class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_typescript(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 17.5c.32 .32 .754 .5 1.207 .5h.543c.69 0 1.25 -.56 1.25 -1.25v-.25a1.5 1.5 0 0 0 -1.5 -1.5a1.5 1.5 0 0 1 -1.5 -1.5v-.25c0 -.69 .56 -1.25 1.25 -1.25h.543c.453 0 .887 .18 1.207 .5" />
      <path d="M9 12h4" />
      <path d="M11 12v6" />
      <path d="M21 19v-14a2 2 0 0 0 -2 -2h-14a2 2 0 0 0 -2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_uber` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_uber />
      <TablerIcons.brand_uber class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_uber(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 9m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M3 12h6" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_ubuntu` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_ubuntu />
      <TablerIcons.brand_ubuntu class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_ubuntu(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17.723 7.41a7.992 7.992 0 0 0 -3.74 -2.162m-3.971 0a7.993 7.993 0 0 0 -3.789 2.216m-1.881 3.215a8 8 0 0 0 -.342 2.32c0 .738 .1 1.453 .287 2.132m1.96 3.428a7.993 7.993 0 0 0 3.759 2.19m4 0a7.993 7.993 0 0 0 3.747 -2.186m1.962 -3.43a8.008 8.008 0 0 0 .287 -2.131c0 -.764 -.107 -1.503 -.307 -2.203" />
      <path d="M5 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_unity` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_unity />
      <TablerIcons.brand_unity class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_unity(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3l6 4v7" />
      <path d="M18 17l-6 4l-6 -4" />
      <path d="M4 14v-7l6 -4" />
      <path d="M4 7l8 5v9" />
      <path d="M20 7l-8 5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_unsplash` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_unsplash />
      <TablerIcons.brand_unsplash class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_unsplash(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 11h5v4h6v-4h5v9h-16zm5 -7h6v4h-6z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_upwork` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_upwork />
      <TablerIcons.brand_upwork class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_upwork(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7v5a3 3 0 0 0 6 0v-5h1l4 6c.824 1.319 1.945 2 3.5 2a3.5 3.5 0 0 0 0 -7c-2.027 0 -3.137 1 -3.5 3c-.242 1.33 -.908 4 -2 8" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_valorant` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_valorant />
      <TablerIcons.brand_valorant class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_valorant(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.5 14h4.5l2 -2v-6z" />
      <path d="M9 19h5l-11 -13v6z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_vercel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_vercel />
      <TablerIcons.brand_vercel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_vercel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19h18l-9 -15z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_vimeo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_vimeo />
      <TablerIcons.brand_vimeo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_vimeo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 8.5l1 1s1.5 -1.102 2 -.5c.509 .609 1.863 7.65 2.5 9c.556 1.184 1.978 2.89 4 1.5c2 -1.5 7.5 -5.5 8.5 -11.5c.444 -2.661 -1 -4 -2.5 -4c-2 0 -4.047 1.202 -4.5 4c2.05 -1.254 2.551 1 1.5 3c-1.052 2 -2 3 -2.5 3c-.49 0 -.924 -1.165 -1.5 -3.5c-.59 -2.42 -.5 -6.5 -3 -6.5s-5.5 4.5 -5.5 4.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_vinted` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_vinted />
      <TablerIcons.brand_vinted class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_vinted(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.028 6c0 7.695 -.292 11.728 0 12c2.046 -5 4.246 -12.642 5.252 -14.099c.343 -.497 .768 -.93 1.257 -1.277c.603 -.39 1.292 -.76 1.463 -.575c-.07 2.319 -4.023 15.822 -4.209 16.314a6.135 6.135 0 0 1 -3.465 3.386c-3.213 .78 -3.429 -.446 -3.836 -1.134c-.95 -2.103 -1.682 -14.26 -1.445 -15.615c.05 -.523 .143 -1.851 2.491 -2c2.359 -.354 2.547 1.404 2.492 3z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_visa` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_visa />
      <TablerIcons.brand_visa class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_visa(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 15l-1 -6l-2.5 6" />
      <path d="M9 15l1 -6" />
      <path d="M3 9h1v6h.5l2.5 -6" />
      <path d="M16 9.5a.5 .5 0 0 0 -.5 -.5h-.75c-.721 0 -1.337 .521 -1.455 1.233l-.09 .534a1.059 1.059 0 0 0 1.045 1.233a1.059 1.059 0 0 1 1.045 1.233l-.09 .534a1.476 1.476 0 0 1 -1.455 1.233h-.75a.5 .5 0 0 1 -.5 -.5" />
      <path d="M18 14h2.7" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_visual_studio` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_visual_studio />
      <TablerIcons.brand_visual_studio class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_visual_studio(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8l2 -1l10 13l4 -2v-12l-4 -2l-10 13l-2 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_vite` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_vite />
      <TablerIcons.brand_vite class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_vite(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 4.5l6 -1.5l-2 6.5l2 -.5l-4 7v-5l-3 1z" />
      <path d="M15 6.5l7 -1.5l-10 17l-10 -17l7.741 1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_vivaldi` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_vivaldi />
      <TablerIcons.brand_vivaldi class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_vivaldi(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21.648 6.808c-2.468 4.28 -4.937 8.56 -7.408 12.836c-.397 .777 -1.366 1.301 -2.24 1.356c-.962 .102 -1.7 -.402 -2.154 -1.254c-1.563 -2.684 -3.106 -5.374 -4.66 -8.064c-.943 -1.633 -1.891 -3.266 -2.83 -4.905a2.47 2.47 0 0 1 -.06 -2.45a2.493 2.493 0 0 1 2.085 -1.307c.951 -.065 1.85 .438 2.287 1.281c.697 1.19 2.043 3.83 2.55 4.682a3.919 3.919 0 0 0 3.282 2.017c2.126 .133 3.974 -.95 4.21 -3.058c0 -.164 .228 -3.178 .846 -3.962c.619 -.784 1.64 -1.155 2.606 -.893a2.484 2.484 0 0 1 1.814 2.062c.08 .581 -.041 1.171 -.343 1.674" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_vk` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_vk />
      <TablerIcons.brand_vk class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_vk(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 19h-4a8 8 0 0 1 -8 -8v-5h4v5a4 4 0 0 0 4 4h0v-9h4v4.5l.03 0a4.531 4.531 0 0 0 3.97 -4.496h4l-.342 1.711a6.858 6.858 0 0 1 -3.658 4.789h0a5.34 5.34 0 0 1 3.566 4.111l.434 2.389h0h-4a4.531 4.531 0 0 0 -3.97 -4.496v4.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_vlc` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_vlc />
      <TablerIcons.brand_vlc class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_vlc(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.79 4.337l3.101 9.305c.33 .985 -.113 2.07 -1.02 2.499a9.148 9.148 0 0 1 -7.742 0c-.907 -.428 -1.35 -1.514 -1.02 -2.499l3.1 -9.305c.267 -.8 .985 -1.337 1.791 -1.337c.807 0 1.525 .537 1.79 1.337z" />
      <path d="M7 14h-1.429a2 2 0 0 0 -1.923 1.45l-.571 2a2 2 0 0 0 1.923 2.55h13.998a2 2 0 0 0 1.923 -2.55l-.572 -2a2 2 0 0 0 -1.923 -1.45h-1.426" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_volkswagen` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_volkswagen />
      <TablerIcons.brand_volkswagen class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_volkswagen(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 0 0 9 -9a9 9 0 0 0 -9 -9a9 9 0 0 0 -9 9a9 9 0 0 0 9 9z" />
      <path d="M5 7l4.5 11l1.5 -5h2l1.5 5l4.5 -11" />
      <path d="M9 4l2 6h2l2 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_vsco` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_vsco />
      <TablerIcons.brand_vsco class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_vsco(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 1 -18 0a9 9 0 0 1 18 0z" />
      <path d="M17 12a5 5 0 1 0 -10 0a5 5 0 0 0 10 0z" />
      <path d="M12 3v4" />
      <path d="M21 12h-4" />
      <path d="M12 21v-4" />
      <path d="M3 12h4" />
      <path d="M18.364 5.636l-2.828 2.828" />
      <path d="M18.364 18.364l-2.828 -2.828" />
      <path d="M5.636 18.364l2.828 -2.828" />
      <path d="M5.636 5.636l2.828 2.828" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_vscode` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_vscode />
      <TablerIcons.brand_vscode class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_vscode(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 3v18l4 -2.5v-13z" />
      <path d="M9.165 13.903l-4.165 3.597l-2 -1l4.333 -4.5m1.735 -1.802l6.932 -7.198v5l-4.795 4.141" />
      <path d="M16 16.5l-11 -10l-2 1l13 13.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_vue` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_vue />
      <TablerIcons.brand_vue class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_vue(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.5 4l-4.5 8l-4.5 -8" />
      <path d="M3 4l9 16l9 -16" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_walmart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_walmart />
      <TablerIcons.brand_walmart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_walmart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8.04v-5.04" />
      <path d="M15.5 10l4.5 -2.5" />
      <path d="M15.5 14l4.5 2.5" />
      <path d="M12 15.96v5.04" />
      <path d="M8.5 14l-4.5 2.5" />
      <path d="M8.5 10l-4.5 -2.505" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_waze` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_waze />
      <TablerIcons.brand_waze class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_waze(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.66 17.52a7 7 0 0 1 -3.66 -4.52c2 0 3 -1 3 -2.51c0 -3.92 2.25 -7.49 7.38 -7.49c4.62 0 7.62 3.51 7.62 8a8.08 8.08 0 0 1 -3.39 6.62" />
      <path d="M10 18.69a17.29 17.29 0 0 0 3.33 .3h.54" />
      <path d="M16 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M8 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M16 9h.01" />
      <path d="M11 9h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_webflow` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_webflow />
      <TablerIcons.brand_webflow class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_webflow(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10s-1.376 3.606 -1.5 4c-.046 -.4 -1.5 -8 -1.5 -8c-2.627 0 -3.766 1.562 -4.5 3.5c0 0 -1.843 4.593 -2 5c-.013 -.368 -.5 -4.5 -.5 -4.5c-.15 -2.371 -2.211 -3.98 -4 -3.98l2 12.98c2.745 -.013 4.72 -1.562 5.5 -3.5c0 0 1.44 -4.3 1.5 -4.5c.013 .18 1 8 1 8c2.758 0 4.694 -1.626 5.5 -3.5l3.5 -9.5c-2.732 0 -4.253 2.055 -5 4z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_wechat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_wechat />
      <TablerIcons.brand_wechat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_wechat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.5 10c3.038 0 5.5 2.015 5.5 4.5c0 1.397 -.778 2.645 -2 3.47l0 2.03l-1.964 -1.178a6.649 6.649 0 0 1 -1.536 .178c-3.038 0 -5.5 -2.015 -5.5 -4.5s2.462 -4.5 5.5 -4.5z" />
      <path d="M11.197 15.698c-.69 .196 -1.43 .302 -2.197 .302a8.008 8.008 0 0 1 -2.612 -.432l-2.388 1.432v-2.801c-1.237 -1.082 -2 -2.564 -2 -4.199c0 -3.314 3.134 -6 7 -6c3.782 0 6.863 2.57 7 5.785l0 .233" />
      <path d="M10 8h.01" />
      <path d="M7 8h.01" />
      <path d="M15 14h.01" />
      <path d="M18 14h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_weibo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_weibo />
      <TablerIcons.brand_weibo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_weibo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 14.127c0 3.073 -3.502 5.873 -8 5.873c-4.126 0 -8 -2.224 -8 -5.565c0 -1.78 .984 -3.737 2.7 -5.567c2.362 -2.51 5.193 -3.687 6.551 -2.238c.415 .44 .752 1.39 .749 2.062c2 -1.615 4.308 .387 3.5 2.693c1.26 .557 2.5 .538 2.5 2.742z" />
      <path d="M15 4h1a5 5 0 0 1 5 5v1" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_whatsapp` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_whatsapp />
      <TablerIcons.brand_whatsapp class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_whatsapp(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21l1.65 -3.8a9 9 0 1 1 3.4 2.9l-5.05 .9" />
      <path d="M9 10a.5 .5 0 0 0 1 0v-1a.5 .5 0 0 0 -1 0v1a5 5 0 0 0 5 5h1a.5 .5 0 0 0 0 -1h-1a.5 .5 0 0 0 0 1" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_wikipedia` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_wikipedia />
      <TablerIcons.brand_wikipedia class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_wikipedia(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4.984h2" />
      <path d="M8 4.984h2.5" />
      <path d="M14.5 4.984h2.5" />
      <path d="M22 4.984h-2" />
      <path d="M4 4.984l5.455 14.516l6.545 -14.516" />
      <path d="M9 4.984l6 14.516l6 -14.516" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_windows` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_windows />
      <TablerIcons.brand_windows class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_windows(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.8 20l-12 -1.5c-1 -.1 -1.8 -.9 -1.8 -1.9v-9.2c0 -1 .8 -1.8 1.8 -1.9l12 -1.5c1.2 -.1 2.2 .8 2.2 1.9v12.1c0 1.2 -1.1 2.1 -2.2 1.9z" />
      <path d="M12 5l0 14" />
      <path d="M4 12l16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_windy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_windy />
      <TablerIcons.brand_windy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_windy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 4c0 5.5 -.33 16 4 16s7.546 -11.27 8 -13" />
      <path d="M3 4c.253 5.44 1.449 16 5.894 16c4.444 0 8.42 -10.036 9.106 -14" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_wish` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_wish />
      <TablerIcons.brand_wish class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_wish(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 6l5.981 2.392l-.639 6.037c-.18 .893 .06 1.819 .65 2.514a3 3 0 0 0 2.381 1.057a4.328 4.328 0 0 0 4.132 -3.57c-.18 .893 .06 1.819 .65 2.514a3 3 0 0 0 2.38 1.056a4.328 4.328 0 0 0 4.132 -3.57l.333 -4.633" />
      <path d="M14.504 14.429l.334 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_wix` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_wix />
      <TablerIcons.brand_wix class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_wix(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 9l1.5 6l1.379 -5.515a.64 .64 0 0 1 1.242 0l1.379 5.515l1.5 -6" />
      <path d="M13 11.5v3.5" />
      <path d="M16 9l5 6" />
      <path d="M21 9l-5 6" />
      <path d="M13 9h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_wordpress` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_wordpress />
      <TablerIcons.brand_wordpress class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_wordpress(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.5 9h3" />
      <path d="M4 9h2.5" />
      <path d="M11 9l3 11l4 -9" />
      <path d="M5.5 9l3.5 11l3 -7" />
      <path d="M18 11c.177 -.528 1 -1.364 1 -2.5c0 -1.78 -.776 -2.5 -1.875 -2.5c-.898 0 -1.125 .812 -1.125 1.429c0 1.83 2 2.058 2 3.571z" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_x_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_x_filled />
      <TablerIcons.brand_x_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_x_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M8.267 3a1 1 0 0 1 .73 .317l.076 .092l4.274 5.828l5.946 -5.944a1 1 0 0 1 1.497 1.32l-.083 .094l-6.163 6.162l6.262 8.54a1 1 0 0 1 -.697 1.585l-.109 .006h-4.267a1 1 0 0 1 -.73 -.317l-.076 -.092l-4.276 -5.829l-5.944 5.945a1 1 0 0 1 -1.497 -1.32l.083 -.094l6.161 -6.163l-6.26 -8.539a1 1 0 0 1 .697 -1.585l.109 -.006h4.267z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `brand_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_x />
      <TablerIcons.brand_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4l11.733 16h4.267l-11.733 -16z" />
      <path d="M4 20l6.768 -6.768m2.46 -2.46l6.772 -6.772" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_xamarin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_xamarin />
      <TablerIcons.brand_xamarin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_xamarin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.958 21h-7.917a2 2 0 0 1 -1.732 -1l-4.041 -7a2 2 0 0 1 0 -2l4.041 -7a2 2 0 0 1 1.732 -1h7.917a2 2 0 0 1 1.732 1l4.042 7a2 2 0 0 1 0 2l-4.041 7a2 2 0 0 1 -1.733 1z" />
      <path d="M15 16l-6 -8" />
      <path d="M9 16l6 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_xbox` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_xbox />
      <TablerIcons.brand_xbox class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_xbox(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M6.5 5c7.72 2.266 10.037 7.597 12.5 12.5" />
      <path d="M17.5 5c-7.72 2.266 -10.037 7.597 -12.5 12.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_xdeep` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_xdeep />
      <TablerIcons.brand_xdeep class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_xdeep(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.401 8.398l1.599 -2.398h5l-4 6l4 6h-5l-8 -12h-5l4 6l-4 6h5l1.596 -2.393" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_xing` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_xing />
      <TablerIcons.brand_xing class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_xing(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 21l-4 -7l6.5 -11" />
      <path d="M7 7l2 3.5l-3 4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_yahoo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_yahoo />
      <TablerIcons.brand_yahoo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_yahoo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 6l5 0" />
      <path d="M7 18l7 0" />
      <path d="M4.5 6l5.5 7v5" />
      <path d="M10 13l6 -5" />
      <path d="M12.5 8l5 0" />
      <path d="M20 11l0 4" />
      <path d="M20 18l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_yandex` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_yandex />
      <TablerIcons.brand_yandex class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_yandex(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 20v-16h-2a4 4 0 0 0 -4 4v1a4 4 0 0 0 4 4h2" />
      <path d="M9 20l3 -7" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_yatse` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_yatse />
      <TablerIcons.brand_yatse class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_yatse(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3l5 2.876v5.088l4.197 -2.73l4.803 2.731l-9.281 5.478l-2.383 1.41l-2.334 1.377l-3 1.77v-5.565l3 -1.771z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_ycombinator` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_ycombinator />
      <TablerIcons.brand_ycombinator class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_ycombinator(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M8 7l4 6l4 -6" />
      <path d="M12 17l0 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_youtube_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_youtube_filled />
      <TablerIcons.brand_youtube_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_youtube_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 3a5 5 0 0 1 5 5v8a5 5 0 0 1 -5 5h-12a5 5 0 0 1 -5 -5v-8a5 5 0 0 1 5 -5zm-9 6v6a1 1 0 0 0 1.514 .857l5 -3a1 1 0 0 0 0 -1.714l-5 -3a1 1 0 0 0 -1.514 .857z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `brand_youtube_kids` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_youtube_kids />
      <TablerIcons.brand_youtube_kids class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_youtube_kids(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.608 17.75l-3.9 .268h-.027a13.83 13.83 0 0 0 -3.722 .828l-2.511 .908a4.111 4.111 0 0 1 -3.287 -.216a3.82 3.82 0 0 1 -1.98 -2.527l-1.376 -6.05a3.669 3.669 0 0 1 .536 -2.86a3.964 3.964 0 0 1 2.489 -1.661l11.25 -2.354c2.137 -.448 4.247 .85 4.713 2.9l1.403 6.162a3.677 3.677 0 0 1 -.697 3.086a4.007 4.007 0 0 1 -2.89 1.512v.002z" />
      <path d="M9 10l1.208 5l4.292 -4z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_youtube` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_youtube />
      <TablerIcons.brand_youtube class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_youtube(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 8a4 4 0 0 1 4 -4h12a4 4 0 0 1 4 4v8a4 4 0 0 1 -4 4h-12a4 4 0 0 1 -4 -4v-8z" />
      <path d="M10 9l5 3l-5 3z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_zalando` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_zalando />
      <TablerIcons.brand_zalando class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_zalando(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.531 21c-.65 0 -1 -.15 -1.196 -.27c-.266 -.157 -.753 -.563 -1.197 -1.747a20.583 20.583 0 0 1 -1.137 -6.983c.015 -2.745 .436 -5.07 1.137 -6.975c.444 -1.2 .93 -1.605 1.197 -1.763c.192 -.103 .545 -.262 1.195 -.262c.244 0 .532 .022 .871 .075a19.093 19.093 0 0 1 6.425 2.475h.007a19.572 19.572 0 0 1 5.287 4.508c.783 .99 .879 1.627 .879 1.942c0 .315 -.096 .953 -.879 1.943a19.571 19.571 0 0 1 -5.287 4.5h-.007a19.041 19.041 0 0 1 -6.425 2.474a5.01 5.01 0 0 1 -.871 .083z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_zapier` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_zapier />
      <TablerIcons.brand_zapier class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_zapier(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h6" />
      <path d="M21 12h-6" />
      <path d="M12 3v6" />
      <path d="M12 15v6" />
      <path d="M5.636 5.636l4.243 4.243" />
      <path d="M18.364 18.364l-4.243 -4.243" />
      <path d="M18.364 5.636l-4.243 4.243" />
      <path d="M9.879 14.121l-4.243 4.243" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_zeit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_zeit />
      <TablerIcons.brand_zeit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_zeit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 20h18l-9 -16z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_zhihu` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_zhihu />
      <TablerIcons.brand_zhihu class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_zhihu(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 6h6v12h-2l-2 2l-1 -2h-1z" />
      <path d="M4 12h6.5" />
      <path d="M10.5 6h-5" />
      <path d="M6 4c-.5 2.5 -1.5 3.5 -2.5 4.5" />
      <path d="M8 6v7c0 4.5 -2 5.5 -4 7" />
      <path d="M11 18l-3 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_zoom` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_zoom />
      <TablerIcons.brand_zoom class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_zoom(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.011 9.385v5.128l3.989 3.487v-12z" />
      <path d="M3.887 6h10.08c1.468 0 3.033 1.203 3.033 2.803v8.196a.991 .991 0 0 1 -.975 1h-10.373c-1.667 0 -2.652 -1.5 -2.652 -3l.01 -8a.882 .882 0 0 1 .208 -.71a.841 .841 0 0 1 .67 -.287z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_zulip` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_zulip />
      <TablerIcons.brand_zulip class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_zulip(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.5 3h11c1.325 0 2.5 1 2.5 2.5c0 2 -1.705 3.264 -2 3.5l-4.5 4l2 -5h-9a2.5 2.5 0 0 1 0 -5z" />
      <path d="M17.5 21h-11c-1.325 0 -2.5 -1 -2.5 -2.5c0 -2 1.705 -3.264 2 -3.5l4.5 -4l-2 5h9a2.5 2.5 0 1 1 0 5z" />
    </svg>
    """
  end

  @doc """
  Renders the `brand_zwift` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brand_zwift />
      <TablerIcons.brand_zwift class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brand_zwift(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.5 4c-1.465 0 -2.5 1.101 -2.5 2.5s1.035 2.5 2.5 2.5h2.5l-4.637 7.19a2.434 2.434 0 0 0 -.011 2.538c.473 .787 1.35 1.272 2.3 1.272h10.848c1.465 0 2.5 -1.101 2.5 -2.5s-1.035 -2.5 -2.5 -2.5h-2.5l7 -11h-15.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `bread_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bread_off />
      <TablerIcons.bread_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bread_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4l10 .005v-.005a3 3 0 0 1 2 5.235v6.765m-.59 3.418c-.36 .36 -.86 .582 -1.41 .582h-12a2 2 0 0 1 -2 -2v-8.764a3 3 0 0 1 .418 -4.785" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bread` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bread />
      <TablerIcons.bread class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bread(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 4a3 3 0 0 1 2 5.235v8.765a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-8.764a3 3 0 0 1 1.824 -5.231h12.176v-.005z" />
    </svg>
    """
  end

  @doc """
  Renders the `briefcase_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.briefcase_2 />
      <TablerIcons.briefcase_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def briefcase_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 9a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-9z" />
      <path d="M8 7v-2a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v2" />
    </svg>
    """
  end

  @doc """
  Renders the `briefcase_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.briefcase_off />
      <TablerIcons.briefcase_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def briefcase_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 7h8a2 2 0 0 1 2 2v8m-1.166 2.818a1.993 1.993 0 0 1 -.834 .182h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h2" />
      <path d="M8.185 4.158a2 2 0 0 1 1.815 -1.158h4a2 2 0 0 1 2 2v2" />
      <path d="M12 12v.01" />
      <path d="M3 13a20 20 0 0 0 11.905 1.928m3.263 -.763a20 20 0 0 0 2.832 -1.165" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `briefcase` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.briefcase />
      <TablerIcons.briefcase class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def briefcase(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M8 7v-2a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v2" />
      <path d="M12 12l0 .01" />
      <path d="M3 13a20 20 0 0 0 18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `brightness_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brightness_2 />
      <TablerIcons.brightness_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brightness_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M6 6h3.5l2.5 -2.5l2.5 2.5h3.5v3.5l2.5 2.5l-2.5 2.5v3.5h-3.5l-2.5 2.5l-2.5 -2.5h-3.5v-3.5l-2.5 -2.5l2.5 -2.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `brightness_down_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brightness_down_filled />
      <TablerIcons.brightness_down_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brightness_down_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8a4 4 0 1 1 -3.995 4.2l-.005 -.2l.005 -.2a4 4 0 0 1 3.995 -3.8z" stroke-width="0" fill="currentColor" />
      <path
        d="M12 4a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M17 6a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M19 11a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M17 16a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 18a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M7 16a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M5 11a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M7 6a1 1 0 0 1 .993 .883l.007 .127a1 1 0 0 1 -1.993 .117l-.007 -.127a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `brightness_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brightness_down />
      <TablerIcons.brightness_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brightness_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12 5l0 .01" />
      <path d="M17 7l0 .01" />
      <path d="M19 12l0 .01" />
      <path d="M17 17l0 .01" />
      <path d="M12 19l0 .01" />
      <path d="M7 17l0 .01" />
      <path d="M5 12l0 .01" />
      <path d="M7 7l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `brightness_half` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brightness_half />
      <TablerIcons.brightness_half class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brightness_half(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9a3 3 0 0 0 0 6v-6z" />
      <path d="M6 6h3.5l2.5 -2.5l2.5 2.5h3.5v3.5l2.5 2.5l-2.5 2.5v3.5h-3.5l-2.5 2.5l-2.5 -2.5h-3.5v-3.5l-2.5 -2.5l2.5 -2.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `brightness_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brightness_off />
      <TablerIcons.brightness_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brightness_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3v5m0 4v9" />
      <path d="M5.641 5.631a9 9 0 1 0 12.719 12.738m1.68 -2.318a9 9 0 0 0 -12.074 -12.098" />
      <path d="M12.5 8.5l4.15 -4.15" />
      <path d="M12 14l1.025 -.983m2.065 -1.981l4.28 -4.106" />
      <path d="M12 19.6l3.79 -3.79m2 -2l3.054 -3.054" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `brightness_up_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brightness_up_filled />
      <TablerIcons.brightness_up_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brightness_up_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8a4 4 0 1 1 -3.995 4.2l-.005 -.2l.005 -.2a4 4 0 0 1 3.995 -3.8z" stroke-width="0" fill="currentColor" />
      <path
        d="M12 2a1 1 0 0 1 .993 .883l.007 .117v2a1 1 0 0 1 -1.993 .117l-.007 -.117v-2a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M17.693 4.893a1 1 0 0 1 1.497 1.32l-.083 .094l-1.4 1.4a1 1 0 0 1 -1.497 -1.32l.083 -.094l1.4 -1.4z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M21 11a1 1 0 0 1 .117 1.993l-.117 .007h-2a1 1 0 0 1 -.117 -1.993l.117 -.007h2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M16.293 16.293a1 1 0 0 1 1.32 -.083l.094 .083l1.4 1.4a1 1 0 0 1 -1.32 1.497l-.094 -.083l-1.4 -1.4a1 1 0 0 1 0 -1.414z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 18a1 1 0 0 1 .993 .883l.007 .117v2a1 1 0 0 1 -1.993 .117l-.007 -.117v-2a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M6.293 16.293a1 1 0 0 1 1.497 1.32l-.083 .094l-1.4 1.4a1 1 0 0 1 -1.497 -1.32l.083 -.094l1.4 -1.4z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M6 11a1 1 0 0 1 .117 1.993l-.117 .007h-2a1 1 0 0 1 -.117 -1.993l.117 -.007h2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4.893 4.893a1 1 0 0 1 1.32 -.083l.094 .083l1.4 1.4a1 1 0 0 1 -1.32 1.497l-.094 -.083l-1.4 -1.4a1 1 0 0 1 0 -1.414z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `brightness_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brightness_up />
      <TablerIcons.brightness_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brightness_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12 5l0 -2" />
      <path d="M17 7l1.4 -1.4" />
      <path d="M19 12l2 0" />
      <path d="M17 17l1.4 1.4" />
      <path d="M12 19l0 2" />
      <path d="M7 17l-1.4 1.4" />
      <path d="M6 12l-2 0" />
      <path d="M7 7l-1.4 -1.4" />
    </svg>
    """
  end

  @doc """
  Renders the `brightness` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brightness />
      <TablerIcons.brightness class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brightness(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 3l0 18" />
      <path d="M12 9l4.65 -4.65" />
      <path d="M12 14.3l7.37 -7.37" />
      <path d="M12 19.6l8.85 -8.85" />
    </svg>
    """
  end

  @doc """
  Renders the `broadcast_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.broadcast_off />
      <TablerIcons.broadcast_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def broadcast_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.364 19.364a9 9 0 0 0 -9.721 -14.717m-2.488 1.509a9 9 0 0 0 -.519 13.208" />
      <path d="M15.536 16.536a5 5 0 0 0 -3.536 -8.536m-3 1a5 5 0 0 0 -.535 7.536" />
      <path d="M12 12a1 1 0 1 0 1 1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `broadcast` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.broadcast />
      <TablerIcons.broadcast class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def broadcast(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.364 19.364a9 9 0 1 0 -12.728 0" />
      <path d="M15.536 16.536a5 5 0 1 0 -7.072 0" />
      <path d="M12 13m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `browser_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.browser_check />
      <TablerIcons.browser_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def browser_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 1a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1z" />
      <path d="M4 8h16" />
      <path d="M8 4v4" />
      <path d="M9.5 14.5l1.5 1.5l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `browser_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.browser_off />
      <TablerIcons.browser_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def browser_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h11a1 1 0 0 1 1 1v11m-.288 3.702a1 1 0 0 1 -.712 .298h-14a1 1 0 0 1 -1 -1v-14c0 -.276 .112 -.526 .293 -.707" />
      <path d="M4 8h4m4 0h8" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `browser_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.browser_plus />
      <TablerIcons.browser_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def browser_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 1a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1z" />
      <path d="M4 8h16" />
      <path d="M8 4v4" />
      <path d="M10 14h4" />
      <path d="M12 12v4" />
    </svg>
    """
  end

  @doc """
  Renders the `browser_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.browser_x />
      <TablerIcons.browser_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def browser_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 1a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1z" />
      <path d="M4 8h16" />
      <path d="M8 4v4" />
      <path d="M10 16l4 -4" />
      <path d="M14 16l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `browser` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.browser />
      <TablerIcons.browser class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def browser(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 1a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1z" />
      <path d="M4 8l16 0" />
      <path d="M8 4l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `brush_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brush_off />
      <TablerIcons.brush_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brush_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a4 4 0 1 1 4 4h-4v-4z" />
      <path d="M21 3a16 16 0 0 0 -9.309 4.704m-1.795 2.212a15.993 15.993 0 0 0 -1.696 3.284" />
      <path d="M21 3a16 16 0 0 1 -4.697 9.302m-2.195 1.786a15.993 15.993 0 0 1 -3.308 1.712" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `brush` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.brush />
      <TablerIcons.brush class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def brush(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21v-4a4 4 0 1 1 4 4h-4" />
      <path d="M21 3a16 16 0 0 0 -12.8 10.2" />
      <path d="M21 3a16 16 0 0 1 -10.2 12.8" />
      <path d="M10.6 9a9 9 0 0 1 4.4 4.4" />
    </svg>
    """
  end

  @doc """
  Renders the `bucket_droplet` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bucket_droplet />
      <TablerIcons.bucket_droplet class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bucket_droplet(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 16l1.465 1.638a2 2 0 1 1 -3.015 .099l1.55 -1.737z" />
      <path d="M13.737 9.737c2.299 -2.3 3.23 -5.095 2.081 -6.245c-1.15 -1.15 -3.945 -.217 -6.244 2.082c-2.3 2.299 -3.231 5.095 -2.082 6.244c1.15 1.15 3.946 .218 6.245 -2.081z" />
      <path d="M7.492 11.818c.362 .362 .768 .676 1.208 .934l6.895 4.047c1.078 .557 2.255 -.075 3.692 -1.512c1.437 -1.437 2.07 -2.614 1.512 -3.692c-.372 -.718 -1.72 -3.017 -4.047 -6.895a6.015 6.015 0 0 0 -.934 -1.208" />
    </svg>
    """
  end

  @doc """
  Renders the `bucket_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bucket_off />
      <TablerIcons.bucket_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bucket_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.029 5.036c-.655 .58 -1.029 1.25 -1.029 1.964c0 2.033 3.033 3.712 6.96 3.967m3.788 -.21c3.064 -.559 5.252 -2.029 5.252 -3.757c0 -2.21 -3.582 -4 -8 -4c-1.605 0 -3.1 .236 -4.352 .643" />
      <path d="M4 7c0 .664 .088 1.324 .263 1.965l2.737 10.035c.5 1.5 2.239 2 5 2s4.5 -.5 5 -2c.1 -.3 .252 -.812 .457 -1.535m.862 -3.146c.262 -.975 .735 -2.76 1.418 -5.354a7.45 7.45 0 0 0 .263 -1.965" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bucket` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bucket />
      <TablerIcons.bucket class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bucket(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 7m-8 0a8 4 0 1 0 16 0a8 4 0 1 0 -16 0" />
      <path d="M4 7c0 .664 .088 1.324 .263 1.965l2.737 10.035c.5 1.5 2.239 2 5 2s4.5 -.5 5 -2c.333 -1 1.246 -4.345 2.737 -10.035a7.45 7.45 0 0 0 .263 -1.965" />
    </svg>
    """
  end

  @doc """
  Renders the `bug_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bug_off />
      <TablerIcons.bug_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bug_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.884 5.873a3 3 0 0 1 5.116 2.127v1" />
      <path d="M13 9h3a6 6 0 0 1 1 3v1m-.298 3.705a5 5 0 0 1 -9.702 -1.705v-3a6 6 0 0 1 1 -3h1" />
      <path d="M3 13h4" />
      <path d="M17 13h4" />
      <path d="M12 20v-6" />
      <path d="M4 19l3.35 -2" />
      <path d="M4 7l3.75 2.4" />
      <path d="M20 7l-3.75 2.4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bug` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bug />
      <TablerIcons.bug class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bug(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 9v-1a3 3 0 0 1 6 0v1" />
      <path d="M8 9h8a6 6 0 0 1 1 3v3a5 5 0 0 1 -10 0v-3a6 6 0 0 1 1 -3" />
      <path d="M3 13l4 0" />
      <path d="M17 13l4 0" />
      <path d="M12 20l0 -6" />
      <path d="M4 19l3.35 -2" />
      <path d="M20 19l-3.35 -2" />
      <path d="M4 7l3.75 2.4" />
      <path d="M20 7l-3.75 2.4" />
    </svg>
    """
  end

  @doc """
  Renders the `building_arch` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_arch />
      <TablerIcons.building_arch class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_arch(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21l18 0" />
      <path d="M4 21v-15a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v15" />
      <path d="M9 21v-8a3 3 0 0 1 6 0v8" />
    </svg>
    """
  end

  @doc """
  Renders the `building_bank` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_bank />
      <TablerIcons.building_bank class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_bank(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21l18 0" />
      <path d="M3 10l18 0" />
      <path d="M5 6l7 -3l7 3" />
      <path d="M4 10l0 11" />
      <path d="M20 10l0 11" />
      <path d="M8 14l0 3" />
      <path d="M12 14l0 3" />
      <path d="M16 14l0 3" />
    </svg>
    """
  end

  @doc """
  Renders the `building_bridge_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_bridge_2 />
      <TablerIcons.building_bridge_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_bridge_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 7h12a2 2 0 0 1 2 2v9a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-2a4 4 0 0 0 -8 0v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-9a2 2 0 0 1 2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `building_bridge` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_bridge />
      <TablerIcons.building_bridge class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_bridge(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 5l0 14" />
      <path d="M18 5l0 14" />
      <path d="M2 15l20 0" />
      <path d="M3 8a7.5 7.5 0 0 0 3 -2a6.5 6.5 0 0 0 12 0a7.5 7.5 0 0 0 3 2" />
      <path d="M12 10l0 5" />
    </svg>
    """
  end

  @doc """
  Renders the `building_broadcast_tower` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_broadcast_tower />
      <TablerIcons.building_broadcast_tower class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_broadcast_tower(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M16.616 13.924a5 5 0 1 0 -9.23 0" />
      <path d="M20.307 15.469a9 9 0 1 0 -16.615 0" />
      <path d="M9 21l3 -9l3 9" />
      <path d="M10 19h4" />
    </svg>
    """
  end

  @doc """
  Renders the `building_carousel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_carousel />
      <TablerIcons.building_carousel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_carousel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-6 0a6 6 0 1 0 12 0a6 6 0 1 0 -12 0" />
      <path d="M5 8m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 4m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 8m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 16m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 16m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M8 22l4 -10l4 10" />
    </svg>
    """
  end

  @doc """
  Renders the `building_castle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_castle />
      <TablerIcons.building_castle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_castle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 19v-2a3 3 0 0 0 -6 0v2a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1v-14h4v3h3v-3h4v3h3v-3h4v14a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M3 11l18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `building_church` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_church />
      <TablerIcons.building_church class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_church(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21l18 0" />
      <path d="M10 21v-4a2 2 0 0 1 4 0v4" />
      <path d="M10 5l4 0" />
      <path d="M12 3l0 5" />
      <path d="M6 21v-7m-2 2l8 -8l8 8m-2 -2v7" />
    </svg>
    """
  end

  @doc """
  Renders the `building_circus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_circus />
      <TablerIcons.building_circus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_circus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 11h16" />
      <path d="M12 6.5c0 1 -5 4.5 -8 4.5" />
      <path d="M12 6.5c0 1 5 4.5 8 4.5" />
      <path d="M6 11c-.333 5.333 -1 8.667 -2 10h4c1 0 4 -4 4 -9v-1" />
      <path d="M18 11c.333 5.333 1 8.667 2 10h-4c-1 0 -4 -4 -4 -9v-1" />
      <path d="M12 7v-4l2 1h-2" />
    </svg>
    """
  end

  @doc """
  Renders the `building_community` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_community />
      <TablerIcons.building_community class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_community(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9l5 5v7h-5v-4m0 4h-5v-7l5 -5m1 1v-6a1 1 0 0 1 1 -1h10a1 1 0 0 1 1 1v17h-8" />
      <path d="M13 7l0 .01" />
      <path d="M17 7l0 .01" />
      <path d="M17 11l0 .01" />
      <path d="M17 15l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `building_cottage` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_cottage />
      <TablerIcons.building_cottage class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_cottage(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21l18 0" />
      <path d="M4 21v-11l2.5 -4.5l5.5 -2.5l5.5 2.5l2.5 4.5v11" />
      <path d="M12 9m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M9 21v-5a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v5" />
    </svg>
    """
  end

  @doc """
  Renders the `building_estate` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_estate />
      <TablerIcons.building_estate class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_estate(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21h18" />
      <path d="M19 21v-4" />
      <path d="M19 17a2 2 0 0 0 2 -2v-2a2 2 0 1 0 -4 0v2a2 2 0 0 0 2 2z" />
      <path d="M14 21v-14a3 3 0 0 0 -3 -3h-4a3 3 0 0 0 -3 3v14" />
      <path d="M9 17v4" />
      <path d="M8 13h2" />
      <path d="M8 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `building_factory_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_factory_2 />
      <TablerIcons.building_factory_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_factory_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21h18" />
      <path d="M5 21v-12l5 4v-4l5 4h4" />
      <path d="M19 21v-8l-1.436 -9.574a.5 .5 0 0 0 -.495 -.426h-1.145a.5 .5 0 0 0 -.494 .418l-1.43 8.582" />
      <path d="M9 17h1" />
      <path d="M14 17h1" />
    </svg>
    """
  end

  @doc """
  Renders the `building_factory` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_factory />
      <TablerIcons.building_factory class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_factory(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 21c1.147 -4.02 1.983 -8.027 2 -12h6c.017 3.973 .853 7.98 2 12" />
      <path d="M12.5 13h4.5c.025 2.612 .894 5.296 2 8" />
      <path d="M9 5a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1" />
      <path d="M3 21l19 0" />
    </svg>
    """
  end

  @doc """
  Renders the `building_fortress` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_fortress />
      <TablerIcons.building_fortress class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_fortress(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 21h1a1 1 0 0 0 1 -1v-1h0a3 3 0 0 1 6 0m3 2h1a1 1 0 0 0 1 -1v-15l-3 -2l-3 2v6h-4v-6l-3 -2l-3 2v15a1 1 0 0 0 1 1h2m8 -2v1a1 1 0 0 0 1 1h2" />
      <path d="M7 7h0v.01" />
      <path d="M7 10h0v.01" />
      <path d="M7 13h0v.01" />
      <path d="M17 7h0v.01" />
      <path d="M17 10h0v.01" />
      <path d="M17 13h0v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `building_hospital` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_hospital />
      <TablerIcons.building_hospital class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_hospital(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21l18 0" />
      <path d="M5 21v-16a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v16" />
      <path d="M9 21v-4a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v4" />
      <path d="M10 9l4 0" />
      <path d="M12 7l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `building_lighthouse` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_lighthouse />
      <TablerIcons.building_lighthouse class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_lighthouse(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3l2 3l2 15h-8l2 -15z" />
      <path d="M8 9l8 0" />
      <path d="M3 11l2 -2l-2 -2" />
      <path d="M21 11l-2 -2l2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `building_monument` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_monument />
      <TablerIcons.building_monument class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_monument(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 18l2 -13l2 -2l2 2l2 13" />
      <path d="M5 21v-3h14v3" />
      <path d="M3 21l18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `building_mosque` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_mosque />
      <TablerIcons.building_mosque class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_mosque(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21h7v-2a2 2 0 1 1 4 0v2h7" />
      <path d="M4 21v-10" />
      <path d="M20 21v-10" />
      <path d="M4 16h3v-3h10v3h3" />
      <path d="M17 13a5 5 0 0 0 -10 0" />
      <path d="M21 10.5c0 -.329 -.077 -.653 -.224 -.947l-.776 -1.553l-.776 1.553a2.118 2.118 0 0 0 -.224 .947a.5 .5 0 0 0 .5 .5h1a.5 .5 0 0 0 .5 -.5z" />
      <path d="M5 10.5c0 -.329 -.077 -.653 -.224 -.947l-.776 -1.553l-.776 1.553a2.118 2.118 0 0 0 -.224 .947a.5 .5 0 0 0 .5 .5h1a.5 .5 0 0 0 .5 -.5z" />
      <path d="M12 2a2 2 0 1 0 2 2" />
      <path d="M12 6v2" />
    </svg>
    """
  end

  @doc """
  Renders the `building_pavilion` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_pavilion />
      <TablerIcons.building_pavilion class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_pavilion(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21h7v-3a2 2 0 0 1 4 0v3h7" />
      <path d="M6 21l0 -9" />
      <path d="M18 21l0 -9" />
      <path d="M6 12h12a3 3 0 0 0 3 -3a9 8 0 0 1 -9 -6a9 8 0 0 1 -9 6a3 3 0 0 0 3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `building_skyscraper` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_skyscraper />
      <TablerIcons.building_skyscraper class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_skyscraper(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21l18 0" />
      <path d="M5 21v-14l8 -4v18" />
      <path d="M19 21v-10l-6 -4" />
      <path d="M9 9l0 .01" />
      <path d="M9 12l0 .01" />
      <path d="M9 15l0 .01" />
      <path d="M9 18l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `building_stadium` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_stadium />
      <TablerIcons.building_stadium class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_stadium(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-8 0a8 2 0 1 0 16 0a8 2 0 1 0 -16 0" />
      <path d="M4 12v7c0 .94 2.51 1.785 6 2v-3h4v3c3.435 -.225 6 -1.07 6 -2v-7" />
      <path d="M15 6h4v-3h-4v7" />
      <path d="M7 6h4v-3h-4v7" />
    </svg>
    """
  end

  @doc """
  Renders the `building_store` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_store />
      <TablerIcons.building_store class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_store(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21l18 0" />
      <path d="M3 7v1a3 3 0 0 0 6 0v-1m0 1a3 3 0 0 0 6 0v-1m0 1a3 3 0 0 0 6 0v-1h-18l2 -4h14l2 4" />
      <path d="M5 21l0 -10.15" />
      <path d="M19 21l0 -10.15" />
      <path d="M9 21v-4a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v4" />
    </svg>
    """
  end

  @doc """
  Renders the `building_tunnel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_tunnel />
      <TablerIcons.building_tunnel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_tunnel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 21h14a2 2 0 0 0 2 -2v-7a9 9 0 0 0 -18 0v7a2 2 0 0 0 2 2z" />
      <path d="M8 21v-9a4 4 0 1 1 8 0v9" />
      <path d="M3 17h4" />
      <path d="M17 17h4" />
      <path d="M21 12h-4" />
      <path d="M7 12h-4" />
      <path d="M12 3v5" />
      <path d="M6 6l3 3" />
      <path d="M15 9l3 -3l-3 3z" />
    </svg>
    """
  end

  @doc """
  Renders the `building_warehouse` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_warehouse />
      <TablerIcons.building_warehouse class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_warehouse(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21v-13l9 -4l9 4v13" />
      <path d="M13 13h4v8h-10v-6h6" />
      <path d="M13 21v-9a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v3" />
    </svg>
    """
  end

  @doc """
  Renders the `building_wind_turbine` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building_wind_turbine />
      <TablerIcons.building_wind_turbine class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building_wind_turbine(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 11m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M10 11v-2.573c0 -.18 .013 -.358 .04 -.536l.716 -4.828c.064 -.597 .597 -1.063 1.244 -1.063s1.18 .466 1.244 1.063l.716 4.828c.027 .178 .04 .357 .04 .536v2.573" />
      <path d="M13.01 9.28l2.235 1.276c.156 .09 .305 .19 .446 .3l3.836 2.911c.487 .352 .624 1.04 .3 1.596c-.325 .556 -1 .782 -1.548 .541l-4.555 -1.68a3.624 3.624 0 0 1 -.486 -.231l-2.235 -1.277" />
      <path d="M13 12.716l-2.236 1.277a3.624 3.624 0 0 1 -.485 .23l-4.555 1.681c-.551 .241 -1.223 .015 -1.548 -.54c-.324 -.557 -.187 -1.245 .3 -1.597l3.836 -2.91a3.41 3.41 0 0 1 .446 -.3l2.235 -1.277" />
      <path d="M7 21h10" />
      <path d="M10 21l1 -7" />
      <path d="M13 14l1 7" />
    </svg>
    """
  end

  @doc """
  Renders the `building` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.building />
      <TablerIcons.building class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def building(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21l18 0" />
      <path d="M9 8l1 0" />
      <path d="M9 12l1 0" />
      <path d="M9 16l1 0" />
      <path d="M14 8l1 0" />
      <path d="M14 12l1 0" />
      <path d="M14 16l1 0" />
      <path d="M5 21v-16a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v16" />
    </svg>
    """
  end

  @doc """
  Renders the `bulb_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bulb_filled />
      <TablerIcons.bulb_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bulb_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M4 11a1 1 0 0 1 .117 1.993l-.117 .007h-1a1 1 0 0 1 -.117 -1.993l.117 -.007h1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 2a1 1 0 0 1 .993 .883l.007 .117v1a1 1 0 0 1 -1.993 .117l-.007 -.117v-1a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M21 11a1 1 0 0 1 .117 1.993l-.117 .007h-1a1 1 0 0 1 -.117 -1.993l.117 -.007h1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4.893 4.893a1 1 0 0 1 1.32 -.083l.094 .083l.7 .7a1 1 0 0 1 -1.32 1.497l-.094 -.083l-.7 -.7a1 1 0 0 1 0 -1.414z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M17.693 4.893a1 1 0 0 1 1.497 1.32l-.083 .094l-.7 .7a1 1 0 0 1 -1.497 -1.32l.083 -.094l.7 -.7z"
        stroke-width="0"
        fill="currentColor"
      />
      <path d="M14 18a1 1 0 0 1 1 1a3 3 0 0 1 -6 0a1 1 0 0 1 .883 -.993l.117 -.007h4z" stroke-width="0" fill="currentColor" />
      <path
        d="M12 6a6 6 0 0 1 3.6 10.8a1 1 0 0 1 -.471 .192l-.129 .008h-6a1 1 0 0 1 -.6 -.2a6 6 0 0 1 3.6 -10.8z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `bulb_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bulb_off />
      <TablerIcons.bulb_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bulb_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h1m8 -9v1m8 8h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7" />
      <path d="M11.089 7.083a5 5 0 0 1 5.826 5.84m-1.378 2.611a5.012 5.012 0 0 1 -.537 .466a3.5 3.5 0 0 0 -1 3a2 2 0 1 1 -4 0a3.5 3.5 0 0 0 -1 -3a5 5 0 0 1 -.528 -7.544" />
      <path d="M9.7 17h4.6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bulb` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bulb />
      <TablerIcons.bulb class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bulb(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h1m8 -9v1m8 8h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7" />
      <path d="M9 16a5 5 0 1 1 6 0a3.5 3.5 0 0 0 -1 3a2 2 0 0 1 -4 0a3.5 3.5 0 0 0 -1 -3" />
      <path d="M9.7 17l4.6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `bulldozer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bulldozer />
      <TablerIcons.bulldozer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bulldozer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 17a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 17a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M19 13v4a2 2 0 0 0 2 2h1" />
      <path d="M14 19h-10" />
      <path d="M4 15h10" />
      <path d="M9 11v-5h2a3 3 0 0 1 3 3v6" />
      <path d="M5 15v-3a1 1 0 0 1 1 -1h8" />
      <path d="M19 17h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `bus_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bus_off />
      <TablerIcons.bus_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bus_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M16.18 16.172a2 2 0 0 0 2.652 2.648" />
      <path d="M4 17h-2v-11a1 1 0 0 1 1 -1h2m4 0h8c2.761 0 5 3.134 5 7v5h-1m-5 0h-8" />
      <path d="M16 5l1.5 7h4.5" />
      <path d="M2 10h8m4 0h3" />
      <path d="M7 7v3" />
      <path d="M12 5v3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `bus_stop` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bus_stop />
      <TablerIcons.bus_stop class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bus_stop(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M18 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M10 5h7c2.761 0 5 3.134 5 7v5h-2" />
      <path d="M16 17h-8" />
      <path d="M16 5l1.5 7h4.5" />
      <path d="M9.5 10h7.5" />
      <path d="M12 5v5" />
      <path d="M5 9v11" />
    </svg>
    """
  end

  @doc """
  Renders the `bus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.bus />
      <TablerIcons.bus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def bus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M4 17h-2v-11a1 1 0 0 1 1 -1h14a5 7 0 0 1 5 7v5h-2m-4 0h-8" />
      <path d="M16 5l1.5 7l4.5 0" />
      <path d="M2 10l15 0" />
      <path d="M7 5l0 5" />
      <path d="M12 5l0 5" />
    </svg>
    """
  end

  @doc """
  Renders the `businessplan` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.businessplan />
      <TablerIcons.businessplan class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def businessplan(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 6m-5 0a5 3 0 1 0 10 0a5 3 0 1 0 -10 0" />
      <path d="M11 6v4c0 1.657 2.239 3 5 3s5 -1.343 5 -3v-4" />
      <path d="M11 10v4c0 1.657 2.239 3 5 3s5 -1.343 5 -3v-4" />
      <path d="M11 14v4c0 1.657 2.239 3 5 3s5 -1.343 5 -3v-4" />
      <path d="M7 9h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M5 15v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `butterfly` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.butterfly />
      <TablerIcons.butterfly class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def butterfly(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.176a3 3 0 1 1 -4.953 -2.449l-.025 .023a4.502 4.502 0 0 1 1.483 -8.75c1.414 0 2.675 .652 3.5 1.671a4.5 4.5 0 1 1 4.983 7.079a3 3 0 1 1 -4.983 2.25z" />
      <path d="M12 19v-10" />
      <path d="M9 3l3 2l3 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `cactus_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cactus_filled />
      <TablerIcons.cactus_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cactus_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M7 22a1 1 0 0 1 -.117 -1.993l.117 -.007h2v-6a4 4 0 0 1 -3.995 -3.8l-.005 -.2v-1a1 1 0 0 1 1.993 -.117l.007 .117v1a2 2 0 0 0 1.85 1.995l.15 .005v-7a3 3 0 0 1 5.995 -.176l.005 .176v10a2 2 0 0 0 1.995 -1.85l.005 -.15v-5a1 1 0 0 1 1.993 -.117l.007 .117v5a4 4 0 0 1 -3.8 3.995l-.2 .005v3h2a1 1 0 0 1 .117 1.993l-.117 .007h-10z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `cactus_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cactus_off />
      <TablerIcons.cactus_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cactus_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 9v1a3 3 0 0 0 3 3h1" />
      <path d="M18 8v5a3 3 0 0 1 -.129 .872m-2.014 2a3 3 0 0 1 -.857 .124h-1" />
      <path d="M10 21v-11m0 -4v-1a2 2 0 1 1 4 0v5m0 4v7" />
      <path d="M7 21h10" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cactus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cactus />
      <TablerIcons.cactus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cactus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 9v1a3 3 0 0 0 3 3h1" />
      <path d="M18 8v5a3 3 0 0 1 -3 3h-1" />
      <path d="M10 21v-16a2 2 0 1 1 4 0v16" />
      <path d="M7 21h10" />
    </svg>
    """
  end

  @doc """
  Renders the `cake_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cake_off />
      <TablerIcons.cake_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cake_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 17v-5a3 3 0 0 0 -3 -3h-5m-4 0h-3a3 3 0 0 0 -3 3v8h17" />
      <path d="M3 14.803c.312 .135 .654 .204 1 .197a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1m4 0a2.4 2.4 0 0 0 2 1c.35 .007 .692 -.062 1 -.197" />
      <path d="M10.172 6.188c.07 -.158 .163 -.31 .278 -.451l1.55 -1.737l1.465 1.638a2 2 0 0 1 -.65 3.19" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cake` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cake />
      <TablerIcons.cake class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cake(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 20h18v-8a3 3 0 0 0 -3 -3h-12a3 3 0 0 0 -3 3v8z" />
      <path d="M3 14.803c.312 .135 .654 .204 1 .197a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1c.35 .007 .692 -.062 1 -.197" />
      <path d="M12 4l1.465 1.638a2 2 0 1 1 -3.015 .099l1.55 -1.737z" />
    </svg>
    """
  end

  @doc """
  Renders the `calculator_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calculator_filled />
      <TablerIcons.calculator_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calculator_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-10 15a1 1 0 0 0 -1 1l.007 .127a1 1 0 0 0 1.993 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm4 0a1 1 0 0 0 -1 1l.007 .127a1 1 0 0 0 1.993 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm4 0a1 1 0 0 0 -1 1l.007 .127a1 1 0 0 0 1.993 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm-8 -4a1 1 0 0 0 -1 1l.007 .127a1 1 0 0 0 1.993 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm4 0a1 1 0 0 0 -1 1l.007 .127a1 1 0 0 0 1.993 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm4 0a1 1 0 0 0 -1 1l.007 .127a1 1 0 0 0 1.993 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm-1 -7h-6a2 2 0 0 0 -2 2v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2 -2v-1a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `calculator_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calculator_off />
      <TablerIcons.calculator_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calculator_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.823 19.824a2 2 0 0 1 -1.823 1.176h-12a2 2 0 0 1 -2 -2v-14c0 -.295 .064 -.575 .178 -.827m2.822 -1.173h11a2 2 0 0 1 2 2v11" />
      <path d="M10 10h-1a1 1 0 0 1 -1 -1v-1m3 -1h4a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-1" />
      <path d="M8 14v.01" />
      <path d="M12 14v.01" />
      <path d="M8 17v.01" />
      <path d="M12 17v.01" />
      <path d="M16 17v.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `calculator` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calculator />
      <TablerIcons.calculator class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calculator(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 3m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M8 7m0 1a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1z" />
      <path d="M8 14l0 .01" />
      <path d="M12 14l0 .01" />
      <path d="M16 14l0 .01" />
      <path d="M8 17l0 .01" />
      <path d="M12 17l0 .01" />
      <path d="M16 17l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_bolt />
      <TablerIcons.calendar_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 21h-7.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v5" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_cancel />
      <TablerIcons.calendar_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v5" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_check />
      <TablerIcons.calendar_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-5.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v6" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_code />
      <TablerIcons.calendar_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-5.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v6" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_cog />
      <TablerIcons.calendar_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21h-6a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v5" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_dollar />
      <TablerIcons.calendar_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21h-7a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v3" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h12.5" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_down />
      <TablerIcons.calendar_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v5" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_due` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_due />
      <TablerIcons.calendar_due class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_due(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 5m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M12 16m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_event` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_event />
      <TablerIcons.calendar_event class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_event(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 5m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M16 3l0 4" />
      <path d="M8 3l0 4" />
      <path d="M4 11l16 0" />
      <path d="M8 15h2v2h-2z" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_exclamation />
      <TablerIcons.calendar_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 21h-9a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v5" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M11 15h1" />
      <path d="M12 15v3" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_filled />
      <TablerIcons.calendar_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M16 2a1 1 0 0 1 .993 .883l.007 .117v1h1a3 3 0 0 1 2.995 2.824l.005 .176v12a3 3 0 0 1 -2.824 2.995l-.176 .005h-12a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-12a3 3 0 0 1 2.824 -2.995l.176 -.005h1v-1a1 1 0 0 1 1.993 -.117l.007 .117v1h6v-1a1 1 0 0 1 1 -1zm3 7h-14v9.625c0 .705 .386 1.286 .883 1.366l.117 .009h12c.513 0 .936 -.53 .993 -1.215l.007 -.16v-9.625z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 12a1 1 0 0 1 .993 .883l.007 .117v3a1 1 0 0 1 -1.993 .117l-.007 -.117v-2a1 1 0 0 1 -.117 -1.993l.117 -.007h1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_heart />
      <TablerIcons.calendar_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-5.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v4" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_minus />
      <TablerIcons.calendar_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_off />
      <TablerIcons.calendar_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h9a2 2 0 0 1 2 2v9m-.184 3.839a2 2 0 0 1 -1.816 1.161h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 1.158 -1.815" />
      <path d="M16 3v4" />
      <path d="M8 3v1" />
      <path d="M4 11h7m4 0h5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_pause />
      <TablerIcons.calendar_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21h-7a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v6" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_pin />
      <TablerIcons.calendar_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v4" />
      <path d="M16 3v4" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_plus />
      <TablerIcons.calendar_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v5" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_question />
      <TablerIcons.calendar_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 21h-9a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v4" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_repeat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_repeat />
      <TablerIcons.calendar_repeat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_repeat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v3" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h12" />
      <path d="M20 14l2 2h-3" />
      <path d="M20 18l2 -2" />
      <path d="M19 16a3 3 0 1 0 2 5.236" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_search />
      <TablerIcons.calendar_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-5.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v4.5" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_share />
      <TablerIcons.calendar_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21h-6a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v6" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_star />
      <TablerIcons.calendar_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 21h-5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v3.5" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h11" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_stats` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_stats />
      <TablerIcons.calendar_stats class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_stats(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.795 21h-6.795a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v4" />
      <path d="M18 14v4h4" />
      <path d="M18 18m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M15 3v4" />
      <path d="M7 3v4" />
      <path d="M3 11h16" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_time` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_time />
      <TablerIcons.calendar_time class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_time(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.795 21h-6.795a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v4" />
      <path d="M18 18m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M15 3v4" />
      <path d="M7 3v4" />
      <path d="M3 11h16" />
      <path d="M18 16.496v1.504l1 1" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_up />
      <TablerIcons.calendar_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v5" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar_x />
      <TablerIcons.calendar_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21h-7a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v6.5" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `calendar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.calendar />
      <TablerIcons.calendar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def calendar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 7a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12z" />
      <path d="M16 3v4" />
      <path d="M8 3v4" />
      <path d="M4 11h16" />
      <path d="M11 15h1" />
      <path d="M12 15v3" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_bolt />
      <TablerIcons.camera_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 20h-8a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v3.5" />
      <path d="M9 13a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_cancel />
      <TablerIcons.camera_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-7a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v3.5" />
      <path d="M14.984 13.307a3 3 0 1 0 -2.32 2.62" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_check />
      <TablerIcons.camera_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 20h-6a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v4" />
      <path d="M9 13a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_code />
      <TablerIcons.camera_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 20h-6a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v4" />
      <path d="M14.948 13.559a3 3 0 1 0 -2.58 2.419" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_cog />
      <TablerIcons.camera_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-7a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v3" />
      <path d="M14.973 13.406a3 3 0 1 0 -2.973 2.594" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_dollar />
      <TablerIcons.camera_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 20h-8a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v1.5" />
      <path d="M14.935 12.375a3.001 3.001 0 1 0 -1.902 3.442" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_down />
      <TablerIcons.camera_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-7a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v3.5" />
      <path d="M9 13a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_exclamation />
      <TablerIcons.camera_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 20h-10a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v3.5" />
      <path d="M9 13a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_filled />
      <TablerIcons.camera_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M15 3a2 2 0 0 1 1.995 1.85l.005 .15a1 1 0 0 0 .883 .993l.117 .007h1a3 3 0 0 1 2.995 2.824l.005 .176v9a3 3 0 0 1 -2.824 2.995l-.176 .005h-14a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-9a3 3 0 0 1 2.824 -2.995l.176 -.005h1a1 1 0 0 0 1 -1a2 2 0 0 1 1.85 -1.995l.15 -.005h6zm-3 7a3 3 0 0 0 -2.985 2.698l-.011 .152l-.004 .15l.004 .15a3 3 0 1 0 2.996 -3.15z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `camera_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_heart />
      <TablerIcons.camera_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.5 20h-5.5a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v2" />
      <path d="M14.41 11.212a3 3 0 1 0 -4.15 4.231" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_minus />
      <TablerIcons.camera_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-7a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v6" />
      <path d="M16 19h6" />
      <path d="M9 13a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_off />
      <TablerIcons.camera_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.297 4.289a.997 .997 0 0 1 .703 -.289h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v8m-1.187 2.828c-.249 .11 -.524 .172 -.813 .172h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1c.298 0 .58 -.065 .834 -.181" />
      <path d="M10.422 10.448a3 3 0 1 0 4.15 4.098" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_pause />
      <TablerIcons.camera_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 20h-8a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v4" />
      <path d="M14.958 13.506a3 3 0 1 0 -1.735 2.235" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_pin />
      <TablerIcons.camera_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 20h-7.5a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v2" />
      <path d="M14.933 12.366a3.001 3.001 0 1 0 -2.933 3.634" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_plus />
      <TablerIcons.camera_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-7a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v3.5" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
      <path d="M9 13a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_question />
      <TablerIcons.camera_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 20h-10a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v2.5" />
      <path d="M14.975 12.612a3 3 0 1 0 -1.507 3.005" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_rotate` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_rotate />
      <TablerIcons.camera_rotate class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_rotate(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 7h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2" />
      <path d="M11.245 15.904a3 3 0 0 0 3.755 -2.904m-2.25 -2.905a3 3 0 0 0 -3.75 2.905" />
      <path d="M14 13h2v2" />
      <path d="M10 13h-2v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_search />
      <TablerIcons.camera_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 20h-6.5a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v2.5" />
      <path d="M14.757 11.815a3 3 0 1 0 -3.431 4.109" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_selfie` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_selfie />
      <TablerIcons.camera_selfie class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_selfie(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 7h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2" />
      <path d="M9.5 15a3.5 3.5 0 0 0 5 0" />
      <path d="M15 11l.01 0" />
      <path d="M9 11l.01 0" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_share />
      <TablerIcons.camera_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 20h-7.5a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v4" />
      <path d="M14.98 13.347a3 3 0 1 0 -2.39 2.595" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_star />
      <TablerIcons.camera_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.5 20h-5.5a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v2.5" />
      <path d="M14.569 11.45a3 3 0 1 0 -4.518 3.83" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_up />
      <TablerIcons.camera_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-7a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v3.5" />
      <path d="M12 16a3 3 0 1 0 0 -6a3 3 0 0 0 0 6z" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `camera_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera_x />
      <TablerIcons.camera_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 20h-8.5a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v4" />
      <path d="M9 13a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `camera` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camera />
      <TablerIcons.camera class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camera(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 7h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2" />
      <path d="M9 13a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `camper` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.camper />
      <TablerIcons.camper class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def camper(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 18a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M15 18a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M5 18h-1a1 1 0 0 1 -1 -1v-11a2 2 0 0 1 2 -2h12a4 4 0 0 1 4 4h-18" />
      <path d="M9 18h6" />
      <path d="M19 18h1a1 1 0 0 0 1 -1v-4l-3 -5" />
      <path d="M21 13h-7" />
      <path d="M14 8v10" />
    </svg>
    """
  end

  @doc """
  Renders the `campfire_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.campfire_filled />
      <TablerIcons.campfire_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def campfire_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19.757 16.03a1 1 0 0 1 .597 1.905l-.111 .035l-16 4a1 1 0 0 1 -.597 -1.905l.111 -.035l16 -4z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M3.03 16.757a1 1 0 0 1 1.098 -.749l.115 .022l16 4a1 1 0 0 1 -.37 1.962l-.116 -.022l-16 -4a1 1 0 0 1 -.727 -1.213z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M13.553 2.106c-4.174 2.086 -6.553 5.358 -6.553 8.894a5 5 0 0 0 10 0c0 -1.047 -.188 -1.808 -.606 -2.705l-.169 -.345l-.33 -.647c-.621 -1.24 -.895 -2.338 -.895 -4.303a1 1 0 0 0 -1.447 -.894z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `campfire` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.campfire />
      <TablerIcons.campfire class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def campfire(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 21l16 -4" />
      <path d="M20 21l-16 -4" />
      <path d="M12 15a4 4 0 0 0 4 -4c0 -3 -2 -3 -2 -8c-4 2 -6 5 -6 8a4 4 0 0 0 4 4z" />
    </svg>
    """
  end

  @doc """
  Renders the `candle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.candle_filled />
      <TablerIcons.candle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def candle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14 10h-4a2 2 0 0 0 -2 2v9a1 1 0 0 0 1 1h6a1 1 0 0 0 1 -1v-9a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M11.254 2.334l-1.55 1.737c-1.042 1.277 -.898 3.097 .296 4.166a3 3 0 0 0 4.196 -4.28l-1.452 -1.624a1 1 0 0 0 -1.491 .001z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `candle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.candle />
      <TablerIcons.candle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def candle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 21h6v-9a1 1 0 0 0 -1 -1h-4a1 1 0 0 0 -1 1v9z" />
      <path d="M12 3l1.465 1.638a2 2 0 1 1 -3.015 .099l1.55 -1.737z" />
    </svg>
    """
  end

  @doc """
  Renders the `candy_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.candy_off />
      <TablerIcons.candy_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def candy_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.174 7.17l.119 -.12a2 2 0 0 1 2.828 0l2.829 2.83a2 2 0 0 1 0 2.828l-.124 .124m-2 2l-2.123 2.123a2 2 0 0 1 -2.828 0l-2.829 -2.831a2 2 0 0 1 0 -2.828l2.113 -2.112" />
      <path d="M16.243 9.172l3.086 -.772a1.5 1.5 0 0 0 .697 -2.516l-2.216 -2.217a1.5 1.5 0 0 0 -2.44 .47l-1.248 2.913" />
      <path d="M9.172 16.243l-.772 3.086a1.5 1.5 0 0 1 -2.516 .697l-2.217 -2.216a1.5 1.5 0 0 1 .47 -2.44l2.913 -1.248" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `candy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.candy />
      <TablerIcons.candy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def candy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.05 11.293l4.243 -4.243a2 2 0 0 1 2.828 0l2.829 2.83a2 2 0 0 1 0 2.828l-4.243 4.243a2 2 0 0 1 -2.828 0l-2.829 -2.831a2 2 0 0 1 0 -2.828z" />
      <path d="M16.243 9.172l3.086 -.772a1.5 1.5 0 0 0 .697 -2.516l-2.216 -2.217a1.5 1.5 0 0 0 -2.44 .47l-1.248 2.913" />
      <path d="M9.172 16.243l-.772 3.086a1.5 1.5 0 0 1 -2.516 .697l-2.217 -2.216a1.5 1.5 0 0 1 .47 -2.44l2.913 -1.248" />
    </svg>
    """
  end

  @doc """
  Renders the `cane` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cane />
      <TablerIcons.cane class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cane(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 21l6.324 -11.69c.54 -.974 1.756 -4.104 -1.499 -5.762c-3.255 -1.657 -5.175 .863 -5.825 2.032" />
    </svg>
    """
  end

  @doc """
  Renders the `cannabis` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cannabis />
      <TablerIcons.cannabis class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cannabis(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 20s0 -2 1 -3.5c-1.5 0 -2 -.5 -4 -1.5c0 0 1.839 -1.38 5 -1c-1.789 -.97 -3.279 -2.03 -5 -6c0 0 3.98 -.3 6.5 3.5c-2.284 -4.9 1.5 -9.5 1.5 -9.5c2.734 5.47 2.389 7.5 1.5 9.5c2.531 -3.77 6.5 -3.5 6.5 -3.5c-1.721 3.97 -3.211 5.03 -5 6c3.161 -.38 5 1 5 1c-2 1 -2.5 1.5 -4 1.5c1 1.5 1 3.5 1 3.5c-2 0 -4.438 -2.22 -5 -3c-.563 .78 -3 3 -5 3z" />
      <path d="M12 22v-5" />
    </svg>
    """
  end

  @doc """
  Renders the `capsule_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.capsule_filled />
      <TablerIcons.capsule_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def capsule_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l-.243 .004a7.004 7.004 0 0 0 -6.757 6.996v6a7 7 0 0 0 7 7l.243 -.004a7.004 7.004 0 0 0 6.757 -6.996v-6a7 7 0 0 0 -7 -7z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `capsule_horizontal_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.capsule_horizontal_filled />
      <TablerIcons.capsule_horizontal_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def capsule_horizontal_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M15 5h-6a7 7 0 1 0 0 14h6a7 7 0 0 0 7 -7l-.007 -.303a7 7 0 0 0 -6.993 -6.697z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `capsule_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.capsule_horizontal />
      <TablerIcons.capsule_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def capsule_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 6m0 6a6 6 0 0 1 6 -6h6a6 6 0 0 1 6 6v0a6 6 0 0 1 -6 6h-6a6 6 0 0 1 -6 -6z" />
    </svg>
    """
  end

  @doc """
  Renders the `capsule` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.capsule />
      <TablerIcons.capsule class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def capsule(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 3m0 6a6 6 0 0 1 6 -6h0a6 6 0 0 1 6 6v6a6 6 0 0 1 -6 6h0a6 6 0 0 1 -6 -6z" />
    </svg>
    """
  end

  @doc """
  Renders the `capture_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.capture_filled />
      <TablerIcons.capture_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def capture_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M8 3a1 1 0 0 1 .117 1.993l-.117 .007h-2a1 1 0 0 0 -.993 .883l-.007 .117v2a1 1 0 0 1 -1.993 .117l-.007 -.117v-2a3 3 0 0 1 2.824 -2.995l.176 -.005h2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 15a1 1 0 0 1 .993 .883l.007 .117v2a1 1 0 0 0 .883 .993l.117 .007h2a1 1 0 0 1 .117 1.993l-.117 .007h-2a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-2a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M18 3a3 3 0 0 1 2.995 2.824l.005 .176v2a1 1 0 0 1 -1.993 .117l-.007 -.117v-2a1 1 0 0 0 -.883 -.993l-.117 -.007h-2a1 1 0 0 1 -.117 -1.993l.117 -.007h2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 15a1 1 0 0 1 .993 .883l.007 .117v2a3 3 0 0 1 -2.824 2.995l-.176 .005h-2a1 1 0 0 1 -.117 -1.993l.117 -.007h2a1 1 0 0 0 .993 -.883l.007 -.117v-2a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path d="M12 8a4 4 0 1 1 -3.995 4.2l-.005 -.2l.005 -.2a4 4 0 0 1 3.995 -3.8z" stroke-width="0" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `capture_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.capture_off />
      <TablerIcons.capture_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def capture_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2c.554 0 1.055 -.225 1.417 -.589" />
      <path d="M9.87 9.887a3 3 0 0 0 4.255 4.23m.58 -3.416a3.012 3.012 0 0 0 -1.4 -1.403" />
      <path d="M4 8v-2c0 -.548 .22 -1.044 .577 -1.405" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `capture` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.capture />
      <TablerIcons.capture class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def capture(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v-2a2 2 0 0 1 2 -2h2" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2a2 2 0 0 0 2 -2v-2" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `car_crane` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.car_crane />
      <TablerIcons.car_crane class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def car_crane(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 18h8m4 0h2v-6a5 5 0 0 0 -5 -5h-1l1.5 5h4.5" />
      <path d="M12 18v-11h3" />
      <path d="M3 17v-5h9" />
      <path d="M4 12v-6l18 -3v2" />
      <path d="M8 12v-4l-4 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `car_crash` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.car_crash />
      <TablerIcons.car_crash class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def car_crash(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 6l4 5h1a2 2 0 0 1 2 2v4h-2m-4 0h-5m0 -6h8m-6 0v-5m2 0h-4" />
      <path d="M14 8v-2" />
      <path d="M19 12h2" />
      <path d="M17.5 15.5l1.5 1.5" />
      <path d="M17.5 8.5l1.5 -1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `car_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.car_off />
      <TablerIcons.car_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def car_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M15.584 15.588a2 2 0 0 0 2.828 2.83" />
      <path d="M5 17h-2v-6l2 -5h1m4 0h4l4 5h1a2 2 0 0 1 2 2v4m-6 0h-6m-6 -6h8m4 0h3m-6 -3v-2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `car_turbine` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.car_turbine />
      <TablerIcons.car_turbine class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def car_turbine(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 13m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M18.86 11c.088 .66 .14 1.512 .14 2a8 8 0 1 1 -8 -8h6" />
      <path d="M11 9c2.489 .108 4.489 .108 6 0" />
      <path d="M17 3m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M11 13l-3.5 -1.5" />
      <path d="M11 13l2.5 3" />
      <path d="M8.5 16l2.5 -3" />
      <path d="M11 13l3.5 -1.5" />
      <path d="M11 9v4" />
    </svg>
    """
  end

  @doc """
  Renders the `car` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.car />
      <TablerIcons.car class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def car(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 17h-2v-6l2 -5h9l4 5h1a2 2 0 0 1 2 2v4h-2m-4 0h-6m-6 -6h15m-6 0v-5" />
    </svg>
    """
  end

  @doc """
  Renders the `caravan` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.caravan />
      <TablerIcons.caravan class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def caravan(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 18a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M11 18h7a2 2 0 0 0 2 -2v-7a2 2 0 0 0 -2 -2h-9.5a5.5 5.5 0 0 0 -5.5 5.5v3.5a2 2 0 0 0 2 2h2" />
      <path d="M8 7l7 -3l1 3" />
      <path d="M13 11m0 .5a.5 .5 0 0 1 .5 -.5h2a.5 .5 0 0 1 .5 .5v2a.5 .5 0 0 1 -.5 .5h-2a.5 .5 0 0 1 -.5 -.5z" />
      <path d="M20 16h2" />
    </svg>
    """
  end

  @doc """
  Renders the `cardboards_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cardboards_off />
      <TablerIcons.cardboards_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cardboards_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.96 16.953c.026 -.147 .04 -.298 .04 -.453v-8.5a2 2 0 0 0 -2 -2h-9m-4 0h-1a2 2 0 0 0 -2 2v8.5a2.5 2.5 0 0 0 2.5 2.5h1.06a3 3 0 0 0 2.34 -1.13l1.54 -1.92a2 2 0 0 1 3.12 0l1.54 1.92a3 3 0 0 0 2.34 1.13h1.06c.155 0 .307 -.014 .454 -.041" />
      <path d="M8 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M16.714 12.7a1 1 0 0 0 -1.417 -1.411l1.417 1.41z" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cardboards` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cardboards />
      <TablerIcons.cardboards class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cardboards(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 8v8.5a2.5 2.5 0 0 0 2.5 2.5h1.06a3 3 0 0 0 2.34 -1.13l1.54 -1.92a2 2 0 0 1 3.12 0l1.54 1.92a3 3 0 0 0 2.34 1.13h1.06a2.5 2.5 0 0 0 2.5 -2.5v-8.5a2 2 0 0 0 -2 -2h-14a2 2 0 0 0 -2 2z" />
      <path d="M8 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M16 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `cards_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cards_filled />
      <TablerIcons.cards_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cards_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.348 3.169l-7.15 3.113a2 2 0 0 0 -1.03 2.608l4.92 11.895a1.96 1.96 0 0 0 2.59 1.063l7.142 -3.11a2.002 2.002 0 0 0 1.036 -2.611l-4.92 -11.894a1.96 1.96 0 0 0 -2.588 -1.064z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M16 3a2 2 0 0 1 1.995 1.85l.005 .15v3.5a1 1 0 0 1 -1.993 .117l-.007 -.117v-3.5h-1a1 1 0 0 1 -.117 -1.993l.117 -.007h1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M19.08 5.61a1 1 0 0 1 1.31 -.53c.257 .108 .505 .21 .769 .314a2 2 0 0 1 1.114 2.479l-.056 .146l-2.298 5.374a1 1 0 0 1 -1.878 -.676l.04 -.11l2.296 -5.371l-.366 -.148l-.402 -.167a1 1 0 0 1 -.53 -1.312z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `cards` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cards />
      <TablerIcons.cards class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cards(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.604 7.197l7.138 -3.109a.96 .96 0 0 1 1.27 .527l4.924 11.902a1 1 0 0 1 -.514 1.304l-7.137 3.109a.96 .96 0 0 1 -1.271 -.527l-4.924 -11.903a1 1 0 0 1 .514 -1.304z" />
      <path d="M15 4h1a1 1 0 0 1 1 1v3.5" />
      <path d="M20 6c.264 .112 .52 .217 .768 .315a1 1 0 0 1 .53 1.311l-2.298 5.374" />
    </svg>
    """
  end

  @doc """
  Renders the `caret_down_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.caret_down_filled />
      <TablerIcons.caret_down_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def caret_down_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 9c.852 0 1.297 .986 .783 1.623l-.076 .084l-6 6a1 1 0 0 1 -1.32 .083l-.094 -.083l-6 -6l-.083 -.094l-.054 -.077l-.054 -.096l-.017 -.036l-.027 -.067l-.032 -.108l-.01 -.053l-.01 -.06l-.004 -.057v-.118l.005 -.058l.009 -.06l.01 -.052l.032 -.108l.027 -.067l.07 -.132l.065 -.09l.073 -.081l.094 -.083l.077 -.054l.096 -.054l.036 -.017l.067 -.027l.108 -.032l.053 -.01l.06 -.01l.057 -.004l12.059 -.002z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `caret_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.caret_down />
      <TablerIcons.caret_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def caret_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 10l6 6l6 -6h-12" />
    </svg>
    """
  end

  @doc """
  Renders the `caret_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.caret_left_filled />
      <TablerIcons.caret_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def caret_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M13.883 5.007l.058 -.005h.118l.058 .005l.06 .009l.052 .01l.108 .032l.067 .027l.132 .07l.09 .065l.081 .073l.083 .094l.054 .077l.054 .096l.017 .036l.027 .067l.032 .108l.01 .053l.01 .06l.004 .057l.002 .059v12c0 .852 -.986 1.297 -1.623 .783l-.084 -.076l-6 -6a1 1 0 0 1 -.083 -1.32l.083 -.094l6 -6l.094 -.083l.077 -.054l.096 -.054l.036 -.017l.067 -.027l.108 -.032l.053 -.01l.06 -.01z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `caret_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.caret_left />
      <TablerIcons.caret_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def caret_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 6l-6 6l6 6v-12" />
    </svg>
    """
  end

  @doc """
  Renders the `caret_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.caret_right_filled />
      <TablerIcons.caret_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def caret_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M9 6c0 -.852 .986 -1.297 1.623 -.783l.084 .076l6 6a1 1 0 0 1 .083 1.32l-.083 .094l-6 6l-.094 .083l-.077 .054l-.096 .054l-.036 .017l-.067 .027l-.108 .032l-.053 .01l-.06 .01l-.057 .004l-.059 .002l-.059 -.002l-.058 -.005l-.06 -.009l-.052 -.01l-.108 -.032l-.067 -.027l-.132 -.07l-.09 -.065l-.081 -.073l-.083 -.094l-.054 -.077l-.054 -.096l-.017 -.036l-.027 -.067l-.032 -.108l-.01 -.053l-.01 -.06l-.004 -.057l-.002 -12.059z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `caret_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.caret_right />
      <TablerIcons.caret_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def caret_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 18l6 -6l-6 -6v12" />
    </svg>
    """
  end

  @doc """
  Renders the `caret_up_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.caret_up_filled />
      <TablerIcons.caret_up_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def caret_up_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11.293 7.293a1 1 0 0 1 1.32 -.083l.094 .083l6 6l.083 .094l.054 .077l.054 .096l.017 .036l.027 .067l.032 .108l.01 .053l.01 .06l.004 .057l.002 .059l-.002 .059l-.005 .058l-.009 .06l-.01 .052l-.032 .108l-.027 .067l-.07 .132l-.065 .09l-.073 .081l-.094 .083l-.077 .054l-.096 .054l-.036 .017l-.067 .027l-.108 .032l-.053 .01l-.06 .01l-.057 .004l-.059 .002h-12c-.852 0 -1.297 -.986 -.783 -1.623l.076 -.084l6 -6z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `caret_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.caret_up />
      <TablerIcons.caret_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def caret_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 14l-6 -6l-6 6h12" />
    </svg>
    """
  end

  @doc """
  Renders the `carousel_horizontal_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.carousel_horizontal_filled />
      <TablerIcons.carousel_horizontal_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def carousel_horizontal_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M16 4h-8a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M22 6a1 1 0 0 1 .117 1.993l-.117 .007h-1v8h1a1 1 0 0 1 .117 1.993l-.117 .007h-1a2 2 0 0 1 -1.995 -1.85l-.005 -.15v-8a2 2 0 0 1 1.85 -1.995l.15 -.005h1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M3 6a2 2 0 0 1 1.995 1.85l.005 .15v8a2 2 0 0 1 -1.85 1.995l-.15 .005h-1a1 1 0 0 1 -.117 -1.993l.117 -.007h1v-8h-1a1 1 0 0 1 -.117 -1.993l.117 -.007h1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `carousel_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.carousel_horizontal />
      <TablerIcons.carousel_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def carousel_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 5m0 1a1 1 0 0 1 1 -1h8a1 1 0 0 1 1 1v12a1 1 0 0 1 -1 1h-8a1 1 0 0 1 -1 -1z" />
      <path d="M22 17h-1a1 1 0 0 1 -1 -1v-8a1 1 0 0 1 1 -1h1" />
      <path d="M2 17h1a1 1 0 0 0 1 -1v-8a1 1 0 0 0 -1 -1h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `carousel_vertical_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.carousel_vertical_filled />
      <TablerIcons.carousel_vertical_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def carousel_vertical_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 6h-12a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-8a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M16 19a2 2 0 0 1 1.995 1.85l.005 .15v1a1 1 0 0 1 -1.993 .117l-.007 -.117v-1h-8v1a1 1 0 0 1 -1.993 .117l-.007 -.117v-1a2 2 0 0 1 1.85 -1.995l.15 -.005h8z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M17 1a1 1 0 0 1 .993 .883l.007 .117v1a2 2 0 0 1 -1.85 1.995l-.15 .005h-8a2 2 0 0 1 -1.995 -1.85l-.005 -.15v-1a1 1 0 0 1 1.993 -.117l.007 .117v1h8v-1a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `carousel_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.carousel_vertical />
      <TablerIcons.carousel_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def carousel_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 8v8a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1v-8a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1z" />
      <path d="M7 22v-1a1 1 0 0 1 1 -1h8a1 1 0 0 1 1 1v1" />
      <path d="M17 2v1a1 1 0 0 1 -1 1h-8a1 1 0 0 1 -1 -1v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `carrot_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.carrot_off />
      <TablerIcons.carrot_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def carrot_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.868 8.846c-2.756 3.382 -5.868 12.154 -5.868 12.154s8.75 -3.104 12.134 -5.85m1.667 -2.342a4.486 4.486 0 0 0 -5.589 -5.615" />
      <path d="M9 13l-1.5 -1.5" />
      <path d="M22 8s-1.14 -2 -3 -2c-1.406 0 -3 2 -3 2s1.14 2 3 2s3 -2 3 -2z" />
      <path d="M16 2s-2 1.14 -2 3s2 3 2 3s2 -1.577 2 -3c0 -1.86 -2 -3 -2 -3z" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `carrot` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.carrot />
      <TablerIcons.carrot class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def carrot(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21s9.834 -3.489 12.684 -6.34a4.487 4.487 0 0 0 0 -6.344a4.483 4.483 0 0 0 -6.342 0c-2.86 2.861 -6.347 12.689 -6.347 12.689z" />
      <path d="M9 13l-1.5 -1.5" />
      <path d="M16 14l-2 -2" />
      <path d="M22 8s-1.14 -2 -3 -2c-1.406 0 -3 2 -3 2s1.14 2 3 2s3 -2 3 -2z" />
      <path d="M16 2s-2 1.14 -2 3s2 3 2 3s2 -1.577 2 -3c0 -1.86 -2 -3 -2 -3z" />
    </svg>
    """
  end

  @doc """
  Renders the `cash_banknote_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cash_banknote_off />
      <TablerIcons.cash_banknote_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cash_banknote_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.88 9.878a3 3 0 1 0 4.242 4.243m.58 -3.425a3.012 3.012 0 0 0 -1.412 -1.405" />
      <path d="M10 6h9a2 2 0 0 1 2 2v8c0 .294 -.064 .574 -.178 .825m-2.822 1.175h-13a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h1" />
      <path d="M18 12l.01 0" />
      <path d="M6 12l.01 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cash_banknote` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cash_banknote />
      <TablerIcons.cash_banknote class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cash_banknote(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M3 6m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M18 12l.01 0" />
      <path d="M6 12l.01 0" />
    </svg>
    """
  end

  @doc """
  Renders the `cash_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cash_off />
      <TablerIcons.cash_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cash_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 9h6a2 2 0 0 1 2 2v6m-2 2h-10a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2" />
      <path d="M12.582 12.59a2 2 0 0 0 2.83 2.826" />
      <path d="M17 9v-2a2 2 0 0 0 -2 -2h-6m-4 0a2 2 0 0 0 -2 2v6a2 2 0 0 0 2 2h2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cash` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cash />
      <TablerIcons.cash class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cash(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 9m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M14 14m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 9v-2a2 2 0 0 0 -2 -2h-10a2 2 0 0 0 -2 2v6a2 2 0 0 0 2 2h2" />
    </svg>
    """
  end

  @doc """
  Renders the `cast_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cast_off />
      <TablerIcons.cast_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cast_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19h.01" />
      <path d="M7 19a4 4 0 0 0 -4 -4" />
      <path d="M11 19a8 8 0 0 0 -8 -8" />
      <path d="M15 19h3a3 3 0 0 0 .875 -.13m2 -2a3 3 0 0 0 .128 -.868v-8a3 3 0 0 0 -3 -3h-9m-3.865 .136a3 3 0 0 0 -1.935 1.864" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cast` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cast />
      <TablerIcons.cast class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cast(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19l.01 0" />
      <path d="M7 19a4 4 0 0 0 -4 -4" />
      <path d="M11 19a8 8 0 0 0 -8 -8" />
      <path d="M15 19h3a3 3 0 0 0 3 -3v-8a3 3 0 0 0 -3 -3h-12a3 3 0 0 0 -2.8 2" />
    </svg>
    """
  end

  @doc """
  Renders the `cat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cat />
      <TablerIcons.cat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 3v10a8 8 0 1 1 -16 0v-10l3.432 3.432a7.963 7.963 0 0 1 4.568 -1.432c1.769 0 3.403 .574 4.728 1.546l3.272 -3.546z" />
      <path d="M2 16h5l-4 4" />
      <path d="M22 16h-5l4 4" />
      <path d="M12 16m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M9 11v.01" />
      <path d="M15 11v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `category_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.category_2 />
      <TablerIcons.category_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def category_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 4h6v6h-6z" />
      <path d="M4 14h6v6h-6z" />
      <path d="M17 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M7 7m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `category_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.category_filled />
      <TablerIcons.category_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def category_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10 3h-6a1 1 0 0 0 -1 1v6a1 1 0 0 0 1 1h6a1 1 0 0 0 1 -1v-6a1 1 0 0 0 -1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 3h-6a1 1 0 0 0 -1 1v6a1 1 0 0 0 1 1h6a1 1 0 0 0 1 -1v-6a1 1 0 0 0 -1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M10 13h-6a1 1 0 0 0 -1 1v6a1 1 0 0 0 1 1h6a1 1 0 0 0 1 -1v-6a1 1 0 0 0 -1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path d="M17 13a4 4 0 1 1 -3.995 4.2l-.005 -.2l.005 -.2a4 4 0 0 1 3.995 -3.8z" stroke-width="0" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `category` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.category />
      <TablerIcons.category class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def category(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4h6v6h-6z" />
      <path d="M14 4h6v6h-6z" />
      <path d="M4 14h6v6h-6z" />
      <path d="M17 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `ce_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ce_off />
      <TablerIcons.ce_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ce_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 4a7.99 7.99 0 0 0 -2.581 .426" />
      <path d="M5.867 5.864a8 8 0 0 0 5.133 14.136" />
      <path d="M20 4a8 8 0 0 0 -7.29 4.7" />
      <path d="M12 12a8 8 0 0 0 8 8" />
      <path d="M16 12h4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ce` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ce />
      <TablerIcons.ce class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ce(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 6a6 6 0 1 0 0 12" />
      <path d="M21 6a6 6 0 1 0 0 12" />
      <path d="M15 12h6" />
    </svg>
    """
  end

  @doc """
  Renders the `cell_signal_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cell_signal_1 />
      <TablerIcons.cell_signal_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cell_signal_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 20h-15.269a.731 .731 0 0 1 -.517 -1.249l14.537 -14.537a.731 .731 0 0 1 1.249 .517v15.269z" />
    </svg>
    """
  end

  @doc """
  Renders the `cell_signal_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cell_signal_2 />
      <TablerIcons.cell_signal_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cell_signal_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 20h-15.269a.731 .731 0 0 1 -.517 -1.249l14.537 -14.537a.731 .731 0 0 1 1.249 .517v15.269z" />
      <path d="M8 20v-5" />
    </svg>
    """
  end

  @doc """
  Renders the `cell_signal_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cell_signal_3 />
      <TablerIcons.cell_signal_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cell_signal_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 20h-15.269a.731 .731 0 0 1 -.517 -1.249l14.537 -14.537a.731 .731 0 0 1 1.249 .517v15.269z" />
      <path d="M12 20v-9" />
    </svg>
    """
  end

  @doc """
  Renders the `cell_signal_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cell_signal_4 />
      <TablerIcons.cell_signal_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cell_signal_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 20h-15.269a.731 .731 0 0 1 -.517 -1.249l14.537 -14.537a.731 .731 0 0 1 1.249 .517v15.269z" />
      <path d="M16 7v13" />
    </svg>
    """
  end

  @doc """
  Renders the `cell_signal_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cell_signal_5 />
      <TablerIcons.cell_signal_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cell_signal_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 20h-15.269a.731 .731 0 0 1 -.517 -1.249l14.537 -14.537a.731 .731 0 0 1 1.249 .517v15.269z" />
      <path d="M16 7v13" />
      <path d="M12 20v-9" />
      <path d="M8 20v-5" />
    </svg>
    """
  end

  @doc """
  Renders the `cell_signal_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cell_signal_off />
      <TablerIcons.cell_signal_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cell_signal_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 20h-15.269a.731 .731 0 0 1 -.517 -1.249l7.265 -7.264m2 -2l5.272 -5.272a.731 .731 0 0 1 1.249 .517v11.269" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cell` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cell />
      <TablerIcons.cell class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cell(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4l-4 2v5l4 2l4 -2v-5z" />
      <path d="M12 11l4 2l4 -2v-5l-4 -2l-4 2" />
      <path d="M8 13v5l4 2l4 -2v-5" />
    </svg>
    """
  end

  @doc """
  Renders the `certificate_2_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.certificate_2_off />
      <TablerIcons.certificate_2_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def certificate_2_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12a3 3 0 1 0 3 3" />
      <path d="M11 7h3" />
      <path d="M10 18v4l2 -1l2 1v-4" />
      <path d="M10 19h-2a2 2 0 0 1 -2 -2v-11m1.18 -2.825c.25 -.112 .529 -.175 .82 -.175h8a2 2 0 0 1 2 2v9m-.175 3.82a2 2 0 0 1 -1.825 1.18h-2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `certificate_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.certificate_2 />
      <TablerIcons.certificate_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def certificate_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 15m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M10 7h4" />
      <path d="M10 18v4l2 -1l2 1v-4" />
      <path d="M10 19h-2a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-2" />
    </svg>
    """
  end

  @doc """
  Renders the `certificate_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.certificate_off />
      <TablerIcons.certificate_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def certificate_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.876 12.881a3 3 0 0 0 4.243 4.243m.588 -3.42a3.012 3.012 0 0 0 -1.437 -1.423" />
      <path d="M13 17.5v4.5l2 -1.5l2 1.5v-4.5" />
      <path d="M10 19h-5a2 2 0 0 1 -2 -2v-10c0 -1.1 .9 -2 2 -2m4 0h10a2 2 0 0 1 2 2v10" />
      <path d="M6 9h3m4 0h5" />
      <path d="M6 12h3" />
      <path d="M6 15h2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `certificate` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.certificate />
      <TablerIcons.certificate class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def certificate(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 15m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M13 17.5v4.5l2 -1.5l2 1.5v-4.5" />
      <path d="M10 19h-5a2 2 0 0 1 -2 -2v-10c0 -1.1 .9 -2 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -1 1.73" />
      <path d="M6 9l12 0" />
      <path d="M6 12l3 0" />
      <path d="M6 15l2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `chair_director` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chair_director />
      <TablerIcons.chair_director class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chair_director(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 21l12 -9" />
      <path d="M6 12l12 9" />
      <path d="M5 12h14" />
      <path d="M6 3v9" />
      <path d="M18 3v9" />
      <path d="M6 8h12" />
      <path d="M6 5h12" />
    </svg>
    """
  end

  @doc """
  Renders the `chalkboard_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chalkboard_off />
      <TablerIcons.chalkboard_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chalkboard_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 19h-3a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2m4 0h10a2 2 0 0 1 2 2v10" />
      <path d="M17 17v1a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `chalkboard` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chalkboard />
      <TablerIcons.chalkboard class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chalkboard(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 19h-3a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v11a1 1 0 0 1 -1 1" />
      <path d="M11 16m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `charging_pile` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.charging_pile />
      <TablerIcons.charging_pile class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def charging_pile(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 7l-1 1" />
      <path d="M14 11h1a2 2 0 0 1 2 2v3a1.5 1.5 0 0 0 3 0v-7l-3 -3" />
      <path d="M4 20v-14a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v14" />
      <path d="M9 11.5l-1.5 2.5h3l-1.5 2.5" />
      <path d="M3 20l12 0" />
      <path d="M4 8l10 0" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_arcs_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_arcs_3 />
      <TablerIcons.chart_arcs_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_arcs_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M7 12a5 5 0 1 0 5 -5" />
      <path d="M6.29 18.957a9 9 0 1 0 5.71 -15.957" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_arcs` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_arcs />
      <TablerIcons.chart_arcs class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_arcs(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M16.924 11.132a5 5 0 1 0 -4.056 5.792" />
      <path d="M3 12a9 9 0 1 0 9 -9" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_area_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_area_filled />
      <TablerIcons.chart_area_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_area_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M20 18a1 1 0 0 1 .117 1.993l-.117 .007h-16a1 1 0 0 1 -.117 -1.993l.117 -.007h16z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15.22 5.375a1 1 0 0 1 1.393 -.165l.094 .083l4 4a1 1 0 0 1 .284 .576l.009 .131v5a1 1 0 0 1 -.883 .993l-.117 .007h-16.022l-.11 -.009l-.11 -.02l-.107 -.034l-.105 -.046l-.1 -.059l-.094 -.07l-.06 -.055l-.072 -.082l-.064 -.089l-.054 -.096l-.016 -.035l-.04 -.103l-.027 -.106l-.015 -.108l-.004 -.11l.009 -.11l.019 -.105c.01 -.04 .022 -.077 .035 -.112l.046 -.105l.059 -.1l4 -6a1 1 0 0 1 1.165 -.39l.114 .05l3.277 1.638l3.495 -4.369z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `chart_area_line_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_area_line_filled />
      <TablerIcons.chart_area_line_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_area_line_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M15.22 9.375a1 1 0 0 1 1.393 -.165l.094 .083l4 4a1 1 0 0 1 .284 .576l.009 .131v5a1 1 0 0 1 -.883 .993l-.117 .007h-16.022l-.11 -.009l-.11 -.02l-.107 -.034l-.105 -.046l-.1 -.059l-.094 -.07l-.06 -.055l-.072 -.082l-.064 -.089l-.054 -.096l-.016 -.035l-.04 -.103l-.027 -.106l-.015 -.108l-.004 -.11l.009 -.11l.019 -.105c.01 -.04 .022 -.077 .035 -.112l.046 -.105l.059 -.1l4 -6a1 1 0 0 1 1.165 -.39l.114 .05l3.277 1.638l3.495 -4.369z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15.232 3.36a1 1 0 0 1 1.382 -.15l.093 .083l4 4a1 1 0 0 1 -1.32 1.497l-.094 -.083l-3.226 -3.225l-4.299 5.158a1 1 0 0 1 -1.1 .303l-.115 -.049l-3.254 -1.626l-2.499 3.332a1 1 0 0 1 -1.295 .269l-.105 -.069a1 1 0 0 1 -.269 -1.295l.069 -.105l3 -4a1 1 0 0 1 1.137 -.341l.11 .047l3.291 1.645l4.494 -5.391z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `chart_area_line` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_area_line />
      <TablerIcons.chart_area_line class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_area_line(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19l4 -6l4 2l4 -5l4 4l0 5l-16 0" />
      <path d="M4 12l3 -4l4 2l5 -6l4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_area` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_area />
      <TablerIcons.chart_area class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_area(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19l16 0" />
      <path d="M4 15l4 -6l4 2l4 -5l4 4l0 5l-16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_arrows_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_arrows_vertical />
      <TablerIcons.chart_arrows_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_arrows_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 21v-14" />
      <path d="M9 15l3 -3l3 3" />
      <path d="M15 10l3 -3l3 3" />
      <path d="M3 21l18 0" />
      <path d="M12 21l0 -9" />
      <path d="M3 6l3 -3l3 3" />
      <path d="M6 21v-18" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_arrows` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_arrows />
      <TablerIcons.chart_arrows class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_arrows(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 18l14 0" />
      <path d="M9 9l3 3l-3 3" />
      <path d="M14 15l3 3l-3 3" />
      <path d="M3 3l0 18" />
      <path d="M3 12l9 0" />
      <path d="M18 3l3 3l-3 3" />
      <path d="M3 6l18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_bar_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_bar_off />
      <TablerIcons.chart_bar_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_bar_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M12 8h2a1 1 0 0 1 1 1v2m0 4v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1v-10" />
      <path d="M15 11v-6a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v12m-1 3h-4a1 1 0 0 1 -1 -1v-4" />
      <path d="M4 20h14" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_bar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_bar />
      <TablerIcons.chart_bar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_bar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M9 8m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M15 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M4 20l14 0" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_bubble_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_bubble_filled />
      <TablerIcons.chart_bubble_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_bubble_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 12a4 4 0 1 1 -3.995 4.2l-.005 -.2l.005 -.2a4 4 0 0 1 3.995 -3.8z" stroke-width="0" fill="currentColor" />
      <path
        d="M16 16a3 3 0 1 1 -2.995 3.176l-.005 -.176l.005 -.176a3 3 0 0 1 2.995 -2.824z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M14.5 2a5.5 5.5 0 1 1 -5.496 5.721l-.004 -.221l.004 -.221a5.5 5.5 0 0 1 5.496 -5.279z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `chart_bubble` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_bubble />
      <TablerIcons.chart_bubble class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_bubble(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 16m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M16 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M14.5 7.5m-4.5 0a4.5 4.5 0 1 0 9 0a4.5 4.5 0 1 0 -9 0" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_candle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_candle_filled />
      <TablerIcons.chart_candle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_candle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M6 3a1 1 0 0 1 .993 .883l.007 .117v1a2 2 0 0 1 1.995 1.85l.005 .15v3a2 2 0 0 1 -1.85 1.995l-.15 .005v8a1 1 0 0 1 -1.993 .117l-.007 -.117v-8a2 2 0 0 1 -1.995 -1.85l-.005 -.15v-3a2 2 0 0 1 1.85 -1.995l.15 -.005v-1a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 3a1 1 0 0 1 .993 .883l.007 .117v9a2 2 0 0 1 1.995 1.85l.005 .15v3a2 2 0 0 1 -1.85 1.995l-.15 .005a1 1 0 0 1 -1.993 .117l-.007 -.117l-.15 -.005a2 2 0 0 1 -1.844 -1.838l-.006 -.157v-3a2 2 0 0 1 1.85 -1.995l.15 -.005v-9a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M18 3a1 1 0 0 1 .993 .883l.007 .117a2 2 0 0 1 1.995 1.85l.005 .15v4a2 2 0 0 1 -1.85 1.995l-.15 .005v8a1 1 0 0 1 -1.993 .117l-.007 -.117v-8a2 2 0 0 1 -1.995 -1.85l-.005 -.15v-4a2 2 0 0 1 1.85 -1.995l.15 -.005a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `chart_candle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_candle />
      <TablerIcons.chart_candle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_candle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M6 4l0 2" />
      <path d="M6 11l0 9" />
      <path d="M10 14m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M12 4l0 10" />
      <path d="M12 19l0 1" />
      <path d="M16 5m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M18 4l0 1" />
      <path d="M18 11l0 9" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_circles` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_circles />
      <TablerIcons.chart_circles class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_circles(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.5 9.5m-5.5 0a5.5 5.5 0 1 0 11 0a5.5 5.5 0 1 0 -11 0" />
      <path d="M14.5 14.5m-5.5 0a5.5 5.5 0 1 0 11 0a5.5 5.5 0 1 0 -11 0" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_donut_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_donut_2 />
      <TablerIcons.chart_donut_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_donut_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3v5m4 4h5" />
      <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_donut_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_donut_3 />
      <TablerIcons.chart_donut_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_donut_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3v5m4 4h5" />
      <path d="M8.929 14.582l-3.429 2.918" />
      <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_donut_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_donut_4 />
      <TablerIcons.chart_donut_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_donut_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.848 14.667l-3.348 2.833" />
      <path d="M12 3v5m4 4h5" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M14.219 15.328l2.781 4.172" />
      <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_donut_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_donut_filled />
      <TablerIcons.chart_donut_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_donut_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M9.883 2.207a1.9 1.9 0 0 1 2.087 1.522l.025 .167l.005 .104v4a1 1 0 0 1 -.641 .933l-.107 .035a3.1 3.1 0 1 0 3.73 3.953l.05 -.173a1 1 0 0 1 .855 -.742l.113 -.006h3.8a2 2 0 0 1 2 2a1 1 0 0 1 -.026 .226a10 10 0 1 1 -12.27 -11.933l.27 -.067l.11 -.02z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M14.775 2.526a.996 .996 0 0 1 .22 -.026l.122 .007l.112 .02l.103 .03a10 10 0 0 1 6.003 5.817l.108 .294a1 1 0 0 1 -.824 1.325l-.119 .007h-4.5a1 1 0 0 1 -.76 -.35a8 8 0 0 0 -.89 -.89a1 1 0 0 1 -.342 -.636l-.008 -.124v-4.495l.006 -.118c.005 -.042 .012 -.08 .02 -.116l.03 -.103a.998 .998 0 0 1 .168 -.299l.071 -.08c.03 -.028 .058 -.052 .087 -.075l.09 -.063l.088 -.05l.103 -.043l.112 -.032z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `chart_donut` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_donut />
      <TablerIcons.chart_donut class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_donut(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 3.2a9 9 0 1 0 10.8 10.8a1 1 0 0 0 -1 -1h-3.8a4.1 4.1 0 1 1 -5 -5v-4a.9 .9 0 0 0 -1 -.8" />
      <path d="M15 3.5a9 9 0 0 1 5.5 5.5h-4.5a9 9 0 0 0 -1 -1v-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_dots_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_dots_2 />
      <TablerIcons.chart_dots_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_dots_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3v18h18" />
      <path d="M9 15m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M13 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M21 3l-6 1.5" />
      <path d="M14.113 6.65l2.771 3.695" />
      <path d="M16 12.5l-5 2" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_dots_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_dots_3 />
      <TablerIcons.chart_dots_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_dots_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 7m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M16 15m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 6m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M6 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M9 17l5 -1.5" />
      <path d="M6.5 8.5l7.81 5.37" />
      <path d="M7 7l8 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_dots` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_dots />
      <TablerIcons.chart_dots class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_dots(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3v18h18" />
      <path d="M9 9m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 7m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M14 15m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M10.16 10.62l2.34 2.88" />
      <path d="M15.088 13.328l2.837 -4.586" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_grid_dots` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_grid_dots />
      <TablerIcons.chart_grid_dots class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_grid_dots(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M8 18h8" />
      <path d="M18 20v1" />
      <path d="M18 3v1" />
      <path d="M6 20v1" />
      <path d="M6 10v-7" />
      <path d="M12 3v18" />
      <path d="M18 8v8" />
      <path d="M8 12h13" />
      <path d="M21 6h-1" />
      <path d="M16 6h-13" />
      <path d="M3 12h1" />
      <path d="M20 18h1" />
      <path d="M3 18h1" />
      <path d="M6 14v2" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_histogram` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_histogram />
      <TablerIcons.chart_histogram class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_histogram(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3v18h18" />
      <path d="M20 18v3" />
      <path d="M16 16v5" />
      <path d="M12 13v8" />
      <path d="M8 16v5" />
      <path d="M3 11c6 0 5 -5 9 -5s3 5 9 5" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_infographic` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_infographic />
      <TablerIcons.chart_infographic class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_infographic(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 7m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M7 3v4h4" />
      <path d="M9 17l0 4" />
      <path d="M17 14l0 7" />
      <path d="M13 13l0 8" />
      <path d="M21 12l0 9" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_line` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_line />
      <TablerIcons.chart_line class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_line(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19l16 0" />
      <path d="M4 15l4 -6l4 2l4 -5l4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_pie_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_pie_2 />
      <TablerIcons.chart_pie_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_pie_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3v9h9" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_pie_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_pie_3 />
      <TablerIcons.chart_pie_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_pie_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12l-6.5 5.5" />
      <path d="M12 3v9h9" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_pie_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_pie_4 />
      <TablerIcons.chart_pie_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_pie_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12l-6.5 5.5" />
      <path d="M12 3v9h9" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12l5 7.5" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_pie_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_pie_filled />
      <TablerIcons.chart_pie_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_pie_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M9.883 2.207a1.9 1.9 0 0 1 2.087 1.522l.025 .167l.005 .104v7a1 1 0 0 0 .883 .993l.117 .007h6.8a2 2 0 0 1 2 2a1 1 0 0 1 -.026 .226a10 10 0 1 1 -12.27 -11.933l.27 -.067l.11 -.02z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M14 3.5v5.5a1 1 0 0 0 1 1h5.5a1 1 0 0 0 .943 -1.332a10 10 0 0 0 -6.11 -6.111a1 1 0 0 0 -1.333 .943z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `chart_pie_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_pie_off />
      <TablerIcons.chart_pie_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_pie_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.63 5.643a9 9 0 0 0 12.742 12.715m1.674 -2.29a9.03 9.03 0 0 0 .754 -2.068a1 1 0 0 0 -1 -1h-2.8m-4 0a2 2 0 0 1 -2 -2m0 -4v-3a.9 .9 0 0 0 -1 -.8a9 9 0 0 0 -2.057 .749" />
      <path d="M15 3.5a9 9 0 0 1 5.5 5.5h-4.5a1 1 0 0 1 -1 -1v-4.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_pie` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_pie />
      <TablerIcons.chart_pie class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_pie(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 3.2a9 9 0 1 0 10.8 10.8a1 1 0 0 0 -1 -1h-6.8a2 2 0 0 1 -2 -2v-7a.9 .9 0 0 0 -1 -.8" />
      <path d="M15 3.5a9 9 0 0 1 5.5 5.5h-4.5a1 1 0 0 1 -1 -1v-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_ppf` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_ppf />
      <TablerIcons.chart_ppf class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_ppf(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 17c0 -6.075 -5.373 -11 -12 -11" />
      <path d="M3 3v18h18" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_radar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_radar />
      <TablerIcons.chart_radar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_radar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3l9.5 7l-3.5 11h-12l-3.5 -11z" />
      <path d="M12 7.5l5.5 4l-2.5 5.5h-6.5l-2 -5.5z" />
      <path d="M2.5 10l9.5 3l9.5 -3" />
      <path d="M12 3v10l6 8" />
      <path d="M6 21l6 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_sankey` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_sankey />
      <TablerIcons.chart_sankey class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_sankey(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3v18h18" />
      <path d="M3 6h18" />
      <path d="M3 8c10 0 8 9 18 9" />
    </svg>
    """
  end

  @doc """
  Renders the `chart_treemap` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chart_treemap />
      <TablerIcons.chart_treemap class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chart_treemap(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M12 4v16" />
      <path d="M4 15h8" />
      <path d="M12 12h8" />
      <path d="M16 12v8" />
      <path d="M16 16h4" />
    </svg>
    """
  end

  @doc """
  Renders the `check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.check />
      <TablerIcons.check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12l5 5l10 -10" />
    </svg>
    """
  end

  @doc """
  Renders the `checkbox` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.checkbox />
      <TablerIcons.checkbox class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def checkbox(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11l3 3l8 -8" />
      <path d="M20 12v6a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h9" />
    </svg>
    """
  end

  @doc """
  Renders the `checklist` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.checklist />
      <TablerIcons.checklist class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def checklist(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.615 20h-2.615a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8" />
      <path d="M14 19l2 2l4 -4" />
      <path d="M9 8h4" />
      <path d="M9 12h2" />
    </svg>
    """
  end

  @doc """
  Renders the `checks` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.checks />
      <TablerIcons.checks class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def checks(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 12l5 5l10 -10" />
      <path d="M2 12l5 5m5 -5l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `checkup_list` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.checkup_list />
      <TablerIcons.checkup_list class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def checkup_list(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
      <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M9 14h.01" />
      <path d="M9 17h.01" />
      <path d="M12 16l1 1l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `cheese` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cheese />
      <TablerIcons.cheese class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cheese(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.519 20.008l16.481 -.008v-3.5a2 2 0 1 1 0 -4v-3.5h-16.722" />
      <path d="M21 9l-9.385 -4.992c-2.512 .12 -4.758 1.42 -6.327 3.425c-1.423 1.82 -2.288 4.221 -2.288 6.854c0 2.117 .56 4.085 1.519 5.721" />
      <path d="M15 13v.01" />
      <path d="M8 13v.01" />
      <path d="M11 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `chef_hat_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chef_hat_off />
      <TablerIcons.chef_hat_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chef_hat_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.72 4.712a4 4 0 0 1 7.19 1.439a4 4 0 0 1 2.09 7.723v.126m0 4v3h-12v-7.126a4 4 0 0 1 .081 -7.796" />
      <path d="M6.161 17.009l10.839 -.009" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `chef_hat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chef_hat />
      <TablerIcons.chef_hat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chef_hat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3c1.918 0 3.52 1.35 3.91 3.151a4 4 0 0 1 2.09 7.723l0 7.126h-12v-7.126a4 4 0 1 1 2.092 -7.723a4 4 0 0 1 3.908 -3.151z" />
      <path d="M6.161 17.009l11.839 -.009" />
    </svg>
    """
  end

  @doc """
  Renders the `cherry_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cherry_filled />
      <TablerIcons.cherry_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cherry_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M16.588 5.191l.058 .045l.078 .074l.072 .084l.013 .018a.998 .998 0 0 1 .182 .727l-.022 .111l-.03 .092c-.99 2.725 -.666 5.158 .679 7.706a4 4 0 1 1 -4.613 4.152l-.005 -.2l.005 -.2a4.002 4.002 0 0 1 2.5 -3.511c-.947 -2.03 -1.342 -4.065 -1.052 -6.207c-.166 .077 -.332 .15 -.499 .218l.094 -.064c-2.243 1.47 -3.552 3.004 -3.98 4.57a4.5 4.5 0 1 1 -7.064 3.906l-.004 -.212l.005 -.212a4.5 4.5 0 0 1 5.2 -4.233c.332 -1.073 .945 -2.096 1.83 -3.069c-1.794 -.096 -3.586 -.759 -5.355 -1.986l-.268 -.19l-.051 -.04l-.046 -.04l-.044 -.044l-.04 -.046l-.04 -.05l-.032 -.047l-.035 -.06l-.053 -.11l-.038 -.116l-.023 -.117l-.005 -.042l-.005 -.118l.01 -.118l.023 -.117l.038 -.115l.03 -.066l.023 -.045l.035 -.06l.032 -.046l.04 -.051l.04 -.046l.044 -.044l.046 -.04l.05 -.04c4.018 -2.922 8.16 -2.922 12.177 0z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `cherry` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cherry />
      <TablerIcons.cherry class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cherry(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.5 16.5m-3.5 0a3.5 3.5 0 1 0 7 0a3.5 3.5 0 1 0 -7 0" />
      <path d="M17 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M9 13c.366 -2 1.866 -3.873 4.5 -5.6" />
      <path d="M17 15c-1.333 -2.333 -2.333 -5.333 -1 -9" />
      <path d="M5 6c3.667 -2.667 7.333 -2.667 11 0c-3.667 2.667 -7.333 2.667 -11 0" />
    </svg>
    """
  end

  @doc """
  Renders the `chess_bishop_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chess_bishop_filled />
      <TablerIcons.chess_bishop_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chess_bishop_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2a2 2 0 0 1 1.386 3.442c.646 .28 1.226 .62 1.74 1.017l-3.833 3.834l-.083 .094a1 1 0 0 0 1.403 1.403l.094 -.083l3.814 -3.813c.977 1.35 1.479 3.07 1.479 5.106c0 1.913 -1.178 3.722 -3.089 3.973l-.2 .02l-.211 .007h-5c-2.126 0 -3.5 -1.924 -3.5 -4c0 -3.68 1.57 -6.255 4.613 -7.56a2 2 0 0 1 1.387 -3.44z"
        stroke-width="0"
        fill="currentColor"
      />
      <path d="M12 5v1" stroke-width="0" fill="currentColor" />
      <path
        d="M18 18h-12a1 1 0 0 0 -1 1a2 2 0 0 0 2 2h10a2 2 0 0 0 1.987 -1.768l.011 -.174a1 1 0 0 0 -.998 -1.058z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `chess_bishop` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chess_bishop />
      <TablerIcons.chess_bishop class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chess_bishop(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 16l-1.447 .724a1 1 0 0 0 -.553 .894v2.382h12v-2.382a1 1 0 0 0 -.553 -.894l-1.447 -.724h-8z" />
      <path d="M12 4m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M9.5 16c-1.667 0 -2.5 -1.669 -2.5 -3c0 -3.667 1.667 -6 5 -7c3.333 1 5 3.427 5 7c0 1.284 -.775 2.881 -2.325 3l-.175 0h-5z" />
      <path d="M15 8l-3 3" />
      <path d="M12 5v1" />
    </svg>
    """
  end

  @doc """
  Renders the `chess_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chess_filled />
      <TablerIcons.chess_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chess_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2a4 4 0 0 1 4 4a5.03 5.03 0 0 1 -.438 2.001l.438 -.001a1 1 0 0 1 .117 1.993l-.117 .007h-1.263l1.24 5.79a1 1 0 0 1 -.747 1.184l-.113 .02l-.117 .006h-6a1 1 0 0 1 -.996 -1.093l.018 -.117l1.24 -5.79h-1.262a1 1 0 0 1 -.117 -1.993l.117 -.007h.438a5.154 5.154 0 0 1 -.412 -1.525l-.02 -.259l-.006 -.216a4 4 0 0 1 4 -4z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M18 18h-12a1 1 0 0 0 -1 1a2 2 0 0 0 2 2h10a2 2 0 0 0 1.987 -1.768l.011 -.174a1 1 0 0 0 -.998 -1.058z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `chess_king_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chess_king_filled />
      <TablerIcons.chess_king_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chess_king_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2a1 1 0 0 1 .993 .883l.007 .117v2h2a1 1 0 0 1 .117 1.993l-.117 .007h-2v1.758a4.49 4.49 0 0 1 2.033 -.734l.24 -.018l.227 -.006a4.5 4.5 0 0 1 4.5 4.5a4.504 4.504 0 0 1 -4.064 4.478l-.217 .016l-.219 .006h-7a4.5 4.5 0 1 1 2.501 -8.241l-.001 -1.759h-2a1 1 0 0 1 -.117 -1.993l.117 -.007h2v-2a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M18 18h-12a1 1 0 0 0 -1 1a2 2 0 0 0 2 2h10a2 2 0 0 0 1.987 -1.768l.011 -.174a1 1 0 0 0 -.998 -1.058z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `chess_king` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chess_king />
      <TablerIcons.chess_king class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chess_king(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 16l-1.447 .724a1 1 0 0 0 -.553 .894v2.382h12v-2.382a1 1 0 0 0 -.553 -.894l-1.447 -.724h-8z" />
      <path d="M8.5 16a3.5 3.5 0 1 1 3.163 -5h.674a3.5 3.5 0 1 1 3.163 5z" />
      <path d="M9 6h6" />
      <path d="M12 3v8" />
    </svg>
    """
  end

  @doc """
  Renders the `chess_knight_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chess_knight_filled />
      <TablerIcons.chess_knight_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chess_knight_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M8.959 1.99l-.147 .028l-.115 .029a1 1 0 0 0 -.646 1.27l.749 2.245l-2.815 1.735a2 2 0 0 0 -.655 2.751l.089 .133a2 2 0 0 0 1.614 .819l1.563 -.001l-1.614 4.674a1 1 0 0 0 .945 1.327h7.961a1 1 0 0 0 1 -.978l.112 -5c0 -3.827 -1.555 -6.878 -4.67 -7.966l-2.399 -.83l-.375 -.121l-.258 -.074l-.135 -.031l-.101 -.013l-.055 -.001l-.048 .003z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M18 18h-12a1 1 0 0 0 -1 1a2 2 0 0 0 2 2h10a2 2 0 0 0 1.987 -1.768l.011 -.174a1 1 0 0 0 -.998 -1.058z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `chess_knight` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chess_knight />
      <TablerIcons.chess_knight class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chess_knight(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 16l-1.447 .724a1 1 0 0 0 -.553 .894v2.382h12v-2.382a1 1 0 0 0 -.553 -.894l-1.447 -.724h-8z" />
      <path d="M9 3l1 3l-3.491 2.148a1 1 0 0 0 .524 1.852h2.967l-2.073 6h7.961l.112 -5c0 -3 -1.09 -5.983 -4 -7c-1.94 -.678 -2.94 -1.011 -3 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `chess_queen_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chess_queen_filled />
      <TablerIcons.chess_queen_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chess_queen_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2a2 2 0 0 1 1.572 3.236l.793 1.983l1.702 -1.702a2.003 2.003 0 0 1 1.933 -2.517a2 2 0 0 1 .674 3.884l-1.69 9.295a1 1 0 0 1 -.865 .814l-.119 .007h-8a1 1 0 0 1 -.956 -.705l-.028 -.116l-1.69 -9.295a2 2 0 1 1 2.607 -1.367l1.701 1.702l.794 -1.983a2 2 0 0 1 1.572 -3.236z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M18 18h-12a1 1 0 0 0 -1 1a2 2 0 0 0 2 2h10a2 2 0 0 0 1.987 -1.768l.011 -.174a1 1 0 0 0 -.998 -1.058z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `chess_queen` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chess_queen />
      <TablerIcons.chess_queen class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chess_queen(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 16l2 -11l-4 4l-2 -5l-2 5l-4 -4l2 11" />
      <path d="M8 16l-1.447 .724a1 1 0 0 0 -.553 .894v2.382h12v-2.382a1 1 0 0 0 -.553 -.894l-1.447 -.724h-8z" />
      <path d="M12 4m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M6 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M18 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `chess_rook_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chess_rook_filled />
      <TablerIcons.chess_rook_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chess_rook_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14 3a1 1 0 0 1 .993 .883l.007 .117v2h1.652l.362 -2.164a1 1 0 0 1 1.034 -.836l.116 .013a1 1 0 0 1 .836 1.035l-.013 .116l-.5 3a1 1 0 0 1 -.865 .829l-.122 .007h-1.383l.877 7.89a1 1 0 0 1 -.877 1.103l-.117 .007h-8a1 1 0 0 1 -1 -.993l.006 -.117l.877 -7.89h-1.383a1 1 0 0 1 -.96 -.718l-.026 -.118l-.5 -3a1 1 0 0 1 1.947 -.442l.025 .114l.361 2.164h1.653v-2a1 1 0 0 1 1.993 -.117l.007 .117v2h2v-2a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M18 18h-12a1 1 0 0 0 -1 1a2 2 0 0 0 2 2h10a2 2 0 0 0 1.987 -1.768l.011 -.174a1 1 0 0 0 -.998 -1.058z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `chess_rook` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chess_rook />
      <TablerIcons.chess_rook class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chess_rook(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 16l-1.447 .724a1 1 0 0 0 -.553 .894v2.382h12v-2.382a1 1 0 0 0 -.553 -.894l-1.447 -.724h-8z" />
      <path d="M8 16l1 -9h6l1 9" />
      <path d="M6 4l.5 3h11l.5 -3" />
      <path d="M10 4v3" />
      <path d="M14 4v3" />
    </svg>
    """
  end

  @doc """
  Renders the `chess` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chess />
      <TablerIcons.chess class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chess(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a3 3 0 0 1 3 3c0 1.113 -.6 2.482 -1.5 3l1.5 7h-6l1.5 -7c-.9 -.518 -1.5 -1.887 -1.5 -3a3 3 0 0 1 3 -3z" />
      <path d="M8 9h8" />
      <path d="M6.684 16.772a1 1 0 0 0 -.684 .949v1.279a1 1 0 0 0 1 1h10a1 1 0 0 0 1 -1v-1.28a1 1 0 0 0 -.684 -.948l-2.316 -.772h-6l-2.316 .772z" />
    </svg>
    """
  end

  @doc """
  Renders the `chevron_compact_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevron_compact_down />
      <TablerIcons.chevron_compact_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevron_compact_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 11l8 3l8 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `chevron_compact_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevron_compact_left />
      <TablerIcons.chevron_compact_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevron_compact_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 20l-3 -8l3 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `chevron_compact_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevron_compact_right />
      <TablerIcons.chevron_compact_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevron_compact_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 4l3 8l-3 8" />
    </svg>
    """
  end

  @doc """
  Renders the `chevron_compact_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevron_compact_up />
      <TablerIcons.chevron_compact_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevron_compact_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 13l8 -3l8 3" />
    </svg>
    """
  end

  @doc """
  Renders the `chevron_down_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevron_down_left />
      <TablerIcons.chevron_down_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevron_down_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8v8h8" />
    </svg>
    """
  end

  @doc """
  Renders the `chevron_down_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevron_down_right />
      <TablerIcons.chevron_down_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevron_down_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 8v8h-8" />
    </svg>
    """
  end

  @doc """
  Renders the `chevron_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevron_down />
      <TablerIcons.chevron_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevron_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 9l6 6l6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `chevron_left_pipe` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevron_left_pipe />
      <TablerIcons.chevron_left_pipe class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevron_left_pipe(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 6v12" />
      <path d="M18 6l-6 6l6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `chevron_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevron_left />
      <TablerIcons.chevron_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevron_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 6l-6 6l6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `chevron_right_pipe` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevron_right_pipe />
      <TablerIcons.chevron_right_pipe class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevron_right_pipe(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 6l6 6l-6 6" />
      <path d="M17 5v13" />
    </svg>
    """
  end

  @doc """
  Renders the `chevron_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevron_right />
      <TablerIcons.chevron_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevron_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 6l6 6l-6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `chevron_up_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevron_up_left />
      <TablerIcons.chevron_up_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevron_up_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 16v-8h8" />
    </svg>
    """
  end

  @doc """
  Renders the `chevron_up_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevron_up_right />
      <TablerIcons.chevron_up_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevron_up_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8h8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `chevron_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevron_up />
      <TablerIcons.chevron_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevron_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 15l6 -6l6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `chevrons_down_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevrons_down_left />
      <TablerIcons.chevrons_down_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevrons_down_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 5v8h8" />
      <path d="M7 9v8h8" />
    </svg>
    """
  end

  @doc """
  Renders the `chevrons_down_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevrons_down_right />
      <TablerIcons.chevrons_down_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevrons_down_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 5v8h-8" />
      <path d="M17 9v8h-8" />
    </svg>
    """
  end

  @doc """
  Renders the `chevrons_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevrons_down />
      <TablerIcons.chevrons_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevrons_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 7l5 5l5 -5" />
      <path d="M7 13l5 5l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `chevrons_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevrons_left />
      <TablerIcons.chevrons_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevrons_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 7l-5 5l5 5" />
      <path d="M17 7l-5 5l5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `chevrons_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevrons_right />
      <TablerIcons.chevrons_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevrons_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 7l5 5l-5 5" />
      <path d="M13 7l5 5l-5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `chevrons_up_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevrons_up_left />
      <TablerIcons.chevrons_up_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevrons_up_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 15v-8h8" />
      <path d="M11 19v-8h8" />
    </svg>
    """
  end

  @doc """
  Renders the `chevrons_up_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevrons_up_right />
      <TablerIcons.chevrons_up_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevrons_up_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 7h8v8" />
      <path d="M5 11h8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `chevrons_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chevrons_up />
      <TablerIcons.chevrons_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chevrons_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 11l5 -5l5 5" />
      <path d="M7 17l5 -5l5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `chisel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.chisel />
      <TablerIcons.chisel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def chisel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 14l1.5 1.5" />
      <path d="M18.347 15.575l2.08 2.079a1.96 1.96 0 0 1 -2.773 2.772l-2.08 -2.079a1.96 1.96 0 0 1 2.773 -2.772z" />
      <path d="M3 6l3 -3l7.414 7.414a2 2 0 0 1 .586 1.414v2.172h-2.172a2 2 0 0 1 -1.414 -.586l-7.414 -7.414z" />
    </svg>
    """
  end

  @doc """
  Renders the `christmas_tree_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.christmas_tree_off />
      <TablerIcons.christmas_tree_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def christmas_tree_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.5 5.5l2.5 -2.5l4 4l-2 1l4 4l-1.5 .5m.5 4.5h-12l4 -4l-3 -1l3 -3" />
      <path d="M14 17v3a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `christmas_tree` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.christmas_tree />
      <TablerIcons.christmas_tree class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def christmas_tree(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3l4 4l-2 1l4 4l-3 1l4 4h-14l4 -4l-3 -1l4 -4l-2 -1z" />
      <path d="M14 17v3a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-3" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_0_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_0_filled />
      <TablerIcons.circle_0_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_0_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10s-4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10zm0 5a3 3 0 0 0 -2.995 2.824l-.005 .176v4l.005 .176a3 3 0 0 0 5.99 0l.005 -.176v-4l-.005 -.176a3 3 0 0 0 -2.995 -2.824zm0 2a1 1 0 0 1 .993 .883l.007 .117v4l-.007 .117a1 1 0 0 1 -1.986 0l-.007 -.117v-4l.007 -.117a1 1 0 0 1 .993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_1_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_1_filled />
      <TablerIcons.circle_1_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_1_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10s-4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10zm.994 5.886c-.083 -.777 -1.008 -1.16 -1.617 -.67l-.084 .077l-2 2l-.083 .094a1 1 0 0 0 0 1.226l.083 .094l.094 .083a1 1 0 0 0 1.226 0l.094 -.083l.293 -.293v5.586l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-8l-.006 -.114z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_2_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_2_filled />
      <TablerIcons.circle_2_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_2_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10s-4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10zm1 5h-3l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h3v2h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v2l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h3l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007h-3v-2h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_3_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_3_filled />
      <TablerIcons.circle_3_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_3_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10s-4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10zm1 5h-2l-.15 .005a2 2 0 0 0 -1.85 1.995a1 1 0 0 0 1.974 .23l.02 -.113l.006 -.117h2v2h-2l-.133 .007c-1.111 .12 -1.154 1.73 -.128 1.965l.128 .021l.133 .007h2v2h-2l-.007 -.117a1 1 0 0 0 -1.993 .117a2 2 0 0 0 1.85 1.995l.15 .005h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a1.988 1.988 0 0 0 -.17 -.667l-.075 -.152l-.019 -.032l.02 -.03a2.01 2.01 0 0 0 .242 -.795l.007 -.174v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_4_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_4_filled />
      <TablerIcons.circle_4_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_4_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10s-4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10zm2 5a1 1 0 0 0 -.993 .883l-.007 .117v3h-2v-3l-.007 -.117a1 1 0 0 0 -1.986 0l-.007 .117v3l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2v3l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-8l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_5_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_5_filled />
      <TablerIcons.circle_5_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_5_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10s-4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10zm2 5h-4a1 1 0 0 0 -.993 .883l-.007 .117v4a1 1 0 0 0 .883 .993l.117 .007h3v2h-2l-.007 -.117a1 1 0 0 0 -1.993 .117a2 2 0 0 0 1.85 1.995l.15 .005h2a2 2 0 0 0 1.995 -1.85l.005 -.15v-2a2 2 0 0 0 -1.85 -1.995l-.15 -.005h-2v-2h3a1 1 0 0 0 .993 -.883l.007 -.117a1 1 0 0 0 -.883 -.993l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_6_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_6_filled />
      <TablerIcons.circle_6_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_6_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10s-4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10zm1 5h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v6l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006h-2v-2h2l.007 .117a1 1 0 0 0 1.993 -.117a2 2 0 0 0 -1.85 -1.995l-.15 -.005zm0 6v2h-2v-2h2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_7_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_7_filled />
      <TablerIcons.circle_7_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_7_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10s-4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10zm2 5h-4l-.117 .007a1 1 0 0 0 -.876 .876l-.007 .117l.007 .117a1 1 0 0 0 .876 .876l.117 .007h2.718l-1.688 6.757l-.022 .115a1 1 0 0 0 1.927 .482l.035 -.111l2 -8l.021 -.112a1 1 0 0 0 -.878 -1.125l-.113 -.006z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_8_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_8_filled />
      <TablerIcons.circle_8_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_8_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10s-4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10zm1 5h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v2l.005 .15c.018 .236 .077 .46 .17 .667l.075 .152l.018 .03l-.018 .032c-.133 .24 -.218 .509 -.243 .795l-.007 .174v2l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a1.988 1.988 0 0 0 -.17 -.667l-.075 -.152l-.019 -.032l.02 -.03a2.01 2.01 0 0 0 .242 -.795l.007 -.174v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006zm0 6v2h-2v-2h2zm0 -4v2h-2v-2h2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_9_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_9_filled />
      <TablerIcons.circle_9_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_9_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10s-4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10zm1 5h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v2l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2v2h-2l-.007 -.117a1 1 0 0 0 -1.993 .117a2 2 0 0 0 1.85 1.995l.15 .005h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-6l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006zm0 2v2h-2v-2h2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_down_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_down_filled />
      <TablerIcons.circle_arrow_down_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_down_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-5 3.66a1 1 0 0 0 -1 1v5.585l-2.293 -2.292l-.094 -.083a1 1 0 0 0 -1.32 1.497l4 4c.028 .028 .057 .054 .094 .083l.092 .064l.098 .052l.081 .034l.113 .034l.112 .02l.117 .006l.115 -.007l.114 -.02l.142 -.044l.113 -.054l.111 -.071a.939 .939 0 0 0 .112 -.097l4 -4l.083 -.094a1 1 0 0 0 -1.497 -1.32l-2.293 2.291v-5.584l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_down_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_down_left_filled />
      <TablerIcons.circle_arrow_down_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_down_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-8 4.66a1 1 0 0 0 -1 1v6l.007 .117l.029 .149l.035 .105l.054 .113l.071 .111c.03 .04 .061 .077 .097 .112l.09 .08l.096 .067l.098 .052l.11 .044l.112 .03l.126 .017l6.075 .003l.117 -.007a1 1 0 0 0 .883 -.993l-.007 -.117a1 1 0 0 0 -.993 -.883h-3.586l4.293 -4.293l.083 -.094a1 1 0 0 0 -1.497 -1.32l-4.293 4.291v-3.584l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_down_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_down_left />
      <TablerIcons.circle_arrow_down_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_down_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
      <path d="M15 9l-6 6" />
      <path d="M15 15h-6v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_down_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_down_right_filled />
      <TablerIcons.circle_arrow_down_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_down_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-2 4.66l-.117 .007a1 1 0 0 0 -.883 .993v3.585l-4.293 -4.292l-.094 -.083a1 1 0 0 0 -1.32 1.497l4.292 4.293h-3.585l-.117 .007a1 1 0 0 0 .117 1.993l6.034 .001a.998 .998 0 0 0 .186 -.025l.053 -.014l.066 -.02l.13 -.059l.093 -.055a.98 .98 0 0 0 .438 -.828v-6l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_down_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_down_right />
      <TablerIcons.circle_arrow_down_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_down_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
      <path d="M15 15h-6" />
      <path d="M15 9v6l-6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_down />
      <TablerIcons.circle_arrow_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
      <path d="M8 12l4 4" />
      <path d="M12 8v8" />
      <path d="M16 12l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_left_filled />
      <TablerIcons.circle_arrow_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2a10 10 0 0 1 .324 19.995l-.324 .005l-.324 -.005a10 10 0 0 1 .324 -19.995zm.707 5.293a1 1 0 0 0 -1.414 0l-4 4a1.048 1.048 0 0 0 -.083 .094l-.064 .092l-.052 .098l-.044 .11l-.03 .112l-.017 .126l-.003 .075l.004 .09l.007 .058l.025 .118l.035 .105l.054 .113l.043 .07l.071 .095l.054 .058l4 4l.094 .083a1 1 0 0 0 1.32 -1.497l-2.292 -2.293h5.585l.117 -.007a1 1 0 0 0 -.117 -1.993h-5.586l2.293 -2.293l.083 -.094a1 1 0 0 0 -.083 -1.32z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_left />
      <TablerIcons.circle_arrow_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 1 0 0 -18a9 9 0 0 0 0 18" />
      <path d="M8 12l4 4" />
      <path d="M8 12h8" />
      <path d="M12 8l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_right_filled />
      <TablerIcons.circle_arrow_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.324 .005a10 10 0 1 1 -.648 0l.324 -.005zm.613 5.21a1 1 0 0 0 -1.32 1.497l2.291 2.293h-5.584l-.117 .007a1 1 0 0 0 .117 1.993h5.584l-2.291 2.293l-.083 .094a1 1 0 0 0 1.497 1.32l4 -4l.073 -.082l.064 -.089l.062 -.113l.044 -.11l.03 -.112l.017 -.126l.003 -.075l-.007 -.118l-.029 -.148l-.035 -.105l-.054 -.113l-.071 -.111a1.008 1.008 0 0 0 -.097 -.112l-4 -4z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_right />
      <TablerIcons.circle_arrow_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a9 9 0 1 0 0 18a9 9 0 0 0 0 -18" />
      <path d="M16 12l-4 -4" />
      <path d="M16 12h-8" />
      <path d="M12 16l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_up_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_up_filled />
      <TablerIcons.circle_arrow_up_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_up_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-4.98 3.66l-.163 .01l-.086 .016l-.142 .045l-.113 .054l-.07 .043l-.095 .071l-.058 .054l-4 4l-.083 .094a1 1 0 0 0 1.497 1.32l2.293 -2.293v5.586l.007 .117a1 1 0 0 0 1.993 -.117v-5.585l2.293 2.292l.094 .083a1 1 0 0 0 1.32 -1.497l-4 -4l-.082 -.073l-.089 -.064l-.113 -.062l-.081 -.034l-.113 -.034l-.112 -.02l-.098 -.006z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_up_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_up_left_filled />
      <TablerIcons.circle_arrow_up_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_up_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-2 4.66h-6l-.117 .007l-.149 .029l-.105 .035l-.113 .054l-.111 .071a1.01 1.01 0 0 0 -.112 .097l-.08 .09l-.067 .096l-.052 .098l-.044 .11l-.03 .112l-.017 .126l-.003 6.075l.007 .117a1 1 0 0 0 .993 .883l.117 -.007a1 1 0 0 0 .883 -.993v-3.585l4.293 4.292l.094 .083a1 1 0 0 0 1.32 -1.497l-4.292 -4.293h3.585l.117 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_up_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_up_left />
      <TablerIcons.circle_arrow_up_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_up_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
      <path d="M9 9l6 6" />
      <path d="M15 9h-6v6" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_up_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_up_right_filled />
      <TablerIcons.circle_arrow_up_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_up_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-2 4.66h-6l-.117 .007a1 1 0 0 0 -.883 .993l.007 .117a1 1 0 0 0 .993 .883h3.584l-4.291 4.293l-.083 .094a1 1 0 0 0 1.497 1.32l4.293 -4.293v3.586l.007 .117a1 1 0 0 0 1.993 -.117v-6l-.007 -.117l-.029 -.149l-.035 -.105l-.054 -.113l-.071 -.111a1.01 1.01 0 0 0 -.097 -.112l-.09 -.08l-.096 -.067l-.098 -.052l-.11 -.044l-.112 -.03l-.126 -.017l-.075 -.003z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_up_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_up_right />
      <TablerIcons.circle_arrow_up_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_up_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
      <path d="M15 9l-6 6" />
      <path d="M15 15v-6h-6" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_arrow_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_arrow_up />
      <TablerIcons.circle_arrow_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_arrow_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
      <path d="M12 8l-4 4" />
      <path d="M12 8v8" />
      <path d="M16 12l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_caret_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_caret_down />
      <TablerIcons.circle_caret_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_caret_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 15l-4 -4h8z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_caret_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_caret_left />
      <TablerIcons.circle_caret_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_caret_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 12l4 -4v8z" />
      <path d="M12 21a9 9 0 1 1 0 -18a9 9 0 0 1 0 18z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_caret_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_caret_right />
      <TablerIcons.circle_caret_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_caret_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 12l-4 -4v8z" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_caret_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_caret_up />
      <TablerIcons.circle_caret_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_caret_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9l4 4h-8z" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_check_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_check_filled />
      <TablerIcons.circle_check_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_check_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-1.293 5.953a1 1 0 0 0 -1.32 -.083l-.094 .083l-3.293 3.292l-1.293 -1.292l-.094 -.083a1 1 0 0 0 -1.403 1.403l.083 .094l2 2l.094 .083a1 1 0 0 0 1.226 0l.094 -.083l4 -4l.083 -.094a1 1 0 0 0 -.083 -1.32z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_check />
      <TablerIcons.circle_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 12l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_chevron_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_chevron_down />
      <TablerIcons.circle_chevron_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_chevron_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 11l-3 3l-3 -3" />
      <path d="M12 3a9 9 0 1 0 0 18a9 9 0 0 0 0 -18z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_chevron_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_chevron_left />
      <TablerIcons.circle_chevron_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_chevron_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 15l-3 -3l3 -3" />
      <path d="M21 12a9 9 0 1 0 -18 0a9 9 0 0 0 18 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_chevron_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_chevron_right />
      <TablerIcons.circle_chevron_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_chevron_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 9l3 3l-3 3" />
      <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_chevron_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_chevron_up />
      <TablerIcons.circle_chevron_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_chevron_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 13l3 -3l3 3" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_chevrons_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_chevrons_down />
      <TablerIcons.circle_chevrons_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_chevrons_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 9l-3 3l-3 -3" />
      <path d="M15 13l-3 3l-3 -3" />
      <path d="M12 3a9 9 0 1 0 0 18a9 9 0 0 0 0 -18z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_chevrons_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_chevrons_left />
      <TablerIcons.circle_chevrons_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_chevrons_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 15l-3 -3l3 -3" />
      <path d="M11 15l-3 -3l3 -3" />
      <path d="M21 12a9 9 0 1 0 0 .265l0 -.265z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_chevrons_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_chevrons_right />
      <TablerIcons.circle_chevrons_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_chevrons_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 9l3 3l-3 3" />
      <path d="M13 9l3 3l-3 3" />
      <path d="M3 12a9 9 0 1 0 0 -.265l0 .265z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_chevrons_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_chevrons_up />
      <TablerIcons.circle_chevrons_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_chevrons_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15l3 -3l3 3" />
      <path d="M9 11l3 -3l3 3" />
      <path d="M12 21a9 9 0 1 0 -.265 0l.265 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_dashed` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_dashed />
      <TablerIcons.circle_dashed class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_dashed(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.56 3.69a9 9 0 0 0 -2.92 1.95" />
      <path d="M3.69 8.56a9 9 0 0 0 -.69 3.44" />
      <path d="M3.69 15.44a9 9 0 0 0 1.95 2.92" />
      <path d="M8.56 20.31a9 9 0 0 0 3.44 .69" />
      <path d="M15.44 20.31a9 9 0 0 0 2.92 -1.95" />
      <path d="M20.31 15.44a9 9 0 0 0 .69 -3.44" />
      <path d="M20.31 8.56a9 9 0 0 0 -1.95 -2.92" />
      <path d="M15.44 3.69a9 9 0 0 0 -3.44 -.69" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_dot_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_dot_filled />
      <TablerIcons.circle_dot_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_dot_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-5 6.66a2 2 0 0 0 -1.977 1.697l-.018 .154l-.005 .149l.005 .15a2 2 0 1 0 1.995 -2.15z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_dot` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_dot />
      <TablerIcons.circle_dot class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_dot(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_dotted` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_dotted />
      <TablerIcons.circle_dotted class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_dotted(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.5 4.21l0 .01" />
      <path d="M4.21 7.5l0 .01" />
      <path d="M3 12l0 .01" />
      <path d="M4.21 16.5l0 .01" />
      <path d="M7.5 19.79l0 .01" />
      <path d="M12 21l0 .01" />
      <path d="M16.5 19.79l0 .01" />
      <path d="M19.79 16.5l0 .01" />
      <path d="M21 12l0 .01" />
      <path d="M19.79 7.5l0 .01" />
      <path d="M16.5 4.21l0 .01" />
      <path d="M12 3l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_filled />
      <TablerIcons.circle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M7 3.34a10 10 0 1 1 -4.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 4.995 -8.336z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_half_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_half_2 />
      <TablerIcons.circle_half_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_half_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 3v18" />
      <path d="M12 14l7 -7" />
      <path d="M12 19l8.5 -8.5" />
      <path d="M12 9l4.5 -4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_half_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_half_vertical />
      <TablerIcons.circle_half_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_half_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M3 12h18" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_half` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_half />
      <TablerIcons.circle_half class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_half(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 3v18" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_key_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_key_filled />
      <TablerIcons.circle_key_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_key_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10a10 10 0 0 1 -20 0c0 -5.523 4.477 -10 10 -10zm2 5a3 3 0 0 0 -2.98 2.65l-.015 .174l-.005 .176l.005 .176c.019 .319 .087 .624 .197 .908l.09 .209l-3.5 3.5l-.082 .094a1 1 0 0 0 0 1.226l.083 .094l1.5 1.5l.094 .083a1 1 0 0 0 1.226 0l.094 -.083l.083 -.094a1 1 0 0 0 0 -1.226l-.083 -.094l-.792 -.793l.585 -.585l.793 .792l.094 .083a1 1 0 0 0 1.403 -1.403l-.083 -.094l-.792 -.793l.792 -.792a3 3 0 1 0 1.293 -5.708zm0 2a1 1 0 1 1 0 2a1 1 0 0 1 0 -2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_key` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_key />
      <TablerIcons.circle_key class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_key(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 10m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M21 12a9 9 0 1 1 -18 0a9 9 0 0 1 18 0z" />
      <path d="M12.5 11.5l-4 4l1.5 1.5" />
      <path d="M12 15l-1.5 -1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_a` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_a />
      <TablerIcons.circle_letter_a class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_a(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 16v-6a2 2 0 1 1 4 0v6" />
      <path d="M10 13h4" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_b` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_b />
      <TablerIcons.circle_letter_b class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_b(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 16h2a2 2 0 1 0 0 -4h-2h2a2 2 0 1 0 0 -4h-2v8z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_c` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_c />
      <TablerIcons.circle_letter_c class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_c(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M14 10a2 2 0 1 0 -4 0v4a2 2 0 1 0 4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_d` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_d />
      <TablerIcons.circle_letter_d class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_d(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 8v8h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-2z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_e` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_e />
      <TablerIcons.circle_letter_e class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_e(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M14 8h-4v8h4" />
      <path d="M10 12h2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_f` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_f />
      <TablerIcons.circle_letter_f class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_f(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 12h3" />
      <path d="M14 8h-4v8" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_g` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_g />
      <TablerIcons.circle_letter_g class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_g(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M14 8h-2a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2v-4h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_h` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_h />
      <TablerIcons.circle_letter_h class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_h(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 16v-8m4 0v8" />
      <path d="M10 12h4" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_i` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_i />
      <TablerIcons.circle_letter_i class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_i(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_j` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_j />
      <TablerIcons.circle_letter_j class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_j(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 8h4v6a2 2 0 1 1 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_k` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_k />
      <TablerIcons.circle_letter_k class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_k(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 8v8" />
      <path d="M14 8l-2.5 4l2.5 4" />
      <path d="M10 12h1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_l` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_l />
      <TablerIcons.circle_letter_l class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_l(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 8v8h4" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_m` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_m />
      <TablerIcons.circle_letter_m class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_m(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 16v-8l3 5l3 -5v8" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_n` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_n />
      <TablerIcons.circle_letter_n class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_n(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 16v-8l4 8v-8" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_o` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_o />
      <TablerIcons.circle_letter_o class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_o(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_p` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_p />
      <TablerIcons.circle_letter_p class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_p(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 12h2a2 2 0 1 0 0 -4h-2v8" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_q` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_q />
      <TablerIcons.circle_letter_q class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_q(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
      <path d="M13 15l1 1" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_r` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_r />
      <TablerIcons.circle_letter_r class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_r(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 12h2a2 2 0 1 0 0 -4h-2v8m4 0l-3 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_s` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_s />
      <TablerIcons.circle_letter_s class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_s(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-2a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_t` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_t />
      <TablerIcons.circle_letter_t class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_t(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 8h4" />
      <path d="M12 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_u` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_u />
      <TablerIcons.circle_letter_u class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_u(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 8v6a2 2 0 1 0 4 0v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_v` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_v />
      <TablerIcons.circle_letter_v class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_v(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 8l2 8l2 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_w` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_w />
      <TablerIcons.circle_letter_w class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_w(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 8l1 8l2 -5l2 5l1 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_x />
      <TablerIcons.circle_letter_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 8l4 8" />
      <path d="M10 16l4 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_y` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_y />
      <TablerIcons.circle_letter_y class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_y(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 8l2 5l2 -5" />
      <path d="M12 16v-3" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_letter_z` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_letter_z />
      <TablerIcons.circle_letter_z class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_letter_z(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 8h4l-4 8h4" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_minus />
      <TablerIcons.circle_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 12l6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_number_0` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_number_0 />
      <TablerIcons.circle_number_0 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_number_0(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 10v4a2 2 0 1 0 4 0v-4a2 2 0 1 0 -4 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_number_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_number_1 />
      <TablerIcons.circle_number_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_number_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 10l2 -2v8" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_number_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_number_2 />
      <TablerIcons.circle_number_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_number_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 8h3a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h3" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_number_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_number_3 />
      <TablerIcons.circle_number_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_number_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 9a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_number_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_number_4 />
      <TablerIcons.circle_number_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_number_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 8v3a1 1 0 0 0 1 1h3" />
      <path d="M14 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_number_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_number_5 />
      <TablerIcons.circle_number_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_number_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-3v-4h4" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_number_6` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_number_6 />
      <TablerIcons.circle_number_6 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_number_6(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M14 9a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v6a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_number_7` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_number_7 />
      <TablerIcons.circle_number_7 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_number_7(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 8h4l-2 8" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_number_8` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_number_8 />
      <TablerIcons.circle_number_8 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_number_8(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12h-1a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_number_9` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_number_9 />
      <TablerIcons.circle_number_9 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_number_9(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-6a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h3" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_off />
      <TablerIcons.circle_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_plus />
      <TablerIcons.circle_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 12l6 0" />
      <path d="M12 9l0 6" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_rectangle_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_rectangle_off />
      <TablerIcons.circle_rectangle_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_rectangle_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 10h3v3m-3 1h-7v-4h3" />
      <path d="M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_rectangle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_rectangle />
      <TablerIcons.circle_rectangle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_rectangle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M7 10h10v4h-10z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_square` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_square />
      <TablerIcons.circle_square class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_square(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.5 9.5m-6.5 0a6.5 6.5 0 1 0 13 0a6.5 6.5 0 1 0 -13 0" />
      <path d="M10 10m0 2a2 2 0 0 1 2 -2h7a2 2 0 0 1 2 2v7a2 2 0 0 1 -2 2h-7a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_triangle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_triangle />
      <TablerIcons.circle_triangle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_triangle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 20l7 -12h-14z" />
    </svg>
    """
  end

  @doc """
  Renders the `circle_x_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_x_filled />
      <TablerIcons.circle_x_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_x_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-6.489 5.8a1 1 0 0 0 -1.218 1.567l1.292 1.293l-1.292 1.293l-.083 .094a1 1 0 0 0 1.497 1.32l1.293 -1.292l1.293 1.292l.094 .083a1 1 0 0 0 1.32 -1.497l-1.292 -1.293l1.292 -1.293l.083 -.094a1 1 0 0 0 -1.497 -1.32l-1.293 1.292l-1.293 -1.292l-.094 -.083z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circle_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle_x />
      <TablerIcons.circle_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 10l4 4m0 -4l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circle />
      <TablerIcons.circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `circles_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circles_filled />
      <TablerIcons.circles_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circles_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M6.5 12a5 5 0 1 1 -4.995 5.217l-.005 -.217l.005 -.217a5 5 0 0 1 4.995 -4.783z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M17.5 12a5 5 0 1 1 -4.995 5.217l-.005 -.217l.005 -.217a5 5 0 0 1 4.995 -4.783z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 2a5 5 0 1 1 -4.995 5.217l-.005 -.217l.005 -.217a5 5 0 0 1 4.995 -4.783z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `circles_relation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circles_relation />
      <TablerIcons.circles_relation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circles_relation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.183 6.117a6 6 0 1 0 4.511 3.986" />
      <path d="M14.813 17.883a6 6 0 1 0 -4.496 -3.954" />
    </svg>
    """
  end

  @doc """
  Renders the `circles` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circles />
      <TablerIcons.circles class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circles(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 7m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M6.5 17m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M17.5 17m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_ammeter` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_ammeter />
      <TablerIcons.circuit_ammeter class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_ammeter(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M5 12h-3" />
      <path d="M19 12h3" />
      <path d="M10 14v-3c0 -1.036 .895 -2 2 -2s2 .964 2 2v3" />
      <path d="M14 12h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_battery` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_battery />
      <TablerIcons.circuit_battery class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_battery(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 12h4" />
      <path d="M18 12h4" />
      <path d="M18 5v14" />
      <path d="M14 9v6" />
      <path d="M10 5v14" />
      <path d="M6 9v6" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_bulb` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_bulb />
      <TablerIcons.circuit_bulb class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_bulb(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 12h5" />
      <path d="M17 12h5" />
      <path d="M12 12m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M8.5 8.5l7 7" />
      <path d="M15.5 8.5l-7 7" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_capacitor_polarized` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_capacitor_polarized />
      <TablerIcons.circuit_capacitor_polarized class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_capacitor_polarized(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12h-8" />
      <path d="M2 12h8" />
      <path d="M10 7v10" />
      <path d="M14 7v10" />
      <path d="M17 5h4" />
      <path d="M19 3v4" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_capacitor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_capacitor />
      <TablerIcons.circuit_capacitor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_capacitor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12h-8" />
      <path d="M2 12h8" />
      <path d="M10 7v10" />
      <path d="M14 7v10" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_cell_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_cell_plus />
      <TablerIcons.circuit_cell_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_cell_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 12h9" />
      <path d="M15 12h7" />
      <path d="M11 5v14" />
      <path d="M15 9v6" />
      <path d="M3 5h4" />
      <path d="M5 3v4" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_cell` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_cell />
      <TablerIcons.circuit_cell class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_cell(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 12h8" />
      <path d="M14 12h8" />
      <path d="M10 5v14" />
      <path d="M14 9v6" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_changeover` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_changeover />
      <TablerIcons.circuit_changeover class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_changeover(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 12h2" />
      <path d="M20 7h2" />
      <path d="M6 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 7m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M20 17h2" />
      <path d="M18 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7.5 10.5l8.5 -3.5" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_diode_zener` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_diode_zener />
      <TablerIcons.circuit_diode_zener class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_diode_zener(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12h-6" />
      <path d="M2 12h6" />
      <path d="M8 7l8 5l-8 5z" />
      <path d="M14 7h2v10h2" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_diode` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_diode />
      <TablerIcons.circuit_diode class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_diode(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12h-6" />
      <path d="M2 12h6" />
      <path d="M8 7l8 5l-8 5z" />
      <path d="M16 7v10" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_ground_digital` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_ground_digital />
      <TablerIcons.circuit_ground_digital class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_ground_digital(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 13v-10" />
      <path d="M12 21l-6 -8h12z" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_ground` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_ground />
      <TablerIcons.circuit_ground class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_ground(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 13v-8" />
      <path d="M4 13h16" />
      <path d="M7 16h10" />
      <path d="M10 19h4" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_inductor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_inductor />
      <TablerIcons.circuit_inductor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_inductor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 14h3v-2a2 2 0 1 1 4 0v2v-1.5a2.5 2.5 0 1 1 5 0v1.5v-1.5a2.5 2.5 0 1 1 5 0v1.5h3" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_motor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_motor />
      <TablerIcons.circuit_motor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_motor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M5 12h-3" />
      <path d="M19 12h3" />
      <path d="M10 14v-4l2 2l2 -2v4" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_pushbutton` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_pushbutton />
      <TablerIcons.circuit_pushbutton class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_pushbutton(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 17h2" />
      <path d="M20 17h2" />
      <path d="M6 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 11h12" />
      <path d="M12 11v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_resistor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_resistor />
      <TablerIcons.circuit_resistor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_resistor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 12h2l2 -5l3 10l3 -10l3 10l3 -10l1.5 5h2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_switch_closed` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_switch_closed />
      <TablerIcons.circuit_switch_closed class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_switch_closed(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 12h2" />
      <path d="M20 12h2" />
      <path d="M6 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M8 12h8" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_switch_open` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_switch_open />
      <TablerIcons.circuit_switch_open class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_switch_open(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 12h2" />
      <path d="M20 12h2" />
      <path d="M6 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7.5 10.5l7.5 -5.5" />
    </svg>
    """
  end

  @doc """
  Renders the `circuit_voltmeter` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.circuit_voltmeter />
      <TablerIcons.circuit_voltmeter class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def circuit_voltmeter(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M5 12h-3" />
      <path d="M19 12h3" />
      <path d="M10 10l2 4l2 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `clear_all` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clear_all />
      <TablerIcons.clear_all class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clear_all(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 6h12" />
      <path d="M6 12h12" />
      <path d="M4 18h12" />
    </svg>
    """
  end

  @doc """
  Renders the `clear_formatting` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clear_formatting />
      <TablerIcons.clear_formatting class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clear_formatting(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 15l4 4m0 -4l-4 4" />
      <path d="M7 6v-1h11v1" />
      <path d="M7 19l4 0" />
      <path d="M13 5l-4 14" />
    </svg>
    """
  end

  @doc """
  Renders the `click` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.click />
      <TablerIcons.click class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def click(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12l3 0" />
      <path d="M12 3l0 3" />
      <path d="M7.8 7.8l-2.2 -2.2" />
      <path d="M16.2 7.8l2.2 -2.2" />
      <path d="M7.8 16.2l-2.2 2.2" />
      <path d="M12 12l9 3l-4 2l-2 4l-3 -9" />
    </svg>
    """
  end

  @doc """
  Renders the `clipboard_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clipboard_check />
      <TablerIcons.clipboard_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clipboard_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
      <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M9 14l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `clipboard_copy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clipboard_copy />
      <TablerIcons.clipboard_copy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clipboard_copy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h3m9 -9v-5a2 2 0 0 0 -2 -2h-2" />
      <path d="M13 17v-1a1 1 0 0 1 1 -1h1m3 0h1a1 1 0 0 1 1 1v1m0 3v1a1 1 0 0 1 -1 1h-1m-3 0h-1a1 1 0 0 1 -1 -1v-1" />
      <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `clipboard_data` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clipboard_data />
      <TablerIcons.clipboard_data class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clipboard_data(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
      <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M9 17v-4" />
      <path d="M12 17v-1" />
      <path d="M15 17v-2" />
      <path d="M12 17v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `clipboard_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clipboard_heart />
      <TablerIcons.clipboard_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clipboard_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
      <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M11.993 16.75l2.747 -2.815a1.9 1.9 0 0 0 0 -2.632a1.775 1.775 0 0 0 -2.56 0l-.183 .188l-.183 -.189a1.775 1.775 0 0 0 -2.56 0a1.899 1.899 0 0 0 0 2.632l2.738 2.825z" />
    </svg>
    """
  end

  @doc """
  Renders the `clipboard_list` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clipboard_list />
      <TablerIcons.clipboard_list class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clipboard_list(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
      <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M9 12l.01 0" />
      <path d="M13 12l2 0" />
      <path d="M9 16l.01 0" />
      <path d="M13 16l2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `clipboard_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clipboard_off />
      <TablerIcons.clipboard_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clipboard_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.575 5.597a2 2 0 0 0 -.575 1.403v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2m0 -4v-8a2 2 0 0 0 -2 -2h-2" />
      <path d="M9 5a2 2 0 0 1 2 -2h2a2 2 0 1 1 0 4h-2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `clipboard_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clipboard_plus />
      <TablerIcons.clipboard_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clipboard_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
      <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M10 14h4" />
      <path d="M12 12v4" />
    </svg>
    """
  end

  @doc """
  Renders the `clipboard_text` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clipboard_text />
      <TablerIcons.clipboard_text class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clipboard_text(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
      <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M9 12h6" />
      <path d="M9 16h6" />
    </svg>
    """
  end

  @doc """
  Renders the `clipboard_typography` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clipboard_typography />
      <TablerIcons.clipboard_typography class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clipboard_typography(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
      <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M9 12v-1h6v1" />
      <path d="M12 11v6" />
      <path d="M11 17h2" />
    </svg>
    """
  end

  @doc """
  Renders the `clipboard_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clipboard_x />
      <TablerIcons.clipboard_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clipboard_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
      <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M10 12l4 4m0 -4l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `clipboard` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clipboard />
      <TablerIcons.clipboard class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clipboard(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
      <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_2 />
      <TablerIcons.clock_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 1a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1z" />
      <path d="M12 7v5l3 3" />
      <path d="M4 12h1" />
      <path d="M19 12h1" />
      <path d="M12 19v1" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_bolt />
      <TablerIcons.clock_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.984 12.53a9 9 0 1 0 -7.552 8.355" />
      <path d="M12 7v5l3 3" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_cancel />
      <TablerIcons.clock_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.997 12.25a9 9 0 1 0 -8.718 8.745" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
      <path d="M12 7v5l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_check />
      <TablerIcons.clock_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.942 13.021a9 9 0 1 0 -9.407 7.967" />
      <path d="M12 7v5l3 3" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_code />
      <TablerIcons.clock_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.931 13.111a9 9 0 1 0 -9.453 7.874" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
      <path d="M12 7v5l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_cog />
      <TablerIcons.clock_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 0 -9.002 9" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
      <path d="M12 7v5l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_dollar />
      <TablerIcons.clock_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.866 10.45a9 9 0 1 0 -7.815 10.488" />
      <path d="M12 7v5l1.5 1.5" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_down />
      <TablerIcons.clock_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.984 12.535a9 9 0 1 0 -8.431 8.448" />
      <path d="M12 7v5l3 3" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_edit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_edit />
      <TablerIcons.clock_edit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_edit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 0 -9.972 8.948c.32 .034 .644 .052 .972 .052" />
      <path d="M12 7v5l2 2" />
      <path d="M18.42 15.61a2.1 2.1 0 0 1 2.97 2.97l-3.39 3.42h-3v-3l3.42 -3.39z" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_exclamation />
      <TablerIcons.clock_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.986 12.502a9 9 0 1 0 -5.973 7.98" />
      <path d="M12 7v5l3 3" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_filled />
      <TablerIcons.clock_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-5 2.66a1 1 0 0 0 -.993 .883l-.007 .117v5l.009 .131a1 1 0 0 0 .197 .477l.087 .1l3 3l.094 .082a1 1 0 0 0 1.226 0l.094 -.083l.083 -.094a1 1 0 0 0 0 -1.226l-.083 -.094l-2.707 -2.708v-4.585l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `clock_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_heart />
      <TablerIcons.clock_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.956 11.107a9 9 0 1 0 -9.579 9.871" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
      <path d="M12 7v5l.5 .5" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_hour_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_hour_1 />
      <TablerIcons.clock_hour_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_hour_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 7v5" />
      <path d="M12 12l2 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_hour_10` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_hour_10 />
      <TablerIcons.clock_hour_10 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_hour_10(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12l-3 -2" />
      <path d="M12 7v5" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_hour_11` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_hour_11 />
      <TablerIcons.clock_hour_11 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_hour_11(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12l-2 -3" />
      <path d="M12 7v5" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_hour_12` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_hour_12 />
      <TablerIcons.clock_hour_12 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_hour_12(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 7v5" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_hour_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_hour_2 />
      <TablerIcons.clock_hour_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_hour_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12l3 -2" />
      <path d="M12 7v5" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_hour_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_hour_3 />
      <TablerIcons.clock_hour_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_hour_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12h3.5" />
      <path d="M12 7v5" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_hour_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_hour_4 />
      <TablerIcons.clock_hour_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_hour_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12l3 2" />
      <path d="M12 7v5" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_hour_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_hour_5 />
      <TablerIcons.clock_hour_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_hour_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12l2 3" />
      <path d="M12 7v5" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_hour_6` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_hour_6 />
      <TablerIcons.clock_hour_6 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_hour_6(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12v3.5" />
      <path d="M12 7v5" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_hour_7` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_hour_7 />
      <TablerIcons.clock_hour_7 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_hour_7(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12l-2 3" />
      <path d="M12 7v5" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_hour_8` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_hour_8 />
      <TablerIcons.clock_hour_8 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_hour_8(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12l-3 2" />
      <path d="M12 7v5" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_hour_9` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_hour_9 />
      <TablerIcons.clock_hour_9 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_hour_9(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12h-3.5" />
      <path d="M12 7v5" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_minus />
      <TablerIcons.clock_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.477 15.022a9 9 0 1 0 -7.998 5.965" />
      <path d="M12 7v5l3 3" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_off />
      <TablerIcons.clock_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.633 5.64a9 9 0 1 0 12.735 12.72m1.674 -2.32a9 9 0 0 0 -12.082 -12.082" />
      <path d="M12 7v1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_pause />
      <TablerIcons.clock_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.942 13.018a9 9 0 1 0 -7.909 7.922" />
      <path d="M12 7v5l2 2" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_pin />
      <TablerIcons.clock_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.971 11.278a9 9 0 1 0 -8.313 9.698" />
      <path d="M12 7v5l1.5 1.5" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_play` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_play />
      <TablerIcons.clock_play class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_play(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 7v5l2 2" />
      <path d="M17 22l5 -3l-5 -3z" />
      <path d="M13.017 20.943a9 9 0 1 1 7.831 -7.292" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_plus />
      <TablerIcons.clock_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.984 12.535a9 9 0 1 0 -8.468 8.45" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
      <path d="M12 7v5l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_question />
      <TablerIcons.clock_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.975 11.33a9 9 0 1 0 -5.717 9.06" />
      <path d="M12 7v5l2 2" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_record` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_record />
      <TablerIcons.clock_record class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_record(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12.3a9 9 0 1 0 -8.683 8.694" />
      <path d="M12 7v5l2 2" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_search />
      <TablerIcons.clock_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.993 11.646a9 9 0 1 0 -9.318 9.348" />
      <path d="M12 7v5l1 1" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_share />
      <TablerIcons.clock_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.943 13.016a9 9 0 1 0 -8.915 7.984" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
      <path d="M12 7v5l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_shield` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_shield />
      <TablerIcons.clock_shield class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_shield(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 0 -8.98 9" />
      <path d="M12 7v5l1 1" />
      <path d="M22 16c0 4 -2.5 6 -3.5 6s-3.5 -2 -3.5 -6c1 0 2.5 -.5 3.5 -1.5c1 1 2.5 1.5 3.5 1.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_star />
      <TablerIcons.clock_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.982 11.436a9 9 0 1 0 -9.966 9.51" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
      <path d="M12 7v5l1 1" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_stop` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_stop />
      <TablerIcons.clock_stop class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_stop(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 0 -9 9" />
      <path d="M12 7v5l1 1" />
      <path d="M16 16h6v6h-6z" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_up />
      <TablerIcons.clock_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.983 12.548a9 9 0 1 0 -8.45 8.436" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
      <path d="M12 7v5l2.5 2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `clock_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock_x />
      <TablerIcons.clock_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.926 13.15a9 9 0 1 0 -7.835 7.784" />
      <path d="M12 7v5l2 2" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `clock` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clock />
      <TablerIcons.clock class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clock(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
      <path d="M12 7v5l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `clothes_rack_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clothes_rack_off />
      <TablerIcons.clothes_rack_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clothes_rack_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 7v1m0 4v9" />
      <path d="M9 21h6" />
      <path d="M7.757 9.243a6 6 0 0 0 3.129 1.653m3.578 -.424a6 6 0 0 0 1.779 -1.229" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `clothes_rack` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clothes_rack />
      <TablerIcons.clothes_rack class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clothes_rack(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 7v14" />
      <path d="M9 21h6" />
      <path d="M7.757 9.243a6 6 0 0 0 8.486 0" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_bolt />
      <TablerIcons.cloud_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 18.004h-6.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99c1.396 0 2.6 .831 3.148 2.03" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_cancel />
      <TablerIcons.cloud_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.004h-5.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99a3.45 3.45 0 0 1 2.756 1.373" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_check />
      <TablerIcons.cloud_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 18.004h-4.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99c1.388 0 2.585 .82 3.138 2.007" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_code />
      <TablerIcons.cloud_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 18.004h-4.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99a3.468 3.468 0 0 1 3.307 2.444" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_cog />
      <TablerIcons.cloud_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.004h-5.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99c.956 0 1.822 .39 2.449 1.02" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_computing` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_computing />
      <TablerIcons.cloud_computing class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_computing(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.657 16c-2.572 0 -4.657 -2.007 -4.657 -4.483c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99c1.913 0 3.464 1.56 3.464 3.486c0 1.927 -1.551 3.487 -3.465 3.487h-11.878" />
      <path d="M12 16v5" />
      <path d="M16 16v4a1 1 0 0 0 1 1h4" />
      <path d="M8 16v4a1 1 0 0 1 -1 1h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_data_connection` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_data_connection />
      <TablerIcons.cloud_data_connection class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_data_connection(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 9.897c0 -1.714 1.46 -3.104 3.26 -3.104c.275 -1.22 1.255 -2.215 2.572 -2.611c1.317 -.397 2.77 -.134 3.811 .69c1.042 .822 1.514 2.08 1.239 3.3h.693a2.42 2.42 0 0 1 2.425 2.414a2.42 2.42 0 0 1 -2.425 2.414h-8.315c-1.8 0 -3.26 -1.39 -3.26 -3.103z" />
      <path d="M12 13v3" />
      <path d="M12 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M14 18h7" />
      <path d="M3 18h7" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_dollar />
      <TablerIcons.cloud_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 18.004h-6.843c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.28 1.023 1.957 2.51 1.873 4.027" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_down />
      <TablerIcons.cloud_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.004h-5.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99c1.38 0 2.573 .813 3.13 1.99" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_download` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_download />
      <TablerIcons.cloud_download class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_download(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 18a3.5 3.5 0 0 0 0 -7h-1a5 4.5 0 0 0 -11 -2a4.6 4.4 0 0 0 -2.1 8.4" />
      <path d="M12 13l0 9" />
      <path d="M9 19l3 3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_exclamation />
      <TablerIcons.cloud_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 18.004h-8.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99c1.374 0 2.562 .805 3.121 1.972" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_filled />
      <TablerIcons.cloud_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.04 4.305c2.195 -.667 4.615 -.224 6.36 1.176c1.386 1.108 2.188 2.686 2.252 4.34l.003 .212l.091 .003c2.3 .107 4.143 1.961 4.25 4.27l.004 .211c0 2.407 -1.885 4.372 -4.255 4.482l-.21 .005h-11.878l-.222 -.008c-2.94 -.11 -5.317 -2.399 -5.43 -5.263l-.005 -.216c0 -2.747 2.08 -5.01 4.784 -5.417l.114 -.016l.07 -.181c.663 -1.62 2.056 -2.906 3.829 -3.518l.244 -.08z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_fog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_fog />
      <TablerIcons.cloud_fog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_fog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 16a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7h-12" />
      <path d="M5 20l14 0" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_heart />
      <TablerIcons.cloud_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 18.004h-3.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_lock_open` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_lock_open />
      <TablerIcons.cloud_lock_open class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_lock_open(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 18a3.5 3.5 0 0 0 0 -7h-1c.397 -1.768 -.285 -3.593 -1.788 -4.787c-1.503 -1.193 -3.6 -1.575 -5.5 -1s-3.315 2.019 -3.712 3.787c-2.199 -.088 -4.155 1.326 -4.666 3.373c-.512 2.047 .564 4.154 2.566 5.027" />
      <path d="M8 15m0 1a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1z" />
      <path d="M10 15v-2a2 2 0 0 1 3.736 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_lock` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_lock />
      <TablerIcons.cloud_lock class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_lock(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 18a3.5 3.5 0 0 0 0 -7h-1c.397 -1.768 -.285 -3.593 -1.788 -4.787c-1.503 -1.193 -3.6 -1.575 -5.5 -1s-3.315 2.019 -3.712 3.787c-2.199 -.088 -4.155 1.326 -4.666 3.373c-.512 2.047 .564 4.154 2.566 5.027" />
      <path d="M8 15m0 1a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1z" />
      <path d="M10 15v-2a2 2 0 1 1 4 0v2" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_minus />
      <TablerIcons.cloud_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.004h-5.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99c1.913 0 3.464 1.56 3.464 3.486c0 .186 -.015 .37 -.042 .548" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_off />
      <TablerIcons.cloud_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.58 5.548c.24 -.11 .492 -.207 .752 -.286c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99c1.913 0 3.464 1.56 3.464 3.486c0 .957 -.383 1.824 -1.003 2.454m-2.997 1.033h-11.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.13 -.582 .37 -1.128 .7 -1.62" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_pause />
      <TablerIcons.cloud_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 18.004h-6.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99c1.406 0 2.617 .843 3.16 2.055" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_pin />
      <TablerIcons.cloud_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.004h-5.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_plus />
      <TablerIcons.cloud_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.004h-5.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99a3.46 3.46 0 0 1 3.085 1.9" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_question />
      <TablerIcons.cloud_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.5 18.004h-7.843c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_rain` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_rain />
      <TablerIcons.cloud_rain class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_rain(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7" />
      <path d="M11 13v2m0 3v2m4 -5v2m0 3v2" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_search />
      <TablerIcons.cloud_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 18.004h-4.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_share />
      <TablerIcons.cloud_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 18.004h-5.843c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99c1.41 0 2.624 .848 3.164 2.065" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_snow` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_snow />
      <TablerIcons.cloud_snow class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_snow(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7" />
      <path d="M11 15v.01m0 3v.01m0 3v.01m4 -4v.01m0 3v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_star />
      <TablerIcons.cloud_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.5 18.004h-2.843c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.209 .967 1.88 2.347 1.88 3.776" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_storm` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_storm />
      <TablerIcons.cloud_storm class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_storm(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7h-1" />
      <path d="M13 14l-2 4l3 0l-2 4" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_up />
      <TablerIcons.cloud_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.004h-5.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99c1.38 0 2.57 .811 3.128 1.986" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_upload` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_upload />
      <TablerIcons.cloud_upload class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_upload(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7h-1" />
      <path d="M9 15l3 -3l3 3" />
      <path d="M12 12l0 9" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud_x />
      <TablerIcons.cloud_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 18.004h-6.343c-2.572 -.004 -4.657 -2.011 -4.657 -4.487c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99c1.37 0 2.556 .8 3.117 1.964" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `cloud` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cloud />
      <TablerIcons.cloud class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cloud(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.657 18c-2.572 0 -4.657 -2.007 -4.657 -4.483c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99c1.913 0 3.464 1.56 3.464 3.486c0 1.927 -1.551 3.487 -3.465 3.487h-11.878" />
    </svg>
    """
  end

  @doc """
  Renders the `clover_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clover_2 />
      <TablerIcons.clover_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clover_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 11l-3.397 -3.44a2.104 2.104 0 0 1 0 -2.95a2.04 2.04 0 0 1 2.912 0l.485 .39l.485 -.39a2.04 2.04 0 0 1 2.912 0a2.104 2.104 0 0 1 0 2.95l-3.397 3.44z" />
      <path d="M11 11l-3.397 3.44a2.104 2.104 0 0 0 0 2.95a2.04 2.04 0 0 0 2.912 0l.485 -.39l.485 .39a2.04 2.04 0 0 0 2.912 0a2.104 2.104 0 0 0 0 -2.95l-3.397 -3.44z" />
      <path d="M14.44 7.603a2.104 2.104 0 0 1 2.95 0a2.04 2.04 0 0 1 0 2.912l-.39 .485l.39 .485a2.04 2.04 0 0 1 0 2.912a2.104 2.104 0 0 1 -2.95 0" />
      <path d="M7.56 7.603a2.104 2.104 0 0 0 -2.95 0a2.04 2.04 0 0 0 0 2.912l.39 .485l-.39 .485a2.04 2.04 0 0 0 0 2.912a2.104 2.104 0 0 0 2.95 0" />
      <path d="M15 15l6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `clover` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clover />
      <TablerIcons.clover class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clover(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 10l-3.397 -3.44a2.104 2.104 0 0 1 0 -2.95a2.04 2.04 0 0 1 2.912 0l.485 .39l.485 -.39a2.04 2.04 0 0 1 2.912 0a2.104 2.104 0 0 1 0 2.95l-3.397 3.44z" />
      <path d="M12 14l-3.397 3.44a2.104 2.104 0 0 0 0 2.95a2.04 2.04 0 0 0 2.912 0l.485 -.39l.485 .39a2.04 2.04 0 0 0 2.912 0a2.104 2.104 0 0 0 0 -2.95l-3.397 -3.44z" />
      <path d="M14 12l3.44 -3.397a2.104 2.104 0 0 1 2.95 0a2.04 2.04 0 0 1 0 2.912l-.39 .485l.39 .485a2.04 2.04 0 0 1 0 2.912a2.104 2.104 0 0 1 -2.95 0l-3.44 -3.397z" />
      <path d="M10 12l-3.44 -3.397a2.104 2.104 0 0 0 -2.95 0a2.04 2.04 0 0 0 0 2.912l.39 .485l-.39 .485a2.04 2.04 0 0 0 0 2.912a2.104 2.104 0 0 0 2.95 0l3.44 -3.397z" />
    </svg>
    """
  end

  @doc """
  Renders the `clubs_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clubs_filled />
      <TablerIcons.clubs_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clubs_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2a5 5 0 0 0 -4.488 2.797l-.103 .225a4.998 4.998 0 0 0 -.334 2.837l.027 .14a5 5 0 0 0 -3.091 9.009l.198 .14a4.998 4.998 0 0 0 4.42 .58l.174 -.066l-.773 3.095a1 1 0 0 0 .97 1.243h6l.113 -.006a1 1 0 0 0 .857 -1.237l-.774 -3.095l.174 .065a5 5 0 1 0 1.527 -9.727l.028 -.14a4.997 4.997 0 0 0 -4.925 -5.86z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `clubs` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.clubs />
      <TablerIcons.clubs class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def clubs(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a4 4 0 0 1 3.164 6.447a4 4 0 1 1 -1.164 6.198v1.355l1 4h-6l1 -4l0 -1.355a4 4 0 1 1 -1.164 -6.199a4 4 0 0 1 3.163 -6.446z" />
    </svg>
    """
  end

  @doc """
  Renders the `code_asterix` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.code_asterix />
      <TablerIcons.code_asterix class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def code_asterix(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 19a2 2 0 0 1 -2 -2v-4l-1 -1l1 -1v-4a2 2 0 0 1 2 -2" />
      <path d="M12 11.875l3 -1.687" />
      <path d="M12 11.875v3.375" />
      <path d="M12 11.875l-3 -1.687" />
      <path d="M12 11.875l3 1.688" />
      <path d="M12 8.5v3.375" />
      <path d="M12 11.875l-3 1.688" />
      <path d="M18 19a2 2 0 0 0 2 -2v-4l1 -1l-1 -1v-4a2 2 0 0 0 -2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `code_circle_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.code_circle_2 />
      <TablerIcons.code_circle_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def code_circle_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.5 13.5l-1.5 -1.5l1.5 -1.5" />
      <path d="M15.5 10.5l1.5 1.5l-1.5 1.5" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M13 9.5l-2 5.5" />
    </svg>
    """
  end

  @doc """
  Renders the `code_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.code_circle />
      <TablerIcons.code_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def code_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 14l-2 -2l2 -2" />
      <path d="M14 10l2 2l-2 2" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `code_dots` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.code_dots />
      <TablerIcons.code_dots class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def code_dots(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 12h.01" />
      <path d="M12 12h.01" />
      <path d="M9 12h.01" />
      <path d="M6 19a2 2 0 0 1 -2 -2v-4l-1 -1l1 -1v-4a2 2 0 0 1 2 -2" />
      <path d="M18 19a2 2 0 0 0 2 -2v-4l1 -1l-1 -1v-4a2 2 0 0 0 -2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `code_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.code_minus />
      <TablerIcons.code_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def code_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 12h6" />
      <path d="M6 19a2 2 0 0 1 -2 -2v-4l-1 -1l1 -1v-4a2 2 0 0 1 2 -2" />
      <path d="M18 19a2 2 0 0 0 2 -2v-4l1 -1l-1 -1v-4a2 2 0 0 0 -2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `code_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.code_off />
      <TablerIcons.code_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def code_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 8l-4 4l4 4" />
      <path d="M17 8l4 4l-2.5 2.5" />
      <path d="M14 4l-1.201 4.805m-.802 3.207l-2 7.988" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `code_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.code_plus />
      <TablerIcons.code_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def code_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 12h6" />
      <path d="M12 9v6" />
      <path d="M6 19a2 2 0 0 1 -2 -2v-4l-1 -1l1 -1v-4a2 2 0 0 1 2 -2" />
      <path d="M18 19a2 2 0 0 0 2 -2v-4l1 -1l-1 -1v-4a2 2 0 0 0 -2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.code />
      <TablerIcons.code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 8l-4 4l4 4" />
      <path d="M17 8l4 4l-4 4" />
      <path d="M14 4l-4 16" />
    </svg>
    """
  end

  @doc """
  Renders the `coffee_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.coffee_off />
      <TablerIcons.coffee_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def coffee_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 14c.83 .642 2.077 1.017 3.5 1c1.423 .017 2.67 -.358 3.5 -1c.73 -.565 1.783 -.923 3 -.99" />
      <path d="M8 3c-.194 .14 -.364 .305 -.506 .49" />
      <path d="M12 3a2.4 2.4 0 0 0 -1 2a2.4 2.4 0 0 0 1 2" />
      <path d="M14 10h3v3m-.257 3.743a6 6 0 0 1 -5.743 4.257h-2a6 6 0 0 1 -6 -6v-5h7" />
      <path d="M20.116 16.124a3 3 0 0 0 -3.118 -4.953" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `coffee` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.coffee />
      <TablerIcons.coffee class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def coffee(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 14c.83 .642 2.077 1.017 3.5 1c1.423 .017 2.67 -.358 3.5 -1c.83 -.642 2.077 -1.017 3.5 -1c1.423 -.017 2.67 .358 3.5 1" />
      <path d="M8 3a2.4 2.4 0 0 0 -1 2a2.4 2.4 0 0 0 1 2" />
      <path d="M12 3a2.4 2.4 0 0 0 -1 2a2.4 2.4 0 0 0 1 2" />
      <path d="M3 10h14v5a6 6 0 0 1 -6 6h-2a6 6 0 0 1 -6 -6v-5z" />
      <path d="M16.746 16.726a3 3 0 1 0 .252 -5.555" />
    </svg>
    """
  end

  @doc """
  Renders the `coffin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.coffin />
      <TablerIcons.coffin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def coffin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3l-2 6l2 12h6l2 -12l-2 -6z" />
      <path d="M10 7v5" />
      <path d="M8 9h4" />
      <path d="M13 21h4l2 -12l-2 -6h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `coin_bitcoin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.coin_bitcoin />
      <TablerIcons.coin_bitcoin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def coin_bitcoin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 8h4.09c1.055 0 1.91 .895 1.91 2s-.855 2 -1.91 2c1.055 0 1.91 .895 1.91 2s-.855 2 -1.91 2h-4.09" />
      <path d="M10 12h4" />
      <path d="M10 7v10v-9" />
      <path d="M13 7v1" />
      <path d="M13 16v1" />
    </svg>
    """
  end

  @doc """
  Renders the `coin_euro` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.coin_euro />
      <TablerIcons.coin_euro class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def coin_euro(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M14.401 8c-.669 -.628 -1.5 -1 -2.401 -1c-2.21 0 -4 2.239 -4 5s1.79 5 4 5c.9 0 1.731 -.372 2.4 -1" />
      <path d="M7 10.5h4" />
      <path d="M7 13.5h4" />
    </svg>
    """
  end

  @doc """
  Renders the `coin_monero` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.coin_monero />
      <TablerIcons.coin_monero class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def coin_monero(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M4 16h4v-7l4 4l4 -4v7h4" />
    </svg>
    """
  end

  @doc """
  Renders the `coin_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.coin_off />
      <TablerIcons.coin_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def coin_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.8 9a2 2 0 0 0 -1.8 -1h-1m-2.82 1.171a2 2 0 0 0 1.82 2.829h1m2.824 2.822a2 2 0 0 1 -1.824 1.178h-2a2 2 0 0 1 -1.8 -1" />
      <path d="M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73" />
      <path d="M12 6v2m0 8v2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `coin_pound` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.coin_pound />
      <TablerIcons.coin_pound class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def coin_pound(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M15 9a2 2 0 1 0 -4 0v5a2 2 0 0 1 -2 2h6" />
      <path d="M9 12h4" />
    </svg>
    """
  end

  @doc """
  Renders the `coin_rupee` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.coin_rupee />
      <TablerIcons.coin_rupee class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def coin_rupee(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M15 8h-6h1a3 3 0 0 1 0 6h-1l3 3" />
      <path d="M9 11h6" />
    </svg>
    """
  end

  @doc """
  Renders the `coin_yen` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.coin_yen />
      <TablerIcons.coin_yen class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def coin_yen(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 12h6" />
      <path d="M9 15h6" />
      <path d="M9 8l3 4.5" />
      <path d="M15 8l-3 4.5v4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `coin_yuan` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.coin_yuan />
      <TablerIcons.coin_yuan class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def coin_yuan(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 13h6" />
      <path d="M9 8l3 4.5" />
      <path d="M15 8l-3 4.5v4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `coin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.coin />
      <TablerIcons.coin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def coin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M14.8 9a2 2 0 0 0 -1.8 -1h-2a2 2 0 1 0 0 4h2a2 2 0 1 1 0 4h-2a2 2 0 0 1 -1.8 -1" />
      <path d="M12 7v10" />
    </svg>
    """
  end

  @doc """
  Renders the `coins` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.coins />
      <TablerIcons.coins class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def coins(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 14c0 1.657 2.686 3 6 3s6 -1.343 6 -3s-2.686 -3 -6 -3s-6 1.343 -6 3z" />
      <path d="M9 14v4c0 1.656 2.686 3 6 3s6 -1.344 6 -3v-4" />
      <path d="M3 6c0 1.072 1.144 2.062 3 2.598s4.144 .536 6 0c1.856 -.536 3 -1.526 3 -2.598c0 -1.072 -1.144 -2.062 -3 -2.598s-4.144 -.536 -6 0c-1.856 .536 -3 1.526 -3 2.598z" />
      <path d="M3 6v10c0 .888 .772 1.45 2 2" />
      <path d="M3 11c0 .888 .772 1.45 2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `color_filter` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.color_filter />
      <TablerIcons.color_filter class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def color_filter(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.58 13.79c.27 .68 .42 1.43 .42 2.21c0 1.77 -.77 3.37 -2 4.46a5.93 5.93 0 0 1 -4 1.54c-3.31 0 -6 -2.69 -6 -6c0 -2.76 1.88 -5.1 4.42 -5.79" />
      <path d="M17.58 10.21c2.54 .69 4.42 3.03 4.42 5.79c0 3.31 -2.69 6 -6 6a5.93 5.93 0 0 1 -4 -1.54" />
      <path d="M12 8m-6 0a6 6 0 1 0 12 0a6 6 0 1 0 -12 0" />
    </svg>
    """
  end

  @doc """
  Renders the `color_picker_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.color_picker_off />
      <TablerIcons.color_picker_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def color_picker_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 7l6 6" />
      <path d="M12 8l3.699 -3.699a1 1 0 0 1 1.4 0l2.6 2.6a1 1 0 0 1 0 1.4l-3.702 3.702m-2 2l-6 6h-4v-4l6 -6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `color_picker` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.color_picker />
      <TablerIcons.color_picker class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def color_picker(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 7l6 6" />
      <path d="M4 16l11.7 -11.7a1 1 0 0 1 1.4 0l2.6 2.6a1 1 0 0 1 0 1.4l-11.7 11.7h-4v-4z" />
    </svg>
    """
  end

  @doc """
  Renders the `color_swatch_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.color_swatch_off />
      <TablerIcons.color_swatch_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def color_swatch_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 13v4a4 4 0 0 0 6.832 2.825m1.168 -2.825v-12a2 2 0 0 0 -2 -2h-4a2 2 0 0 0 -2 2v4" />
      <path d="M13 7.35l-2 -2a2 2 0 0 0 -2.11 -.461m-2.13 1.874l-1.416 1.415a2 2 0 0 0 0 2.828l9 9" />
      <path d="M7.3 13h-2.3a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h12" />
      <path d="M17 17v.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `color_swatch` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.color_swatch />
      <TablerIcons.color_swatch class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def color_swatch(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 3h-4a2 2 0 0 0 -2 2v12a4 4 0 0 0 8 0v-12a2 2 0 0 0 -2 -2" />
      <path d="M13 7.35l-2 -2a2 2 0 0 0 -2.828 0l-2.828 2.828a2 2 0 0 0 0 2.828l9 9" />
      <path d="M7.3 13h-2.3a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h12" />
      <path d="M17 17l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `column_insert_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.column_insert_left />
      <TablerIcons.column_insert_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def column_insert_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 4h4a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1z" />
      <path d="M5 12l4 0" />
      <path d="M7 10l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `column_insert_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.column_insert_right />
      <TablerIcons.column_insert_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def column_insert_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 4h4a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1z" />
      <path d="M15 12l4 0" />
      <path d="M17 10l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `column_remove` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.column_remove />
      <TablerIcons.column_remove class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def column_remove(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 4h4a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1z" />
      <path d="M16 10l4 4" />
      <path d="M16 14l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `columns_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.columns_1 />
      <TablerIcons.columns_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def columns_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 3m0 1a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v16a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `columns_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.columns_2 />
      <TablerIcons.columns_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def columns_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 1a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v16a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1zm9 -1v18" />
    </svg>
    """
  end

  @doc """
  Renders the `columns_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.columns_3 />
      <TablerIcons.columns_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def columns_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 1a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v16a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1zm6 -1v18m6 -18v18" />
    </svg>
    """
  end

  @doc """
  Renders the `columns_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.columns_off />
      <TablerIcons.columns_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def columns_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6h2" />
      <path d="M4 10h5.5" />
      <path d="M4 14h5.5" />
      <path d="M4 18h5.5" />
      <path d="M14.5 6h5.5" />
      <path d="M14.5 10h5.5" />
      <path d="M18 14h2" />
      <path d="M14.5 18h3.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `columns` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.columns />
      <TablerIcons.columns class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def columns(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6l5.5 0" />
      <path d="M4 10l5.5 0" />
      <path d="M4 14l5.5 0" />
      <path d="M4 18l5.5 0" />
      <path d="M14.5 6l5.5 0" />
      <path d="M14.5 10l5.5 0" />
      <path d="M14.5 14l5.5 0" />
      <path d="M14.5 18l5.5 0" />
    </svg>
    """
  end

  @doc """
  Renders the `comet` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.comet />
      <TablerIcons.comet class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def comet(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.5 18.5l-3 1.5l.5 -3.5l-2 -2l3 -.5l1.5 -3l1.5 3l3 .5l-2 2l.5 3.5z" />
      <path d="M4 4l7 7" />
      <path d="M9 4l3.5 3.5" />
      <path d="M4 9l3.5 3.5" />
    </svg>
    """
  end

  @doc """
  Renders the `command_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.command_off />
      <TablerIcons.command_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def command_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 9v8a2 2 0 1 1 -2 -2h8m3.411 3.417a2 2 0 0 1 -3.411 -1.417v-2m0 -4v-4a2 2 0 1 1 2 2h-4m-4 0h-2a2 2 0 0 1 -1.417 -3.411" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `command` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.command />
      <TablerIcons.command class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def command(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 9a2 2 0 1 1 2 -2v10a2 2 0 1 1 -2 -2h10a2 2 0 1 1 -2 2v-10a2 2 0 1 1 2 2h-10" />
    </svg>
    """
  end

  @doc """
  Renders the `compass_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.compass_off />
      <TablerIcons.compass_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def compass_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 9l3 -1l-1 3m-1 3l-6 2l2 -6" />
      <path d="M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73" />
      <path d="M12 3v2" />
      <path d="M12 19v2" />
      <path d="M3 12h2" />
      <path d="M19 12h2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `compass` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.compass />
      <TablerIcons.compass class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def compass(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 16l2 -6l6 -2l-2 6l-6 2" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 3l0 2" />
      <path d="M12 19l0 2" />
      <path d="M3 12l2 0" />
      <path d="M19 12l2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `components_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.components_off />
      <TablerIcons.components_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def components_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12l3 3l3 -3l-3 -3z" />
      <path d="M18.5 14.5l2.5 -2.5l-3 -3l-2.5 2.5" />
      <path d="M12.499 8.501l2.501 -2.501l-3 -3l-2.5 2.5" />
      <path d="M9 18l3 3l3 -3l-3 -3z" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `components` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.components />
      <TablerIcons.components class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def components(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12l3 3l3 -3l-3 -3z" />
      <path d="M15 12l3 3l3 -3l-3 -3z" />
      <path d="M9 6l3 3l3 -3l-3 -3z" />
      <path d="M9 18l3 3l3 -3l-3 -3z" />
    </svg>
    """
  end

  @doc """
  Renders the `cone_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cone_2 />
      <TablerIcons.cone_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cone_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 5.002v.5l-8.13 14.99a1 1 0 0 1 -1.74 0l-8.13 -14.989v-.5c0 -1.659 4.03 -3.003 9 -3.003s9 1.344 9 3.002" />
    </svg>
    """
  end

  @doc """
  Renders the `cone_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cone_off />
      <TablerIcons.cone_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cone_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.396 16.384l-7.526 -13.877a1 1 0 0 0 -1.74 0l-1.626 2.998m-1.407 2.594l-5.097 9.398v.5c0 1.66 4.03 3.003 9 3.003c3.202 0 6.014 -.558 7.609 -1.398" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cone_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cone_plus />
      <TablerIcons.cone_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cone_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.03 12.022l-5.16 -9.515a1 1 0 0 0 -1.74 0l-8.13 14.99v.5c0 1.66 4.03 3.003 9 3.003c.17 0 .34 -.002 .508 -.005" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `cone` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cone />
      <TablerIcons.cone class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cone(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 17.998v-.5l-8.13 -14.99a1 1 0 0 0 -1.74 0l-8.13 14.989v.5c0 1.659 4.03 3.003 9 3.003s9 -1.344 9 -3.002" />
    </svg>
    """
  end

  @doc """
  Renders the `confetti_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.confetti_off />
      <TablerIcons.confetti_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def confetti_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 5h1" />
      <path d="M5 5v1" />
      <path d="M11.5 4l-.5 2" />
      <path d="M18 5h2" />
      <path d="M19 4v2" />
      <path d="M15 9l-1 1" />
      <path d="M18 13l2 -.5" />
      <path d="M18 19h1" />
      <path d="M19 19v1" />
      <path d="M14 16.518l-6.518 -6.518l-4.39 9.58a1 1 0 0 0 1.329 1.329l9.579 -4.39v0z" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `confetti` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.confetti />
      <TablerIcons.confetti class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def confetti(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 5h2" />
      <path d="M5 4v2" />
      <path d="M11.5 4l-.5 2" />
      <path d="M18 5h2" />
      <path d="M19 4v2" />
      <path d="M15 9l-1 1" />
      <path d="M18 13l2 -.5" />
      <path d="M18 19h2" />
      <path d="M19 18v2" />
      <path d="M14 16.518l-6.518 -6.518l-4.39 9.58a1 1 0 0 0 1.329 1.329l9.579 -4.39z" />
    </svg>
    """
  end

  @doc """
  Renders the `confucius` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.confucius />
      <TablerIcons.confucius class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def confucius(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 19l3 2v-18" />
      <path d="M4 10l8 -2" />
      <path d="M4 18l8 -10" />
      <path d="M20 18l-8 -8l8 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `container_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.container_off />
      <TablerIcons.container_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def container_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 4v.01" />
      <path d="M20 20v.01" />
      <path d="M20 16v.01" />
      <path d="M20 12v.01" />
      <path d="M20 8v.01" />
      <path d="M8.297 4.289a1 1 0 0 1 .703 -.289h6a1 1 0 0 1 1 1v7m0 4v3a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1v-11" />
      <path d="M4 4v.01" />
      <path d="M4 20v.01" />
      <path d="M4 16v.01" />
      <path d="M4 12v.01" />
      <path d="M4 8v.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `container` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.container />
      <TablerIcons.container class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def container(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 4v.01" />
      <path d="M20 20v.01" />
      <path d="M20 16v.01" />
      <path d="M20 12v.01" />
      <path d="M20 8v.01" />
      <path d="M8 4m0 1a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1z" />
      <path d="M4 4v.01" />
      <path d="M4 20v.01" />
      <path d="M4 16v.01" />
      <path d="M4 12v.01" />
      <path d="M4 8v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `contrast_2_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.contrast_2_off />
      <TablerIcons.contrast_2_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def contrast_2_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 18h2a6 6 0 0 0 6 -6m.878 -3.126a6 6 0 0 1 5.122 -2.874h2" />
      <path d="M8 4h10a2 2 0 0 1 2 2v10m-.586 3.414a2 2 0 0 1 -1.414 .586h-12a2 2 0 0 1 -2 -2v-12c0 -.547 .22 -1.043 .576 -1.405" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `contrast_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.contrast_2 />
      <TablerIcons.contrast_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def contrast_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M4 18h2a6 6 0 0 0 6 -6a6 6 0 0 1 6 -6h2" />
    </svg>
    """
  end

  @doc """
  Renders the `contrast_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.contrast_off />
      <TablerIcons.contrast_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def contrast_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12v5a4.984 4.984 0 0 0 3.522 -1.45m1.392 -2.623a5 5 0 0 0 -4.914 -5.927v1" />
      <path d="M5.641 5.631a9 9 0 1 0 12.719 12.738m1.68 -2.318a9 9 0 0 0 -12.074 -12.098" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `contrast` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.contrast />
      <TablerIcons.contrast class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def contrast(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 17a5 5 0 0 0 0 -10v10" />
    </svg>
    """
  end

  @doc """
  Renders the `cooker` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cooker />
      <TablerIcons.cooker class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cooker(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 7h.01" />
      <path d="M15 7h.01" />
      <path d="M9 7h.01" />
      <path d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M9 15h6" />
      <path d="M5 11h14" />
    </svg>
    """
  end

  @doc """
  Renders the `cookie_man` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cookie_man />
      <TablerIcons.cookie_man class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cookie_man(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 2a5 5 0 0 1 2.845 9.112l.147 .369l1.755 -.803c.969 -.443 2.12 -.032 2.571 .918a1.88 1.88 0 0 1 -.787 2.447l-.148 .076l-2.383 1.089v2.02l1.426 1.425l.114 .125a1.96 1.96 0 0 1 -2.762 2.762l-.125 -.114l-2.079 -2.08l-.114 -.124a1.957 1.957 0 0 1 -.161 -.22h-.599c-.047 .075 -.101 .15 -.16 .22l-.115 .125l-2.08 2.079a1.96 1.96 0 0 1 -2.886 -2.648l.114 -.125l1.427 -1.426v-2.019l-2.383 -1.09l-.148 -.075a1.88 1.88 0 0 1 -.787 -2.447c.429 -.902 1.489 -1.318 2.424 -.978l.147 .06l1.755 .803l.147 -.369a5 5 0 0 1 -2.15 -3.895l0 -.217a5 5 0 0 1 5 -5z" />
      <path d="M12 16h.01" />
      <path d="M12 13h.01" />
      <path d="M10 7h.01" />
      <path d="M14 7h.01" />
      <path d="M12 9h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `cookie_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cookie_off />
      <TablerIcons.cookie_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cookie_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 13v.01" />
      <path d="M12 17v.01" />
      <path d="M12 12v.01" />
      <path d="M18.192 18.187a3 3 0 0 1 -.976 .652c-1.048 .263 -1.787 .483 -2.216 .661c-.475 .197 -1.092 .538 -1.852 1.024a3 3 0 0 1 -2.296 0c-.802 -.503 -1.419 -.844 -1.852 -1.024c-.471 -.195 -1.21 -.415 -2.216 -.66a3 3 0 0 1 -1.623 -1.624c-.265 -1.052 -.485 -1.79 -.661 -2.216c-.198 -.479 -.54 -1.096 -1.024 -1.852a3 3 0 0 1 0 -2.296c.48 -.744 .82 -1.361 1.024 -1.852c.171 -.413 .391 -1.152 .66 -2.216a3 3 0 0 1 .649 -.971m2.821 -1.174c.14 -.049 .263 -.095 .37 -.139c.458 -.19 1.075 -.531 1.852 -1.024a3 3 0 0 1 2.296 0l2.667 1.104a4 4 0 0 0 4.656 6.14l.053 .132a3 3 0 0 1 0 2.296c-.497 .786 -.838 1.404 -1.024 1.852a6.579 6.579 0 0 0 -.135 .36" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cookie` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cookie />
      <TablerIcons.cookie class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cookie(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 13v.01" />
      <path d="M12 17v.01" />
      <path d="M12 12v.01" />
      <path d="M16 14v.01" />
      <path d="M11 8v.01" />
      <path d="M13.148 3.476l2.667 1.104a4 4 0 0 0 4.656 6.14l.053 .132a3 3 0 0 1 0 2.296c-.497 .786 -.838 1.404 -1.024 1.852c-.189 .456 -.409 1.194 -.66 2.216a3 3 0 0 1 -1.624 1.623c-1.048 .263 -1.787 .483 -2.216 .661c-.475 .197 -1.092 .538 -1.852 1.024a3 3 0 0 1 -2.296 0c-.802 -.503 -1.419 -.844 -1.852 -1.024c-.471 -.195 -1.21 -.415 -2.216 -.66a3 3 0 0 1 -1.623 -1.624c-.265 -1.052 -.485 -1.79 -.661 -2.216c-.198 -.479 -.54 -1.096 -1.024 -1.852a3 3 0 0 1 0 -2.296c.48 -.744 .82 -1.361 1.024 -1.852c.171 -.413 .391 -1.152 .66 -2.216a3 3 0 0 1 1.624 -1.623c1.032 -.256 1.77 -.476 2.216 -.661c.458 -.19 1.075 -.531 1.852 -1.024a3 3 0 0 1 2.296 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `copy_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.copy_off />
      <TablerIcons.copy_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def copy_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.414 19.415a2 2 0 0 1 -1.414 .585h-8a2 2 0 0 1 -2 -2v-8c0 -.554 .225 -1.055 .589 -1.417m3.411 -.583h6a2 2 0 0 1 2 2v6" />
      <path d="M16 8v-2a2 2 0 0 0 -2 -2h-6m-3.418 .59c-.36 .36 -.582 .86 -.582 1.41v8a2 2 0 0 0 2 2h2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `copy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.copy />
      <TablerIcons.copy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def copy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
      <path d="M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2" />
    </svg>
    """
  end

  @doc """
  Renders the `copyleft_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.copyleft_filled />
      <TablerIcons.copyleft_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def copyleft_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-2.117 5.889a4.016 4.016 0 0 0 -5.543 -.23a1 1 0 0 0 1.32 1.502a2.016 2.016 0 0 1 2.783 .116a1.993 1.993 0 0 1 0 2.766a2.016 2.016 0 0 1 -2.783 .116a1 1 0 0 0 -1.32 1.501a4.016 4.016 0 0 0 5.543 -.23a3.993 3.993 0 0 0 0 -5.542z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `copyleft_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.copyleft_off />
      <TablerIcons.copyleft_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def copyleft_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.303 9.3a3.01 3.01 0 0 1 1.405 1.406m-.586 3.413a3.016 3.016 0 0 1 -4.122 .131" />
      <path d="M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `copyleft` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.copyleft />
      <TablerIcons.copyleft class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def copyleft(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 9.75a3.016 3.016 0 0 1 4.163 .173a2.993 2.993 0 0 1 0 4.154a3.016 3.016 0 0 1 -4.163 .173" />
    </svg>
    """
  end

  @doc """
  Renders the `copyright_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.copyright_filled />
      <TablerIcons.copyright_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def copyright_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-2.34 5.659a4.016 4.016 0 0 0 -5.543 .23a3.993 3.993 0 0 0 0 5.542a4.016 4.016 0 0 0 5.543 .23a1 1 0 0 0 -1.32 -1.502c-.81 .711 -2.035 .66 -2.783 -.116a1.993 1.993 0 0 1 0 -2.766a2.016 2.016 0 0 1 2.783 -.116a1 1 0 0 0 1.32 -1.501z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `copyright_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.copyright_off />
      <TablerIcons.copyright_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def copyright_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 9.75a3.016 3.016 0 0 0 -.711 -.466m-3.41 .596a2.993 2.993 0 0 0 -.042 4.197a3.016 3.016 0 0 0 4.163 .173" />
      <path d="M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `copyright` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.copyright />
      <TablerIcons.copyright class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def copyright(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M14 9.75a3.016 3.016 0 0 0 -4.163 .173a2.993 2.993 0 0 0 0 4.154a3.016 3.016 0 0 0 4.163 .173" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_down_left_double` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_down_left_double />
      <TablerIcons.corner_down_left_double class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_down_left_double(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 5v6a3 3 0 0 1 -3 3h-7" />
      <path d="M13 10l-4 4l4 4m-5 -8l-4 4l4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_down_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_down_left />
      <TablerIcons.corner_down_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_down_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 6v6a3 3 0 0 1 -3 3h-10l4 -4m0 8l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_down_right_double` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_down_right_double />
      <TablerIcons.corner_down_right_double class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_down_right_double(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 5v6a3 3 0 0 0 3 3h7" />
      <path d="M10 10l4 4l-4 4m5 -8l4 4l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_down_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_down_right />
      <TablerIcons.corner_down_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_down_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 6v6a3 3 0 0 0 3 3h10l-4 -4m0 8l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_left_down_double` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_left_down_double />
      <TablerIcons.corner_left_down_double class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_left_down_double(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 4h-6a3 3 0 0 0 -3 3v7" />
      <path d="M13 10l-4 4l-4 -4m8 5l-4 4l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_left_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_left_down />
      <TablerIcons.corner_left_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_left_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 6h-6a3 3 0 0 0 -3 3v10l-4 -4m8 0l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_left_up_double` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_left_up_double />
      <TablerIcons.corner_left_up_double class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_left_up_double(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 19h-6a3 3 0 0 1 -3 -3v-7" />
      <path d="M13 13l-4 -4l-4 4m8 -5l-4 -4l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_left_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_left_up />
      <TablerIcons.corner_left_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_left_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 18h-6a3 3 0 0 1 -3 -3v-10l-4 4m8 0l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_right_down_double` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_right_down_double />
      <TablerIcons.corner_right_down_double class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_right_down_double(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4h6a3 3 0 0 1 3 3v7" />
      <path d="M10 10l4 4l4 -4m-8 5l4 4l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_right_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_right_down />
      <TablerIcons.corner_right_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_right_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 6h6a3 3 0 0 1 3 3v10l-4 -4m8 0l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_right_up_double` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_right_up_double />
      <TablerIcons.corner_right_up_double class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_right_up_double(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 19h6a3 3 0 0 0 3 -3v-7" />
      <path d="M10 13l4 -4l4 4m-8 -5l4 -4l4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_right_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_right_up />
      <TablerIcons.corner_right_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_right_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 18h6a3 3 0 0 0 3 -3v-10l-4 4m8 0l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_up_left_double` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_up_left_double />
      <TablerIcons.corner_up_left_double class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_up_left_double(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 18v-6a3 3 0 0 0 -3 -3h-7" />
      <path d="M13 13l-4 -4l4 -4m-5 8l-4 -4l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_up_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_up_left />
      <TablerIcons.corner_up_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_up_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 18v-6a3 3 0 0 0 -3 -3h-10l4 -4m0 8l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_up_right_double` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_up_right_double />
      <TablerIcons.corner_up_right_double class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_up_right_double(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 18v-6a3 3 0 0 1 3 -3h7" />
      <path d="M10 13l4 -4l-4 -4m5 8l4 -4l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `corner_up_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.corner_up_right />
      <TablerIcons.corner_up_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def corner_up_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 18v-6a3 3 0 0 1 3 -3h10l-4 -4m0 8l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `cpu_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cpu_2 />
      <TablerIcons.cpu_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cpu_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5m0 1a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v12a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1z" />
      <path d="M8 10v-2h2m6 6v2h-2m-4 0h-2v-2m8 -4v-2h-2" />
      <path d="M3 10h2" />
      <path d="M3 14h2" />
      <path d="M10 3v2" />
      <path d="M14 3v2" />
      <path d="M21 10h-2" />
      <path d="M21 14h-2" />
      <path d="M14 21v-2" />
      <path d="M10 21v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `cpu_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cpu_off />
      <TablerIcons.cpu_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cpu_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h9a1 1 0 0 1 1 1v9m-.292 3.706a1 1 0 0 1 -.708 .294h-12a1 1 0 0 1 -1 -1v-12c0 -.272 .108 -.518 .284 -.698" />
      <path d="M13 9h2v2m0 4h-6v-6" />
      <path d="M3 10h2" />
      <path d="M3 14h2" />
      <path d="M10 3v2" />
      <path d="M14 3v2" />
      <path d="M21 10h-2" />
      <path d="M21 14h-2" />
      <path d="M14 21v-2" />
      <path d="M10 21v-2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cpu` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cpu />
      <TablerIcons.cpu class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cpu(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5m0 1a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v12a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1z" />
      <path d="M9 9h6v6h-6z" />
      <path d="M3 10h2" />
      <path d="M3 14h2" />
      <path d="M10 3v2" />
      <path d="M14 3v2" />
      <path d="M21 10h-2" />
      <path d="M21 14h-2" />
      <path d="M14 21v-2" />
      <path d="M10 21v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `crane_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.crane_off />
      <TablerIcons.crane_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def crane_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 21h6" />
      <path d="M9 21v-12" />
      <path d="M9 5v-2l-1 1" />
      <path d="M6 6l-3 3h6" />
      <path d="M13 9h8" />
      <path d="M9 3l10 6" />
      <path d="M17 9v4a2 2 0 0 1 2 2m-2 2a2 2 0 0 1 -2 -2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `crane` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.crane />
      <TablerIcons.crane class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def crane(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 21h6" />
      <path d="M9 21v-18l-6 6h18" />
      <path d="M9 3l10 6" />
      <path d="M17 9v4a2 2 0 1 1 -2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `creative_commons_by` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.creative_commons_by />
      <TablerIcons.creative_commons_by class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def creative_commons_by(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 7m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M9 13v-1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-.5l-.5 4h-2l-.5 -4h-.5a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `creative_commons_nc` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.creative_commons_nc />
      <TablerIcons.creative_commons_nc class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def creative_commons_nc(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M15 9h-4.5a1.5 1.5 0 0 0 0 3h3a1.5 1.5 0 0 1 0 3h-4.5" />
      <path d="M12 7v2" />
      <path d="M12 15v2" />
      <path d="M6 6l3 3" />
      <path d="M15 15l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `creative_commons_nd` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.creative_commons_nd />
      <TablerIcons.creative_commons_nd class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def creative_commons_nd(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 10h6" />
      <path d="M9 14h6" />
    </svg>
    """
  end

  @doc """
  Renders the `creative_commons_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.creative_commons_off />
      <TablerIcons.creative_commons_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def creative_commons_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.638 5.634a9 9 0 1 0 12.723 12.733m1.686 -2.332a9 9 0 0 0 -12.093 -12.077" />
      <path d="M10.5 10.5a2.187 2.187 0 0 0 -2.914 .116a1.928 1.928 0 0 0 0 2.768a2.188 2.188 0 0 0 2.914 .116" />
      <path d="M16.5 10.5a2.194 2.194 0 0 0 -2.309 -.302" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `creative_commons_sa` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.creative_commons_sa />
      <TablerIcons.creative_commons_sa class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def creative_commons_sa(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 16a4 4 0 1 0 -4 -4v1" />
      <path d="M6 12l2 2l2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `creative_commons_zero` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.creative_commons_zero />
      <TablerIcons.creative_commons_zero class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def creative_commons_zero(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12m-3 0a3 4 0 1 0 6 0a3 4 0 1 0 -6 0" />
      <path d="M14 9l-4 6" />
    </svg>
    """
  end

  @doc """
  Renders the `creative_commons` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.creative_commons />
      <TablerIcons.creative_commons class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def creative_commons(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10.5 10.5c-.847 -.71 -2.132 -.658 -2.914 .116a1.928 1.928 0 0 0 0 2.768c.782 .774 2.067 .825 2.914 .116" />
      <path d="M16.5 10.5c-.847 -.71 -2.132 -.658 -2.914 .116a1.928 1.928 0 0 0 0 2.768c.782 .774 2.067 .825 2.914 .116" />
    </svg>
    """
  end

  @doc """
  Renders the `credit_card_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.credit_card_off />
      <TablerIcons.credit_card_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def credit_card_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M9 5h9a3 3 0 0 1 3 3v8a3 3 0 0 1 -.128 .87" />
      <path d="M18.87 18.872a3 3 0 0 1 -.87 .128h-12a3 3 0 0 1 -3 -3v-8c0 -1.352 .894 -2.495 2.124 -2.87" />
      <path d="M3 11l8 0" />
      <path d="M15 11l6 0" />
      <path d="M7 15l.01 0" />
      <path d="M11 15l2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `credit_card` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.credit_card />
      <TablerIcons.credit_card class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def credit_card(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v8a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M3 10l18 0" />
      <path d="M7 15l.01 0" />
      <path d="M11 15l2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `cricket` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cricket />
      <TablerIcons.cricket class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cricket(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.105 18.79l-1 .992a4.159 4.159 0 0 1 -6.038 -5.715l.157 -.166l8.282 -8.401l1.5 1.5l3.45 -3.391a2.08 2.08 0 0 1 3.057 2.815l-.116 .126l-3.391 3.45l1.5 1.5l-3.668 3.617" />
      <path d="M10.5 7.5l6 6" />
      <path d="M14 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `crop` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.crop />
      <TablerIcons.crop class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def crop(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 5v10a1 1 0 0 0 1 1h10" />
      <path d="M5 8h10a1 1 0 0 1 1 1v10" />
    </svg>
    """
  end

  @doc """
  Renders the `cross_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cross_filled />
      <TablerIcons.cross_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cross_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10 2l-.117 .007a1 1 0 0 0 -.883 .993v4h-4a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 .993 .883h4v8a1 1 0 0 0 1 1h4l.117 -.007a1 1 0 0 0 .883 -.993v-8h4a1 1 0 0 0 1 -1v-4l-.007 -.117a1 1 0 0 0 -.993 -.883h-4v-4a1 1 0 0 0 -1 -1h-4z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `cross_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cross_off />
      <TablerIcons.cross_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cross_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 12h3v-4h-5v-5h-4v3m-2 2h-3v4h5v9h4v-7" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cross` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cross />
      <TablerIcons.cross class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cross(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 21h4v-9h5v-4h-5v-5h-4v5h-5v4h5z" />
    </svg>
    """
  end

  @doc """
  Renders the `crosshair` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.crosshair />
      <TablerIcons.crosshair class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def crosshair(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v-2a2 2 0 0 1 2 -2h2" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2a2 2 0 0 0 2 -2v-2" />
      <path d="M9 12l6 0" />
      <path d="M12 9l0 6" />
    </svg>
    """
  end

  @doc """
  Renders the `crown_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.crown_off />
      <TablerIcons.crown_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def crown_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 18h-13l-1.865 -9.327a.25 .25 0 0 1 .4 -.244l4.465 3.571l1.6 -2.4m1.596 -2.394l.804 -1.206l4 6l4.464 -3.571a.25 .25 0 0 1 .401 .244l-1.363 6.818" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `crown` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.crown />
      <TablerIcons.crown class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def crown(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 6l4 6l5 -4l-2 10h-14l-2 -10l5 4z" />
    </svg>
    """
  end

  @doc """
  Renders the `crutches_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.crutches_off />
      <TablerIcons.crutches_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def crutches_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.178 4.174a2 2 0 0 1 1.822 -1.174h4a2 2 0 1 1 0 4h-3" />
      <path d="M11 21h2" />
      <path d="M12 21v-4.092a3 3 0 0 1 .504 -1.664l.992 -1.488a3 3 0 0 0 .097 -.155m.407 -3.601v-3" />
      <path d="M12 21v-4.092a3 3 0 0 0 -.504 -1.664l-.992 -1.488a3 3 0 0 1 -.504 -1.664v-2.092" />
      <path d="M10 11h1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `crutches` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.crutches />
      <TablerIcons.crutches class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def crutches(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 3m0 2a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-4a2 2 0 0 1 -2 -2z" />
      <path d="M11 21h2" />
      <path d="M12 21v-4.092a3 3 0 0 1 .504 -1.664l.992 -1.488a3 3 0 0 0 .504 -1.664v-5.092" />
      <path d="M12 21v-4.092a3 3 0 0 0 -.504 -1.664l-.992 -1.488a3 3 0 0 1 -.504 -1.664v-5.092" />
      <path d="M10 11h4" />
    </svg>
    """
  end

  @doc """
  Renders the `crystal_ball` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.crystal_ball />
      <TablerIcons.crystal_ball class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def crystal_ball(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.73 17.018a8 8 0 1 1 10.54 0" />
      <path d="M5 19a2 2 0 0 0 2 2h10a2 2 0 1 0 0 -4h-10a2 2 0 0 0 -2 2z" />
      <path d="M11 7a3 3 0 0 0 -3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `csv` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.csv />
      <TablerIcons.csv class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def csv(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-2a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1" />
      <path d="M17 8l2 8l2 -8" />
      <path d="M7 10a2 2 0 1 0 -4 0v4a2 2 0 1 0 4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `cube_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cube_off />
      <TablerIcons.cube_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cube_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.83 16.809c.11 -.248 .17 -.52 .17 -.801v-8.018a1.98 1.98 0 0 0 -1 -1.717l-7 -4.008a2.016 2.016 0 0 0 -2 0l-3.012 1.725m-2.547 1.458l-1.441 .825c-.619 .355 -1 1.01 -1 1.718v8.018c0 .709 .381 1.363 1 1.717l7 4.008a2.016 2.016 0 0 0 2 0l5.544 -3.174" />
      <path d="M12 22v-10" />
      <path d="M14.532 10.538l6.198 -3.578" />
      <path d="M3.27 6.96l8.73 5.04" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cube_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cube_plus />
      <TablerIcons.cube_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cube_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12.5v-4.509a1.98 1.98 0 0 0 -1 -1.717l-7 -4.008a2.016 2.016 0 0 0 -2 0l-7 4.007c-.619 .355 -1 1.01 -1 1.718v8.018c0 .709 .381 1.363 1 1.717l7 4.008a2.016 2.016 0 0 0 2 0" />
      <path d="M12 22v-10" />
      <path d="M12 12l8.73 -5.04" />
      <path d="M3.27 6.96l8.73 5.04" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `cube_send` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cube_send />
      <TablerIcons.cube_send class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cube_send(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 12.5l-5 -3l5 -3l5 3v5.5l-5 3z" />
      <path d="M11 9.5v5.5l5 3" />
      <path d="M16 12.545l5 -3.03" />
      <path d="M7 9h-5" />
      <path d="M7 12h-3" />
      <path d="M7 15h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `cube_unfolded` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cube_unfolded />
      <TablerIcons.cube_unfolded class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cube_unfolded(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 15h10v5h5v-5h5v-5h-10v-5h-5v5h-5z" />
      <path d="M7 15v-5h5v5h5v-5" />
    </svg>
    """
  end

  @doc """
  Renders the `cube` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cube />
      <TablerIcons.cube class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cube(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 16.008v-8.018a1.98 1.98 0 0 0 -1 -1.717l-7 -4.008a2.016 2.016 0 0 0 -2 0l-7 4.008c-.619 .355 -1 1.01 -1 1.718v8.018c0 .709 .381 1.363 1 1.717l7 4.008a2.016 2.016 0 0 0 2 0l7 -4.008c.619 -.355 1 -1.01 1 -1.718z" />
      <path d="M12 22v-10" />
      <path d="M12 12l8.73 -5.04" />
      <path d="M3.27 6.96l8.73 5.04" />
    </svg>
    """
  end

  @doc """
  Renders the `cup_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cup_off />
      <TablerIcons.cup_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cup_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8h-3v3h6m4 0h4v-3h-7" />
      <path d="M17.5 11l-.323 2.154m-.525 3.497l-.652 4.349h-8l-1.5 -10" />
      <path d="M6 8v-1c0 -.296 .064 -.577 .18 -.83m2.82 -1.17h7a2 2 0 0 1 2 2v1" />
      <path d="M15 5v-2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cup` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cup />
      <TablerIcons.cup class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cup(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 11h14v-3h-14z" />
      <path d="M17.5 11l-1.5 10h-8l-1.5 -10" />
      <path d="M6 8v-1a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v1" />
      <path d="M15 5v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `curling` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.curling />
      <TablerIcons.curling class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def curling(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 9m0 4a4 4 0 0 1 4 -4h8a4 4 0 0 1 4 4v2a4 4 0 0 1 -4 4h-8a4 4 0 0 1 -4 -4z" />
      <path d="M4 14h16" />
      <path d="M8 5h6a2 2 0 0 1 2 2v2" />
    </svg>
    """
  end

  @doc """
  Renders the `curly_loop` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.curly_loop />
      <TablerIcons.curly_loop class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def curly_loop(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 8c-4 0 -7 2 -7 5a3 3 0 0 0 6 0c0 -3 -2.5 -5 -8 -5s-8 2 -8 5a3 3 0 0 0 6 0c0 -3 -3 -5 -7 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_afghani` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_afghani />
      <TablerIcons.currency_afghani class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_afghani(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 13h-3.5a3.5 3.5 0 1 1 3.5 -3.5v6.5h-7" />
      <path d="M12 3v.01" />
      <path d="M12 19v2" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_bahraini` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_bahraini />
      <TablerIcons.currency_bahraini class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_bahraini(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 10v1a4 4 0 0 0 4 4h2a2 2 0 0 0 2 -2v-3" />
      <path d="M7 19.01v-.01" />
      <path d="M14 15.01v-.01" />
      <path d="M17 15h2a2 2 0 0 0 1.649 -3.131l-2.653 -3.869" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_baht` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_baht />
      <TablerIcons.currency_baht class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_baht(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 6h5a3 3 0 0 1 3 3v.143a2.857 2.857 0 0 1 -2.857 2.857h-5.143" />
      <path d="M8 12h5a3 3 0 0 1 3 3v.143a2.857 2.857 0 0 1 -2.857 2.857h-5.143" />
      <path d="M8 6v12" />
      <path d="M11 4v2" />
      <path d="M11 18v2" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_bitcoin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_bitcoin />
      <TablerIcons.currency_bitcoin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_bitcoin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 6h8a3 3 0 0 1 0 6a3 3 0 0 1 0 6h-8" />
      <path d="M8 6l0 12" />
      <path d="M8 12l6 0" />
      <path d="M9 3l0 3" />
      <path d="M13 3l0 3" />
      <path d="M9 18l0 3" />
      <path d="M13 18l0 3" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_cent` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_cent />
      <TablerIcons.currency_cent class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_cent(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.007 7.54a5.965 5.965 0 0 0 -4.008 -1.54a6 6 0 0 0 -5.992 6c0 3.314 2.682 6 5.992 6a5.965 5.965 0 0 0 4 -1.536" />
      <path d="M12 20v-2" />
      <path d="M12 6v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_dinar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_dinar />
      <TablerIcons.currency_dinar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_dinar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 20.01v-.01" />
      <path d="M6 13l2.386 -.9a1 1 0 0 0 -.095 -1.902l-1.514 -.404a1 1 0 0 1 -.102 -1.9l2.325 -.894" />
      <path d="M3 14v1a3 3 0 0 0 3 3h4.161a3 3 0 0 0 2.983 -3.32l-1.144 -10.68" />
      <path d="M16 17l1 1h2a2 2 0 0 0 1.649 -3.131l-2.653 -3.869" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_dirham` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_dirham />
      <TablerIcons.currency_dirham class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_dirham(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.5 19h-3.5" />
      <path d="M8.599 16.479a1.5 1.5 0 1 0 -1.099 2.521" />
      <path d="M7 4v9" />
      <path d="M15 13h1.888a1.5 1.5 0 0 0 1.296 -2.256l-2.184 -3.744" />
      <path d="M11 13.01v-.01" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_dogecoin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_dogecoin />
      <TablerIcons.currency_dogecoin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_dogecoin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 12h6" />
      <path d="M9 6v12" />
      <path d="M6 18h6a6 6 0 1 0 0 -12h-6" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_dollar_australian` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_dollar_australian />
      <TablerIcons.currency_dollar_australian class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_dollar_australian(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 18l3.279 -11.476a.75 .75 0 0 1 1.442 0l3.279 11.476" />
      <path d="M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4" />
      <path d="M17 20v-2" />
      <path d="M18 6v-2" />
      <path d="M4.5 14h5" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_dollar_brunei` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_dollar_brunei />
      <TablerIcons.currency_dollar_brunei class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_dollar_brunei(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4" />
      <path d="M17 20v-2" />
      <path d="M18 6v-2" />
      <path d="M3 6v12h4a3 3 0 0 0 0 -6h-4h4a3 3 0 0 0 0 -6h-4z" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_dollar_canadian` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_dollar_canadian />
      <TablerIcons.currency_dollar_canadian class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_dollar_canadian(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4" />
      <path d="M10 18h-1a6 6 0 1 1 0 -12h1" />
      <path d="M17 20v-2" />
      <path d="M18 6v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_dollar_guyanese` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_dollar_guyanese />
      <TablerIcons.currency_dollar_guyanese class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_dollar_guyanese(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4" />
      <path d="M10 6h-3a4 4 0 0 0 -4 4v4a4 4 0 0 0 4 4h3v-6h-2" />
      <path d="M17 20v-2" />
      <path d="M18 6v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_dollar_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_dollar_off />
      <TablerIcons.currency_dollar_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_dollar_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.7 8a3 3 0 0 0 -2.7 -2h-4m-2.557 1.431a3 3 0 0 0 2.557 4.569h2m4.564 4.558a3 3 0 0 1 -2.564 1.442h-4a3 3 0 0 1 -2.7 -2" />
      <path d="M12 3v3m0 12v3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_dollar_singapore` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_dollar_singapore />
      <TablerIcons.currency_dollar_singapore class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_dollar_singapore(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4" />
      <path d="M10 6h-4a3 3 0 1 0 0 6h1a3 3 0 0 1 0 6h-4" />
      <path d="M17 20v-2" />
      <path d="M18 6v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_dollar_zimbabwean` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_dollar_zimbabwean />
      <TablerIcons.currency_dollar_zimbabwean class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_dollar_zimbabwean(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4" />
      <path d="M17 20v-2" />
      <path d="M18 6v-2" />
      <path d="M3 6h7l-7 12h7" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_dollar />
      <TablerIcons.currency_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.7 8a3 3 0 0 0 -2.7 -2h-4a3 3 0 0 0 0 6h4a3 3 0 0 1 0 6h-4a3 3 0 0 1 -2.7 -2" />
      <path d="M12 3v3m0 12v3" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_dong` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_dong />
      <TablerIcons.currency_dong class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_dong(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 19h12" />
      <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M16 16v-12" />
      <path d="M17 5h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_dram` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_dram />
      <TablerIcons.currency_dram class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_dram(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10a6 6 0 1 1 12 0v10" />
      <path d="M12 16h8" />
      <path d="M12 12h8" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_ethereum` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_ethereum />
      <TablerIcons.currency_ethereum class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_ethereum(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 12l6 -9l6 9l-6 9z" />
      <path d="M6 12l6 -3l6 3l-6 2z" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_euro_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_euro_off />
      <TablerIcons.currency_euro_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_euro_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.2 7c-1.977 -2.26 -4.954 -2.602 -7.234 -1.04m-1.913 2.079c-1.604 2.72 -1.374 6.469 .69 8.894c2.292 2.691 6 2.758 8.356 .18" />
      <path d="M10 10h-5m0 4h8" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_euro` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_euro />
      <TablerIcons.currency_euro class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_euro(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.2 7a6 7 0 1 0 0 10" />
      <path d="M13 10h-8m0 4h8" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_florin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_florin />
      <TablerIcons.currency_florin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_florin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 12h8" />
      <path d="M7 19c1.213 0 2.31 -.723 2.788 -1.838l4.424 -10.324a3.033 3.033 0 0 1 2.788 -1.838" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_forint` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_forint />
      <TablerIcons.currency_forint class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_forint(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 4h-4a3 3 0 0 0 -3 3v12" />
      <path d="M10 11h-6" />
      <path d="M16 4v13a2 2 0 0 0 2 2h2" />
      <path d="M19 9h-5" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_frank` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_frank />
      <TablerIcons.currency_frank class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_frank(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 5h-6a2 2 0 0 0 -2 2v12" />
      <path d="M7 15h4" />
      <path d="M9 11h7" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_guarani` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_guarani />
      <TablerIcons.currency_guarani class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_guarani(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.007 7.54a5.965 5.965 0 0 0 -4.008 -1.54a6 6 0 0 0 -5.992 6c0 3.314 2.682 6 5.992 6a5.965 5.965 0 0 0 4 -1.536c.732 -.66 1.064 -2.148 1 -4.464h-5" />
      <path d="M12 20v-16" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_hryvnia` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_hryvnia />
      <TablerIcons.currency_hryvnia class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_hryvnia(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a2.64 2.64 0 0 1 2.562 -2h3.376a2.64 2.64 0 0 1 2.562 2a2.57 2.57 0 0 1 -1.344 2.922l-5.876 2.938a3.338 3.338 0 0 0 -1.78 3.64a3.11 3.11 0 0 0 3.05 2.5h2.888a2.64 2.64 0 0 0 2.562 -2" />
      <path d="M6 10h12" />
      <path d="M6 14h12" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_iranian_rial` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_iranian_rial />
      <TablerIcons.currency_iranian_rial class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_iranian_rial(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 4v9a2 2 0 0 1 -2 2h-1a3 3 0 0 1 -3 -3v-1" />
      <path d="M12 5v8a1 1 0 0 0 1 1h1a2 2 0 0 0 2 -2v-1" />
      <path d="M21 14v1.096a5 5 0 0 1 -3.787 4.85l-.213 .054" />
      <path d="M11 18h.01" />
      <path d="M14 18h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_kip` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_kip />
      <TablerIcons.currency_kip class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_kip(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 12h12" />
      <path d="M9 5v14" />
      <path d="M16 19a7 7 0 0 0 -7 -7a7 7 0 0 0 7 -7" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_krone_czech` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_krone_czech />
      <TablerIcons.currency_krone_czech class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_krone_czech(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 6v12" />
      <path d="M5 12c3.5 0 6 -3 6 -6" />
      <path d="M5 12c3.5 0 6 3 6 6" />
      <path d="M19 6l-2 2l-2 -2" />
      <path d="M19 12h-2a3 3 0 0 0 0 6h2" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_krone_danish` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_krone_danish />
      <TablerIcons.currency_krone_danish class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_krone_danish(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 6v12" />
      <path d="M5 12c3.5 0 6 -3 6 -6" />
      <path d="M5 12c3.5 0 6 3 6 6" />
      <path d="M15 10v8" />
      <path d="M19 10a4 4 0 0 0 -4 4" />
      <path d="M20 18.01v-.01" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_krone_swedish` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_krone_swedish />
      <TablerIcons.currency_krone_swedish class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_krone_swedish(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 6v12" />
      <path d="M5 12c3.5 0 6 -3 6 -6" />
      <path d="M5 12c3.5 0 6 3 6 6" />
      <path d="M15 10v8" />
      <path d="M19 10a4 4 0 0 0 -4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_lari` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_lari />
      <TablerIcons.currency_lari class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_lari(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 13a6 6 0 1 0 -6 6" />
      <path d="M6 19h12" />
      <path d="M10 5v7" />
      <path d="M14 12v-7" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_leu` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_leu />
      <TablerIcons.currency_leu class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_leu(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 18h-7a3 3 0 0 1 -3 -3v-10" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_lira` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_lira />
      <TablerIcons.currency_lira class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_lira(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 5v15a7 7 0 0 0 7 -7" />
      <path d="M6 15l8 -4" />
      <path d="M14 7l-8 4" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_litecoin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_litecoin />
      <TablerIcons.currency_litecoin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_litecoin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 19h-8.194a2 2 0 0 1 -1.98 -2.283l1.674 -11.717" />
      <path d="M14 9l-9 4" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_lyd` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_lyd />
      <TablerIcons.currency_lyd class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_lyd(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 15h.01" />
      <path d="M21 5v10a2 2 0 0 1 -2 2h-2.764a2 2 0 0 1 -1.789 -1.106l-.447 -.894" />
      <path d="M5 8l2.773 4.687c.427 .697 .234 1.626 -.43 2.075a1.38 1.38 0 0 1 -.773 .238h-2.224a.93 .93 0 0 1 -.673 -.293l-.673 -.707" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_manat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_manat />
      <TablerIcons.currency_manat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_manat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 19v-7a5 5 0 1 1 10 0v7" />
      <path d="M12 5v14" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_monero` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_monero />
      <TablerIcons.currency_monero class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_monero(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 18h3v-11l6 7l6 -7v11h3" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_naira` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_naira />
      <TablerIcons.currency_naira class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_naira(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 18v-10.948a1.05 1.05 0 0 1 1.968 -.51l6.064 10.916a1.05 1.05 0 0 0 1.968 -.51v-10.948" />
      <path d="M5 10h14" />
      <path d="M5 14h14" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_nano` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_nano />
      <TablerIcons.currency_nano class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_nano(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 20l10 -16" />
      <path d="M7 12h10" />
      <path d="M7 16h10" />
      <path d="M17 20l-10 -16" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_off />
      <TablerIcons.currency_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.531 14.524a7 7 0 0 0 -9.06 -9.053m-2.422 1.582a7 7 0 0 0 9.903 9.896" />
      <path d="M4 4l3 3" />
      <path d="M20 4l-3 3" />
      <path d="M4 20l3 -3" />
      <path d="M20 20l-3 -3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_paanga` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_paanga />
      <TablerIcons.currency_paanga class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_paanga(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4" />
      <path d="M17 20v-2" />
      <path d="M18 6v-2" />
      <path d="M3 6h8" />
      <path d="M7 6v12" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_peso` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_peso />
      <TablerIcons.currency_peso class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_peso(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 19v-14h3.5a4.5 4.5 0 1 1 0 9h-3.5" />
      <path d="M18 8h-12" />
      <path d="M18 11h-12" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_pound_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_pound_off />
      <TablerIcons.currency_pound_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_pound_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 18.5a6 6 0 0 1 -5 0a6 6 0 0 0 -5 .5a3 3 0 0 0 2 -2.5v-7.5m1.192 -2.825a4 4 0 0 1 6.258 .825m-3.45 6h-6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_pound` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_pound />
      <TablerIcons.currency_pound class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_pound(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 18.5a6 6 0 0 1 -5 0a6 6 0 0 0 -5 .5a3 3 0 0 0 2 -2.5v-7.5a4 4 0 0 1 7.45 -2m-2.55 6h-7" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_quetzal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_quetzal />
      <TablerIcons.currency_quetzal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_quetzal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-6 0a6 6 0 1 0 12 0a6 6 0 1 0 -12 0" />
      <path d="M13 13l5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_real` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_real />
      <TablerIcons.currency_real class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_real(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4" />
      <path d="M4 18v-12h3a3 3 0 1 1 0 6h-3c5.5 0 5 4 6 6" />
      <path d="M18 6v-2" />
      <path d="M17 20v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_renminbi` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_renminbi />
      <TablerIcons.currency_renminbi class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_renminbi(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 9v8a2 2 0 1 0 4 0" />
      <path d="M19 9h-14" />
      <path d="M19 5h-14" />
      <path d="M9 9v4c0 2.5 -.667 4 -2 6" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_ripple` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_ripple />
      <TablerIcons.currency_ripple class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_ripple(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 7m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M10 12h3l2 -2.5" />
      <path d="M15 14.5l-2 -2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_riyal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_riyal />
      <TablerIcons.currency_riyal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_riyal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 9v2a2 2 0 1 1 -4 0v-1v1a2 2 0 1 1 -4 0v-1v4a2 2 0 1 1 -4 0v-2" />
      <path d="M18 12.01v-.01" />
      <path d="M22 10v1a5 5 0 0 1 -5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_rubel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_rubel />
      <TablerIcons.currency_rubel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_rubel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 19v-14h6a3 3 0 0 1 0 6h-8" />
      <path d="M14 15h-8" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_rufiyaa` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_rufiyaa />
      <TablerIcons.currency_rufiyaa class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_rufiyaa(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 16h.01" />
      <path d="M4 16c9.5 -4 11.5 -8 14 -9" />
      <path d="M12 8l5 3" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_rupee_nepalese` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_rupee_nepalese />
      <TablerIcons.currency_rupee_nepalese class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_rupee_nepalese(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 5h-11h3a4 4 0 1 1 0 8h-3l6 6" />
      <path d="M21 17l-4.586 -4.414a2 2 0 0 0 -2.828 2.828l.707 .707" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_rupee` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_rupee />
      <TablerIcons.currency_rupee class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_rupee(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 5h-11h3a4 4 0 0 1 0 8h-3l6 6" />
      <path d="M7 9l11 0" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_shekel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_shekel />
      <TablerIcons.currency_shekel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_shekel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 18v-12h4a4 4 0 0 1 4 4v4" />
      <path d="M18 6v12h-4a4 4 0 0 1 -4 -4v-4" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_solana` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_solana />
      <TablerIcons.currency_solana class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_solana(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 18h12l4 -4h-12z" />
      <path d="M8 14l-4 -4h12l4 4" />
      <path d="M16 10l4 -4h-12l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_som` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_som />
      <TablerIcons.currency_som class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_som(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 18v-12h-5v10a2 2 0 0 1 -2 2" />
      <path d="M14 6v12h4a3 3 0 0 0 0 -6h-4h4a3 3 0 0 0 0 -6h-4z" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_taka` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_taka />
      <TablerIcons.currency_taka class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_taka(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.5 15.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M7 7a2 2 0 1 1 4 0v9a3 3 0 0 0 6 0v-.5" />
      <path d="M8 11h6" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_tenge` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_tenge />
      <TablerIcons.currency_tenge class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_tenge(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 5h12" />
      <path d="M6 9h12" />
      <path d="M12 9v10" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_tugrik` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_tugrik />
      <TablerIcons.currency_tugrik class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_tugrik(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 6h10" />
      <path d="M12 6v13" />
      <path d="M8 17l8 -3" />
      <path d="M16 10l-8 3" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_won` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_won />
      <TablerIcons.currency_won class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_won(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6l3.245 11.358a.85 .85 0 0 0 1.624 .035l3.131 -9.393l3.131 9.393a.85 .85 0 0 0 1.624 -.035l3.245 -11.358" />
      <path d="M21 10h-18" />
      <path d="M21 14h-18" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_yen_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_yen_off />
      <TablerIcons.currency_yen_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_yen_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19v-7m5 -7l-3.328 4.66" />
      <path d="M8 17h8" />
      <path d="M8 13h5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_yen` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_yen />
      <TablerIcons.currency_yen class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_yen(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19v-7l-5 -7m10 0l-5 7" />
      <path d="M8 17l8 0" />
      <path d="M8 13l8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_yuan` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_yuan />
      <TablerIcons.currency_yuan class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_yuan(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19v-7l-5 -7" />
      <path d="M17 5l-5 7" />
      <path d="M8 13h8" />
    </svg>
    """
  end

  @doc """
  Renders the `currency_zloty` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency_zloty />
      <TablerIcons.currency_zloty class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency_zloty(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18h-7l7 -7h-7" />
      <path d="M17 18v-13" />
      <path d="M14 14.5l6 -3.5" />
    </svg>
    """
  end

  @doc """
  Renders the `currency` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.currency />
      <TablerIcons.currency class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def currency(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M4 4l3 3" />
      <path d="M20 4l-3 3" />
      <path d="M4 20l3 -3" />
      <path d="M20 20l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `current_location_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.current_location_off />
      <TablerIcons.current_location_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def current_location_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.685 10.661c-.3 -.6 -.795 -1.086 -1.402 -1.374m-3.397 .584a3 3 0 1 0 4.24 4.245" />
      <path d="M6.357 6.33a8 8 0 1 0 11.301 11.326m1.642 -2.378a8 8 0 0 0 -10.597 -10.569" />
      <path d="M12 2v2" />
      <path d="M12 20v2" />
      <path d="M20 12h2" />
      <path d="M2 12h2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `current_location` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.current_location />
      <TablerIcons.current_location class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def current_location(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12 12m-8 0a8 8 0 1 0 16 0a8 8 0 1 0 -16 0" />
      <path d="M12 2l0 2" />
      <path d="M12 20l0 2" />
      <path d="M20 12l2 0" />
      <path d="M2 12l2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `cursor_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cursor_off />
      <TablerIcons.cursor_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cursor_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 4a3 3 0 0 1 3 3v1m0 9a3 3 0 0 1 -3 3" />
      <path d="M15 4a3 3 0 0 0 -3 3v1m0 4v5a3 3 0 0 0 3 3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cursor_text` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cursor_text />
      <TablerIcons.cursor_text class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cursor_text(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12h4" />
      <path d="M9 4a3 3 0 0 1 3 3v10a3 3 0 0 1 -3 3" />
      <path d="M15 4a3 3 0 0 0 -3 3v10a3 3 0 0 0 3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `cut` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cut />
      <TablerIcons.cut class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cut(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M9.15 14.85l8.85 -10.85" />
      <path d="M6 4l8.85 10.85" />
    </svg>
    """
  end

  @doc """
  Renders the `cylinder_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cylinder_off />
      <TablerIcons.cylinder_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cylinder_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.23 5.233c-.15 .245 -.23 .502 -.23 .767c0 1.131 1.461 2.117 3.62 2.628m4.357 .343c3.404 -.204 6.023 -1.456 6.023 -2.971c0 -1.657 -3.134 -3 -7 -3c-1.645 0 -3.158 .243 -4.353 .65" />
      <path d="M5 6v12c0 1.657 3.134 3 7 3c3.245 0 5.974 -.946 6.767 -2.23m.233 -3.77v-9" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `cylinder_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cylinder_plus />
      <TablerIcons.cylinder_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cylinder_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 6m-7 0a7 3 0 1 0 14 0a7 3 0 1 0 -14 0" />
      <path d="M5 6v12c0 1.657 3.134 3 7 3c.173 0 .345 -.003 .515 -.008m6.485 -8.992v-6" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `cylinder` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.cylinder />
      <TablerIcons.cylinder class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def cylinder(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 6m-7 0a7 3 0 1 0 14 0a7 3 0 1 0 -14 0" />
      <path d="M5 6v12c0 1.657 3.134 3 7 3s7 -1.343 7 -3v-12" />
    </svg>
    """
  end

  @doc """
  Renders the `dashboard_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dashboard_off />
      <TablerIcons.dashboard_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dashboard_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.175 11.178a2 2 0 1 0 2.653 2.634" />
      <path d="M14.5 10.5l1 -1" />
      <path d="M8.621 4.612a9 9 0 0 1 11.721 11.72m-1.516 2.488a9.008 9.008 0 0 1 -1.226 1.18h-11.2a9 9 0 0 1 -.268 -13.87" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `dashboard` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dashboard />
      <TablerIcons.dashboard class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dashboard(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 13m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M13.45 11.55l2.05 -2.05" />
      <path d="M6.4 20a9 9 0 1 1 11.2 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `database_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database_cog />
      <TablerIcons.database_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6c0 1.657 3.582 3 8 3s8 -1.343 8 -3s-3.582 -3 -8 -3s-8 1.343 -8 3" />
      <path d="M4 6v6c0 1.657 3.582 3 8 3c.21 0 .42 -.003 .626 -.01" />
      <path d="M20 11.5v-5.5" />
      <path d="M4 12v6c0 1.657 3.582 3 8 3" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `database_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database_dollar />
      <TablerIcons.database_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6c0 1.657 3.582 3 8 3s8 -1.343 8 -3s-3.582 -3 -8 -3s-8 1.343 -8 3" />
      <path d="M4 6v6c0 1.657 3.582 3 8 3c.415 0 .822 -.012 1.22 -.035" />
      <path d="M20 10v-4" />
      <path d="M4 12v6c0 1.657 3.582 3 8 3c.352 0 .698 -.009 1.037 -.025" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `database_edit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database_edit />
      <TablerIcons.database_edit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database_edit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6c0 1.657 3.582 3 8 3s8 -1.343 8 -3s-3.582 -3 -8 -3s-8 1.343 -8 3" />
      <path d="M4 6v6c0 1.657 3.582 3 8 3c.478 0 .947 -.016 1.402 -.046" />
      <path d="M20 12v-6" />
      <path d="M4 12v6c0 1.526 3.04 2.786 6.972 2.975" />
      <path d="M18.42 15.61a2.1 2.1 0 0 1 2.97 2.97l-3.39 3.42h-3v-3l3.42 -3.39z" />
    </svg>
    """
  end

  @doc """
  Renders the `database_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database_exclamation />
      <TablerIcons.database_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6c0 1.657 3.582 3 8 3s8 -1.343 8 -3s-3.582 -3 -8 -3s-8 1.343 -8 3" />
      <path d="M4 6v6c0 1.657 3.582 3 8 3c1.118 0 2.182 -.086 3.148 -.241m4.852 -2.759v-6" />
      <path d="M4 12v6c0 1.657 3.582 3 8 3c1.064 0 2.079 -.078 3.007 -.22" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `database_export` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database_export />
      <TablerIcons.database_export class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database_export(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6c0 1.657 3.582 3 8 3s8 -1.343 8 -3s-3.582 -3 -8 -3s-8 1.343 -8 3" />
      <path d="M4 6v6c0 1.657 3.582 3 8 3c1.118 0 2.183 -.086 3.15 -.241" />
      <path d="M20 12v-6" />
      <path d="M4 12v6c0 1.657 3.582 3 8 3c.157 0 .312 -.002 .466 -.005" />
      <path d="M16 19h6" />
      <path d="M19 16l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `database_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database_heart />
      <TablerIcons.database_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6c0 1.657 3.582 3 8 3s8 -1.343 8 -3s-3.582 -3 -8 -3s-8 1.343 -8 3" />
      <path d="M4 6v6c0 1.453 2.755 2.665 6.414 2.941" />
      <path d="M20 11v-5" />
      <path d="M4 12v6c0 1.579 3.253 2.873 7.383 2.991" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `database_import` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database_import />
      <TablerIcons.database_import class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database_import(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6c0 1.657 3.582 3 8 3s8 -1.343 8 -3s-3.582 -3 -8 -3s-8 1.343 -8 3" />
      <path d="M4 6v6c0 1.657 3.582 3 8 3c.856 0 1.68 -.05 2.454 -.144m5.546 -2.856v-6" />
      <path d="M4 12v6c0 1.657 3.582 3 8 3c.171 0 .341 -.002 .51 -.006" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `database_leak` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database_leak />
      <TablerIcons.database_leak class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database_leak(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6c0 1.657 3.582 3 8 3s8 -1.343 8 -3s-3.582 -3 -8 -3s-8 1.343 -8 3" />
      <path d="M4 6v12c0 1.657 3.582 3 8 3s8 -1.343 8 -3v-12" />
      <path d="M4 15a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1" />
    </svg>
    """
  end

  @doc """
  Renders the `database_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database_minus />
      <TablerIcons.database_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6c0 1.657 3.582 3 8 3s8 -1.343 8 -3s-3.582 -3 -8 -3s-8 1.343 -8 3" />
      <path d="M4 6v6c0 1.657 3.582 3 8 3s8 -1.343 8 -3v-6" />
      <path d="M4 12v6c0 1.657 3.582 3 8 3c.164 0 .328 -.002 .49 -.006" />
      <path d="M20 15v-3" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `database_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database_off />
      <TablerIcons.database_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.983 8.978c3.955 -.182 7.017 -1.446 7.017 -2.978c0 -1.657 -3.582 -3 -8 -3c-1.661 0 -3.204 .19 -4.483 .515m-2.783 1.228c-.471 .382 -.734 .808 -.734 1.257c0 1.22 1.944 2.271 4.734 2.74" />
      <path d="M4 6v6c0 1.657 3.582 3 8 3c.986 0 1.93 -.067 2.802 -.19m3.187 -.82c1.251 -.53 2.011 -1.228 2.011 -1.99v-6" />
      <path d="M4 12v6c0 1.657 3.582 3 8 3c3.217 0 5.991 -.712 7.261 -1.74m.739 -3.26v-4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `database_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database_plus />
      <TablerIcons.database_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6c0 1.657 3.582 3 8 3s8 -1.343 8 -3s-3.582 -3 -8 -3s-8 1.343 -8 3" />
      <path d="M4 6v6c0 1.657 3.582 3 8 3c1.075 0 2.1 -.08 3.037 -.224" />
      <path d="M20 12v-6" />
      <path d="M4 12v6c0 1.657 3.582 3 8 3c.166 0 .331 -.002 .495 -.006" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `database_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database_search />
      <TablerIcons.database_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6c0 1.657 3.582 3 8 3s8 -1.343 8 -3s-3.582 -3 -8 -3s-8 1.343 -8 3" />
      <path d="M4 6v6c0 1.657 3.582 3 8 3m8 -3.5v-5.5" />
      <path d="M4 12v6c0 1.657 3.582 3 8 3" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `database_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database_share />
      <TablerIcons.database_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6c0 1.657 3.582 3 8 3s8 -1.343 8 -3s-3.582 -3 -8 -3s-8 1.343 -8 3" />
      <path d="M4 6v6c0 1.657 3.582 3 8 3c.361 0 .716 -.009 1.065 -.026" />
      <path d="M20 13v-7" />
      <path d="M4 12v6c0 1.657 3.582 3 8 3" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `database_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database_star />
      <TablerIcons.database_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6c0 1.657 3.582 3 8 3s8 -1.343 8 -3s-3.582 -3 -8 -3s-8 1.343 -8 3" />
      <path d="M4 6v6c0 1.43 2.67 2.627 6.243 2.927" />
      <path d="M20 10.5v-4.5" />
      <path d="M4 12v6c0 1.546 3.12 2.82 7.128 2.982" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `database_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database_x />
      <TablerIcons.database_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6c0 1.657 3.582 3 8 3s8 -1.343 8 -3s-3.582 -3 -8 -3s-8 1.343 -8 3" />
      <path d="M4 6v6c0 1.657 3.582 3 8 3c.537 0 1.062 -.02 1.57 -.058" />
      <path d="M20 13.5v-7.5" />
      <path d="M4 12v6c0 1.657 3.582 3 8 3c.384 0 .762 -.01 1.132 -.03" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `database` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.database />
      <TablerIcons.database class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def database(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 6m-8 0a8 3 0 1 0 16 0a8 3 0 1 0 -16 0" />
      <path d="M4 6v6a8 3 0 0 0 16 0v-6" />
      <path d="M4 12v6a8 3 0 0 0 16 0v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `decimal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.decimal />
      <TablerIcons.decimal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def decimal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
      <path d="M10 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
      <path d="M5 16h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `deer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.deer />
      <TablerIcons.deer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def deer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3c0 2 1 3 4 3c2 0 3 1 3 3" />
      <path d="M21 3c0 2 -1 3 -4 3c-2 0 -3 .333 -3 3" />
      <path d="M12 18c-1 0 -4 -3 -4 -6c0 -2 1.333 -3 4 -3s4 1 4 3c0 3 -3 6 -4 6" />
      <path d="M15.185 14.889l.095 -.18a4 4 0 1 1 -6.56 0" />
      <path d="M17 3c0 1.333 -.333 2.333 -1 3" />
      <path d="M7 3c0 1.333 .333 2.333 1 3" />
      <path d="M7 6c-2.667 .667 -4.333 1.667 -5 3" />
      <path d="M17 6c2.667 .667 4.333 1.667 5 3" />
      <path d="M8.5 10l-1.5 -1" />
      <path d="M15.5 10l1.5 -1" />
      <path d="M12 15h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `delta` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.delta />
      <TablerIcons.delta class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def delta(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h16l-8 -16z" />
    </svg>
    """
  end

  @doc """
  Renders the `dental_broken` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dental_broken />
      <TablerIcons.dental_broken class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dental_broken(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5.5c-1.074 -.586 -2.583 -1.5 -4 -1.5c-2.1 0 -4 1.247 -4 5c0 4.899 1.056 8.41 2.671 10.537c.573 .756 1.97 .521 2.567 -.236c.398 -.505 .819 -1.439 1.262 -2.801c.292 -.771 .892 -1.504 1.5 -1.5c.602 0 1.21 .737 1.5 1.5c.443 1.362 .864 2.295 1.262 2.8c.597 .759 2 .993 2.567 .237c1.615 -2.127 2.671 -5.637 2.671 -10.537c0 -3.74 -1.908 -5 -4 -5c-1.423 0 -2.92 .911 -4 1.5z" />
      <path d="M12 5.5l1 2.5l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `dental_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dental_off />
      <TablerIcons.dental_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dental_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.277 15.281c.463 -1.75 .723 -3.844 .723 -6.281c0 -3.74 -1.908 -5 -4 -5c-1.423 0 -2.92 .911 -4 1.5c-1.074 -.586 -2.583 -1.5 -4 -1.5m-2.843 1.153c-.707 .784 -1.157 2.017 -1.157 3.847c0 4.899 1.056 8.41 2.671 10.537c.573 .756 1.97 .521 2.567 -.236c.398 -.505 .819 -1.439 1.262 -2.801c.292 -.771 .892 -1.504 1.5 -1.5c.602 0 1.21 .737 1.5 1.5c.443 1.362 .864 2.295 1.262 2.8c.597 .759 2 .993 2.567 .237c.305 -.402 .59 -.853 .852 -1.353" />
      <path d="M12 5.5l3 1.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `dental` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dental />
      <TablerIcons.dental class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dental(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5.5c-1.074 -.586 -2.583 -1.5 -4 -1.5c-2.1 0 -4 1.247 -4 5c0 4.899 1.056 8.41 2.671 10.537c.573 .756 1.97 .521 2.567 -.236c.398 -.505 .819 -1.439 1.262 -2.801c.292 -.771 .892 -1.504 1.5 -1.5c.602 0 1.21 .737 1.5 1.5c.443 1.362 .864 2.295 1.262 2.8c.597 .759 2 .993 2.567 .237c1.615 -2.127 2.671 -5.637 2.671 -10.537c0 -3.74 -1.908 -5 -4 -5c-1.423 0 -2.92 .911 -4 1.5z" />
      <path d="M12 5.5l3 1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `deselect` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.deselect />
      <TablerIcons.deselect class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def deselect(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8h3a1 1 0 0 1 1 1v3" />
      <path d="M16 16h-7a1 1 0 0 1 -1 -1v-7" />
      <path d="M12 20v.01" />
      <path d="M16 20v.01" />
      <path d="M8 20v.01" />
      <path d="M4 20v.01" />
      <path d="M4 16v.01" />
      <path d="M4 12v.01" />
      <path d="M4 8v.01" />
      <path d="M8 4v.01" />
      <path d="M12 4v.01" />
      <path d="M16 4v.01" />
      <path d="M20 4v.01" />
      <path d="M20 8v.01" />
      <path d="M20 12v.01" />
      <path d="M20 16v.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `details_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.details_off />
      <TablerIcons.details_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def details_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 19h14" />
      <path d="M20.986 16.984a2 2 0 0 0 -.146 -.734l-7.1 -12.25a2 2 0 0 0 -3.5 0l-.821 1.417m-1.469 2.534l-4.81 8.299a2 2 0 0 0 1.75 2.75" />
      <path d="M12 3v5m0 4v7" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `details` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.details />
      <TablerIcons.details class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def details(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 19h14a2 2 0 0 0 1.84 -2.75l-7.1 -12.25a2 2 0 0 0 -3.5 0l-7.1 12.25a2 2 0 0 0 1.75 2.75" />
      <path d="M12 3v16" />
    </svg>
    """
  end

  @doc """
  Renders the `device_airpods_case` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_airpods_case />
      <TablerIcons.device_airpods_case class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_airpods_case(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 10h-18" />
      <path d="M3 4m0 4a4 4 0 0 1 4 -4h10a4 4 0 0 1 4 4v8a4 4 0 0 1 -4 4h-10a4 4 0 0 1 -4 -4z" />
      <path d="M7 10v1.5a1.5 1.5 0 0 0 1.5 1.5h7a1.5 1.5 0 0 0 1.5 -1.5v-1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_airpods` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_airpods />
      <TablerIcons.device_airpods class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_airpods(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 4a4 4 0 0 1 4 3.8l0 .2v10.5a1.5 1.5 0 0 1 -3 0v-6.5h-1a4 4 0 0 1 -4 -3.8l0 -.2a4 4 0 0 1 4 -4z" />
      <path d="M18 4a4 4 0 0 0 -4 3.8l0 .2v10.5a1.5 1.5 0 0 0 3 0v-6.5h1a4 4 0 0 0 4 -3.8l0 -.2a4 4 0 0 0 -4 -4z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_airtag` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_airtag />
      <TablerIcons.device_airtag class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_airtag(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12a8 8 0 1 0 16 0a8 8 0 0 0 -16 0" />
      <path d="M9 15v.01" />
      <path d="M15 15a6 6 0 0 0 -6 -6" />
      <path d="M12 15a3 3 0 0 0 -3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_analytics` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_analytics />
      <TablerIcons.device_analytics class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_analytics(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4m0 1a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1z" />
      <path d="M7 20l10 0" />
      <path d="M9 16l0 4" />
      <path d="M15 16l0 4" />
      <path d="M8 12l3 -3l2 2l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_audio_tape` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_audio_tape />
      <TablerIcons.device_audio_tape class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_audio_tape(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M3 17l4 -3h10l4 3" />
      <circle cx="7.5" cy="9.5" r=".5" fill="currentColor" />
      <circle cx="16.5" cy="9.5" r=".5" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `device_camera_phone` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_camera_phone />
      <TablerIcons.device_camera_phone class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_camera_phone(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.5 8.5m-2.5 0a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0 -5 0" />
      <path d="M13 7h-8a2 2 0 0 0 -2 2v7a2 2 0 0 0 2 2h13a2 2 0 0 0 2 -2v-2" />
      <path d="M17 15v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `device_cctv_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_cctv_off />
      <TablerIcons.device_cctv_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_cctv_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 7h-3a1 1 0 0 1 -1 -1v-2c0 -.275 .11 -.523 .29 -.704m3.71 -.296h13a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-9" />
      <path d="M10.36 10.35a4 4 0 1 0 5.285 5.3" />
      <path d="M19 7v7c0 .321 -.022 .637 -.064 .947m-1.095 2.913a7 7 0 0 1 -12.841 -3.86l0 -7" />
      <path d="M12 14h.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `device_cctv` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_cctv />
      <TablerIcons.device_cctv class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_cctv(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 1a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1z" />
      <path d="M12 14m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M19 7v7a7 7 0 0 1 -14 0v-7" />
      <path d="M12 14l.01 0" />
    </svg>
    """
  end

  @doc """
  Renders the `device_computer_camera_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_computer_camera_off />
      <TablerIcons.device_computer_camera_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_computer_camera_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.15 6.153a7 7 0 0 0 9.696 9.696m2 -2a7 7 0 0 0 -9.699 -9.695" />
      <path d="M9.13 9.122a3 3 0 0 0 3.743 3.749m2 -2a3 3 0 0 0 -3.737 -3.736" />
      <path d="M8 16l-2.091 3.486a1 1 0 0 0 .857 1.514h10.468a1 1 0 0 0 .857 -1.514l-2.091 -3.486" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `device_computer_camera` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_computer_camera />
      <TablerIcons.device_computer_camera class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_computer_camera(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M12 10m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M8 16l-2.091 3.486a1 1 0 0 0 .857 1.514h10.468a1 1 0 0 0 .857 -1.514l-2.091 -3.486" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_analytics` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_analytics />
      <TablerIcons.device_desktop_analytics class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_analytics(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4m0 1a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1z" />
      <path d="M7 20h10" />
      <path d="M9 16v4" />
      <path d="M15 16v4" />
      <path d="M9 12v-4" />
      <path d="M12 12v-1" />
      <path d="M15 12v-2" />
      <path d="M12 12v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_bolt />
      <TablerIcons.device_desktop_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.5 16h-10.5a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v7.5" />
      <path d="M7 20h6" />
      <path d="M9 16v4" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_cancel />
      <TablerIcons.device_desktop_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 16h-8.5a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v7.5" />
      <path d="M7 20h5" />
      <path d="M9 16v4" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_check />
      <TablerIcons.device_desktop_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 16h-8a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v8" />
      <path d="M15 19l2 2l4 -4" />
      <path d="M7 20h4" />
      <path d="M9 16v4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_code />
      <TablerIcons.device_desktop_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 16h-8.5a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v8" />
      <path d="M7 20h4" />
      <path d="M9 16v4" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_cog />
      <TablerIcons.device_desktop_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 16h-8a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v7" />
      <path d="M7 20h5" />
      <path d="M9 16v4" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_dollar />
      <TablerIcons.device_desktop_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 16h-9a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v5.5" />
      <path d="M7 20h6.5" />
      <path d="M9 16v4" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_down />
      <TablerIcons.device_desktop_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 16h-9.5a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v7.5" />
      <path d="M7 20h5" />
      <path d="M9 16v4" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_exclamation />
      <TablerIcons.device_desktop_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 16h-11a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v7" />
      <path d="M7 20h8" />
      <path d="M9 16v4" />
      <path d="M15 16v4" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_heart />
      <TablerIcons.device_desktop_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 16h-6a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v6" />
      <path d="M7 20h3.5" />
      <path d="M9 16v4" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_minus />
      <TablerIcons.device_desktop_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 16h-9.5a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10" />
      <path d="M7 20h5" />
      <path d="M9 16v4" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_off />
      <TablerIcons.device_desktop_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h12a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1m-4 0h-12a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1" />
      <path d="M7 20h10" />
      <path d="M9 16v4" />
      <path d="M15 16v4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_pause />
      <TablerIcons.device_desktop_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 16h-9a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v8" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
      <path d="M7 20h6" />
      <path d="M9 16v4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_pin />
      <TablerIcons.device_desktop_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 16h-8.5a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v6" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
      <path d="M7 20h5" />
      <path d="M9 16v4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_plus />
      <TablerIcons.device_desktop_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 16h-9.5a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v7.5" />
      <path d="M7 20h5" />
      <path d="M9 16v4" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_question />
      <TablerIcons.device_desktop_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 16h-9.5a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v6.5" />
      <path d="M7 20h8" />
      <path d="M9 16v4" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_search />
      <TablerIcons.device_desktop_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 16h-7.5a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v6.5" />
      <path d="M7 20h4" />
      <path d="M9 16v4" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_share />
      <TablerIcons.device_desktop_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 16h-8.5a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v8" />
      <path d="M7 20h5.5" />
      <path d="M9 16v4" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_star />
      <TablerIcons.device_desktop_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 16h-6a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v6.5" />
      <path d="M7 20h3.5" />
      <path d="M9 16v4" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_up />
      <TablerIcons.device_desktop_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 16h-9.5a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v7.5" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
      <path d="M7 20h5" />
      <path d="M9 16v4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop_x />
      <TablerIcons.device_desktop_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 16h-9a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v8" />
      <path d="M7 20h6.5" />
      <path d="M9 16v4" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_desktop` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_desktop />
      <TablerIcons.device_desktop class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_desktop(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10z" />
      <path d="M7 20h10" />
      <path d="M9 16v4" />
      <path d="M15 16v4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_floppy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_floppy />
      <TablerIcons.device_floppy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_floppy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 4h10l4 4v10a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2" />
      <path d="M12 14m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M14 4l0 4l-6 0l0 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_gamepad_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_gamepad_2 />
      <TablerIcons.device_gamepad_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_gamepad_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5h3.5a5 5 0 0 1 0 10h-5.5l-4.015 4.227a2.3 2.3 0 0 1 -3.923 -2.035l1.634 -8.173a5 5 0 0 1 4.904 -4.019h3.4z" />
      <path d="M14 15l4.07 4.284a2.3 2.3 0 0 0 3.925 -2.023l-1.6 -8.232" />
      <path d="M8 9v2" />
      <path d="M7 10h2" />
      <path d="M14 10h2" />
    </svg>
    """
  end

  @doc """
  Renders the `device_gamepad` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_gamepad />
      <TablerIcons.device_gamepad class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_gamepad(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 6m0 2a2 2 0 0 1 2 -2h16a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-16a2 2 0 0 1 -2 -2z" />
      <path d="M6 12h4m-2 -2v4" />
      <path d="M15 11l0 .01" />
      <path d="M18 13l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_heart_monitor_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_heart_monitor_filled />
      <TablerIcons.device_heart_monitor_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_heart_monitor_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 3a3 3 0 0 1 2.995 2.824l.005 .176v12a3 3 0 0 1 -2.824 2.995l-.176 .005h-12a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-12a3 3 0 0 1 2.824 -2.995l.176 -.005h12zm-4 13a1 1 0 0 0 -.993 .883l-.007 .117l.007 .127a1 1 0 0 0 1.986 0l.007 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm3 0a1 1 0 0 0 -.993 .883l-.007 .117l.007 .127a1 1 0 0 0 1.986 0l.007 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm-6 -6.764l-.106 .211a1 1 0 0 1 -.77 .545l-.124 .008l-5 -.001v3.001h14v-3.001l-4.382 .001l-.724 1.447a1 1 0 0 1 -1.725 .11l-.063 -.11l-1.106 -2.211zm7 -4.236h-12a1 1 0 0 0 -.993 .883l-.007 .117v1.999l4.381 .001l.725 -1.447a1 1 0 0 1 1.725 -.11l.063 .11l1.106 2.21l.106 -.21a1 1 0 0 1 .77 -.545l.124 -.008l5 -.001v-1.999a1 1 0 0 0 -.883 -.993l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `device_heart_monitor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_heart_monitor />
      <TablerIcons.device_heart_monitor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_heart_monitor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M4 9h6l1 -2l2 4l1 -2h6" />
      <path d="M4 14h16" />
      <path d="M14 17v.01" />
      <path d="M17 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_bolt />
      <TablerIcons.device_imac_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 17h-9.5a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v8.5" />
      <path d="M3 13h13" />
      <path d="M8 21h5.5" />
      <path d="M10 17l-.5 4" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_cancel />
      <TablerIcons.device_imac_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 17h-8.5a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v8" />
      <path d="M3 13h12.5" />
      <path d="M8 21h4.5" />
      <path d="M10 17l-.5 4" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_check />
      <TablerIcons.device_imac_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 17h-7.5a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v9" />
      <path d="M3 13h18" />
      <path d="M8 21h3.5" />
      <path d="M10 17l-.5 4" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_code />
      <TablerIcons.device_imac_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 17h-7.5a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v9" />
      <path d="M3 13h18" />
      <path d="M8 21h3.5" />
      <path d="M10 17l-.5 4" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_cog />
      <TablerIcons.device_imac_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 17h-8a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v8" />
      <path d="M3 13h13" />
      <path d="M8 21h4" />
      <path d="M10 17l-.5 4" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_dollar />
      <TablerIcons.device_imac_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 17h-9a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v6.5" />
      <path d="M3 13h11" />
      <path d="M8 21h5" />
      <path d="M10 17l-.5 4" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_down />
      <TablerIcons.device_imac_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 17h-8.5a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v8.5" />
      <path d="M3 13h13" />
      <path d="M8 21h4.5" />
      <path d="M10 17l-.5 4" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_exclamation />
      <TablerIcons.device_imac_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 17h-11a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v8.5" />
      <path d="M3 13h13" />
      <path d="M8 21h7" />
      <path d="M10 17l-.5 4" />
      <path d="M14 17l.5 4" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_heart />
      <TablerIcons.device_imac_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 17h-6a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v7" />
      <path d="M3 13h9" />
      <path d="M8 21h3.5" />
      <path d="M10 17l-.5 4" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_minus />
      <TablerIcons.device_imac_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 17h-8.5a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v11" />
      <path d="M3 13h18" />
      <path d="M8 21h4.5" />
      <path d="M10 17l-.5 4" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_off />
      <TablerIcons.device_imac_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h13a1 1 0 0 1 1 1v12c0 .28 -.115 .532 -.3 .713m-3.7 .287h-13a1 1 0 0 1 -1 -1v-12c0 -.276 .112 -.526 .293 -.707" />
      <path d="M3 13h10m4 0h4" />
      <path d="M8 21h8" />
      <path d="M10 17l-.5 4" />
      <path d="M14 17l.5 4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_pause />
      <TablerIcons.device_imac_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 17h-9a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v9" />
      <path d="M3 13h18" />
      <path d="M8 21h5" />
      <path d="M10 17l-.5 4" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_pin />
      <TablerIcons.device_imac_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 17h-8a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v7.5" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
      <path d="M3 13h11" />
      <path d="M8 21h4.5" />
      <path d="M10 17l-.5 4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_plus />
      <TablerIcons.device_imac_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 17h-8.5a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v8.5" />
      <path d="M3 13h13.5" />
      <path d="M8 21h4.5" />
      <path d="M10 17l-.5 4" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_question />
      <TablerIcons.device_imac_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 17h-10a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v7.5" />
      <path d="M3 13h11.5" />
      <path d="M8 21h7" />
      <path d="M10 17l-.5 4" />
      <path d="M14 17l.5 4" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_search />
      <TablerIcons.device_imac_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 17h-7a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v8" />
      <path d="M3 13h10" />
      <path d="M8 21h4" />
      <path d="M10 17l-.5 4" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_share />
      <TablerIcons.device_imac_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 17h-8.5a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v9" />
      <path d="M3 13h18" />
      <path d="M8 21h4" />
      <path d="M10 17l-.5 4" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_star />
      <TablerIcons.device_imac_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 17h-6a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v7.5" />
      <path d="M3 13h10" />
      <path d="M8 21h3" />
      <path d="M10 17l-.5 4" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_up />
      <TablerIcons.device_imac_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 17h-8.5a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v8.5" />
      <path d="M3 13h13" />
      <path d="M8 21h4.5" />
      <path d="M10 17l-.5 4" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac_x />
      <TablerIcons.device_imac_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 17h-9a1 1 0 0 1 -1 -1v-12a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v9" />
      <path d="M3 13h18" />
      <path d="M8 21h5" />
      <path d="M10 17l-.5 4" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_imac` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_imac />
      <TablerIcons.device_imac class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_imac(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v12a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-12z" />
      <path d="M3 13h18" />
      <path d="M8 21h8" />
      <path d="M10 17l-.5 4" />
      <path d="M14 17l.5 4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_bolt />
      <TablerIcons.device_ipad_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 21h-7.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v7" />
      <path d="M9 18h4" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_cancel />
      <TablerIcons.device_ipad_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v7" />
      <path d="M9 18h3" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_check />
      <TablerIcons.device_ipad_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-5.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8" />
      <path d="M9 18h2" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_code />
      <TablerIcons.device_ipad_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-5.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8" />
      <path d="M9 18h2" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_cog />
      <TablerIcons.device_ipad_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21h-6a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v6.5" />
      <path d="M9 18h3" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_dollar />
      <TablerIcons.device_ipad_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21h-7a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v5" />
      <path d="M9 18h4" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_down />
      <TablerIcons.device_ipad_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v7" />
      <path d="M9 18h3" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_exclamation />
      <TablerIcons.device_ipad_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 21h-9a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v7" />
      <path d="M9 18h6" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_heart />
      <TablerIcons.device_ipad_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-5.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v6" />
      <path d="M9 18h1" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_bolt />
      <TablerIcons.device_ipad_horizontal_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 20h-8a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v6.5" />
      <path d="M9 17h4.5" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_cancel />
      <TablerIcons.device_ipad_horizontal_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-7a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v6.5" />
      <path d="M9 17h3.5" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_check />
      <TablerIcons.device_ipad_horizontal_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 20h-6a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v7" />
      <path d="M15 19l2 2l4 -4" />
      <path d="M9 17h2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_code />
      <TablerIcons.device_ipad_horizontal_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 20h-6a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v7" />
      <path d="M9 17h2.5" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_cog />
      <TablerIcons.device_ipad_horizontal_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-7a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v6" />
      <path d="M9 17h3" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_dollar />
      <TablerIcons.device_ipad_horizontal_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 20h-8a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4.5" />
      <path d="M9 17h4" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_down />
      <TablerIcons.device_ipad_horizontal_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-7a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v6.5" />
      <path d="M9 17h3.5" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_exclamation />
      <TablerIcons.device_ipad_horizontal_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 20h-10a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v6" />
      <path d="M9 17h6" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_heart />
      <TablerIcons.device_ipad_horizontal_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.5 20h-5.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v5" />
      <path d="M9 17h1" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_minus />
      <TablerIcons.device_ipad_horizontal_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-7a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v9" />
      <path d="M9 17h3.5" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_off />
      <TablerIcons.device_ipad_horizontal_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h12a2 2 0 0 1 2 2v12m-2 2h-16a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2" />
      <path d="M9 17h6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_pause />
      <TablerIcons.device_ipad_horizontal_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 20h-8a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v7" />
      <path d="M9 17h4" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_pin />
      <TablerIcons.device_ipad_horizontal_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-7a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v5" />
      <path d="M9 17h3" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_plus />
      <TablerIcons.device_ipad_horizontal_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-7a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v6.5" />
      <path d="M9 17h3.5" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_question />
      <TablerIcons.device_ipad_horizontal_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 20h-10a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v5" />
      <path d="M9 17h4.5" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_search />
      <TablerIcons.device_ipad_horizontal_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 20h-6.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v5.5" />
      <path d="M9 17h2" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_share />
      <TablerIcons.device_ipad_horizontal_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 20h-7.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v7" />
      <path d="M9 17h3" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_star />
      <TablerIcons.device_ipad_horizontal_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.5 20h-5.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v5.5" />
      <path d="M9 17h1" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_up />
      <TablerIcons.device_ipad_horizontal_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20h-7a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v6.5" />
      <path d="M9 17h3.5" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal_x />
      <TablerIcons.device_ipad_horizontal_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 20h-8.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v7" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
      <path d="M9 17h4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_horizontal />
      <TablerIcons.device_ipad_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 6a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-12z" />
      <path d="M9 17h6" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_minus />
      <TablerIcons.device_ipad_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v10" />
      <path d="M9 18h3" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_off />
      <TablerIcons.device_ipad_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 2h12a2 2 0 0 1 2 2v12m0 4a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-16" />
      <path d="M9 19h6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_pause />
      <TablerIcons.device_ipad_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21h-7a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8" />
      <path d="M9 18h4" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_pin />
      <TablerIcons.device_ipad_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v6" />
      <path d="M9 18h3" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_plus />
      <TablerIcons.device_ipad_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v7" />
      <path d="M9 18h3" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_question />
      <TablerIcons.device_ipad_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 21h-9a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v6" />
      <path d="M9 18h5" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_search />
      <TablerIcons.device_ipad_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-5.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v6" />
      <path d="M9 18h2" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_share />
      <TablerIcons.device_ipad_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21h-6a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8" />
      <path d="M9 18h3.5" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_star />
      <TablerIcons.device_ipad_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 21h-5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v5.5" />
      <path d="M9 18h1" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_up />
      <TablerIcons.device_ipad_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 18h3" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
      <path d="M13.5 21h-6.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v7" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad_x />
      <TablerIcons.device_ipad_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
      <path d="M13 21h-7a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v9" />
      <path d="M9 18h4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_ipad` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_ipad />
      <TablerIcons.device_ipad class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_ipad(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 2a3 3 0 0 1 2.995 2.824l.005 .176v14a3 3 0 0 1 -2.824 2.995l-.176 .005h-12a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-14a3 3 0 0 1 2.824 -2.995l.176 -.005h12zm-3 15h-6l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h6l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_landline_phone` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_landline_phone />
      <TablerIcons.device_landline_phone class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_landline_phone(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 3h-2a2 2 0 0 0 -2 2v14a2 2 0 0 0 2 2h2a2 2 0 0 0 2 -2v-14a2 2 0 0 0 -2 -2z" />
      <path d="M16 4h-11a3 3 0 0 0 -3 3v10a3 3 0 0 0 3 3h11" />
      <path d="M12 8h-6v3h6z" />
      <path d="M12 14v.01" />
      <path d="M9 14v.01" />
      <path d="M6 14v.01" />
      <path d="M12 17v.01" />
      <path d="M9 17v.01" />
      <path d="M6 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_laptop_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_laptop_off />
      <TablerIcons.device_laptop_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_laptop_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19h16" />
      <path d="M10 6h8a1 1 0 0 1 1 1v8m-3 1h-10a1 1 0 0 1 -1 -1v-8a1 1 0 0 1 1 -1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `device_laptop` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_laptop />
      <TablerIcons.device_laptop class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_laptop(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19l18 0" />
      <path d="M5 6m0 1a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v8a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_bolt />
      <TablerIcons.device_mobile_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 21h-5.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v7" />
      <path d="M19 16l-2 3h4l-2 3" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_cancel />
      <TablerIcons.device_mobile_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21h-4a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v7" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_charging` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_charging />
      <TablerIcons.device_mobile_charging class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_charging(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 3m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
      <path d="M11 4h2" />
      <path d="M12 9.5l-1 2.5h2l-1 2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_check />
      <TablerIcons.device_mobile_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-3.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v9.5" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_code />
      <TablerIcons.device_mobile_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-3.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_cog />
      <TablerIcons.device_mobile_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21h-4a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v6.5" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_dollar />
      <TablerIcons.device_mobile_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21h-5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v5" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_down />
      <TablerIcons.device_mobile_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-4.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v7" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_exclamation />
      <TablerIcons.device_mobile_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 21h-7a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v7" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_filled />
      <TablerIcons.device_mobile_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M16 2a3 3 0 0 1 2.995 2.824l.005 .176v14a3 3 0 0 1 -2.824 2.995l-.176 .005h-8a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-14a3 3 0 0 1 2.824 -2.995l.176 -.005h8zm-4 14a1 1 0 0 0 -.993 .883l-.007 .117l.007 .127a1 1 0 0 0 1.986 0l.007 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm1 -12h-2l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h2l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_heart />
      <TablerIcons.device_mobile_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-3.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v6" />
      <path d="M11 4h2" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_message` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_message />
      <TablerIcons.device_mobile_message class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_message(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 3h10v8h-3l-4 2v-2h-3z" />
      <path d="M15 16v4a1 1 0 0 1 -1 1h-8a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1h2" />
      <path d="M10 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_minus />
      <TablerIcons.device_mobile_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-4.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v10" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_off />
      <TablerIcons.device_mobile_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.159 3.185c.256 -.119 .54 -.185 .841 -.185h8a2 2 0 0 1 2 2v9m0 4v1a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-13" />
      <path d="M11 4h2" />
      <path d="M3 3l18 18" />
      <path d="M12 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_pause />
      <TablerIcons.device_mobile_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21h-5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_pin />
      <TablerIcons.device_mobile_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-4.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v6" />
      <path d="M11 4h2" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
      <path d="M12 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_plus />
      <TablerIcons.device_mobile_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-4.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v7" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_question />
      <TablerIcons.device_mobile_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 21h-7a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v6" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_rotated` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_rotated />
      <TablerIcons.device_mobile_rotated class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_rotated(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 6m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M20 11v2" />
      <path d="M7 12h-.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_search />
      <TablerIcons.device_mobile_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21h-4a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v6" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_share />
      <TablerIcons.device_mobile_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21h-4a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8" />
      <path d="M11 4h2" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
      <path d="M12 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_star />
      <TablerIcons.device_mobile_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 21h-3a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v5" />
      <path d="M11 4h2" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_up />
      <TablerIcons.device_mobile_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-4.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v7" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_vibration` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_vibration />
      <TablerIcons.device_mobile_vibration class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_vibration(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
      <path d="M8 4l2 0" />
      <path d="M9 17l0 .01" />
      <path d="M21 6l-2 3l2 3l-2 3l2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile_x />
      <TablerIcons.device_mobile_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21h-5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_mobile` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_mobile />
      <TablerIcons.device_mobile class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_mobile(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 5a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-14z" />
      <path d="M11 4h2" />
      <path d="M12 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_nintendo_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_nintendo_off />
      <TablerIcons.device_nintendo_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_nintendo_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.713 4.718a4 4 0 0 0 -1.713 3.282v8a4 4 0 0 0 4 4h3v-10m0 -4v-2h-2" />
      <path d="M14 10v-6h3a4 4 0 0 1 4 4v8c0 .308 -.035 .608 -.1 .896m-1.62 2.39a3.982 3.982 0 0 1 -2.28 .714h-3v-6" />
      <path d="M6.5 8.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `device_nintendo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_nintendo />
      <TablerIcons.device_nintendo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_nintendo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 20v-16h-3a4 4 0 0 0 -4 4v8a4 4 0 0 0 4 4h3z" />
      <path d="M14 20v-16h3a4 4 0 0 1 4 4v8a4 4 0 0 1 -4 4h-3z" />
      <circle cx="17.5" cy="15.5" r="1" fill="currentColor" />
      <circle cx="6.5" cy="8.5" r="1" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `device_projector` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_projector />
      <TablerIcons.device_projector class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_projector(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9a5 5 0 1 0 10 0a5 5 0 0 0 -10 0" />
      <path d="M9 6h-4a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h14a2 2 0 0 0 2 -2v-8a2 2 0 0 0 -2 -2h-2" />
      <path d="M6 15h1" />
      <path d="M7 18l-1 2" />
      <path d="M18 18l1 2" />
    </svg>
    """
  end

  @doc """
  Renders the `device_remote` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_remote />
      <TablerIcons.device_remote class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_remote(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 10m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 3m0 2a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2z" />
      <path d="M12 3v2" />
      <path d="M10 15v.01" />
      <path d="M10 18v.01" />
      <path d="M14 18v.01" />
      <path d="M14 15v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_sd_card` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_sd_card />
      <TablerIcons.device_sd_card class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_sd_card(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 21h10a2 2 0 0 0 2 -2v-14a2 2 0 0 0 -2 -2h-6.172a2 2 0 0 0 -1.414 .586l-3.828 3.828a2 2 0 0 0 -.586 1.414v10.172a2 2 0 0 0 2 2z" />
      <path d="M13 6v2" />
      <path d="M16 6v2" />
      <path d="M10 7v1" />
    </svg>
    """
  end

  @doc """
  Renders the `device_sim_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_sim_1 />
      <TablerIcons.device_sim_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_sim_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 3h8.5l4.5 4.5v12.5a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1z" />
      <path d="M10 11l2 -2v8" />
    </svg>
    """
  end

  @doc """
  Renders the `device_sim_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_sim_2 />
      <TablerIcons.device_sim_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_sim_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 3h8.5l4.5 4.5v12.5a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1z" />
      <path d="M10 9h3a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_sim_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_sim_3 />
      <TablerIcons.device_sim_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_sim_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 3h8.5l4.5 4.5v12.5a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1z" />
      <path d="M10 9h2.5a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1 -1.5 1.5h-1.5h1.5a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1 -1.5 1.5h-2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_sim` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_sim />
      <TablerIcons.device_sim class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_sim(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 3h8.5l4.5 4.5v12.5a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1z" />
      <path d="M9 11h3v6" />
      <path d="M15 17v.01" />
      <path d="M15 14v.01" />
      <path d="M15 11v.01" />
      <path d="M9 14v.01" />
      <path d="M9 17v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_speaker_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_speaker_off />
      <TablerIcons.device_speaker_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_speaker_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h10a2 2 0 0 1 2 2v10m0 4a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-14" />
      <path d="M11.114 11.133a3 3 0 1 0 3.754 3.751" />
      <path d="M12 7v.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `device_speaker` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_speaker />
      <TablerIcons.device_speaker class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_speaker(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M12 14m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12 7l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_bolt />
      <TablerIcons.device_tablet_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 21h-7.5a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v8" />
      <path d="M19 16l-2 3h4l-2 3" />
      <path d="M11 17a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_cancel />
      <TablerIcons.device_tablet_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v8" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
      <path d="M11 17a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_check />
      <TablerIcons.device_tablet_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-5.5a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v9.5" />
      <path d="M12.314 16.05a1 1 0 0 0 -1.042 1.635" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_code />
      <TablerIcons.device_tablet_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-5.5a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v9" />
      <path d="M12.344 16.06a1 1 0 0 0 -1.07 1.627" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_cog />
      <TablerIcons.device_tablet_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21h-6a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v7.5" />
      <path d="M12 16a1 1 0 0 0 0 2" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_dollar />
      <TablerIcons.device_tablet_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21h-7a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v6" />
      <path d="M11 17a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_down />
      <TablerIcons.device_tablet_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v8" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
      <path d="M11 17a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_exclamation />
      <TablerIcons.device_tablet_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 21h-9a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v8" />
      <path d="M11 17a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_filled />
      <TablerIcons.device_tablet_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 2a2 2 0 0 1 1.995 1.85l.005 .15v16a2 2 0 0 1 -1.85 1.995l-.15 .005h-12a2 2 0 0 1 -1.995 -1.85l-.005 -.15v-16a2 2 0 0 1 1.85 -1.995l.15 -.005h12zm-6 13a2 2 0 0 0 -1.977 1.697l-.018 .154l-.005 .149l.005 .15a2 2 0 1 0 1.995 -2.15z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_heart />
      <TablerIcons.device_tablet_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-5.5a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v7" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_minus />
      <TablerIcons.device_tablet_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v11" />
      <path d="M12.872 16.51a1 1 0 1 0 -.872 1.49" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_off />
      <TablerIcons.device_tablet_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h11a1 1 0 0 1 1 1v11m0 4v1a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1v-15" />
      <path d="M11 17a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_pause />
      <TablerIcons.device_tablet_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21h-7a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v9.5" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
      <path d="M11 17a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_pin />
      <TablerIcons.device_tablet_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v7" />
      <path d="M12 16a1 1 0 0 0 0 2" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_plus />
      <TablerIcons.device_tablet_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v8" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
      <path d="M11 17a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_question />
      <TablerIcons.device_tablet_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 21h-9a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v7" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
      <path d="M11 17a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_search />
      <TablerIcons.device_tablet_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-5.5a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v7" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_share />
      <TablerIcons.device_tablet_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21h-6a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v9" />
      <path d="M12.57 16.178a1 1 0 1 0 .016 1.633" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_star />
      <TablerIcons.device_tablet_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 21h-5a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v6" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_up />
      <TablerIcons.device_tablet_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-6.5a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v8" />
      <path d="M12.906 16.576a1 1 0 1 0 -.906 1.424" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet_x />
      <TablerIcons.device_tablet_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21h-7a1 1 0 0 1 -1 -1v-16a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v9.5" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
      <path d="M11 17a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tablet` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tablet />
      <TablerIcons.device_tablet class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tablet(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v16a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1v-16z" />
      <path d="M11 17a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tv_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tv_off />
      <TablerIcons.device_tv_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tv_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 7h8a2 2 0 0 1 2 2v8m-1.178 2.824c-.25 .113 -.529 .176 -.822 .176h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h2" />
      <path d="M16 3l-4 4l-4 -4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tv_old` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tv_old />
      <TablerIcons.device_tv_old class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tv_old(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M16 3l-4 4l-4 -4" />
      <path d="M15 7v13" />
      <path d="M18 15v.01" />
      <path d="M18 12v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_tv` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_tv />
      <TablerIcons.device_tv class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_tv(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M16 3l-4 4l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_vision_pro` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_vision_pro />
      <TablerIcons.device_vision_pro class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_vision_pro(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 7c1.143 0 2.235 .035 3.275 .104c1.017 .068 1.95 .207 2.798 .42c.813 .203 1.52 .505 2.119 .909a3.903 3.903 0 0 1 1.328 1.531c.326 .657 .48 1.48 .48 2.466c0 1.006 -.189 1.91 -.574 2.707c-.375 .779 -.886 1.396 -1.537 1.848a3.696 3.696 0 0 1 -2.16 .66c-.509 0 -.97 -.068 -1.382 -.21a5.84 5.84 0 0 1 -1.17 -.548a18.45 18.45 0 0 1 -1.045 -.695a9.104 9.104 0 0 0 -1.001 -.63a2.376 2.376 0 0 0 -1.13 -.301c-.373 0 -.75 .097 -1.132 .3c-.316 .17 -.65 .38 -1 .63c-.322 .23 -.67 .462 -1.047 .695a5.78 5.78 0 0 1 -1.168 .548c-.413 .142 -.872 .21 -1.378 .21a3.706 3.706 0 0 1 -2.165 -.659c-.651 -.452 -1.162 -1.07 -1.537 -1.848c-.385 -.798 -.574 -1.7 -.574 -2.709c-.004 -.98 .15 -1.802 .477 -2.46a3.897 3.897 0 0 1 1.33 -1.531c.6 -.403 1.307 -.704 2.12 -.907a16.088 16.088 0 0 1 2.8 -.423c1.04 -.071 2.13 -.107 3.273 -.107z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_bolt />
      <TablerIcons.device_watch_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 18h-4a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v3" />
      <path d="M9 18v3h4.5" />
      <path d="M9 6v-3h6v3" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_cancel />
      <TablerIcons.device_watch_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18h-3a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v3" />
      <path d="M9 18v3h3" />
      <path d="M9 6v-3h6v3" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_check />
      <TablerIcons.device_watch_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 18h-2a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v5.5" />
      <path d="M9 18v3h2.5" />
      <path d="M9 6v-3h6v3" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_code />
      <TablerIcons.device_watch_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 18h-2a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v4" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
      <path d="M9 18v3h3" />
      <path d="M9 6v-3h6v3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_cog />
      <TablerIcons.device_watch_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18h-3a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v2.5" />
      <path d="M9 18v3h3" />
      <path d="M9 6v-3h6v3" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_dollar />
      <TablerIcons.device_watch_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 18h-4a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v1" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
      <path d="M9 18v3h4" />
      <path d="M9 6v-3h6v3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_down />
      <TablerIcons.device_watch_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18h-3a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v3" />
      <path d="M9 18v3h3.5" />
      <path d="M9 6v-3h6v3" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_exclamation />
      <TablerIcons.device_watch_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 18h-6a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v3" />
      <path d="M9 18v3h6v-3" />
      <path d="M9 6v-3h6v3" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_heart />
      <TablerIcons.device_watch_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 18h-1a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v2" />
      <path d="M9 18v3h2.5" />
      <path d="M9 6v-3h6v3" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_minus />
      <TablerIcons.device_watch_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18h-3a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v6" />
      <path d="M9 18v3h3.5" />
      <path d="M9 6v-3h6v3" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_off />
      <TablerIcons.device_watch_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 6h5a3 3 0 0 1 3 3v5m-.89 3.132a2.99 2.99 0 0 1 -2.11 .868h-6a3 3 0 0 1 -3 -3v-6c0 -.817 .327 -1.559 .857 -2.1" />
      <path d="M9 18v3h6v-3" />
      <path d="M9 5v-2h6v3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_pause />
      <TablerIcons.device_watch_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 18h-4a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v4" />
      <path d="M9 18v3h4" />
      <path d="M9 6v-3h6v3" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_pin />
      <TablerIcons.device_watch_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18h-3a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v2" />
      <path d="M9 18v3h3.5" />
      <path d="M9 6v-3h6v3" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_plus />
      <TablerIcons.device_watch_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18h-3a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v3" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
      <path d="M9 18v3h3.5" />
      <path d="M9 6v-3h6v3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_question />
      <TablerIcons.device_watch_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 18h-5a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v2" />
      <path d="M9 18v3h6v-2" />
      <path d="M9 6v-3h6v3" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_search />
      <TablerIcons.device_watch_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 18h-2a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v2" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
      <path d="M9 18v3h3" />
      <path d="M9 6v-3h6v3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_share />
      <TablerIcons.device_watch_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 18h-3.5a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v4" />
      <path d="M9 18v3h3" />
      <path d="M9 6v-3h6v3" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_star />
      <TablerIcons.device_watch_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 18h-1a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v1" />
      <path d="M9 18v3h2" />
      <path d="M9 6v-3h6v3" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_stats_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_stats_2 />
      <TablerIcons.device_watch_stats_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_stats_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 6m0 3a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-6a3 3 0 0 1 -3 -3z" />
      <path d="M9 18v3h6v-3" />
      <path d="M9 6v-3h6v3" />
      <path d="M12 10a2 2 0 1 0 2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_stats` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_stats />
      <TablerIcons.device_watch_stats class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_stats(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 6m0 3a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-6a3 3 0 0 1 -3 -3z" />
      <path d="M9 18v3h6v-3" />
      <path d="M9 6v-3h6v3" />
      <path d="M9 14v-4" />
      <path d="M12 14v-1" />
      <path d="M15 14v-3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_up />
      <TablerIcons.device_watch_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18h-3a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v3" />
      <path d="M9 18v3h3.5" />
      <path d="M9 6v-3h6v3" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch_x />
      <TablerIcons.device_watch_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 18h-4a3 3 0 0 1 -3 -3v-6a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v4" />
      <path d="M9 18v3h4" />
      <path d="M9 6v-3h6v3" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `device_watch` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.device_watch />
      <TablerIcons.device_watch class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def device_watch(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 9a3 3 0 0 1 3 -3h6a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-6a3 3 0 0 1 -3 -3v-6z" />
      <path d="M9 18v3h6v-3" />
      <path d="M9 6v-3h6v3" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_2 />
      <TablerIcons.devices_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 15h-6a1 1 0 0 1 -1 -1v-8a1 1 0 0 1 1 -1h6" />
      <path d="M13 4m0 1a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1z" />
      <path d="M7 19l3 0" />
      <path d="M17 8l0 .01" />
      <path d="M17 16m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M9 15l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_bolt />
      <TablerIcons.devices_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19v-10a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v3.5" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h9" />
      <path d="M19 16l-2 3h4l-2 3" />
      <path d="M16 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_cancel />
      <TablerIcons.devices_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 15.5v-6.5a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v3.5" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h8" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
      <path d="M16 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_check />
      <TablerIcons.devices_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 15.5v-6.5a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v4" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h7" />
      <path d="M16 9h2" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_code />
      <TablerIcons.devices_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 15.5v-6.5a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v4m0 6a1 1 0 0 1 -1 1" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h7" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
      <path d="M16 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_cog />
      <TablerIcons.devices_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 14.5v-5.5a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v3" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h8" />
      <path d="M16 9h2" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_dollar />
      <TablerIcons.devices_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19v-10a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v1.5" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h9" />
      <path d="M16 9h2" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_down />
      <TablerIcons.devices_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 16.5v-7.5a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v3.5" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h8" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
      <path d="M16 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_exclamation />
      <TablerIcons.devices_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 20h-1a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v3.5" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h9" />
      <path d="M16 9h2" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_heart />
      <TablerIcons.devices_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 12v-3a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v2" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h6" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
      <path d="M16 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_minus />
      <TablerIcons.devices_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 16.5v-7.5a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v6" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h8" />
      <path d="M16 19h6" />
      <path d="M16 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_off />
      <TablerIcons.devices_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 9a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v8m-1 3h-6a1 1 0 0 1 -1 -1v-6" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-9m-4 0a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h9" />
      <path d="M16 9h2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_pause />
      <TablerIcons.devices_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19v-10a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v4" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h9" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
      <path d="M16 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_pc_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_pc_off />
      <TablerIcons.devices_pc_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_pc_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 9v10h-6v-14h2" />
      <path d="M13 9h9v7h-2m-4 0h-4v-4" />
      <path d="M14 19h5" />
      <path d="M17 17v2" />
      <path d="M6 13v.01" />
      <path d="M6 16v.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_pc` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_pc />
      <TablerIcons.devices_pc class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_pc(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5h6v14h-6z" />
      <path d="M12 9h10v7h-10z" />
      <path d="M14 19h6" />
      <path d="M17 16v3" />
      <path d="M6 13v.01" />
      <path d="M6 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_pin />
      <TablerIcons.devices_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 14v-5a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v2" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h8" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
      <path d="M16 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_plus />
      <TablerIcons.devices_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 16.5v-7.5a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v3.5" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h8" />
      <path d="M16 9h2" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_question />
      <TablerIcons.devices_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 20h-1a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v2" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h9" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
      <path d="M16 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_search />
      <TablerIcons.devices_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 13v-4a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v2.5" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h7" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
      <path d="M16 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_share />
      <TablerIcons.devices_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 15v-6a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v4" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h9" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
      <path d="M16 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_star />
      <TablerIcons.devices_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 13v-4a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v2.5" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h5.5" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
      <path d="M16 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_up />
      <TablerIcons.devices_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 16.5v-7.5a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v3.5" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h8" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
      <path d="M16 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `devices_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices_x />
      <TablerIcons.devices_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 20a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v4" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h9" />
      <path d="M16 9h2" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `devices` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.devices />
      <TablerIcons.devices class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def devices(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 9a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1v-10z" />
      <path d="M18 8v-3a1 1 0 0 0 -1 -1h-13a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h9" />
      <path d="M16 9h2" />
    </svg>
    """
  end

  @doc """
  Renders the `diabolo_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.diabolo_off />
      <TablerIcons.diabolo_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def diabolo_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.727 4.749c-.467 .38 -.727 .804 -.727 1.251c0 1.217 1.933 2.265 4.71 2.735m4.257 .243c3.962 -.178 7.033 -1.444 7.033 -2.978c0 -1.657 -3.582 -3 -8 -3c-1.66 0 -3.202 .19 -4.48 .514" />
      <path d="M4 6v.143a1 1 0 0 0 .048 .307l1.952 5.55l-1.964 5.67a1 1 0 0 0 -.036 .265v.065c0 1.657 3.582 3 8 3c3.218 0 5.992 -.712 7.262 -1.74m-.211 -4.227l-1.051 -3.033l1.952 -5.55a1 1 0 0 0 .048 -.307v-.143" />
      <path d="M6 12c0 1.105 2.686 2 6 2c.656 0 1.288 -.035 1.879 -.1m3.198 -.834c.585 -.308 .923 -.674 .923 -1.066" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `diabolo_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.diabolo_plus />
      <TablerIcons.diabolo_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def diabolo_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 6m-8 0a8 3 0 1 0 16 0a8 3 0 1 0 -16 0" />
      <path d="M4 6v.143a1 1 0 0 0 .048 .307l1.952 5.55l-1.964 5.67a1 1 0 0 0 -.036 .265v.065c0 1.657 3.582 3 8 3c.17 0 .34 -.002 .508 -.006m5.492 -8.994l1.952 -5.55a1 1 0 0 0 .048 -.307v-.143" />
      <path d="M6 12c0 1.105 2.686 2 6 2s6 -.895 6 -2" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `diabolo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.diabolo />
      <TablerIcons.diabolo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def diabolo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 6m-8 0a8 3 0 1 0 16 0a8 3 0 1 0 -16 0" />
      <path d="M4 6v.143a1 1 0 0 0 .048 .307l1.952 5.55l-1.964 5.67a1 1 0 0 0 -.036 .265v.065c0 1.657 3.582 3 8 3s8 -1.343 8 -3v-.065a1 1 0 0 0 -.036 -.265l-1.964 -5.67l1.952 -5.55a1 1 0 0 0 .048 -.307v-.143" />
      <path d="M6 12c0 1.105 2.686 2 6 2s6 -.895 6 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `dialpad_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dialpad_filled />
      <TablerIcons.dialpad_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dialpad_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M6 2h-2a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 2h-2a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M13 2h-2a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M6 9h-2a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 9h-2a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M13 9h-2a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M13 16h-2a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `dialpad_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dialpad_off />
      <TablerIcons.dialpad_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dialpad_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 7h-4v-4" />
      <path d="M17 3h4v4h-4z" />
      <path d="M10 6v-3h4v4h-3" />
      <path d="M3 10h4v4h-4z" />
      <path d="M17 13v-3h4v4h-3" />
      <path d="M14 14h-4v-4" />
      <path d="M10 17h4v4h-4z" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `dialpad` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dialpad />
      <TablerIcons.dialpad class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dialpad(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 3h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1z" />
      <path d="M18 3h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1z" />
      <path d="M11 3h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1z" />
      <path d="M4 10h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1z" />
      <path d="M18 10h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1z" />
      <path d="M11 10h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1z" />
      <path d="M11 17h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `diamond_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.diamond_filled />
      <TablerIcons.diamond_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def diamond_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 4a1 1 0 0 1 .783 .378l.074 .108l3 5a1 1 0 0 1 -.032 1.078l-.08 .103l-8.53 9.533a1.7 1.7 0 0 1 -1.215 .51c-.4 0 -.785 -.14 -1.11 -.417l-.135 -.126l-8.5 -9.5a1 1 0 0 1 -.172 -1.067l.06 -.115l3.013 -5.022l.064 -.09a.982 .982 0 0 1 .155 -.154l.089 -.064l.088 -.05l.05 -.023l.06 -.025l.109 -.032l.112 -.02l.117 -.005h12zm-8.886 3.943a1 1 0 0 0 -1.371 .343l-.6 1l-.06 .116a1 1 0 0 0 .177 1.07l2 2.2l.09 .088a1 1 0 0 0 1.323 -.02l.087 -.09a1 1 0 0 0 -.02 -1.323l-1.501 -1.65l.218 -.363l.055 -.103a1 1 0 0 0 -.398 -1.268z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `diamond_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.diamond_off />
      <TablerIcons.diamond_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def diamond_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h9l3 5l-3.308 3.697m-1.883 2.104l-3.309 3.699a.7 .7 0 0 1 -1 0l-8.5 -9.5l2.62 -4.368" />
      <path d="M10 12l-2 -2.2l.6 -1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `diamond` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.diamond />
      <TablerIcons.diamond class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def diamond(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 5h12l3 5l-8.5 9.5a.7 .7 0 0 1 -1 0l-8.5 -9.5l3 -5" />
      <path d="M10 12l-2 -2.2l.6 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `diamonds_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.diamonds_filled />
      <TablerIcons.diamonds_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def diamonds_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2.005c-.777 0 -1.508 .367 -1.971 .99l-5.362 6.895c-.89 1.136 -.89 3.083 0 4.227l5.375 6.911a2.457 2.457 0 0 0 3.93 -.017l5.361 -6.894c.89 -1.136 .89 -3.083 0 -4.227l-5.375 -6.911a2.446 2.446 0 0 0 -1.958 -.974z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `diamonds` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.diamonds />
      <TablerIcons.diamonds class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def diamonds(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.831 20.413l-5.375 -6.91c-.608 -.783 -.608 -2.223 0 -3l5.375 -6.911a1.457 1.457 0 0 1 2.338 0l5.375 6.91c.608 .783 .608 2.223 0 3l-5.375 6.911a1.457 1.457 0 0 1 -2.338 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `dice_1_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dice_1_filled />
      <TablerIcons.dice_1_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dice_1_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-6.333 8.5a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `dice_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dice_1 />
      <TablerIcons.dice_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dice_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <circle cx="12" cy="12" r=".5" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `dice_2_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dice_2_filled />
      <TablerIcons.dice_2_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dice_2_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-3.833 11a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm-5 -5a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `dice_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dice_2 />
      <TablerIcons.dice_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dice_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <circle cx="9.5" cy="9.5" r=".5" fill="currentColor" />
      <circle cx="14.5" cy="14.5" r=".5" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `dice_3_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dice_3_filled />
      <TablerIcons.dice_3_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dice_3_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-2.833 12a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm-3.5 -3.5a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm-3.5 -3.5a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `dice_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dice_3 />
      <TablerIcons.dice_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dice_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <circle cx="8.5" cy="8.5" r=".5" fill="currentColor" />
      <circle cx="15.5" cy="15.5" r=".5" fill="currentColor" />
      <circle cx="12" cy="12" r=".5" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `dice_4_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dice_4_filled />
      <TablerIcons.dice_4_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dice_4_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-2.833 12a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm-7 0a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm0 -7a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm7 0a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `dice_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dice_4 />
      <TablerIcons.dice_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dice_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <circle cx="8.5" cy="8.5" r=".5" fill="currentColor" />
      <circle cx="15.5" cy="8.5" r=".5" fill="currentColor" />
      <circle cx="15.5" cy="15.5" r=".5" fill="currentColor" />
      <circle cx="8.5" cy="15.5" r=".5" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `dice_5_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dice_5_filled />
      <TablerIcons.dice_5_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dice_5_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-2.833 12a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm-7 0a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm3.5 -3.5a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm-3.5 -3.5a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm7 0a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `dice_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dice_5 />
      <TablerIcons.dice_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dice_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <circle cx="8.5" cy="8.5" r=".5" fill="currentColor" />
      <circle cx="15.5" cy="8.5" r=".5" fill="currentColor" />
      <circle cx="15.5" cy="15.5" r=".5" fill="currentColor" />
      <circle cx="8.5" cy="15.5" r=".5" fill="currentColor" />
      <circle cx="12" cy="12" r=".5" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `dice_6_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dice_6_filled />
      <TablerIcons.dice_6_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dice_6_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-2.833 13a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm-7 0a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm0 -4.5a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm7 0a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm-7 -4.5a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm7 0a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `dice_6` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dice_6 />
      <TablerIcons.dice_6 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dice_6(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <circle cx="8.5" cy="7.5" r=".5" fill="currentColor" />
      <circle cx="15.5" cy="7.5" r=".5" fill="currentColor" />
      <circle cx="8.5" cy="12" r=".5" fill="currentColor" />
      <circle cx="15.5" cy="12" r=".5" fill="currentColor" />
      <circle cx="15.5" cy="16.5" r=".5" fill="currentColor" />
      <circle cx="8.5" cy="16.5" r=".5" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `dice_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dice_filled />
      <TablerIcons.dice_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dice_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-2.833 12a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm-7 0a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm0 -7a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3zm7 0a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `dice` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dice />
      <TablerIcons.dice class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dice(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <circle cx="8.5" cy="8.5" r=".5" fill="currentColor" />
      <circle cx="15.5" cy="8.5" r=".5" fill="currentColor" />
      <circle cx="15.5" cy="15.5" r=".5" fill="currentColor" />
      <circle cx="8.5" cy="15.5" r=".5" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `dimensions` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dimensions />
      <TablerIcons.dimensions class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dimensions(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5h11" />
      <path d="M12 7l2 -2l-2 -2" />
      <path d="M5 3l-2 2l2 2" />
      <path d="M19 10v11" />
      <path d="M17 19l2 2l2 -2" />
      <path d="M21 12l-2 -2l-2 2" />
      <path d="M3 10m0 2a2 2 0 0 1 2 -2h7a2 2 0 0 1 2 2v7a2 2 0 0 1 -2 2h-7a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `direction_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.direction_horizontal />
      <TablerIcons.direction_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def direction_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 9l-3 3l3 3" />
      <path d="M14 9l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `direction_sign_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.direction_sign_filled />
      <TablerIcons.direction_sign_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def direction_sign_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.52 2.614a2.095 2.095 0 0 1 2.835 -.117l.126 .117l7.905 7.905c.777 .777 .816 2.013 .117 2.836l-.117 .126l-7.905 7.905a2.094 2.094 0 0 1 -2.836 .117l-.126 -.117l-7.907 -7.906a2.096 2.096 0 0 1 -.115 -2.835l.117 -.126l7.905 -7.905zm5.969 9.535l.01 -.116l-.003 -.12l-.016 -.114l-.03 -.11l-.044 -.112l-.052 -.098l-.076 -.105l-.07 -.081l-3.5 -3.5l-.095 -.083a1 1 0 0 0 -1.226 0l-.094 .083l-.083 .094a1 1 0 0 0 0 1.226l.083 .094l1.792 1.793h-5.085l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h5.085l-1.792 1.793l-.083 .094a1 1 0 0 0 1.403 1.403l.094 -.083l3.5 -3.5l.097 -.112l.05 -.074l.037 -.067l.05 -.112l.023 -.076l.025 -.117z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `direction_sign_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.direction_sign_off />
      <TablerIcons.direction_sign_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def direction_sign_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.73 14.724l1.949 -1.95a1.095 1.095 0 0 0 0 -1.548l-7.905 -7.905a1.095 1.095 0 0 0 -1.548 0l-1.95 1.95m-2.01 2.01l-3.945 3.945a1.095 1.095 0 0 0 0 1.548l7.905 7.905c.427 .428 1.12 .428 1.548 0l3.95 -3.95" />
      <path d="M8 12h4" />
      <path d="M13.748 13.752l-1.748 1.748" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `direction_sign` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.direction_sign />
      <TablerIcons.direction_sign class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def direction_sign(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.32 12.774l7.906 7.905c.427 .428 1.12 .428 1.548 0l7.905 -7.905a1.095 1.095 0 0 0 0 -1.548l-7.905 -7.905a1.095 1.095 0 0 0 -1.548 0l-7.905 7.905a1.095 1.095 0 0 0 0 1.548z" />
      <path d="M8 12h7.5" />
      <path d="M12 8.5l3.5 3.5l-3.5 3.5" />
    </svg>
    """
  end

  @doc """
  Renders the `direction` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.direction />
      <TablerIcons.direction class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def direction(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 10l3 -3l3 3" />
      <path d="M9 14l3 3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `directions_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.directions_off />
      <TablerIcons.directions_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def directions_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21v-4" />
      <path d="M12 13v-1" />
      <path d="M12 5v-2" />
      <path d="M10 21h4" />
      <path d="M8 8v1h1m4 0h6l2 -2l-2 -2h-10" />
      <path d="M14 14v3h-8l-2 -2l2 -2h7" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `directions` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.directions />
      <TablerIcons.directions class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def directions(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21v-4" />
      <path d="M12 13v-4" />
      <path d="M12 5v-2" />
      <path d="M10 21h4" />
      <path d="M8 5v4h11l2 -2l-2 -2z" />
      <path d="M14 13v4h-8l-2 -2l2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `disabled_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.disabled_2 />
      <TablerIcons.disabled_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def disabled_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M9 11a5 5 0 1 0 3.95 7.95" />
      <path d="M19 20l-4 -5h-4l3 -5l-4 -3l-4 1" />
    </svg>
    """
  end

  @doc """
  Renders the `disabled_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.disabled_off />
      <TablerIcons.disabled_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def disabled_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 7a2 2 0 1 0 -2 -2" />
      <path d="M11 11v4h4l4 5" />
      <path d="M15 11h1" />
      <path d="M7 11.5a5 5 0 1 0 6 7.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `disabled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.disabled />
      <TablerIcons.disabled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def disabled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M11 7l0 8l4 0l4 5" />
      <path d="M11 11l5 0" />
      <path d="M7 11.5a5 5 0 1 0 6 7.5" />
    </svg>
    """
  end

  @doc """
  Renders the `disc_golf` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.disc_golf />
      <TablerIcons.disc_golf class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def disc_golf(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5h14" />
      <path d="M6 5c.32 6.744 2.74 9.246 6 10" />
      <path d="M18 5c-.32 6.744 -2.74 9.246 -6 10" />
      <path d="M10 5c0 4.915 .552 7.082 2 10" />
      <path d="M14 5c0 4.915 -.552 7.082 -2 10" />
      <path d="M12 15v6" />
      <path d="M12 3v2" />
      <path d="M7 16c.64 .64 1.509 1 2.414 1h5.172c.905 0 1.774 -.36 2.414 -1" />
      <path d="M11 21h2" />
    </svg>
    """
  end

  @doc """
  Renders the `disc_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.disc_off />
      <TablerIcons.disc_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def disc_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.044 16.04a9 9 0 0 0 -12.082 -12.085m-2.333 1.688a9 9 0 0 0 6.371 15.357c2.491 0 4.73 -1 6.36 -2.631" />
      <path d="M11.298 11.288a1 1 0 1 0 1.402 1.427" />
      <path d="M7 12c0 -1.38 .559 -2.629 1.462 -3.534m2.607 -1.38c.302 -.056 .613 -.086 .931 -.086" />
      <path d="M12 17a4.985 4.985 0 0 0 3.551 -1.48m1.362 -2.587c.057 -.302 .087 -.614 .087 -.933" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `disc` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.disc />
      <TablerIcons.disc class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def disc(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M7 12a5 5 0 0 1 5 -5" />
      <path d="M12 17a5 5 0 0 0 5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `discount_2_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.discount_2_off />
      <TablerIcons.discount_2_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def discount_2_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15l3 -3m2 -2l1 -1" />
      <path d="M9.148 9.145a.498 .498 0 0 0 .352 .855a.5 .5 0 0 0 .35 -.142" />
      <path d="M14.148 14.145a.498 .498 0 0 0 .352 .855a.5 .5 0 0 0 .35 -.142" />
      <path d="M8.887 4.89a2.2 2.2 0 0 0 .863 -.53l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7c.412 .41 .97 .64 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1c0 .58 .23 1.138 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.528 .858m-.757 3.248a2.193 2.193 0 0 1 -1.555 .644h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1c0 -.604 .244 -1.152 .638 -1.55" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `discount_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.discount_2 />
      <TablerIcons.discount_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def discount_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15l6 -6" />
      <circle cx="9.5" cy="9.5" r=".5" fill="currentColor" />
      <circle cx="14.5" cy="14.5" r=".5" fill="currentColor" />
      <path d="M5 7.2a2.2 2.2 0 0 1 2.2 -2.2h1a2.2 2.2 0 0 0 1.55 -.64l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7a2.2 2.2 0 0 0 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1a2.2 2.2 0 0 0 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.64 1.55v1a2.2 2.2 0 0 1 -2.2 2.2h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `discount_check_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.discount_check_filled />
      <TablerIcons.discount_check_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def discount_check_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12.01 2.011a3.2 3.2 0 0 1 2.113 .797l.154 .145l.698 .698a1.2 1.2 0 0 0 .71 .341l.135 .008h1a3.2 3.2 0 0 1 3.195 3.018l.005 .182v1c0 .27 .092 .533 .258 .743l.09 .1l.697 .698a3.2 3.2 0 0 1 .147 4.382l-.145 .154l-.698 .698a1.2 1.2 0 0 0 -.341 .71l-.008 .135v1a3.2 3.2 0 0 1 -3.018 3.195l-.182 .005h-1a1.2 1.2 0 0 0 -.743 .258l-.1 .09l-.698 .697a3.2 3.2 0 0 1 -4.382 .147l-.154 -.145l-.698 -.698a1.2 1.2 0 0 0 -.71 -.341l-.135 -.008h-1a3.2 3.2 0 0 1 -3.195 -3.018l-.005 -.182v-1a1.2 1.2 0 0 0 -.258 -.743l-.09 -.1l-.697 -.698a3.2 3.2 0 0 1 -.147 -4.382l.145 -.154l.698 -.698a1.2 1.2 0 0 0 .341 -.71l.008 -.135v-1l.005 -.182a3.2 3.2 0 0 1 3.013 -3.013l.182 -.005h1a1.2 1.2 0 0 0 .743 -.258l.1 -.09l.698 -.697a3.2 3.2 0 0 1 2.269 -.944zm3.697 7.282a1 1 0 0 0 -1.414 0l-3.293 3.292l-1.293 -1.292l-.094 -.083a1 1 0 0 0 -1.32 1.497l2 2l.094 .083a1 1 0 0 0 1.32 -.083l4 -4l.083 -.094a1 1 0 0 0 -.083 -1.32z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `discount_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.discount_check />
      <TablerIcons.discount_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def discount_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 7.2a2.2 2.2 0 0 1 2.2 -2.2h1a2.2 2.2 0 0 0 1.55 -.64l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7c.412 .41 .97 .64 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1c0 .58 .23 1.138 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.64 1.55v1a2.2 2.2 0 0 1 -2.2 2.2h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1" />
      <path d="M9 12l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `discount_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.discount_off />
      <TablerIcons.discount_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def discount_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15l3 -3m2 -2l1 -1" />
      <path d="M9.148 9.145a.498 .498 0 0 0 .352 .855a.5 .5 0 0 0 .35 -.142" />
      <path d="M14.148 14.145a.498 .498 0 0 0 .352 .855a.5 .5 0 0 0 .35 -.142" />
      <path d="M5.641 5.631a9 9 0 1 0 12.719 12.738m1.68 -2.318a9 9 0 0 0 -12.074 -12.098" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `discount` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.discount />
      <TablerIcons.discount class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def discount(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15l6 -6" />
      <circle cx="9.5" cy="9.5" r=".5" fill="currentColor" />
      <circle cx="14.5" cy="14.5" r=".5" fill="currentColor" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `divide` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.divide />
      <TablerIcons.divide class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def divide(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <circle cx="12" cy="6" r="1" fill="currentColor" />
      <circle cx="12" cy="18" r="1" fill="currentColor" />
      <path d="M5 12l14 0" />
    </svg>
    """
  end

  @doc """
  Renders the `dna_2_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dna_2_off />
      <TablerIcons.dna_2_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dna_2_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 3v1c-.007 2.46 -.91 4.554 -2.705 6.281m-2.295 1.719c-3.328 1.99 -5 4.662 -5.008 8.014v1" />
      <path d="M17 21.014v-1c0 -1.44 -.315 -2.755 -.932 -3.944m-4.068 -4.07c-1.903 -1.138 -3.263 -2.485 -4.082 -4.068" />
      <path d="M8 4h9" />
      <path d="M7 20h10" />
      <path d="M12 8h4" />
      <path d="M8 16h8" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `dna_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dna_2 />
      <TablerIcons.dna_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dna_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 3v1c-.01 3.352 -1.68 6.023 -5.008 8.014c-3.328 1.99 3.336 -2 .008 -.014c-3.328 1.99 -5 4.662 -5.008 8.014v1" />
      <path d="M17 21.014v-1c-.01 -3.352 -1.68 -6.023 -5.008 -8.014c-3.328 -1.99 3.336 2 .008 .014c-3.328 -1.991 -5 -4.662 -5.008 -8.014v-1" />
      <path d="M7 4h10" />
      <path d="M7 20h10" />
      <path d="M8 8h8" />
      <path d="M8 16h8" />
    </svg>
    """
  end

  @doc """
  Renders the `dna_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dna_off />
      <TablerIcons.dna_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dna_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 12a3.898 3.898 0 0 0 -1.172 -2.828a4.027 4.027 0 0 0 -2.828 -1.172m-2.828 1.172a4 4 0 1 0 5.656 5.656" />
      <path d="M9.172 20.485a4 4 0 1 0 -5.657 -5.657" />
      <path d="M14.828 3.515a4 4 0 1 0 5.657 5.657" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `dna` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dna />
      <TablerIcons.dna class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dna(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.828 14.828a4 4 0 1 0 -5.656 -5.656a4 4 0 0 0 5.656 5.656z" />
      <path d="M9.172 20.485a4 4 0 1 0 -5.657 -5.657" />
      <path d="M14.828 3.515a4 4 0 0 0 5.657 5.657" />
    </svg>
    """
  end

  @doc """
  Renders the `dog_bowl` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dog_bowl />
      <TablerIcons.dog_bowl class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dog_bowl(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 15l5.586 -5.585a2 2 0 1 1 3.414 -1.415a2 2 0 1 1 -1.413 3.414l-3.587 3.586" />
      <path d="M12 13l-3.586 -3.585a2 2 0 1 0 -3.414 -1.415a2 2 0 1 0 1.413 3.414l3.587 3.586" />
      <path d="M3 20h18c-.175 -1.671 -.046 -3.345 -2 -5h-14c-1.333 1 -2 2.667 -2 5z" />
    </svg>
    """
  end

  @doc """
  Renders the `dog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dog />
      <TablerIcons.dog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 5h2" />
      <path d="M19 12c-.667 5.333 -2.333 8 -5 8h-4c-2.667 0 -4.333 -2.667 -5 -8" />
      <path d="M11 16c0 .667 .333 1 1 1s1 -.333 1 -1h-2z" />
      <path d="M12 18v2" />
      <path d="M10 11v.01" />
      <path d="M14 11v.01" />
      <path d="M5 4l6 .97l-6.238 6.688a1.021 1.021 0 0 1 -1.41 .111a.953 .953 0 0 1 -.327 -.954l1.975 -6.815z" />
      <path d="M19 4l-6 .97l6.238 6.688c.358 .408 .989 .458 1.41 .111a.953 .953 0 0 0 .327 -.954l-1.975 -6.815z" />
    </svg>
    """
  end

  @doc """
  Renders the `door_enter` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.door_enter />
      <TablerIcons.door_enter class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def door_enter(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 12v.01" />
      <path d="M3 21h18" />
      <path d="M5 21v-16a2 2 0 0 1 2 -2h6m4 10.5v7.5" />
      <path d="M21 7h-7m3 -3l-3 3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `door_exit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.door_exit />
      <TablerIcons.door_exit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def door_exit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 12v.01" />
      <path d="M3 21h18" />
      <path d="M5 21v-16a2 2 0 0 1 2 -2h7.5m2.5 10.5v7.5" />
      <path d="M14 7h7m-3 -3l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `door_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.door_off />
      <TablerIcons.door_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def door_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21h18" />
      <path d="M6 21v-15" />
      <path d="M7.18 3.175c.25 -.112 .528 -.175 .82 -.175h8a2 2 0 0 1 2 2v9" />
      <path d="M18 18v3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `door` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.door />
      <TablerIcons.door class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def door(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 12v.01" />
      <path d="M3 21h18" />
      <path d="M6 21v-16a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v16" />
    </svg>
    """
  end

  @doc """
  Renders the `dots_circle_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dots_circle_horizontal />
      <TablerIcons.dots_circle_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dots_circle_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M8 12l0 .01" />
      <path d="M12 12l0 .01" />
      <path d="M16 12l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `dots_diagonal_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dots_diagonal_2 />
      <TablerIcons.dots_diagonal_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dots_diagonal_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 7m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M17 17m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `dots_diagonal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dots_diagonal />
      <TablerIcons.dots_diagonal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dots_diagonal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 17m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M17 7m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `dots_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dots_vertical />
      <TablerIcons.dots_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dots_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `dots` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dots />
      <TablerIcons.dots class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dots(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M19 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `download_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.download_off />
      <TablerIcons.download_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def download_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 1.83 -1.19" />
      <path d="M7 11l5 5l2 -2m2 -2l1 -1" />
      <path d="M12 4v4m0 4v4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `download` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.download />
      <TablerIcons.download class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def download(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2" />
      <path d="M7 11l5 5l5 -5" />
      <path d="M12 4l0 12" />
    </svg>
    """
  end

  @doc """
  Renders the `drag_drop_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.drag_drop_2 />
      <TablerIcons.drag_drop_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def drag_drop_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
      <path d="M4 4l0 .01" />
      <path d="M8 4l0 .01" />
      <path d="M12 4l0 .01" />
      <path d="M16 4l0 .01" />
      <path d="M4 8l0 .01" />
      <path d="M4 12l0 .01" />
      <path d="M4 16l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `drag_drop` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.drag_drop />
      <TablerIcons.drag_drop class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def drag_drop(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 11v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2" />
      <path d="M13 13l9 3l-4 2l-2 4l-3 -9" />
      <path d="M3 3l0 .01" />
      <path d="M7 3l0 .01" />
      <path d="M11 3l0 .01" />
      <path d="M15 3l0 .01" />
      <path d="M3 7l0 .01" />
      <path d="M3 11l0 .01" />
      <path d="M3 15l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `drone_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.drone_off />
      <TablerIcons.drone_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def drone_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 14h-4v-4" />
      <path d="M10 10l-3.5 -3.5" />
      <path d="M9.957 5.95a3.503 3.503 0 0 0 -2.917 -2.91m-3.02 .989a3.5 3.5 0 0 0 1.98 5.936" />
      <path d="M14 10l3.5 -3.5" />
      <path d="M18 9.965a3.5 3.5 0 1 0 -3.966 -3.965" />
      <path d="M14 14l3.5 3.5" />
      <path d="M14.035 18a3.5 3.5 0 0 0 5.936 1.98m.987 -3.026a3.503 3.503 0 0 0 -2.918 -2.913" />
      <path d="M10 14l-3.5 3.5" />
      <path d="M6 14.035a3.5 3.5 0 1 0 3.966 3.965" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `drone` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.drone />
      <TablerIcons.drone class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def drone(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10h4v4h-4z" />
      <path d="M10 10l-3.5 -3.5" />
      <path d="M9.96 6a3.5 3.5 0 1 0 -3.96 3.96" />
      <path d="M14 10l3.5 -3.5" />
      <path d="M18 9.96a3.5 3.5 0 1 0 -3.96 -3.96" />
      <path d="M14 14l3.5 3.5" />
      <path d="M14.04 18a3.5 3.5 0 1 0 3.96 -3.96" />
      <path d="M10 14l-3.5 3.5" />
      <path d="M6 14.04a3.5 3.5 0 1 0 3.96 3.96" />
    </svg>
    """
  end

  @doc """
  Renders the `drop_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.drop_circle />
      <TablerIcons.drop_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def drop_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.07 15.34c1.115 .88 2.74 .88 3.855 0c1.115 -.88 1.398 -2.388 .671 -3.575l-2.596 -3.765l-2.602 3.765c-.726 1.187 -.443 2.694 .672 3.575z" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_bolt />
      <TablerIcons.droplet_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.628 12.076a6.653 6.653 0 0 0 -.564 -1.199l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546c1.7 1.375 3.906 1.852 5.958 1.431" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_cancel />
      <TablerIcons.droplet_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.606 12.014a6.659 6.659 0 0 0 -.542 -1.137l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.154 7.154 0 0 0 4.826 1.572" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_check />
      <TablerIcons.droplet_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.967 13.594a6.568 6.568 0 0 0 -.903 -2.717l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.125 7.125 0 0 0 4.04 1.565" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_code />
      <TablerIcons.droplet_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.907 13.147a6.586 6.586 0 0 0 -.843 -2.27l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.123 7.123 0 0 0 3.99 1.561" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_cog />
      <TablerIcons.droplet_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.421 11.56a6.702 6.702 0 0 0 -.357 -.683l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.144 7.144 0 0 0 4.518 1.58" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_dollar />
      <TablerIcons.droplet_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.668 10.29l-4.493 -6.673c-.421 -.625 -1.288 -.803 -1.937 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.175 7.175 0 0 0 5.493 1.51" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_down />
      <TablerIcons.droplet_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.602 12.003a6.66 6.66 0 0 0 -.538 -1.126l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.159 7.159 0 0 0 4.972 1.564" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_exclamation />
      <TablerIcons.droplet_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.602 12.004a6.66 6.66 0 0 0 -.538 -1.127l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546c2.142 1.734 5.092 2.04 7.519 .919" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_filled />
      <TablerIcons.droplet_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.708 2.372a2.382 2.382 0 0 0 -.71 .686l-4.892 7.26c-1.981 3.314 -1.22 7.466 1.767 9.882c2.969 2.402 7.286 2.402 10.254 0c2.987 -2.416 3.748 -6.569 1.795 -9.836l-4.919 -7.306c-.722 -1.075 -2.192 -1.376 -3.295 -.686z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_half_2_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_half_2_filled />
      <TablerIcons.droplet_half_2_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_half_2_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M13.905 2.923l.098 .135l4.92 7.306a7.566 7.566 0 0 1 1.043 3.167l.024 .326c.007 .047 .01 .094 .01 .143l-.002 .06c.056 2.3 -.944 4.582 -2.87 6.14c-2.969 2.402 -7.286 2.402 -10.255 0c-1.904 -1.54 -2.904 -3.787 -2.865 -6.071a1.052 1.052 0 0 1 .013 -.333a7.66 7.66 0 0 1 .913 -3.176l.172 -.302l4.893 -7.26c.185 -.275 .426 -.509 .709 -.686c1.055 -.66 2.446 -.413 3.197 .55zm-2.06 1.107l-.077 .038l-.041 .03l-.037 .036l-.033 .042l-4.863 7.214a5.607 5.607 0 0 0 -.651 1.61h11.723a5.444 5.444 0 0 0 -.49 -1.313l-.141 -.251l-4.891 -7.261a.428 .428 0 0 0 -.5 -.145z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_half_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_half_2 />
      <TablerIcons.droplet_half_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_half_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.502 19.423c2.602 2.105 6.395 2.105 8.996 0c2.602 -2.105 3.262 -5.708 1.566 -8.546l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546z" />
      <path d="M5 14h14" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_half_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_half_filled />
      <TablerIcons.droplet_half_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_half_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.07 .003a2.41 2.41 0 0 1 1.825 .907l.108 .148l4.92 7.306c1.952 3.267 1.191 7.42 -1.796 9.836c-2.968 2.402 -7.285 2.402 -10.254 0c-2.917 -2.36 -3.711 -6.376 -1.901 -9.65l.134 -.232l4.893 -7.26c.185 -.275 .426 -.509 .709 -.686a2.426 2.426 0 0 1 1.066 -.36l.226 -.012zm-1 3.149l-4.206 6.24c-1.44 2.41 -.88 5.463 1.337 7.257a6.101 6.101 0 0 0 2.869 1.276v-14.773z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_half` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_half />
      <TablerIcons.droplet_half class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_half(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.502 19.423c2.602 2.105 6.395 2.105 8.996 0c2.602 -2.105 3.262 -5.708 1.566 -8.546l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546z" />
      <path d="M12 3v18" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_heart />
      <TablerIcons.droplet_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.288 11.282a6.734 6.734 0 0 0 -.224 -.405l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.117 7.117 0 0 0 3.824 1.548" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_minus />
      <TablerIcons.droplet_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.946 15.083a6.538 6.538 0 0 0 -.882 -4.206l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.163 7.163 0 0 0 5.089 1.555" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_off />
      <TablerIcons.droplet_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.963 14.938a6.54 6.54 0 0 0 -.899 -4.06l-4.89 -7.26c-.42 -.626 -1.287 -.804 -1.936 -.398a1.376 1.376 0 0 0 -.41 .397l-1.282 1.9m-1.625 2.415l-1.986 2.946c-1.695 2.837 -1.035 6.44 1.567 8.545c2.602 2.105 6.395 2.105 8.996 0a6.83 6.83 0 0 0 1.376 -1.499" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_pause />
      <TablerIcons.droplet_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.952 13.456a6.573 6.573 0 0 0 -.888 -2.579l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.176 7.176 0 0 0 5.517 1.507" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_pin />
      <TablerIcons.droplet_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.064 10.877l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.163 7.163 0 0 0 5.102 1.554" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_plus />
      <TablerIcons.droplet_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.602 12.004a6.66 6.66 0 0 0 -.538 -1.127l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.16 7.16 0 0 0 5.033 1.56" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_question />
      <TablerIcons.droplet_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.064 10.877l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546c2.203 1.782 5.259 2.056 7.723 .82" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_search />
      <TablerIcons.droplet_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.064 10.877l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.13 7.13 0 0 0 4.168 1.572" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_share />
      <TablerIcons.droplet_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.884 13.025a6.591 6.591 0 0 0 -.82 -2.148l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.125 7.125 0 0 0 4.498 1.58" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_star />
      <TablerIcons.droplet_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.496 10.034l-4.321 -6.417c-.421 -.625 -1.288 -.803 -1.937 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.106 7.106 0 0 0 3.547 1.517" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_up />
      <TablerIcons.droplet_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.6 11.998a6.66 6.66 0 0 0 -.536 -1.12l-4.89 -7.26c-.42 -.626 -1.287 -.804 -1.936 -.398a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.16 7.16 0 0 0 5.002 1.562" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet_x />
      <TablerIcons.droplet_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.953 13.467a6.572 6.572 0 0 0 -.889 -2.59l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546a7.179 7.179 0 0 0 5.633 1.49" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `droplet` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplet />
      <TablerIcons.droplet class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplet(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.502 19.423c2.602 2.105 6.395 2.105 8.996 0c2.602 -2.105 3.262 -5.708 1.566 -8.546l-4.89 -7.26c-.42 -.625 -1.287 -.803 -1.936 -.397a1.376 1.376 0 0 0 -.41 .397l-4.893 7.26c-1.695 2.838 -1.035 6.441 1.567 8.546z" />
    </svg>
    """
  end

  @doc """
  Renders the `droplets` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.droplets />
      <TablerIcons.droplets class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def droplets(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.072 20.3a2.999 2.999 0 0 0 3.856 0a3.002 3.002 0 0 0 .67 -3.798l-2.095 -3.227a.6 .6 0 0 0 -1.005 0l-2.098 3.227a3.003 3.003 0 0 0 .671 3.798z" />
      <path d="M16.072 20.3a2.999 2.999 0 0 0 3.856 0a3.002 3.002 0 0 0 .67 -3.798l-2.095 -3.227a.6 .6 0 0 0 -1.005 0l-2.098 3.227a3.003 3.003 0 0 0 .671 3.798z" />
      <path d="M10.072 10.3a2.999 2.999 0 0 0 3.856 0a3.002 3.002 0 0 0 .67 -3.798l-2.095 -3.227a.6 .6 0 0 0 -1.005 0l-2.098 3.227a3.003 3.003 0 0 0 .671 3.798z" />
    </svg>
    """
  end

  @doc """
  Renders the `dual_screen` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.dual_screen />
      <TablerIcons.dual_screen class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def dual_screen(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4l8 3v15l-8 -3z" />
      <path d="M13 19h6v-15h-14" />
    </svg>
    """
  end

  @doc """
  Renders the `e_passport` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.e_passport />
      <TablerIcons.e_passport class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def e_passport(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 5m0 2a2 2 0 0 1 2 -2h16a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-16a2 2 0 0 1 -2 -2z" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M9 12h-7" />
      <path d="M15 12h7" />
    </svg>
    """
  end

  @doc """
  Renders the `ear_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ear_off />
      <TablerIcons.ear_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ear_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 10c0 -1.146 .277 -2.245 .78 -3.219m1.792 -2.208a7 7 0 0 1 10.428 9.027a10 10 0 0 1 -.633 .762m-2.045 1.96a8 8 0 0 0 -1.322 2.278a4.5 4.5 0 0 1 -6.8 1.4" />
      <path d="M11.42 7.414a3 3 0 0 1 4.131 4.13" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ear` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ear />
      <TablerIcons.ear class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ear(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 10a7 7 0 1 1 13 3.6a10 10 0 0 1 -2 2a8 8 0 0 0 -2 3a4.5 4.5 0 0 1 -6.8 1.4" />
      <path d="M10 10a3 3 0 1 1 5 2.2" />
    </svg>
    """
  end

  @doc """
  Renders the `ease_in_control_point` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ease_in_control_point />
      <TablerIcons.ease_in_control_point class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ease_in_control_point(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19c8 0 18 -16 18 -16" />
      <path d="M17 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0z" />
      <path d="M17 19h-2" />
      <path d="M12 19h-2" />
    </svg>
    """
  end

  @doc """
  Renders the `ease_in_out_control_points` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ease_in_out_control_points />
      <TablerIcons.ease_in_out_control_points class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ease_in_out_control_points(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 20a2 2 0 1 0 4 0a2 2 0 0 0 -4 0z" />
      <path d="M17 20h-2" />
      <path d="M7 4a2 2 0 1 1 -4 0a2 2 0 0 1 4 0z" />
      <path d="M7 4h2" />
      <path d="M14 4h-2" />
      <path d="M12 20h-2" />
      <path d="M3 20c8 0 10 -16 18 -16" />
    </svg>
    """
  end

  @doc """
  Renders the `ease_in_out` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ease_in_out />
      <TablerIcons.ease_in_out class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ease_in_out(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 20c8 0 10 -16 18 -16" />
    </svg>
    """
  end

  @doc """
  Renders the `ease_in` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ease_in />
      <TablerIcons.ease_in class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ease_in(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 20c8 0 18 -16 18 -16" />
    </svg>
    """
  end

  @doc """
  Renders the `ease_out_control_point` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ease_out_control_point />
      <TablerIcons.ease_out_control_point class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ease_out_control_point(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21s10 -16 18 -16" />
      <path d="M7 5a2 2 0 1 1 -4 0a2 2 0 0 1 4 0z" />
      <path d="M7 5h2" />
      <path d="M14 5h-2" />
    </svg>
    """
  end

  @doc """
  Renders the `ease_out` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ease_out />
      <TablerIcons.ease_out class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ease_out(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 20s10 -16 18 -16" />
    </svg>
    """
  end

  @doc """
  Renders the `edit_circle_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.edit_circle_off />
      <TablerIcons.edit_circle_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def edit_circle_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.507 10.498l-1.507 1.502v3h3l1.493 -1.498m2 -2.01l4.89 -4.907a2.1 2.1 0 0 0 -2.97 -2.97l-4.913 4.896" />
      <path d="M16 5l3 3" />
      <path d="M7.476 7.471a7 7 0 0 0 2.524 13.529a7 7 0 0 0 6.53 -4.474" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `edit_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.edit_circle />
      <TablerIcons.edit_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def edit_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 15l8.385 -8.415a2.1 2.1 0 0 0 -2.97 -2.97l-8.415 8.385v3h3z" />
      <path d="M16 5l3 3" />
      <path d="M9 7.07a7 7 0 0 0 1 13.93a7 7 0 0 0 6.929 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `edit_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.edit_off />
      <TablerIcons.edit_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def edit_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 7h-1a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-1" />
      <path d="M10.507 10.498l-1.507 1.502v3h3l1.493 -1.498m2 -2.01l4.89 -4.907a2.1 2.1 0 0 0 -2.97 -2.97l-4.913 4.896" />
      <path d="M16 5l3 3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `edit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.edit />
      <TablerIcons.edit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def edit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 7h-1a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-1" />
      <path d="M20.385 6.585a2.1 2.1 0 0 0 -2.97 -2.97l-8.415 8.385v3h3l8.385 -8.415z" />
      <path d="M16 5l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `egg_cracked` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.egg_cracked />
      <TablerIcons.egg_cracked class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def egg_cracked(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 14.083c0 4.154 -2.966 6.74 -7 6.917c-4.2 0 -7 -2.763 -7 -6.917c0 -5.538 3.5 -11.09 7 -11.083c3.5 .007 7 5.545 7 11.083z" />
      <path d="M12 3l-1.5 5l3.5 2.5l-2 3.5" />
    </svg>
    """
  end

  @doc """
  Renders the `egg_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.egg_filled />
      <TablerIcons.egg_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def egg_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12.002 2c-4.173 -.008 -8.002 6.058 -8.002 12.083c0 4.708 3.25 7.917 8 7.917c4.727 -.206 8 -3.328 8 -7.917c0 -6.02 -3.825 -12.075 -7.998 -12.083z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `egg_fried` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.egg_fried />
      <TablerIcons.egg_fried class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def egg_fried(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M14 3a5 5 0 0 1 4.872 6.13a3 3 0 0 1 .178 5.681a3 3 0 1 1 -4.684 3.626a5 5 0 1 1 -8.662 -5a5 5 0 1 1 4.645 -8.856a4.982 4.982 0 0 1 3.651 -1.585z" />
    </svg>
    """
  end

  @doc """
  Renders the `egg_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.egg_off />
      <TablerIcons.egg_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def egg_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.927 17.934c-1.211 1.858 -3.351 2.953 -5.927 3.066c-4.2 0 -7 -2.763 -7 -6.917c0 -2.568 .753 -5.14 1.91 -7.158" />
      <path d="M8.642 4.628c1.034 -1.02 2.196 -1.63 3.358 -1.628c3.5 .007 7 5.545 7 11.083c0 .298 -.015 .587 -.045 .868" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `egg` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.egg />
      <TablerIcons.egg class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def egg(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 14.083c0 4.154 -2.966 6.74 -7 6.917c-4.2 0 -7 -2.763 -7 -6.917c0 -5.538 3.5 -11.09 7 -11.083c3.5 .007 7 5.545 7 11.083z" />
    </svg>
    """
  end

  @doc """
  Renders the `eggs` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eggs />
      <TablerIcons.eggs class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eggs(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 22c-3 0 -4.868 -2.118 -5 -5c0 -3 2 -5 5 -5c4 0 8.01 2.5 8 5c0 2.5 -4 5 -8 5z" />
      <path d="M8 18c-3.03 -.196 -5 -2.309 -5 -5.38c0 -4.307 2.75 -8.625 5.5 -8.62c2.614 0 5.248 3.915 5.5 8" />
    </svg>
    """
  end

  @doc """
  Renders the `elevator_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.elevator_off />
      <TablerIcons.elevator_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def elevator_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h10a1 1 0 0 1 1 1v10m0 4a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1v-14" />
      <path d="M12 8l2 2" />
      <path d="M10 14l2 2l2 -2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `elevator` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.elevator />
      <TablerIcons.elevator class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def elevator(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4m0 1a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1z" />
      <path d="M10 10l2 -2l2 2" />
      <path d="M10 14l2 2l2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `emergency_bed` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.emergency_bed />
      <TablerIcons.emergency_bed class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def emergency_bed(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M8 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M4 8l2.1 2.8a3 3 0 0 0 2.4 1.2h11.5" />
      <path d="M10 6h4" />
      <path d="M12 4v4" />
      <path d="M12 12v2l-2.5 2.5" />
      <path d="M14.5 16.5l-2.5 -2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `empathize_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.empathize_off />
      <TablerIcons.empathize_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def empathize_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8a2.5 2.5 0 1 0 -2.5 -2.5" />
      <path d="M12.317 12.315l-.317 .317l-.728 -.727a3.088 3.088 0 1 0 -4.367 4.367l5.095 5.096l4.689 -4.69m1.324 -2.673a3.087 3.087 0 0 0 -3.021 -3.018" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `empathize` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.empathize />
      <TablerIcons.empathize class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def empathize(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5.5m-2.5 0a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0 -5 0" />
      <path d="M12 21.368l5.095 -5.096a3.088 3.088 0 1 0 -4.367 -4.367l-.728 .727l-.728 -.727a3.088 3.088 0 1 0 -4.367 4.367l5.095 5.096z" />
    </svg>
    """
  end

  @doc """
  Renders the `emphasis` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.emphasis />
      <TablerIcons.emphasis class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def emphasis(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 5h-8v10h8m-1 -5h-7" />
      <path d="M6 20l0 .01" />
      <path d="M10 20l0 .01" />
      <path d="M14 20l0 .01" />
      <path d="M18 20l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `engine_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.engine_off />
      <TablerIcons.engine_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def engine_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 10v6" />
      <path d="M12 5v3" />
      <path d="M10 5h4" />
      <path d="M5 13h-2" />
      <path d="M16 16h-1v2a1 1 0 0 1 -1 1h-3.465a1 1 0 0 1 -.832 -.445l-1.703 -2.555h-2v-6h2l.99 -.99m3.01 -1.01h1.382a1 1 0 0 1 .894 .553l1.448 2.894a1 1 0 0 0 .894 .553h1.382v-2h2a1 1 0 0 1 1 1v6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `engine` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.engine />
      <TablerIcons.engine class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def engine(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 10v6" />
      <path d="M12 5v3" />
      <path d="M10 5h4" />
      <path d="M5 13h-2" />
      <path d="M6 10h2l2 -2h3.382a1 1 0 0 1 .894 .553l1.448 2.894a1 1 0 0 0 .894 .553h1.382v-2h2a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1h-2v-2h-3v2a1 1 0 0 1 -1 1h-3.465a1 1 0 0 1 -.832 -.445l-1.703 -2.555h-2v-6z" />
    </svg>
    """
  end

  @doc """
  Renders the `equal_double` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.equal_double />
      <TablerIcons.equal_double class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def equal_double(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 10h7" />
      <path d="M3 14h7" />
      <path d="M14 10h7" />
      <path d="M14 14h7" />
    </svg>
    """
  end

  @doc """
  Renders the `equal_not` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.equal_not />
      <TablerIcons.equal_not class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def equal_not(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 10h14" />
      <path d="M5 14h14" />
      <path d="M5 19l14 -14" />
    </svg>
    """
  end

  @doc """
  Renders the `equal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.equal />
      <TablerIcons.equal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def equal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 10h14" />
      <path d="M5 14h14" />
    </svg>
    """
  end

  @doc """
  Renders the `eraser_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eraser_off />
      <TablerIcons.eraser_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eraser_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M19 20h-10.5l-4.21 -4.3a1 1 0 0 1 0 -1.41l5 -4.993m2.009 -2.01l3 -3a1 1 0 0 1 1.41 0l5 5a1 1 0 0 1 0 1.41c-1.417 1.431 -2.406 2.432 -2.97 3m-2.02 2.043l-4.211 4.256" />
      <path d="M18 13.3l-6.3 -6.3" />
    </svg>
    """
  end

  @doc """
  Renders the `eraser` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eraser />
      <TablerIcons.eraser class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eraser(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 20h-10.5l-4.21 -4.3a1 1 0 0 1 0 -1.41l10 -10a1 1 0 0 1 1.41 0l5 5a1 1 0 0 1 0 1.41l-9.2 9.3" />
      <path d="M18 13.3l-6.3 -6.3" />
    </svg>
    """
  end

  @doc """
  Renders the `error_404_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.error_404_off />
      <TablerIcons.error_404_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def error_404_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7v4a1 1 0 0 0 1 1h3" />
      <path d="M7 7v10" />
      <path d="M10 10v6a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2m0 -4v-2a1 1 0 0 0 -1 -1h-2" />
      <path d="M17 7v4a1 1 0 0 0 1 1h3" />
      <path d="M21 7v10" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `error_404` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.error_404 />
      <TablerIcons.error_404 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def error_404(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7v4a1 1 0 0 0 1 1h3" />
      <path d="M7 7v10" />
      <path d="M10 8v8a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-8a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1z" />
      <path d="M17 7v4a1 1 0 0 0 1 1h3" />
      <path d="M21 7v10" />
    </svg>
    """
  end

  @doc """
  Renders the `escalator_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.escalator_down />
      <TablerIcons.escalator_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def escalator_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.5 7h2.733a2 2 0 0 1 1.337 .513l9.43 8.487h1.5a2.5 2.5 0 1 1 0 5h-2.733a2 2 0 0 1 -1.337 -.513l-9.43 -8.487h-1.5a2.5 2.5 0 1 1 0 -5z" />
      <path d="M18 3v7" />
      <path d="M15 7l3 3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `escalator_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.escalator_up />
      <TablerIcons.escalator_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def escalator_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.5 7h-2.672a2 2 0 0 0 -1.414 .586l-8.414 8.414h-2.5a2.5 2.5 0 1 0 0 5h3.672a2 2 0 0 0 1.414 -.586l8.414 -8.414h1.5a2.5 2.5 0 1 0 0 -5z" />
      <path d="M6 10v-7" />
      <path d="M3 6l3 -3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `escalator` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.escalator />
      <TablerIcons.escalator class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def escalator(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.5 5h-2.672a2 2 0 0 0 -1.414 .586l-8.414 8.414h-2.5a2.5 2.5 0 1 0 0 5h3.672a2 2 0 0 0 1.414 -.586l8.414 -8.414h1.5a2.5 2.5 0 0 0 0 -5z" />
    </svg>
    """
  end

  @doc """
  Renders the `exchange_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.exchange_off />
      <TablerIcons.exchange_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def exchange_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 8v5c0 .594 -.104 1.164 -.294 1.692m-1.692 2.298a4.978 4.978 0 0 1 -3.014 1.01h-3l3 -3" />
      <path d="M14 21l-3 -3" />
      <path d="M5 16v-5c0 -1.632 .782 -3.082 1.992 -4m3.008 -1h3l-3 -3" />
      <path d="M11.501 7.499l1.499 -1.499" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `exchange` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.exchange />
      <TablerIcons.exchange class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def exchange(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 8v5a5 5 0 0 1 -5 5h-3l3 -3m0 6l-3 -3" />
      <path d="M5 16v-5a5 5 0 0 1 5 -5h3l-3 -3m0 6l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `exclamation_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.exclamation_circle />
      <TablerIcons.exclamation_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def exclamation_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 9v4" />
      <path d="M12 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `exclamation_mark_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.exclamation_mark_off />
      <TablerIcons.exclamation_mark_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def exclamation_mark_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19v.01" />
      <path d="M12 15v-3m0 -4v-3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `exclamation_mark` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.exclamation_mark />
      <TablerIcons.exclamation_mark class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def exclamation_mark(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19v.01" />
      <path d="M12 15v-10" />
    </svg>
    """
  end

  @doc """
  Renders the `explicit_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.explicit_off />
      <TablerIcons.explicit_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def explicit_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 8h-2m-2 2v6h4" />
      <path d="M8 4h10a2 2 0 0 1 2 2v10m-.586 3.414a2 2 0 0 1 -1.414 .586h-12a2 2 0 0 1 -2 -2v-12c0 -.547 .22 -1.043 .576 -1.405" />
      <path d="M12 12h-2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `explicit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.explicit />
      <TablerIcons.explicit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def explicit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 1a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1z" />
      <path d="M14 8h-4v8h4" />
      <path d="M14 12h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `exposure_0` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.exposure_0 />
      <TablerIcons.exposure_0 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def exposure_0(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19a4 4 0 0 0 4 -4v-6a4 4 0 1 0 -8 0v6a4 4 0 0 0 4 4z" />
    </svg>
    """
  end

  @doc """
  Renders the `exposure_minus_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.exposure_minus_1 />
      <TablerIcons.exposure_minus_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def exposure_minus_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h6" />
      <path d="M18 19v-14l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `exposure_minus_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.exposure_minus_2 />
      <TablerIcons.exposure_minus_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def exposure_minus_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9a4 4 0 1 1 8 0c0 1.098 -.564 2.025 -1.159 2.815l-6.841 7.185h8" />
      <path d="M3 12h6" />
    </svg>
    """
  end

  @doc """
  Renders the `exposure_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.exposure_off />
      <TablerIcons.exposure_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def exposure_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.6 19.4l7.4 -7.4m2 -2l5.4 -5.4" />
      <path d="M8 4h10a2 2 0 0 1 2 2v10m-.586 3.414a2 2 0 0 1 -1.414 .586h-12a2 2 0 0 1 -2 -2v-12c0 -.547 .22 -1.043 .576 -1.405" />
      <path d="M7 9h2v2" />
      <path d="M13 16h3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `exposure_plus_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.exposure_plus_1 />
      <TablerIcons.exposure_plus_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def exposure_plus_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h6" />
      <path d="M6 9v6" />
      <path d="M18 19v-14l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `exposure_plus_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.exposure_plus_2 />
      <TablerIcons.exposure_plus_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def exposure_plus_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9a4 4 0 1 1 8 0c0 1.098 -.564 2.025 -1.159 2.815l-6.841 7.185h8" />
      <path d="M3 12h6" />
      <path d="M6 9v6" />
    </svg>
    """
  end

  @doc """
  Renders the `exposure` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.exposure />
      <TablerIcons.exposure class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def exposure(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M4.6 19.4l14.8 -14.8" />
      <path d="M7 9h4m-2 -2v4" />
      <path d="M13 16l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `external_link_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.external_link_off />
      <TablerIcons.external_link_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def external_link_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 7h-1a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-1" />
      <path d="M10 14l2 -2m2.007 -2.007l6 -6" />
      <path d="M15 4h5v5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `external_link` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.external_link />
      <TablerIcons.external_link class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def external_link(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 6h-6a2 2 0 0 0 -2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-6" />
      <path d="M11 13l9 -9" />
      <path d="M15 4h5v5" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_bolt />
      <TablerIcons.eye_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M13.1 17.936a9.28 9.28 0 0 1 -1.1 .064c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_cancel />
      <TablerIcons.eye_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 18c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_check />
      <TablerIcons.eye_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M11.102 17.957c-3.204 -.307 -5.904 -2.294 -8.102 -5.957c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6a19.5 19.5 0 0 1 -.663 1.032" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_closed` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_closed />
      <TablerIcons.eye_closed class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_closed(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 9c-2.4 2.667 -5.4 4 -9 4c-3.6 0 -6.6 -1.333 -9 -4" />
      <path d="M3 15l2.5 -3.8" />
      <path d="M21 14.976l-2.492 -3.776" />
      <path d="M9 17l.5 -4" />
      <path d="M15 17l-.5 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_code />
      <TablerIcons.eye_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M11.11 17.958c-3.209 -.307 -5.91 -2.293 -8.11 -5.958c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6c-.21 .352 -.427 .688 -.647 1.008" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_cog />
      <TablerIcons.eye_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 18c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_discount` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_discount />
      <TablerIcons.eye_discount class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_discount(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 18c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6" />
      <path d="M16 21l5 -5" />
      <path d="M21 21v.01" />
      <path d="M16 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_dollar />
      <TablerIcons.eye_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M13.193 17.924c-.39 .05 -.788 .076 -1.193 .076c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.005 0 5.592 1.394 7.761 4.181" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_down />
      <TablerIcons.eye_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 18c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_edit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_edit />
      <TablerIcons.eye_edit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_edit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M11.192 17.966c-3.242 -.28 -5.972 -2.269 -8.192 -5.966c2.4 -4 5.4 -6 9 -6c3.326 0 6.14 1.707 8.442 5.122" />
      <path d="M18.42 15.61a2.1 2.1 0 0 1 2.97 2.97l-3.39 3.42h-3v-3l3.42 -3.39z" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_exclamation />
      <TablerIcons.eye_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M15.03 17.478a8.797 8.797 0 0 1 -3.03 .522c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6a20.48 20.48 0 0 1 -.258 .419" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_filled />
      <TablerIcons.eye_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 4c4.29 0 7.863 2.429 10.665 7.154l.22 .379l.045 .1l.03 .083l.014 .055l.014 .082l.011 .1v.11l-.014 .111a.992 .992 0 0 1 -.026 .11l-.039 .108l-.036 .075l-.016 .03c-2.764 4.836 -6.3 7.38 -10.555 7.499l-.313 .004c-4.396 0 -8.037 -2.549 -10.868 -7.504a1 1 0 0 1 0 -.992c2.831 -4.955 6.472 -7.504 10.868 -7.504zm0 5a3 3 0 1 0 0 6a3 3 0 0 0 0 -6z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `eye_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_heart />
      <TablerIcons.eye_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.905 11.39a2 2 0 1 0 -2.855 2.37" />
      <path d="M9.992 17.779c-2.722 -.621 -5.053 -2.547 -6.992 -5.779c2.4 -4 5.4 -6 9 -6c3.332 0 6.15 1.714 8.454 5.14" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_minus />
      <TablerIcons.eye_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 18c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6c-.713 1.188 -1.478 2.199 -2.296 3.034" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_off />
      <TablerIcons.eye_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.585 10.587a2 2 0 0 0 2.829 2.828" />
      <path d="M16.681 16.673a8.717 8.717 0 0 1 -4.681 1.327c-3.6 0 -6.6 -2 -9 -6c1.272 -2.12 2.712 -3.678 4.32 -4.674m2.86 -1.146a9.055 9.055 0 0 1 1.82 -.18c3.6 0 6.6 2 9 6c-.666 1.11 -1.379 2.067 -2.138 2.87" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_pause />
      <TablerIcons.eye_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M13.022 17.945a9.308 9.308 0 0 1 -1.022 .055c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6c-.195 .325 -.394 .636 -.596 .935" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_pin />
      <TablerIcons.eye_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 18c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.362 0 6.202 1.745 8.517 5.234" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_plus />
      <TablerIcons.eye_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 18c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_question />
      <TablerIcons.eye_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M14.071 17.764a8.989 8.989 0 0 1 -2.071 .236c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.346 0 6.173 1.727 8.482 5.182" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_search />
      <TablerIcons.eye_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 18c-.328 0 -.652 -.017 -.97 -.05c-3.172 -.332 -5.85 -2.315 -8.03 -5.95c2.4 -4 5.4 -6 9 -6c3.465 0 6.374 1.853 8.727 5.558" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_share />
      <TablerIcons.eye_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12.597 17.981a9.467 9.467 0 0 1 -.597 .019c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6c-.205 .342 -.415 .67 -.63 .983" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_star />
      <TablerIcons.eye_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M9.608 17.682c-2.558 -.71 -4.76 -2.603 -6.608 -5.682c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_table` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_table />
      <TablerIcons.eye_table class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_table(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 18h-.011" />
      <path d="M12 18h-.011" />
      <path d="M16 18h-.011" />
      <path d="M4 3h16" />
      <path d="M5 3v17a1 1 0 0 0 1 1h12a1 1 0 0 0 1 -1v-17" />
      <path d="M14 7h-4" />
      <path d="M9 15h1" />
      <path d="M14 15h1" />
      <path d="M12 11v-4" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_up />
      <TablerIcons.eye_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 18c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6c-.09 .15 -.18 .295 -.27 .439" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `eye_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye_x />
      <TablerIcons.eye_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M13.048 17.942a9.298 9.298 0 0 1 -1.048 .058c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6a17.986 17.986 0 0 1 -1.362 1.975" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `eye` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eye />
      <TablerIcons.eye class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eye(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M21 12c-2.4 4 -5.4 6 -9 6c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6" />
    </svg>
    """
  end

  @doc """
  Renders the `eyeglass_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eyeglass_2 />
      <TablerIcons.eyeglass_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eyeglass_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h-2l-3 10v2.5" />
      <path d="M16 4h2l3 10v2.5" />
      <path d="M10 16l4 0" />
      <path d="M17.5 16.5m-3.5 0a3.5 3.5 0 1 0 7 0a3.5 3.5 0 1 0 -7 0" />
      <path d="M6.5 16.5m-3.5 0a3.5 3.5 0 1 0 7 0a3.5 3.5 0 1 0 -7 0" />
    </svg>
    """
  end

  @doc """
  Renders the `eyeglass_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eyeglass_off />
      <TablerIcons.eyeglass_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eyeglass_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.536 5.546l-2.536 8.454" />
      <path d="M16 4h2l3 10" />
      <path d="M10 16h4" />
      <path d="M19.426 19.423a3.5 3.5 0 0 1 -5.426 -2.923v-2.5m4 0h3v2.5c0 .157 -.01 .312 -.03 .463" />
      <path d="M10 16.5a3.5 3.5 0 0 1 -7 0v-2.5h7v2.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `eyeglass` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.eyeglass />
      <TablerIcons.eyeglass class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def eyeglass(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h-2l-3 10" />
      <path d="M16 4h2l3 10" />
      <path d="M10 16l4 0" />
      <path d="M21 16.5a3.5 3.5 0 0 1 -7 0v-2.5h7v2.5" />
      <path d="M10 16.5a3.5 3.5 0 0 1 -7 0v-2.5h7v2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `face_id_error` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.face_id_error />
      <TablerIcons.face_id_error class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def face_id_error(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v-2a2 2 0 0 1 2 -2h2" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2a2 2 0 0 0 2 -2v-2" />
      <path d="M9 10h.01" />
      <path d="M15 10h.01" />
      <path d="M9.5 15.05a3.5 3.5 0 0 1 5 0" />
    </svg>
    """
  end

  @doc """
  Renders the `face_id` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.face_id />
      <TablerIcons.face_id class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def face_id(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v-2a2 2 0 0 1 2 -2h2" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2a2 2 0 0 0 2 -2v-2" />
      <path d="M9 10l.01 0" />
      <path d="M15 10l.01 0" />
      <path d="M9.5 15a3.5 3.5 0 0 0 5 0" />
    </svg>
    """
  end

  @doc """
  Renders the `face_mask_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.face_mask_off />
      <TablerIcons.face_mask_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def face_mask_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 14.5h-.222c-1.535 0 -2.778 -1.12 -2.778 -2.5s1.243 -2.5 2.778 -2.5h.222" />
      <path d="M19 14.5h.222c1.534 0 2.778 -1.12 2.778 -2.5s-1.244 -2.5 -2.778 -2.5h-.222" />
      <path d="M9 10h1m4 0h1" />
      <path d="M9 14h5" />
      <path d="M19 15v-6.49a2 2 0 0 0 -1.45 -1.923l-5 -1.429a2 2 0 0 0 -1.1 0l-1.788 .511m-3.118 .891l-.094 .027a2 2 0 0 0 -1.45 1.922v6.982a2 2 0 0 0 1.45 1.923l5 1.429a2 2 0 0 0 1.1 0l4.899 -1.4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `face_mask` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.face_mask />
      <TablerIcons.face_mask class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def face_mask(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 14.5h-.222c-1.535 0 -2.778 -1.12 -2.778 -2.5s1.243 -2.5 2.778 -2.5h.222" />
      <path d="M19 14.5h.222c1.534 0 2.778 -1.12 2.778 -2.5s-1.244 -2.5 -2.778 -2.5h-.222" />
      <path d="M9 10h6" />
      <path d="M9 14h6" />
      <path d="M12.55 18.843l5 -1.429a2 2 0 0 0 1.45 -1.923v-6.981a2 2 0 0 0 -1.45 -1.923l-5 -1.429a2 2 0 0 0 -1.1 0l-5 1.429a2 2 0 0 0 -1.45 1.922v6.982a2 2 0 0 0 1.45 1.923l5 1.429a2 2 0 0 0 1.1 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `fall` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fall />
      <TablerIcons.fall class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fall(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 21l1 -5l-1 -4l-3 -4h4l3 -3" />
      <path d="M6 16l-1 -4l3 -4" />
      <path d="M6 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M13.5 12h2.5l4 2" />
    </svg>
    """
  end

  @doc """
  Renders the `feather_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.feather_off />
      <TablerIcons.feather_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def feather_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20l8 -8" />
      <path d="M14 5v5h5" />
      <path d="M9 11v4h4" />
      <path d="M6 13v5h5" />
      <path d="M6 13l3.502 -3.502m2.023 -2.023l2.475 -2.475" />
      <path d="M19 10c.638 -.636 1 -1.515 1 -2.486a3.515 3.515 0 0 0 -3.517 -3.514c-.97 0 -1.847 .367 -2.483 1" />
      <path d="M11 18l3.499 -3.499m2.008 -2.008l2.493 -2.493" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `feather` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.feather />
      <TablerIcons.feather class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def feather(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20l10 -10m0 -5v5h5m-9 -1v5h5m-9 -1v5h5m-5 -5l4 -4l4 -4" />
      <path d="M19 10c.638 -.636 1 -1.515 1 -2.486a3.515 3.515 0 0 0 -3.517 -3.514c-.97 0 -1.847 .367 -2.483 1m-3 13l4 -4l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `fence_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fence_off />
      <TablerIcons.fence_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fence_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12h-8v4h12m4 0v-4h-4" />
      <path d="M6 16v4h4v-4" />
      <path d="M10 12v-2m0 -4l-2 -2m-2 2v6" />
      <path d="M14 16v4h4v-2" />
      <path d="M18 12v-6l-2 -2l-2 2v4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `fence` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fence />
      <TablerIcons.fence class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fence(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12v4h16v-4z" />
      <path d="M6 16v4h4v-4m0 -4v-6l-2 -2l-2 2v6" />
      <path d="M14 16v4h4v-4m0 -4v-6l-2 -2l-2 2v6" />
    </svg>
    """
  end

  @doc """
  Renders the `fidget_spinner` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fidget_spinner />
      <TablerIcons.fidget_spinner class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fidget_spinner(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 16v.01" />
      <path d="M6 16v.01" />
      <path d="M12 5v.01" />
      <path d="M12 12v.01" />
      <path d="M12 1a4 4 0 0 1 2.001 7.464l.001 .072a3.998 3.998 0 0 1 1.987 3.758l.22 .128a3.978 3.978 0 0 1 1.591 -.417l.2 -.005a4 4 0 1 1 -3.994 3.77l-.28 -.16c-.522 .25 -1.108 .39 -1.726 .39c-.619 0 -1.205 -.14 -1.728 -.391l-.279 .16l.007 .231a4 4 0 1 1 -2.212 -3.579l.222 -.129a3.998 3.998 0 0 1 1.988 -3.756l.002 -.071a4 4 0 0 1 -1.995 -3.265l-.005 -.2a4 4 0 0 1 4 -4z" />
    </svg>
    """
  end

  @doc """
  Renders the `file_3d` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_3d />
      <TablerIcons.file_3d class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_3d(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M12 13.5l4 -1.5" />
      <path d="M8 11.846l4 1.654v4.5l4 -1.846v-4.308l-4 -1.846z" />
      <path d="M8 12v4.2l4 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `file_alert` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_alert />
      <TablerIcons.file_alert class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_alert(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M12 17l.01 0" />
      <path d="M12 11l0 3" />
    </svg>
    """
  end

  @doc """
  Renders the `file_analytics` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_analytics />
      <TablerIcons.file_analytics class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_analytics(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M9 17l0 -5" />
      <path d="M12 17l0 -1" />
      <path d="M15 17l0 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `file_arrow_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_arrow_left />
      <TablerIcons.file_arrow_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_arrow_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M15 15h-6" />
      <path d="M11.5 17.5l-2.5 -2.5l2.5 -2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `file_arrow_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_arrow_right />
      <TablerIcons.file_arrow_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_arrow_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M9 15h6" />
      <path d="M12.5 17.5l2.5 -2.5l-2.5 -2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `file_barcode` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_barcode />
      <TablerIcons.file_barcode class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_barcode(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M8 13h1v3h-1z" />
      <path d="M12 13v3" />
      <path d="M15 13h1v3h-1z" />
    </svg>
    """
  end

  @doc """
  Renders the `file_broken` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_broken />
      <TablerIcons.file_broken class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_broken(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 7v-2a2 2 0 0 1 2 -2h7l5 5v2" />
      <path d="M19 19a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2" />
      <path d="M5 16h.01" />
      <path d="M5 13h.01" />
      <path d="M5 10h.01" />
      <path d="M19 13h.01" />
      <path d="M19 16h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `file_certificate` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_certificate />
      <TablerIcons.file_certificate class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_certificate(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 8v-3a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-5" />
      <path d="M6 14m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M4.5 17l-1.5 5l3 -1.5l3 1.5l-1.5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `file_chart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_chart />
      <TablerIcons.file_chart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_chart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M12 10v4h4" />
      <path d="M12 14m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `file_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_check />
      <TablerIcons.file_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M9 15l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `file_code_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_code_2 />
      <TablerIcons.file_code_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_code_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12h-1v5h1" />
      <path d="M14 12h1v5h-1" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
    </svg>
    """
  end

  @doc """
  Renders the `file_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_code />
      <TablerIcons.file_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M10 13l-1 2l1 2" />
      <path d="M14 13l1 2l-1 2" />
    </svg>
    """
  end

  @doc """
  Renders the `file_cv` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_cv />
      <TablerIcons.file_cv class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_cv(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M11 12.5a1.5 1.5 0 0 0 -3 0v3a1.5 1.5 0 0 0 3 0" />
      <path d="M13 11l1.5 6l1.5 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_database` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_database />
      <TablerIcons.file_database class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_database(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12.75m-4 0a4 1.75 0 1 0 8 0a4 1.75 0 1 0 -8 0" />
      <path d="M8 12.5v3.75c0 .966 1.79 1.75 4 1.75s4 -.784 4 -1.75v-3.75" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
    </svg>
    """
  end

  @doc """
  Renders the `file_delta` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_delta />
      <TablerIcons.file_delta class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_delta(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M9 17h6l-3 -6z" />
    </svg>
    """
  end

  @doc """
  Renders the `file_description` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_description />
      <TablerIcons.file_description class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_description(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M9 17h6" />
      <path d="M9 13h6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_diff` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_diff />
      <TablerIcons.file_diff class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_diff(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M12 10l0 4" />
      <path d="M10 12l4 0" />
      <path d="M10 17l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `file_digit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_digit />
      <TablerIcons.file_digit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_digit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M9 12m0 1a1 1 0 0 1 1 -1h1a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-1a1 1 0 0 1 -1 -1z" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M15 12v5" />
    </svg>
    """
  end

  @doc """
  Renders the `file_dislike` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_dislike />
      <TablerIcons.file_dislike class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_dislike(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 14m0 1a1 1 0 0 1 1 -1h1a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-1a1 1 0 0 1 -1 -1z" />
      <path d="M6 15a1 1 0 0 1 1 -1h3.756a1 1 0 0 1 .958 .713l1.2 3c.09 .303 .133 .63 -.056 .884c-.188 .254 -.542 .403 -.858 .403h-2v2.467a1.1 1.1 0 0 1 -2.015 .61l-1.985 -3.077v-4z" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 11v-6a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `file_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_dollar />
      <TablerIcons.file_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M14 11h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M12 17v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `file_dots` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_dots />
      <TablerIcons.file_dots class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_dots(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M9 14v.01" />
      <path d="M12 14v.01" />
      <path d="M15 14v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `file_download` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_download />
      <TablerIcons.file_download class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_download(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M12 17v-6" />
      <path d="M9.5 14.5l2.5 2.5l2.5 -2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `file_euro` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_euro />
      <TablerIcons.file_euro class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_euro(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M12 14h-3" />
      <path d="M14 11.172a3 3 0 1 0 0 5.656" />
    </svg>
    """
  end

  @doc """
  Renders the `file_export` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_export />
      <TablerIcons.file_export class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_export(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M11.5 21h-4.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v5m-5 6h7m-3 -3l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `file_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_filled />
      <TablerIcons.file_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.117 .007a1 1 0 0 1 .876 .876l.007 .117v4l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h4l.117 .007a1 1 0 0 1 .876 .876l.007 .117v9a3 3 0 0 1 -2.824 2.995l-.176 .005h-10a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-14a3 3 0 0 1 2.824 -2.995l.176 -.005h5z"
        stroke-width="0"
        fill="currentColor"
      />
      <path d="M19 7h-4l-.001 -4.001z" stroke-width="0" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `file_function` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_function />
      <TablerIcons.file_function class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_function(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M10.5 17h.333c.474 0 .87 -.323 .916 -.746l.502 -4.508c.047 -.423 .443 -.746 .916 -.746h.333" />
      <path d="M10.5 14h3" />
    </svg>
    """
  end

  @doc """
  Renders the `file_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_horizontal />
      <TablerIcons.file_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 5v4a1 1 0 0 0 1 1h4" />
      <path d="M3 7v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2 -2v-7l-5 -5h-11a2 2 0 0 0 -2 2z" />
    </svg>
    """
  end

  @doc """
  Renders the `file_import` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_import />
      <TablerIcons.file_import class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_import(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 13v-8a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-5.5m-9.5 -2h7m-3 -3l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `file_infinity` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_infinity />
      <TablerIcons.file_infinity class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_infinity(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.536 17.586a2.123 2.123 0 0 0 -2.929 0a1.951 1.951 0 0 0 0 2.828c.809 .781 2.12 .781 2.929 0c.809 -.781 -.805 .778 0 0l1.46 -1.41l1.46 -1.419" />
      <path d="M15.54 17.582l1.46 1.42l1.46 1.41c.809 .78 -.805 -.779 0 0s2.12 .781 2.929 0a1.951 1.951 0 0 0 0 -2.828a2.123 2.123 0 0 0 -2.929 0" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M9.5 21h-2.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_info` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_info />
      <TablerIcons.file_info class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_info(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M11 14h1v4h1" />
      <path d="M12 11h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `file_invoice` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_invoice />
      <TablerIcons.file_invoice class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_invoice(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M9 7l1 0" />
      <path d="M9 13l6 0" />
      <path d="M13 17l2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `file_lambda` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_lambda />
      <TablerIcons.file_lambda class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_lambda(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M10 17l2 -3" />
      <path d="M15 17c-2.5 0 -2.5 -6 -5 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_like` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_like />
      <TablerIcons.file_like class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_like(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 16m0 1a1 1 0 0 1 1 -1h1a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-1a1 1 0 0 1 -1 -1z" />
      <path d="M6 20a1 1 0 0 0 1 1h3.756a1 1 0 0 0 .958 -.713l1.2 -3c.09 -.303 .133 -.63 -.056 -.884c-.188 -.254 -.542 -.403 -.858 -.403h-2v-2.467a1.1 1.1 0 0 0 -2.015 -.61l-1.985 3.077v4z" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12.1v-7.1a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-2.3" />
    </svg>
    """
  end

  @doc """
  Renders the `file_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_minus />
      <TablerIcons.file_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M9 14l6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `file_music` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_music />
      <TablerIcons.file_music class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_music(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M11 16m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 16l0 -5l2 1" />
    </svg>
    """
  end

  @doc """
  Renders the `file_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_off />
      <TablerIcons.file_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M7 3h7l5 5v7m0 4a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-14" />
    </svg>
    """
  end

  @doc """
  Renders the `file_orientation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_orientation />
      <TablerIcons.file_orientation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_orientation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M10 21h-3a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v2" />
      <path d="M13 20h5a2 2 0 0 0 2 -2v-5" />
      <path d="M15 22l-2 -2l2 -2" />
      <path d="M18 15l2 -2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `file_pencil` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_pencil />
      <TablerIcons.file_pencil class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_pencil(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M10 18l5 -5a1.414 1.414 0 0 0 -2 -2l-5 5v2h2z" />
    </svg>
    """
  end

  @doc """
  Renders the `file_percent` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_percent />
      <TablerIcons.file_percent class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_percent(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 17l4 -4" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M10 13h.01" />
      <path d="M14 17h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `file_phone` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_phone />
      <TablerIcons.file_phone class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_phone(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M9 12a.5 .5 0 0 0 1 0v-1a.5 .5 0 0 0 -1 0v1a5 5 0 0 0 5 5h1a.5 .5 0 0 0 0 -1h-1a.5 .5 0 0 0 0 1" />
    </svg>
    """
  end

  @doc """
  Renders the `file_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_plus />
      <TablerIcons.file_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M12 11l0 6" />
      <path d="M9 14l6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `file_power` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_power />
      <TablerIcons.file_power class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_power(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M12 11l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `file_report` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_report />
      <TablerIcons.file_report class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_report(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 17m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M17 13v4h4" />
      <path d="M12 3v4a1 1 0 0 0 1 1h4" />
      <path d="M11.5 21h-6.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v2m0 3v4" />
    </svg>
    """
  end

  @doc """
  Renders the `file_rss` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_rss />
      <TablerIcons.file_rss class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_rss(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M12 17a3 3 0 0 0 -3 -3" />
      <path d="M15 17a6 6 0 0 0 -6 -6" />
      <path d="M9 17h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `file_scissors` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_scissors />
      <TablerIcons.file_scissors class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_scissors(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M15 17m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M9 17m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M9 17l6 -6" />
      <path d="M15 17l-6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_search />
      <TablerIcons.file_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M12 21h-5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v4.5" />
      <path d="M16.5 17.5m-2.5 0a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0 -5 0" />
      <path d="M18.5 19.5l2.5 2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `file_settings` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_settings />
      <TablerIcons.file_settings class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_settings(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 14m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 10.5v1.5" />
      <path d="M12 16v1.5" />
      <path d="M15.031 12.25l-1.299 .75" />
      <path d="M10.268 15l-1.3 .75" />
      <path d="M15 15.803l-1.285 -.773" />
      <path d="M10.285 12.97l-1.285 -.773" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
    </svg>
    """
  end

  @doc """
  Renders the `file_shredder` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_shredder />
      <TablerIcons.file_shredder class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_shredder(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M3 12l18 0" />
      <path d="M6 16l0 2" />
      <path d="M10 16l0 6" />
      <path d="M14 16l0 2" />
      <path d="M18 16l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `file_signal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_signal />
      <TablerIcons.file_signal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_signal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M12 14v.01" />
      <path d="M9.525 11.525a3.5 3.5 0 0 0 0 4.95m4.95 0a3.5 3.5 0 0 0 0 -4.95" />
    </svg>
    """
  end

  @doc """
  Renders the `file_spreadsheet` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_spreadsheet />
      <TablerIcons.file_spreadsheet class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_spreadsheet(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M8 11h8v7h-8z" />
      <path d="M8 15h8" />
      <path d="M11 11v7" />
    </svg>
    """
  end

  @doc """
  Renders the `file_stack` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_stack />
      <TablerIcons.file_stack class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_stack(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M5 21h14" />
      <path d="M5 18h14" />
      <path d="M5 15h14" />
    </svg>
    """
  end

  @doc """
  Renders the `file_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_star />
      <TablerIcons.file_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M11.8 16.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `file_symlink` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_symlink />
      <TablerIcons.file_symlink class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_symlink(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 21v-4a3 3 0 0 1 3 -3h5" />
      <path d="M9 17l3 -3l-3 -3" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 11v-6a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-9.5" />
    </svg>
    """
  end

  @doc """
  Renders the `file_text_ai` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_text_ai />
      <TablerIcons.file_text_ai class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_text_ai(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M10 21h-3a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v3.5" />
      <path d="M9 9h1" />
      <path d="M9 13h2.5" />
      <path d="M9 17h1" />
      <path d="M14 21v-4a2 2 0 1 1 4 0v4" />
      <path d="M14 19h4" />
      <path d="M21 15v6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_text` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_text />
      <TablerIcons.file_text class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_text(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M9 9l1 0" />
      <path d="M9 13l6 0" />
      <path d="M9 17l6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `file_time` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_time />
      <TablerIcons.file_time class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_time(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M12 14m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M12 12.496v1.504l1 1" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_bmp` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_bmp />
      <TablerIcons.file_type_bmp class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_bmp(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M18 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6" />
      <path d="M4 21h1.5a1.5 1.5 0 0 0 0 -3h-1.5h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6z" />
      <path d="M10 21v-6l2.5 3l2.5 -3v6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_css` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_css />
      <TablerIcons.file_type_css class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_css(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M8 16.5a1.5 1.5 0 0 0 -3 0v3a1.5 1.5 0 0 0 3 0" />
      <path d="M11 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75" />
      <path d="M17 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_csv` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_csv />
      <TablerIcons.file_type_csv class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_csv(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M7 16.5a1.5 1.5 0 0 0 -3 0v3a1.5 1.5 0 0 0 3 0" />
      <path d="M10 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75" />
      <path d="M16 15l2 6l2 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_doc` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_doc />
      <TablerIcons.file_type_doc class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_doc(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M5 15v6h1a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2h-1z" />
      <path d="M20 16.5a1.5 1.5 0 0 0 -3 0v3a1.5 1.5 0 0 0 3 0" />
      <path d="M12.5 15a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1 -3 0v-3a1.5 1.5 0 0 1 1.5 -1.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_docx` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_docx />
      <TablerIcons.file_type_docx class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_docx(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M2 15v6h1a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2h-1z" />
      <path d="M17 16.5a1.5 1.5 0 0 0 -3 0v3a1.5 1.5 0 0 0 3 0" />
      <path d="M9.5 15a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1 -3 0v-3a1.5 1.5 0 0 1 1.5 -1.5z" />
      <path d="M19.5 15l3 6" />
      <path d="M19.5 21l3 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_html` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_html />
      <TablerIcons.file_type_html class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_html(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M2 21v-6" />
      <path d="M5 15v6" />
      <path d="M2 18h3" />
      <path d="M20 15v6h2" />
      <path d="M13 21v-6l2 3l2 -3v6" />
      <path d="M7.5 15h3" />
      <path d="M9 15v6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_jpg` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_jpg />
      <TablerIcons.file_type_jpg class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_jpg(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M11 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6" />
      <path d="M20 15h-1a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h1v-3" />
      <path d="M5 15h3v4.5a1.5 1.5 0 0 1 -3 0" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_js` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_js />
      <TablerIcons.file_type_js class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_js(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M3 15h3v4.5a1.5 1.5 0 0 1 -3 0" />
      <path d="M9 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_jsx` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_jsx />
      <TablerIcons.file_type_jsx class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_jsx(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M4 15h3v4.5a1.5 1.5 0 0 1 -3 0" />
      <path d="M10 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75" />
      <path d="M16 15l4 6" />
      <path d="M16 21l4 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_pdf` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_pdf />
      <TablerIcons.file_type_pdf class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_pdf(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M5 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6" />
      <path d="M17 18h2" />
      <path d="M20 15h-3v6" />
      <path d="M11 15v6h1a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2h-1z" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_php` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_php />
      <TablerIcons.file_type_php class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_php(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M5 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6" />
      <path d="M17 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6" />
      <path d="M11 21v-6" />
      <path d="M14 15v6" />
      <path d="M11 18h3" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_png` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_png />
      <TablerIcons.file_type_png class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_png(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M20 15h-1a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h1v-3" />
      <path d="M5 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6" />
      <path d="M11 21v-6l3 6v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_ppt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_ppt />
      <TablerIcons.file_type_ppt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_ppt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6" />
      <path d="M11 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6" />
      <path d="M16.5 15h3" />
      <path d="M18 15v6" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_rs` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_rs />
      <TablerIcons.file_type_rs class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_rs(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M9 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-1" />
      <path d="M3 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6m3 0l-2 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_sql` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_sql />
      <TablerIcons.file_type_sql class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_sql(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M18 15v6h2" />
      <path d="M13 15a2 2 0 0 1 2 2v2a2 2 0 1 1 -4 0v-2a2 2 0 0 1 2 -2z" />
      <path d="M14 20l1.5 1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_svg` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_svg />
      <TablerIcons.file_type_svg class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_svg(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M4 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75" />
      <path d="M10 15l2 6l2 -6" />
      <path d="M20 15h-1a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h1v-3" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_ts` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_ts />
      <TablerIcons.file_type_ts class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_ts(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-1" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M9 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75" />
      <path d="M3.5 15h3" />
      <path d="M5 15v6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_tsx` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_tsx />
      <TablerIcons.file_type_tsx class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_tsx(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M16 15l4 6" />
      <path d="M16 21l4 -6" />
      <path d="M10 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75" />
      <path d="M4.5 15h3" />
      <path d="M6 15v6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_txt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_txt />
      <TablerIcons.file_type_txt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_txt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M16.5 15h3" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M4.5 15h3" />
      <path d="M6 15v6" />
      <path d="M18 15v6" />
      <path d="M10 15l4 6" />
      <path d="M10 21l4 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_vue` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_vue />
      <TablerIcons.file_type_vue class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_vue(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M4 15l2 6l2 -6" />
      <path d="M11 15v4.5a1.5 1.5 0 0 0 3 0v-4.5" />
      <path d="M20 15h-3v6h3" />
      <path d="M17 18h2" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_xls` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_xls />
      <TablerIcons.file_type_xls class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_xls(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M4 15l4 6" />
      <path d="M4 21l4 -6" />
      <path d="M17 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75" />
      <path d="M11 15v6h3" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_xml` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_xml />
      <TablerIcons.file_type_xml class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_xml(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M4 15l4 6" />
      <path d="M4 21l4 -6" />
      <path d="M19 15v6h3" />
      <path d="M11 21v-6l2.5 3l2.5 -3v6" />
    </svg>
    """
  end

  @doc """
  Renders the `file_type_zip` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_type_zip />
      <TablerIcons.file_type_zip class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_type_zip(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4" />
      <path d="M16 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6" />
      <path d="M12 15v6" />
      <path d="M5 15h3l-3 6h3" />
    </svg>
    """
  end

  @doc """
  Renders the `file_typography` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_typography />
      <TablerIcons.file_typography class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_typography(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M11 18h2" />
      <path d="M12 18v-7" />
      <path d="M9 12v-1h6v1" />
    </svg>
    """
  end

  @doc """
  Renders the `file_unknown` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_unknown />
      <TablerIcons.file_unknown class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_unknown(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M12 17v.01" />
      <path d="M12 14a1.5 1.5 0 1 0 -1.14 -2.474" />
    </svg>
    """
  end

  @doc """
  Renders the `file_upload` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_upload />
      <TablerIcons.file_upload class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_upload(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M12 11v6" />
      <path d="M9.5 13.5l2.5 -2.5l2.5 2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `file_vector` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_vector />
      <TablerIcons.file_vector class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_vector(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M9.5 16.5m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M14.5 12.5m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M9.5 15a2.5 2.5 0 0 1 2.5 -2.5h1" />
    </svg>
    """
  end

  @doc """
  Renders the `file_x_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_x_filled />
      <TablerIcons.file_x_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_x_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.117 .007a1 1 0 0 1 .876 .876l.007 .117v4l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h4l.117 .007a1 1 0 0 1 .876 .876l.007 .117v9a3 3 0 0 1 -2.824 2.995l-.176 .005h-10a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-14a3 3 0 0 1 2.824 -2.995l.176 -.005h5zm-1.489 9.14a1 1 0 0 0 -1.301 1.473l.083 .094l1.292 1.293l-1.292 1.293l-.083 .094a1 1 0 0 0 1.403 1.403l.094 -.083l1.293 -1.292l1.293 1.292l.094 .083a1 1 0 0 0 1.403 -1.403l-.083 -.094l-1.292 -1.293l1.292 -1.293l.083 -.094a1 1 0 0 0 -1.403 -1.403l-.094 .083l-1.293 1.292l-1.293 -1.292l-.094 -.083l-.102 -.07z"
        stroke-width="0"
        fill="currentColor"
      />
      <path d="M19 7h-4l-.001 -4.001z" stroke-width="0" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `file_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_x />
      <TablerIcons.file_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
      <path d="M10 12l4 4m0 -4l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `file_zip` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file_zip />
      <TablerIcons.file_zip class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file_zip(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 20.735a2 2 0 0 1 -1 -1.735v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-1" />
      <path d="M11 17a2 2 0 0 1 2 2v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-2a2 2 0 0 1 2 -2z" />
      <path d="M11 5l-1 0" />
      <path d="M13 7l-1 0" />
      <path d="M11 9l-1 0" />
      <path d="M13 11l-1 0" />
      <path d="M11 13l-1 0" />
      <path d="M13 15l-1 0" />
    </svg>
    """
  end

  @doc """
  Renders the `file` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.file />
      <TablerIcons.file class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def file(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
    </svg>
    """
  end

  @doc """
  Renders the `files_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.files_off />
      <TablerIcons.files_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def files_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 3v4a1 1 0 0 0 1 1h4" />
      <path d="M17 17h-6a2 2 0 0 1 -2 -2v-6m0 -4a2 2 0 0 1 2 -2h4l5 5v7c0 .294 -.063 .572 -.177 .823" />
      <path d="M16 17v2a2 2 0 0 1 -2 2h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `files` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.files />
      <TablerIcons.files class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def files(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 3v4a1 1 0 0 0 1 1h4" />
      <path d="M18 17h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h4l5 5v7a2 2 0 0 1 -2 2z" />
      <path d="M16 17v2a2 2 0 0 1 -2 2h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_bolt />
      <TablerIcons.filter_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.991 19.67l-3.991 1.33v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v3" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_cancel />
      <TablerIcons.filter_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20l-3 1v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v1.5" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_check />
      <TablerIcons.filter_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.18 20.274l-2.18 .726v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v3" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_code />
      <TablerIcons.filter_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.19 20.27l-2.19 .73v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v1.5" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_cog />
      <TablerIcons.filter_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20l-3 1v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v1.5" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_discount` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_discount />
      <TablerIcons.filter_discount class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_discount(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.705 19.765l-3.705 1.235v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v.5" />
      <path d="M16 21l5 -5" />
      <path d="M21 21v.01" />
      <path d="M16 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_dollar />
      <TablerIcons.filter_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.25 19.583l-4.25 1.417v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_down />
      <TablerIcons.filter_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20l-3 1v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v3" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_edit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_edit />
      <TablerIcons.filter_edit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_edit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.97 20.344l-1.97 .656v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v1.5" />
      <path d="M18.42 15.61a2.1 2.1 0 0 1 2.97 2.97l-3.39 3.42h-3v-3l3.42 -3.39z" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_exclamation />
      <TablerIcons.filter_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v7l-6 2v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227z" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_filled />
      <TablerIcons.filter_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M20 3h-16a1 1 0 0 0 -1 1v2.227l.008 .223a3 3 0 0 0 .772 1.795l4.22 4.641v8.114a1 1 0 0 0 1.316 .949l6 -2l.108 -.043a1 1 0 0 0 .576 -.906v-6.586l4.121 -4.12a3 3 0 0 0 .879 -2.123v-2.171a1 1 0 0 0 -1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `filter_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_heart />
      <TablerIcons.filter_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.888 20.37l-1.888 .63v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-3.503 3.503" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_minus />
      <TablerIcons.filter_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20l-3 1v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v3" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_off />
      <TablerIcons.filter_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h12v2.172a2 2 0 0 1 -.586 1.414l-3.914 3.914m-.5 3.5v4l-6 2v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_pause />
      <TablerIcons.filter_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.97 19.677l-3.97 1.323v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v1.5" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_pin />
      <TablerIcons.filter_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20l-3 1v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_plus />
      <TablerIcons.filter_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20l-3 1v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v3" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_question />
      <TablerIcons.filter_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 19l-6 2v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_search />
      <TablerIcons.filter_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.36 20.213l-2.36 .787v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_share />
      <TablerIcons.filter_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.713 19.762l-3.713 1.238v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v1" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_star />
      <TablerIcons.filter_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.042 20.32l-2.042 .68v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_up />
      <TablerIcons.filter_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20l-3 1v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v2" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `filter_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter_x />
      <TablerIcons.filter_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.758 19.414l-4.758 1.586v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v1.5" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `filter` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filter />
      <TablerIcons.filter class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filter(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v7l-6 2v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227z" />
    </svg>
    """
  end

  @doc """
  Renders the `filters` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.filters />
      <TablerIcons.filters class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def filters(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M8 11a5 5 0 1 0 3.998 1.997" />
      <path d="M12.002 19.003a5 5 0 1 0 3.998 -8.003" />
    </svg>
    """
  end

  @doc """
  Renders the `fingerprint_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fingerprint_off />
      <TablerIcons.fingerprint_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fingerprint_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.9 7a8 8 0 0 1 1.1 5v1a6 6 0 0 0 .8 3" />
      <path d="M8 11c0 -.848 .264 -1.634 .713 -2.28m2.4 -1.621a4 4 0 0 1 4.887 3.901l0 1" />
      <path d="M12 12v1a14 14 0 0 0 2.5 8" />
      <path d="M8 15a18 18 0 0 0 1.8 6" />
      <path d="M4.9 19a22 22 0 0 1 -.9 -7v-1a8 8 0 0 1 1.854 -5.143m2.176 -1.825a8 8 0 0 1 7.97 .018" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `fingerprint` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fingerprint />
      <TablerIcons.fingerprint class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fingerprint(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.9 7a8 8 0 0 1 1.1 5v1a6 6 0 0 0 .8 3" />
      <path d="M8 11a4 4 0 0 1 8 0v1a10 10 0 0 0 2 6" />
      <path d="M12 11v2a14 14 0 0 0 2.5 8" />
      <path d="M8 15a18 18 0 0 0 1.8 6" />
      <path d="M4.9 19a22 22 0 0 1 -.9 -7v-1a8 8 0 0 1 12 -6.95" />
    </svg>
    """
  end

  @doc """
  Renders the `fire_extinguisher` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fire_extinguisher />
      <TablerIcons.fire_extinguisher class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fire_extinguisher(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 7a4 4 0 0 1 4 4v9a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1v-9a4 4 0 0 1 4 -4z" />
      <path d="M9 16h6" />
      <path d="M12 7v-3" />
      <path d="M16 5l-4 -1l4 -1" />
      <path d="M12 4h-3a3 3 0 0 0 -3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `fire_hydrant_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fire_hydrant_off />
      <TablerIcons.fire_hydrant_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fire_hydrant_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 21h14" />
      <path d="M17 21v-4m2 -2v-2a1 1 0 0 0 -1 -1h-1v-4a5 5 0 0 0 -8.533 -3.538m-1.387 2.638a5.03 5.03 0 0 0 -.08 .9v4h-1a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h1v5" />
      <path d="M12 12a2 2 0 1 0 2 2" />
      <path d="M6 8h2m4 0h6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `fire_hydrant` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fire_hydrant />
      <TablerIcons.fire_hydrant class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fire_hydrant(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 21h14" />
      <path d="M17 21v-5h1a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-1v-4a5 5 0 0 0 -10 0v4h-1a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h1v5" />
      <path d="M12 14m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 8h12" />
    </svg>
    """
  end

  @doc """
  Renders the `firetruck` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.firetruck />
      <TablerIcons.firetruck class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def firetruck(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 18h8m4 0h2v-6a5 5 0 0 0 -5 -5h-1l1.5 5h4.5" />
      <path d="M12 18v-11h3" />
      <path d="M3 17l0 -5l9 0" />
      <path d="M3 9l18 -6" />
      <path d="M6 12l0 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `first_aid_kit_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.first_aid_kit_off />
      <TablerIcons.first_aid_kit_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def first_aid_kit_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.595 4.577a2 2 0 0 1 1.405 -.577h4a2 2 0 0 1 2 2v2" />
      <path d="M12 8h6a2 2 0 0 1 2 2v6m-.576 3.405a2 2 0 0 1 -1.424 .595h-12a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h2" />
      <path d="M10 14h4" />
      <path d="M12 12v4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `first_aid_kit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.first_aid_kit />
      <TablerIcons.first_aid_kit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def first_aid_kit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8v-2a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v2" />
      <path d="M4 8m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M10 14h4" />
      <path d="M12 12v4" />
    </svg>
    """
  end

  @doc """
  Renders the `fish_bone` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fish_bone />
      <TablerIcons.fish_bone class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fish_bone(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.69 7.44a6.973 6.973 0 0 0 -1.69 4.56a6.97 6.97 0 0 0 1.699 4.571c1.914 -.684 3.691 -2.183 5.301 -4.565c-1.613 -2.384 -3.394 -3.883 -5.312 -4.565" />
      <path d="M2 9.504a40.73 40.73 0 0 0 2.422 2.504a39.679 39.679 0 0 0 -2.422 2.498" />
      <path d="M18 11v.01" />
      <path d="M4.422 12h10.578" />
      <path d="M7 10v4" />
      <path d="M11 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `fish_christianity` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fish_christianity />
      <TablerIcons.fish_christianity class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fish_christianity(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 7s-5.646 10 -12.308 10c-3.226 .025 -6.194 -1.905 -7.692 -5c1.498 -3.095 4.466 -5.025 7.692 -5c6.662 0 12.308 10 12.308 10" />
    </svg>
    """
  end

  @doc """
  Renders the `fish_hook_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fish_hook_off />
      <TablerIcons.fish_hook_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fish_hook_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 9v3m-.085 3.924a5 5 0 0 1 -9.915 -.924v-4l3 3" />
      <path d="M16 7m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M16 5v-2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `fish_hook` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fish_hook />
      <TablerIcons.fish_hook class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fish_hook(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 9v6a5 5 0 0 1 -10 0v-4l3 3" />
      <path d="M16 7m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M16 5v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `fish_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fish_off />
      <TablerIcons.fish_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fish_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.69 7.44a6.973 6.973 0 0 0 -1.63 3.635" />
      <path d="M2 9.504c5.307 5.948 10.293 8.57 14.597 7.1m2.583 -1.449c.988 -.788 1.93 -1.836 2.82 -3.153c-3 -4.443 -6.596 -5.812 -10.564 -4.548m-2.764 1.266c-2.145 1.266 -4.378 3.215 -6.672 5.786" />
      <path d="M18 11v.01" />
      <path d="M11.153 11.169c-.287 .777 -.171 1.554 .347 2.331" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `fish` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fish />
      <TablerIcons.fish class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fish(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.69 7.44a6.973 6.973 0 0 0 -1.69 4.56c0 1.747 .64 3.345 1.699 4.571" />
      <path d="M2 9.504c7.715 8.647 14.75 10.265 20 2.498c-5.25 -7.761 -12.285 -6.142 -20 2.504" />
      <path d="M18 11v.01" />
      <path d="M11.5 10.5c-.667 1 -.667 2 0 3" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_2_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_2_filled />
      <TablerIcons.flag_2_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_2_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 4a1 1 0 0 1 .993 .883l.007 .117v9a1 1 0 0 1 -.883 .993l-.117 .007h-13v6a1 1 0 0 1 -.883 .993l-.117 .007a1 1 0 0 1 -.993 -.883l-.007 -.117v-16a1 1 0 0 1 .883 -.993l.117 -.007h14z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `flag_2_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_2_off />
      <TablerIcons.flag_2_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_2_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 14h9m4 0h1v-9h-10m-4 0v16" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_2 />
      <TablerIcons.flag_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 14h14v-9h-14v16" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_3_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_3_filled />
      <TablerIcons.flag_3_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_3_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 4c.852 0 1.297 .986 .783 1.623l-.076 .084l-3.792 3.793l3.792 3.793c.603 .602 .22 1.614 -.593 1.701l-.114 .006h-13v6a1 1 0 0 1 -.883 .993l-.117 .007a1 1 0 0 1 -.993 -.883l-.007 -.117v-16a1 1 0 0 1 .883 -.993l.117 -.007h14z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `flag_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_3 />
      <TablerIcons.flag_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 14h14l-4.5 -4.5l4.5 -4.5h-14v16" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_bolt />
      <TablerIcons.flag_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.673 15.36a4.978 4.978 0 0 1 -2.673 -1.36a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v7" />
      <path d="M5 21v-7" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_cancel />
      <TablerIcons.flag_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.342 14.941a4.993 4.993 0 0 1 -1.342 -.941a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v7" />
      <path d="M5 21v-7" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_check />
      <TablerIcons.flag_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.767 15.12a4.983 4.983 0 0 1 -1.767 -1.12a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v8.5" />
      <path d="M5 21v-7" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_code />
      <TablerIcons.flag_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.41 14.973a4.991 4.991 0 0 1 -1.41 -.973a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v8" />
      <path d="M5 21v-7" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_cog />
      <TablerIcons.flag_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.901 14.702a5.014 5.014 0 0 1 -.901 -.702a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v6.5" />
      <path d="M5 21v-7" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_discount` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_discount />
      <TablerIcons.flag_discount class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_discount(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.804 14.641a5.02 5.02 0 0 1 -.804 -.641a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v8" />
      <path d="M5 21v-7" />
      <path d="M16 21l5 -5" />
      <path d="M21 21v.01" />
      <path d="M16 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_dollar />
      <TablerIcons.flag_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.222 14.882a4.998 4.998 0 0 1 -1.222 -.882a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v5" />
      <path d="M5 21v-7" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_down />
      <TablerIcons.flag_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.434 15.315a4.978 4.978 0 0 1 -2.434 -1.315a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v7" />
      <path d="M5 21v-7" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_exclamation />
      <TablerIcons.flag_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.035 15.408a4.98 4.98 0 0 1 -3.035 -1.408a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v7" />
      <path d="M5 21v-7" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_filled />
      <TablerIcons.flag_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M4 5a1 1 0 0 1 .3 -.714a6 6 0 0 1 8.213 -.176l.351 .328a4 4 0 0 0 5.272 0l.249 -.227c.61 -.483 1.527 -.097 1.61 .676l.005 .113v9a1 1 0 0 1 -.3 .714a6 6 0 0 1 -8.213 .176l-.351 -.328a4 4 0 0 0 -5.136 -.114v6.552a1 1 0 0 1 -1.993 .117l-.007 -.117v-16z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `flag_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_heart />
      <TablerIcons.flag_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.33 13.447a5.001 5.001 0 0 0 -6.33 .553v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v6" />
      <path d="M5 21v-7" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_minus />
      <TablerIcons.flag_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.373 15.301a4.978 4.978 0 0 1 -2.373 -1.301a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v9" />
      <path d="M5 21v-7" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_off />
      <TablerIcons.flag_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5v16" />
      <path d="M19 5v9" />
      <path d="M7.641 3.645a5 5 0 0 1 4.359 1.355a5 5 0 0 0 7 0" />
      <path d="M5 14a5 5 0 0 1 7 0a4.984 4.984 0 0 0 3.437 1.429m3.019 -.966c.19 -.14 .371 -.294 .544 -.463" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_pause />
      <TablerIcons.flag_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.536 15.029a4.987 4.987 0 0 1 -1.536 -1.029a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v8.5" />
      <path d="M5 21v-7" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_pin />
      <TablerIcons.flag_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.857 14.675a5.016 5.016 0 0 1 -.857 -.675a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v6" />
      <path d="M5 21v-7" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_plus />
      <TablerIcons.flag_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.433 15.315a4.978 4.978 0 0 1 -2.433 -1.315a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v7" />
      <path d="M5 21v-7" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_question />
      <TablerIcons.flag_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 15a4.914 4.914 0 0 1 -1.5 -1a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v6" />
      <path d="M5 21v-7" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_search />
      <TablerIcons.flag_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 14a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v6" />
      <path d="M5 21v-7" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_share />
      <TablerIcons.flag_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.13 14.833a5.002 5.002 0 0 1 -1.13 -.833a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v8" />
      <path d="M5 21v-7" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_star />
      <TablerIcons.flag_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.475 13.551a5.001 5.001 0 0 0 -6.475 .449v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v5" />
      <path d="M5 21v-7" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_up />
      <TablerIcons.flag_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.138 15.241a4.979 4.979 0 0 1 -2.138 -1.241a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v7" />
      <path d="M5 21v-7" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `flag_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag_x />
      <TablerIcons.flag_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.533 15.028a4.988 4.988 0 0 1 -1.533 -1.028a5 5 0 0 0 -7 0v-9a5 5 0 0 1 7 0a5 5 0 0 0 7 0v8.5" />
      <path d="M5 21v-7" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `flag` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flag />
      <TablerIcons.flag class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flag(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5a5 5 0 0 1 7 0a5 5 0 0 0 7 0v9a5 5 0 0 1 -7 0a5 5 0 0 0 -7 0v-9z" />
      <path d="M5 21v-7" />
    </svg>
    """
  end

  @doc """
  Renders the `flame_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flame_off />
      <TablerIcons.flame_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flame_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.973 8.974c-.335 .378 -.67 .716 -.973 1.026c-1.226 1.26 -2 3.24 -2 5a6 6 0 0 0 11.472 2.466m.383 -3.597c-.32 -1.409 -1.122 -3.045 -1.855 -3.869c-.281 .472 -.543 .87 -.79 1.202m-2.358 -2.35c-.068 -2.157 -1.182 -4.184 -1.852 -4.852c0 .968 -.18 1.801 -.465 2.527" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `flame` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flame />
      <TablerIcons.flame class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flame(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12c2 -2.96 0 -7 -1 -8c0 3.038 -1.773 4.741 -3 6c-1.226 1.26 -2 3.24 -2 5a6 6 0 1 0 12 0c0 -1.532 -1.056 -3.94 -2 -5c-1.786 3 -2.791 3 -4 2z" />
    </svg>
    """
  end

  @doc """
  Renders the `flare` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flare />
      <TablerIcons.flare class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flare(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3l3 6l6 3l-6 3l-3 6l-3 -6l-6 -3l6 -3z" />
    </svg>
    """
  end

  @doc """
  Renders the `flask_2_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flask_2_off />
      <TablerIcons.flask_2_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flask_2_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.1 15h8.9" />
      <path d="M17.742 17.741a6 6 0 0 1 -2.424 3.259h-6.635a6 6 0 0 1 1.317 -10.66v-.326m0 -4.014v-3h4v7m.613 .598a6 6 0 0 1 2.801 2.817" />
      <path d="M9 3h6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `flask_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flask_2 />
      <TablerIcons.flask_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flask_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.1 15h11.8" />
      <path d="M14 3v7.342a6 6 0 0 1 1.318 10.658h-6.635a6 6 0 0 1 1.317 -10.66v-7.34h4z" />
      <path d="M9 3h6" />
    </svg>
    """
  end

  @doc """
  Renders the `flask_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flask_off />
      <TablerIcons.flask_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flask_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 3h6" />
      <path d="M13 9h1" />
      <path d="M10 3v3m-.268 3.736l-3.732 10.264a.7 .7 0 0 0 .5 1h11a.7 .7 0 0 0 .5 -1l-1.143 -3.142m-2.288 -6.294l-.569 -1.564v-6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `flask` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flask />
      <TablerIcons.flask class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flask(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 3l6 0" />
      <path d="M10 9l4 0" />
      <path d="M10 3v6l-4 11a.7 .7 0 0 0 .5 1h11a.7 .7 0 0 0 .5 -1l-4 -11v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `flip_flops` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flip_flops />
      <TablerIcons.flip_flops class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flip_flops(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 4c2.21 0 4 1.682 4 3.758c0 .078 0 .156 -.008 .234l-.6 9.014c-.11 1.683 -1.596 3 -3.392 3s-3.28 -1.311 -3.392 -3l-.6 -9.014c-.138 -2.071 1.538 -3.855 3.743 -3.985a4.15 4.15 0 0 1 .25 -.007z" />
      <path d="M14.5 14c1 -3.333 2.167 -5 3.5 -5c1.333 0 2.5 1.667 3.5 5" />
      <path d="M18 16v1" />
      <path d="M6 4c2.21 0 4 1.682 4 3.758c0 .078 0 .156 -.008 .234l-.6 9.014c-.11 1.683 -1.596 3 -3.392 3s-3.28 -1.311 -3.392 -3l-.6 -9.014c-.138 -2.071 1.538 -3.855 3.742 -3.985c.084 0 .167 -.007 .25 -.007z" />
      <path d="M2.5 14c1 -3.333 2.167 -5 3.5 -5c1.333 0 2.5 1.667 3.5 5" />
      <path d="M6 16v1" />
    </svg>
    """
  end

  @doc """
  Renders the `flip_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flip_horizontal />
      <TablerIcons.flip_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flip_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12l18 0" />
      <path d="M7 16l10 0l-10 5l0 -5" />
      <path d="M7 8l10 0l-10 -5l0 5" />
    </svg>
    """
  end

  @doc """
  Renders the `flip_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flip_vertical />
      <TablerIcons.flip_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flip_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3l0 18" />
      <path d="M16 7l0 10l5 0l-5 -10" />
      <path d="M8 7l0 10l-5 0l5 -10" />
    </svg>
    """
  end

  @doc """
  Renders the `float_center` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.float_center />
      <TablerIcons.float_center class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def float_center(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M4 7l1 0" />
      <path d="M4 11l1 0" />
      <path d="M19 7l1 0" />
      <path d="M19 11l1 0" />
      <path d="M4 15l16 0" />
      <path d="M4 19l16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `float_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.float_left />
      <TablerIcons.float_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def float_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 5m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M14 7l6 0" />
      <path d="M14 11l6 0" />
      <path d="M4 15l16 0" />
      <path d="M4 19l16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `float_none` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.float_none />
      <TablerIcons.float_none class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def float_none(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 5m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M4 15l16 0" />
      <path d="M4 19l16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `float_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.float_right />
      <TablerIcons.float_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def float_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 5m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M4 7l6 0" />
      <path d="M4 11l6 0" />
      <path d="M4 15l16 0" />
      <path d="M4 19l16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `flower_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flower_off />
      <TablerIcons.flower_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flower_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.875 9.882a3 3 0 0 0 4.247 4.238m.581 -3.423a3.012 3.012 0 0 0 -1.418 -1.409" />
      <path d="M9 5a3 3 0 0 1 6 0c0 .562 -.259 1.442 -.776 2.64l-.724 1.36l1.76 -1.893c.499 -.6 .922 -1 1.27 -1.205a2.968 2.968 0 0 1 4.07 1.099a3.011 3.011 0 0 1 -1.09 4.098c-.374 .217 -.99 .396 -1.846 .535l-1.779 .244m.292 .282l1.223 .166c1 .145 1.698 .337 2.11 .576a3.011 3.011 0 0 1 1.226 3.832m-2.277 1.733a2.968 2.968 0 0 1 -1.929 -.369c-.348 -.202 -.771 -.604 -1.27 -1.205l-1.76 -1.893l.724 1.36c.516 1.199 .776 2.079 .776 2.64a3 3 0 0 1 -6 0c0 -.562 .259 -1.442 .776 -2.64l.724 -1.36l-1.76 1.893c-.499 .601 -.922 1 -1.27 1.205a2.968 2.968 0 0 1 -4.07 -1.098a3.011 3.011 0 0 1 1.09 -4.098c.374 -.218 .99 -.396 1.846 -.536l2.664 -.366l-2.4 -.325c-1 -.145 -1.698 -.337 -2.11 -.576a3.011 3.011 0 0 1 -1.09 -4.099a2.968 2.968 0 0 1 2.134 -1.467" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `flower` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.flower />
      <TablerIcons.flower class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def flower(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12 2a3 3 0 0 1 3 3c0 .562 -.259 1.442 -.776 2.64l-.724 1.36l1.76 -1.893c.499 -.6 .922 -1 1.27 -1.205a2.968 2.968 0 0 1 4.07 1.099a3.011 3.011 0 0 1 -1.09 4.098c-.374 .217 -.99 .396 -1.846 .535l-2.664 .366l2.4 .326c1 .145 1.698 .337 2.11 .576a3.011 3.011 0 0 1 1.09 4.098a2.968 2.968 0 0 1 -4.07 1.098c-.348 -.202 -.771 -.604 -1.27 -1.205l-1.76 -1.893l.724 1.36c.516 1.199 .776 2.079 .776 2.64a3 3 0 0 1 -6 0c0 -.562 .259 -1.442 .776 -2.64l.724 -1.36l-1.76 1.893c-.499 .601 -.922 1 -1.27 1.205a2.968 2.968 0 0 1 -4.07 -1.098a3.011 3.011 0 0 1 1.09 -4.098c.374 -.218 .99 -.396 1.846 -.536l2.664 -.366l-2.4 -.325c-1 -.145 -1.698 -.337 -2.11 -.576a3.011 3.011 0 0 1 -1.09 -4.099a2.968 2.968 0 0 1 4.07 -1.099c.348 .203 .771 .604 1.27 1.205l1.76 1.894c-1 -2.292 -1.5 -3.625 -1.5 -4a3 3 0 0 1 3 -3z" />
    </svg>
    """
  end

  @doc """
  Renders the `focus_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.focus_2 />
      <TablerIcons.focus_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def focus_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <circle cx="12" cy="12" r=".5" fill="currentColor" />
      <path d="M12 12m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M12 3l0 2" />
      <path d="M3 12l2 0" />
      <path d="M12 19l0 2" />
      <path d="M19 12l2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `focus_auto` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.focus_auto />
      <TablerIcons.focus_auto class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def focus_auto(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v-2a2 2 0 0 1 2 -2h2" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2a2 2 0 0 0 2 -2v-2" />
      <path d="M10 15v-4a2 2 0 1 1 4 0v4" />
      <path d="M10 13h4" />
    </svg>
    """
  end

  @doc """
  Renders the `focus_centered` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.focus_centered />
      <TablerIcons.focus_centered class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def focus_centered(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M4 8v-2a2 2 0 0 1 2 -2h2" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2a2 2 0 0 0 2 -2v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `focus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.focus />
      <TablerIcons.focus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def focus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <circle cx="12" cy="12" r=".5" fill="currentColor" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `fold_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fold_down />
      <TablerIcons.fold_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fold_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 11v8l3 -3m-6 0l3 3" />
      <path d="M9 7l1 0" />
      <path d="M14 7l1 0" />
      <path d="M19 7l1 0" />
      <path d="M4 7l1 0" />
    </svg>
    """
  end

  @doc """
  Renders the `fold_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fold_up />
      <TablerIcons.fold_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fold_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 13v-8l-3 3m6 0l-3 -3" />
      <path d="M9 17l1 0" />
      <path d="M14 17l1 0" />
      <path d="M19 17l1 0" />
      <path d="M4 17l1 0" />
    </svg>
    """
  end

  @doc """
  Renders the `fold` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fold />
      <TablerIcons.fold class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fold(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3v6l3 -3m-6 0l3 3" />
      <path d="M12 21v-6l3 3m-6 0l3 -3" />
      <path d="M4 12l1 0" />
      <path d="M9 12l1 0" />
      <path d="M14 12l1 0" />
      <path d="M19 12l1 0" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_bolt />
      <TablerIcons.folder_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19h-8a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v3.5" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_cancel />
      <TablerIcons.folder_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19h-7a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v3" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_check />
      <TablerIcons.folder_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 19h-6a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v4" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_code />
      <TablerIcons.folder_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 19h-6a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v4" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_cog />
      <TablerIcons.folder_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 19h-7.5a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v3" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_dollar />
      <TablerIcons.folder_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 19h-8.5a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v1.5" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_down />
      <TablerIcons.folder_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19h-7a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v3.5" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_exclamation />
      <TablerIcons.folder_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 19h-10a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v3.5" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_filled />
      <TablerIcons.folder_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M9 3a1 1 0 0 1 .608 .206l.1 .087l2.706 2.707h6.586a3 3 0 0 1 2.995 2.824l.005 .176v8a3 3 0 0 1 -2.824 2.995l-.176 .005h-14a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-11a3 3 0 0 1 2.824 -2.995l.176 -.005h4z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `folder_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_heart />
      <TablerIcons.folder_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.5 19h-5.5a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v2" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_minus />
      <TablerIcons.folder_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19h-7a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v6" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_off />
      <TablerIcons.folder_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h1l3 3h7a2 2 0 0 1 2 2v8m-2 2h-14a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 1.189 -1.829" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_open` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_open />
      <TablerIcons.folder_open class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_open(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 19l2.757 -7.351a1 1 0 0 1 .936 -.649h12.307a1 1 0 0 1 .986 1.164l-.996 5.211a2 2 0 0 1 -1.964 1.625h-14.026a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v2" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_pause />
      <TablerIcons.folder_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19h-8a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v4" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_pin />
      <TablerIcons.folder_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19h-7a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v2.5" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_plus />
      <TablerIcons.folder_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19h-7a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v3.5" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_question />
      <TablerIcons.folder_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 19h-10a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v2.5" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_search />
      <TablerIcons.folder_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 19h-6a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v2.5" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_share />
      <TablerIcons.folder_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19h-8a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v4" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_star />
      <TablerIcons.folder_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 19h-5a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v2.5" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_symlink` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_symlink />
      <TablerIcons.folder_symlink class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_symlink(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21v-4a3 3 0 0 1 3 -3h5" />
      <path d="M8 17l3 -3l-3 -3" />
      <path d="M3 11v-5a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_up />
      <TablerIcons.folder_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19h-7a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v3.5" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `folder_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder_x />
      <TablerIcons.folder_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 19h-8.5a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v4" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `folder` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folder />
      <TablerIcons.folder class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folder(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4h4l3 3h7a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `folders_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folders_off />
      <TablerIcons.folders_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folders_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 17h-8a2 2 0 0 1 -2 -2v-8m1.177 -2.823c.251 -.114 .53 -.177 .823 -.177h3l2 2h5a2 2 0 0 1 2 2v7c0 .55 -.223 1.05 -.583 1.411" />
      <path d="M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `folders` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.folders />
      <TablerIcons.folders class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def folders(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 4h3l2 2h5a2 2 0 0 1 2 2v7a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2" />
      <path d="M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h2" />
    </svg>
    """
  end

  @doc """
  Renders the `forbid_2_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.forbid_2_filled />
      <TablerIcons.forbid_2_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def forbid_2_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-1.293 4.953a1 1 0 0 0 -1.414 0l-6 6l-.083 .094a1 1 0 0 0 1.497 1.32l6 -6l.083 -.094a1 1 0 0 0 -.083 -1.32z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `forbid_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.forbid_2 />
      <TablerIcons.forbid_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def forbid_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 15l6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `forbid_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.forbid_filled />
      <TablerIcons.forbid_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def forbid_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-7.387 4.87a1 1 0 0 0 -1.32 1.497l6 6l.094 .083a1 1 0 0 0 1.32 -1.497l-6 -6z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `forbid` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.forbid />
      <TablerIcons.forbid class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def forbid(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 9l6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `forklift` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.forklift />
      <TablerIcons.forklift class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def forklift(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M14 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 17l5 0" />
      <path d="M3 17v-6h13v6" />
      <path d="M5 11v-4h4" />
      <path d="M9 11v-6h4l3 6" />
      <path d="M22 15h-3v-10" />
      <path d="M16 13l3 0" />
    </svg>
    """
  end

  @doc """
  Renders the `forms` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.forms />
      <TablerIcons.forms class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def forms(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a3 3 0 0 0 -3 3v12a3 3 0 0 0 3 3" />
      <path d="M6 3a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3" />
      <path d="M13 7h7a1 1 0 0 1 1 1v8a1 1 0 0 1 -1 1h-7" />
      <path d="M5 7h-1a1 1 0 0 0 -1 1v8a1 1 0 0 0 1 1h1" />
      <path d="M17 12h.01" />
      <path d="M13 12h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `fountain_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fountain_filled />
      <TablerIcons.fountain_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fountain_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M15 2a4 4 0 0 1 4 4a1 1 0 0 1 -1.993 .117l-.007 -.117a2 2 0 0 0 -3.995 -.15l-.005 .15v9h1v-4a3 3 0 0 1 6 0a1 1 0 0 1 -1.993 .117l-.007 -.117a1 1 0 0 0 -1.993 -.117l-.007 .117v4h5a1 1 0 0 1 .993 .883l.007 .117v2a4 4 0 0 1 -3.8 3.995l-.2 .005h-12a4 4 0 0 1 -3.995 -3.8l-.005 -.2v-2a1 1 0 0 1 .883 -.993l.117 -.007h5v-4a1 1 0 0 0 -1.993 -.117l-.007 .117a1 1 0 0 1 -2 0a3 3 0 0 1 5.995 -.176l.005 .176v4h1v-9a2 2 0 1 0 -4 0a1 1 0 1 1 -2 0a4 4 0 0 1 7.001 -2.645a3.983 3.983 0 0 1 2.999 -1.355z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `fountain_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fountain_off />
      <TablerIcons.fountain_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fountain_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 16v-5a2 2 0 1 0 -4 0" />
      <path d="M15 16v-1m0 -4a2 2 0 1 1 4 0" />
      <path d="M12 16v-4m0 -4v-2a3 3 0 0 1 6 0" />
      <path d="M7.451 3.43a3 3 0 0 1 4.549 2.57" />
      <path d="M20 16h1v1m-.871 3.114a2.99 2.99 0 0 1 -2.129 .886h-12a3 3 0 0 1 -3 -3v-2h13" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `fountain` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fountain />
      <TablerIcons.fountain class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fountain(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 16v-5a2 2 0 1 0 -4 0" />
      <path d="M15 16v-5a2 2 0 1 1 4 0" />
      <path d="M12 16v-10a3 3 0 0 1 6 0" />
      <path d="M6 6a3 3 0 0 1 6 0" />
      <path d="M3 16h18v2a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3v-2z" />
    </svg>
    """
  end

  @doc """
  Renders the `frame_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.frame_off />
      <TablerIcons.frame_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def frame_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 7h3m4 0h9" />
      <path d="M4 17h13" />
      <path d="M7 7v13" />
      <path d="M17 4v9m0 4v3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `frame` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.frame />
      <TablerIcons.frame class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def frame(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 7l16 0" />
      <path d="M4 17l16 0" />
      <path d="M7 4l0 16" />
      <path d="M17 4l0 16" />
    </svg>
    """
  end

  @doc """
  Renders the `free_rights` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.free_rights />
      <TablerIcons.free_rights class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def free_rights(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M13.867 9.75c-.246 -.48 -.708 -.769 -1.2 -.75h-1.334c-.736 0 -1.333 .67 -1.333 1.5c0 .827 .597 1.499 1.333 1.499h1.334c.736 0 1.333 .671 1.333 1.5c0 .828 -.597 1.499 -1.333 1.499h-1.334c-.492 .019 -.954 -.27 -1.2 -.75" />
      <path d="M12 7v2" />
      <path d="M12 15v2" />
      <path d="M6 6l1.5 1.5" />
      <path d="M16.5 16.5l1.5 1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `freeze_column` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.freeze_column />
      <TablerIcons.freeze_column class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def freeze_column(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 9.5l-6 6" />
      <path d="M9 4l-6 6" />
      <path d="M9 15l-5 5" />
      <path d="M9 3v18" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
    </svg>
    """
  end

  @doc """
  Renders the `freeze_row_column` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.freeze_row_column />
      <TablerIcons.freeze_row_column class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def freeze_row_column(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
      <path d="M15 3l-12 12" />
      <path d="M9.5 3l-6 6" />
      <path d="M20 3.5l-5.5 5.5" />
      <path d="M9 15l-5 5" />
      <path d="M21 9h-12v12" />
    </svg>
    """
  end

  @doc """
  Renders the `freeze_row` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.freeze_row />
      <TablerIcons.freeze_row class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def freeze_row(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
      <path d="M21 9h-18" />
      <path d="M15 3l-6 6" />
      <path d="M9.5 3l-6 6" />
      <path d="M20 3.5l-5.5 5.5" />
    </svg>
    """
  end

  @doc """
  Renders the `fridge_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fridge_off />
      <TablerIcons.fridge_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fridge_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h10a2 2 0 0 1 2 2v10m0 4a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-14" />
      <path d="M5 10h5m4 0h5" />
      <path d="M9 13v3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `fridge` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.fridge />
      <TablerIcons.fridge class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def fridge(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M5 10h14" />
      <path d="M9 13v3" />
      <path d="M9 6v1" />
    </svg>
    """
  end

  @doc """
  Renders the `friends_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.friends_off />
      <TablerIcons.friends_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def friends_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5a2 2 0 0 0 2 2m2 -2a2 2 0 0 0 -2 -2" />
      <path d="M5 22v-5l-1 -1v-4a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4l-1 1v5" />
      <path d="M17 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M15 22v-4h-2l1.254 -3.763m1.036 -2.942a1 1 0 0 1 .71 -.295h2a1 1 0 0 1 1 1l1.503 4.508m-1.503 2.492v3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `friends` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.friends />
      <TablerIcons.friends class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def friends(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 22v-5l-1 -1v-4a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4l-1 1v5" />
      <path d="M17 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M15 22v-4h-2l2 -6a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1l2 6h-2v4" />
    </svg>
    """
  end

  @doc """
  Renders the `frustum_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.frustum_off />
      <TablerIcons.frustum_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def frustum_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.72 3.728l3.484 -1.558a1.95 1.95 0 0 1 1.59 0l4.496 2.01c.554 .246 .963 .736 1.112 1.328l2.538 10.158c.103 .412 .07 .832 -.075 1.206m-2.299 1.699l-5.725 2.738a1.945 1.945 0 0 1 -1.682 0l-7.035 -3.365a1.99 1.99 0 0 1 -1.064 -2.278l2.52 -10.08" />
      <path d="M18 4.82l-5.198 2.324a1.963 1.963 0 0 1 -1.602 0" />
      <path d="M12 7.32v.68m0 4v9.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `frustum_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.frustum_plus />
      <TablerIcons.frustum_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def frustum_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.841 21.309a1.945 1.945 0 0 1 -1.682 0l-7.035 -3.365a1.99 1.99 0 0 1 -1.064 -2.278l2.538 -10.158a1.98 1.98 0 0 1 1.11 -1.328l4.496 -2.01a1.95 1.95 0 0 1 1.59 0l4.496 2.01c.554 .246 .963 .736 1.112 1.328l1.67 6.683" />
      <path d="M18 4.82l-5.198 2.324a1.963 1.963 0 0 1 -1.602 0l-5.2 -2.325" />
      <path d="M12 7.32v14.18" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `frustum` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.frustum />
      <TablerIcons.frustum class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def frustum(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.402 5.508l2.538 10.158a1.99 1.99 0 0 1 -1.064 2.278l-7.036 3.366a1.945 1.945 0 0 1 -1.682 0l-7.035 -3.365a1.99 1.99 0 0 1 -1.064 -2.278l2.539 -10.159a1.98 1.98 0 0 1 1.11 -1.328l4.496 -2.01a1.95 1.95 0 0 1 1.59 0l4.496 2.01c.554 .246 .963 .736 1.112 1.328z" />
      <path d="M18 4.82l-5.198 2.324a1.963 1.963 0 0 1 -1.602 0l-5.2 -2.325" />
      <path d="M12 7.32v14.18" />
    </svg>
    """
  end

  @doc """
  Renders the `function_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.function_filled />
      <TablerIcons.function_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def function_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17.333 3a3.667 3.667 0 0 1 3.667 3.667v10.666a3.667 3.667 0 0 1 -3.667 3.667h-10.666a3.667 3.667 0 0 1 -3.667 -3.667v-10.666a3.667 3.667 0 0 1 3.667 -3.667zm-3.583 3a2.38 2.38 0 0 0 -2.37 2.145l-.285 2.855h-2.095l-.117 .007a1 1 0 0 0 .117 1.993h1.894l-.265 2.656l-.014 .071a.38 .38 0 0 1 -.365 .273a.25 .25 0 0 1 -.25 -.25v-.25l-.007 -.117a1 1 0 0 0 -1.993 .117v.25l.005 .154a2.25 2.25 0 0 0 2.245 2.096a2.38 2.38 0 0 0 2.37 -2.145l.284 -2.855h2.096l.117 -.007a1 1 0 0 0 -.117 -1.993h-1.895l.266 -2.656l.014 -.071a.381 .381 0 0 1 .365 -.273a.25 .25 0 0 1 .25 .25v.25l.007 .117a1 1 0 0 0 1.993 -.117v-.25l-.005 -.154a2.25 2.25 0 0 0 -2.245 -2.096z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `function_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.function_off />
      <TablerIcons.function_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def function_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15.5v.25c0 .69 .56 1.25 1.25 1.25a1.38 1.38 0 0 0 1.374 -1.244l.376 -3.756m.363 -3.63l.013 -.126a1.38 1.38 0 0 1 1.374 -1.244c.69 0 1.25 .56 1.25 1.25v.25" />
      <path d="M8 4h10a2 2 0 0 1 2 2v10m-.586 3.414a2 2 0 0 1 -1.414 .586h-12a2 2 0 0 1 -2 -2v-12c0 -.547 .22 -1.043 .576 -1.405" />
      <path d="M9 12h3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `function` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.function />
      <TablerIcons.function class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def function(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2.667a2.667 2.667 0 0 1 2.667 -2.667h10.666a2.667 2.667 0 0 1 2.667 2.667v10.666a2.667 2.667 0 0 1 -2.667 2.667h-10.666a2.667 2.667 0 0 1 -2.667 -2.667z" />
      <path d="M9 15.5v.25c0 .69 .56 1.25 1.25 1.25c.71 0 1.304 -.538 1.374 -1.244l.752 -7.512a1.381 1.381 0 0 1 1.374 -1.244c.69 0 1.25 .56 1.25 1.25v.25" />
      <path d="M9 12h6" />
    </svg>
    """
  end

  @doc """
  Renders the `garden_cart_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.garden_cart_off />
      <TablerIcons.garden_cart_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def garden_cart_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.733 15.732a2.5 2.5 0 1 0 3.544 3.527" />
      <path d="M6 8v11a1 1 0 0 0 1.806 .591l3.694 -5.091v.055" />
      <path d="M6 8h2m4 0h9l-3 6.01m-3.319 .693l-4.276 -.45a4 4 0 0 1 -3.296 -2.493l-2.853 -7.13a1 1 0 0 0 -.928 -.63h-1.323" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `garden_cart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.garden_cart />
      <TablerIcons.garden_cart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def garden_cart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.5 17.5m-2.5 0a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0 -5 0" />
      <path d="M6 8v11a1 1 0 0 0 1.806 .591l3.694 -5.091v.055" />
      <path d="M6 8h15l-3.5 7l-7.1 -.747a4 4 0 0 1 -3.296 -2.493l-2.853 -7.13a1 1 0 0 0 -.928 -.63h-1.323" />
    </svg>
    """
  end

  @doc """
  Renders the `gas_station_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gas_station_off />
      <TablerIcons.gas_station_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gas_station_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 11a2 2 0 0 1 2 2m3 3v-7l-3 -3" />
      <path d="M4 20v-14c0 -.548 .22 -1.044 .577 -1.405m3.423 -.595h4a2 2 0 0 1 2 2v4m0 4v6" />
      <path d="M3 20h12" />
      <path d="M18 7v1a1 1 0 0 0 1 1h1" />
      <path d="M4 11h7" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `gas_station` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gas_station />
      <TablerIcons.gas_station class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gas_station(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 11h1a2 2 0 0 1 2 2v3a1.5 1.5 0 0 0 3 0v-7l-3 -3" />
      <path d="M4 20v-14a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v14" />
      <path d="M3 20l12 0" />
      <path d="M18 7v1a1 1 0 0 0 1 1h1" />
      <path d="M4 11l10 0" />
    </svg>
    """
  end

  @doc """
  Renders the `gauge_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gauge_filled />
      <TablerIcons.gauge_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gauge_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-.293 3.953a1 1 0 0 0 -1.414 0l-2.59 2.59l-.083 .094l-.068 .1a2.001 2.001 0 0 0 -2.547 1.774l-.005 .149l.005 .15a2 2 0 1 0 3.917 -.701a.968 .968 0 0 0 .195 -.152l2.59 -2.59l.083 -.094a1 1 0 0 0 -.083 -1.32zm-4.707 -1.293a6 6 0 0 0 -6 6a1 1 0 0 0 2 0a4 4 0 0 1 4 -4a1 1 0 0 0 0 -2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `gauge_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gauge_off />
      <TablerIcons.gauge_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gauge_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.038 16.052a9 9 0 0 0 -12.067 -12.102m-2.333 1.686a9 9 0 1 0 12.73 12.726" />
      <path d="M11.283 11.303a1 1 0 0 0 1.419 1.41" />
      <path d="M14 10l2 -2" />
      <path d="M7 12c0 -1.386 .564 -2.64 1.475 -3.546m2.619 -1.372c.294 -.054 .597 -.082 .906 -.082" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `gauge` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gauge />
      <TablerIcons.gauge class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gauge(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M13.41 10.59l2.59 -2.59" />
      <path d="M7 12a5 5 0 0 1 5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `gavel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gavel />
      <TablerIcons.gavel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gavel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 10l7.383 7.418c.823 .82 .823 2.148 0 2.967a2.11 2.11 0 0 1 -2.976 0l-7.407 -7.385" />
      <path d="M6 9l4 4" />
      <path d="M13 10l-4 -4" />
      <path d="M3 21h7" />
      <path d="M6.793 15.793l-3.586 -3.586a1 1 0 0 1 0 -1.414l2.293 -2.293l.5 .5l3 -3l-.5 -.5l2.293 -2.293a1 1 0 0 1 1.414 0l3.586 3.586a1 1 0 0 1 0 1.414l-2.293 2.293l-.5 -.5l-3 3l.5 .5l-2.293 2.293a1 1 0 0 1 -1.414 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_agender` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_agender />
      <TablerIcons.gender_agender class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_agender(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-6 0a6 6 0 1 0 12 0a6 6 0 1 0 -12 0" />
      <path d="M7 12h11" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_androgyne` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_androgyne />
      <TablerIcons.gender_androgyne class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_androgyne(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 11l6 -6" />
      <path d="M9 15m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M19 9v-4h-4" />
      <path d="M16.5 10.5l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_bigender` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_bigender />
      <TablerIcons.gender_bigender class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_bigender(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 11m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M19 3l-5 5" />
      <path d="M15 3h4v4" />
      <path d="M11 16v6" />
      <path d="M8 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_demiboy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_demiboy />
      <TablerIcons.gender_demiboy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_demiboy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 14m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M19 5l-5.4 5.4" />
      <path d="M19 5h-5" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_demigirl` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_demigirl />
      <TablerIcons.gender_demigirl class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_demigirl(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M12 14v7" />
      <path d="M9 18h3" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_epicene` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_epicene />
      <TablerIcons.gender_epicene class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_epicene(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.536 15.536a5 5 0 1 0 -7.072 -7.072a5 5 0 0 0 7.072 7.072z" />
      <path d="M15.536 15.535l5.464 -5.535" />
      <path d="M3 14l5.464 -5.535" />
      <path d="M12 12h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_female` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_female />
      <TablerIcons.gender_female class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_female(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M12 14v7" />
      <path d="M9 18h6" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_femme` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_femme />
      <TablerIcons.gender_femme class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_femme(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M12 14v7" />
      <path d="M7 18h10" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_genderfluid` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_genderfluid />
      <TablerIcons.gender_genderfluid class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_genderfluid(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 15.464a4 4 0 1 0 4 -6.928a4 4 0 0 0 -4 6.928z" />
      <path d="M15.464 14l3 -5.196" />
      <path d="M5.536 15.195l3 -5.196" />
      <path d="M12 12h.01" />
      <path d="M9 9l-6 -6" />
      <path d="M5.5 8.5l3 -3" />
      <path d="M21 21l-6 -6" />
      <path d="M17 20l3 -3" />
      <path d="M3 7v-4h4" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_genderless` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_genderless />
      <TablerIcons.gender_genderless class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_genderless(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 10a5 5 0 1 1 0 10a5 5 0 0 1 0 -10z" />
      <path d="M12 10v-7" />
      <path d="M7 15h10" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_genderqueer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_genderqueer />
      <TablerIcons.gender_genderqueer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_genderqueer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 11a5 5 0 1 1 0 10a5 5 0 0 1 0 -10z" />
      <path d="M12 11v-8" />
      <path d="M14.5 4.5l-5 3" />
      <path d="M9.5 4.5l5 3" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_hermaphrodite` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_hermaphrodite />
      <TablerIcons.gender_hermaphrodite class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_hermaphrodite(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 14v7" />
      <path d="M9 18h6" />
      <path d="M12 6a4 4 0 1 1 0 8a4 4 0 0 1 0 -8z" />
      <path d="M15 3a3 3 0 1 1 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_intergender` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_intergender />
      <TablerIcons.gender_intergender class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_intergender(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 11.5l6.5 6.5v-4" />
      <path d="M11.5 13.5l6.5 6.5" />
      <path d="M9 4a5 5 0 1 1 0 10a5 5 0 0 1 0 -10z" />
      <path d="M14 20l2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_male` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_male />
      <TablerIcons.gender_male class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_male(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 14m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M19 5l-5.4 5.4" />
      <path d="M19 5h-5" />
      <path d="M19 5v5" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_neutrois` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_neutrois />
      <TablerIcons.gender_neutrois class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_neutrois(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 10a5 5 0 1 1 0 10a5 5 0 0 1 0 -10z" />
      <path d="M12 10v-7" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_third` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_third />
      <TablerIcons.gender_third class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_third(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 12a5 5 0 1 0 10 0a5 5 0 0 0 -10 0z" />
      <path d="M11 12h-3" />
      <path d="M8 12l-5 -4v8z" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_transgender` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_transgender />
      <TablerIcons.gender_transgender class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_transgender(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M15 9l6 -6" />
      <path d="M21 7v-4h-4" />
      <path d="M9 9l-6 -6" />
      <path d="M3 7v-4h4" />
      <path d="M5.5 8.5l3 -3" />
      <path d="M12 16v5" />
      <path d="M9.5 19h5" />
    </svg>
    """
  end

  @doc """
  Renders the `gender_trasvesti` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gender_trasvesti />
      <TablerIcons.gender_trasvesti class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gender_trasvesti(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 20a5 5 0 1 1 0 -10a5 5 0 0 1 0 10z" />
      <path d="M6 6l5.4 5.4" />
      <path d="M4 8l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `geometry` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.geometry />
      <TablerIcons.geometry class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def geometry(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 21l4 -12m2 0l1.48 4.439m.949 2.847l1.571 4.714" />
      <path d="M12 7m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M4 12c1.526 2.955 4.588 5 8 5c3.41 0 6.473 -2.048 8 -5" />
      <path d="M12 5v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `ghost_2_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ghost_2_filled />
      <TablerIcons.ghost_2_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ghost_2_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 1.999l.041 .002l.208 .003a8 8 0 0 1 7.747 7.747l.003 .248l.177 .006a3 3 0 0 1 2.819 2.819l.005 .176a3 3 0 0 1 -3 3l-.001 1.696l1.833 2.75a1 1 0 0 1 -.72 1.548l-.112 .006h-10c-3.445 .002 -6.327 -2.49 -6.901 -5.824l-.028 -.178l-.071 .001a3 3 0 0 1 -2.995 -2.824l-.005 -.175a3 3 0 0 1 3 -3l.004 -.25a8 8 0 0 1 7.996 -7.75zm0 10.001a2 2 0 0 0 -2 2a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1a2 2 0 0 0 -2 -2zm-1.99 -4l-.127 .007a1 1 0 0 0 .117 1.993l.127 -.007a1 1 0 0 0 -.117 -1.993zm4 0l-.127 .007a1 1 0 0 0 .117 1.993l.127 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `ghost_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ghost_2 />
      <TablerIcons.ghost_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ghost_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 9h.01" />
      <path d="M14 9h.01" />
      <path d="M12 3a7 7 0 0 1 7 7v1l1 0a2 2 0 1 1 0 4l-1 0v3l2 3h-10a6 6 0 0 1 -6 -5.775l0 -.226l-1 0a2 2 0 0 1 0 -4l1 0v-1a7 7 0 0 1 7 -7z" />
      <path d="M11 14h2a1 1 0 0 0 -2 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `ghost_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ghost_3 />
      <TablerIcons.ghost_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ghost_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 11a7 7 0 0 1 14 0v7a1.78 1.78 0 0 1 -3.1 1.4a1.65 1.65 0 0 0 -2.6 0a1.65 1.65 0 0 1 -2.6 0a1.65 1.65 0 0 0 -2.6 0a1.78 1.78 0 0 1 -3.1 -1.4v-7" />
      <path d="M10 10h.01" />
      <path d="M14 10h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `ghost_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ghost_filled />
      <TablerIcons.ghost_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ghost_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 3a8 8 0 0 1 7.996 7.75l.004 .25l-.001 6.954l.01 .103a2.78 2.78 0 0 1 -1.468 2.618l-.163 .08c-1.053 .475 -2.283 .248 -3.129 -.593l-.137 -.146a.65 .65 0 0 0 -1.024 0a2.65 2.65 0 0 1 -4.176 0a.65 .65 0 0 0 -.512 -.25c-.2 0 -.389 .092 -.55 .296a2.78 2.78 0 0 1 -4.859 -2.005l.008 -.091l.001 -6.966l.004 -.25a8 8 0 0 1 7.996 -7.75zm2.82 10.429a1 1 0 0 0 -1.391 -.25a2.5 2.5 0 0 1 -2.858 0a1 1 0 0 0 -1.142 1.642a4.5 4.5 0 0 0 5.142 0a1 1 0 0 0 .25 -1.392zm-4.81 -4.429l-.127 .007a1 1 0 0 0 .117 1.993l.127 -.007a1 1 0 0 0 -.117 -1.993zm4 0l-.127 .007a1 1 0 0 0 .117 1.993l.127 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `ghost_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ghost_off />
      <TablerIcons.ghost_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ghost_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.794 4.776a7 7 0 0 1 10.206 6.224v4m-.12 3.898a1.779 1.779 0 0 1 -2.98 .502a1.65 1.65 0 0 0 -2.6 0a1.65 1.65 0 0 1 -2.6 0a1.65 1.65 0 0 0 -2.6 0a1.78 1.78 0 0 1 -3.1 -1.4v-7c0 -1.683 .594 -3.227 1.583 -4.434" />
      <path d="M14 10h.01" />
      <path d="M10 14a3.5 3.5 0 0 0 4 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ghost` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ghost />
      <TablerIcons.ghost class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ghost(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 11a7 7 0 0 1 14 0v7a1.78 1.78 0 0 1 -3.1 1.4a1.65 1.65 0 0 0 -2.6 0a1.65 1.65 0 0 1 -2.6 0a1.65 1.65 0 0 0 -2.6 0a1.78 1.78 0 0 1 -3.1 -1.4v-7" />
      <path d="M10 10l.01 0" />
      <path d="M14 10l.01 0" />
      <path d="M10 14a3.5 3.5 0 0 0 4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `gif` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gif />
      <TablerIcons.gif class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gif(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8h-2a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2v-4h-1" />
      <path d="M12 8v8" />
      <path d="M16 12h3" />
      <path d="M20 8h-4v8" />
    </svg>
    """
  end

  @doc """
  Renders the `gift_card_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gift_card_filled />
      <TablerIcons.gift_card_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gift_card_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 4a4 4 0 0 1 3.995 3.8l.005 .2v8a4 4 0 0 1 -3.8 3.995l-.2 .005h-12a4 4 0 0 1 -3.995 -3.8l-.005 -.2v-8a4 4 0 0 1 3.8 -3.995l.2 -.005h12zm-5.493 5l-.19 .004c-.928 .052 -1.719 .583 -2.317 1.444c-.56 -.805 -1.288 -1.322 -2.139 -1.428l-.198 -.017l-.164 -.003l-.16 .005c-1.28 .086 -2.339 1.179 -2.339 2.495c0 1.226 1.222 2.211 2.453 2.447l.16 .026l-1.32 1.32l-.083 .094a1 1 0 0 0 0 1.226l.083 .094l.094 .083a1 1 0 0 0 1.226 0l.094 -.083l2.293 -2.292l2.293 2.292l.094 .083a1 1 0 0 0 1.403 -1.403l-.083 -.094l-1.32 -1.32c1.229 -.169 2.502 -1.11 2.606 -2.315l.007 -.158l-.005 -.163c-.08 -1.189 -1.02 -2.162 -2.175 -2.316l-.159 -.016l-.154 -.005zm-.025 2l.102 .009c.194 .04 .367 .21 .407 .406l.009 .085l-.012 .031l-.034 .04c-.13 .135 -.513 .369 -.836 .42l-.118 .009h-.602l.052 -.1l.088 -.156c.27 -.444 .574 -.696 .852 -.738l.092 -.006zm-4.964 0l.084 .005l.094 .02c.254 .077 .523 .32 .765 .718l.09 .157l.05 .1h-.601l-.106 -.008c-.398 -.057 -.894 -.4 -.894 -.492c0 -.23 .194 -.446 .416 -.491l.102 -.01z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `gift_card` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gift_card />
      <TablerIcons.gift_card class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gift_card(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v8a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M7 16l3 -3l3 3" />
      <path d="M8 13c-.789 0 -2 -.672 -2 -1.5s.711 -1.5 1.5 -1.5c1.128 -.02 2.077 1.17 2.5 3c.423 -1.83 1.372 -3.02 2.5 -3c.789 0 1.5 .672 1.5 1.5s-1.211 1.5 -2 1.5h-4z" />
    </svg>
    """
  end

  @doc """
  Renders the `gift_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gift_off />
      <TablerIcons.gift_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gift_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8h8a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-4m-4 0h-8a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h4" />
      <path d="M12 12v9" />
      <path d="M19 12v3m0 4a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-7" />
      <path d="M7.5 8a2.5 2.5 0 0 1 -2.457 -2.963m2.023 -2c.14 -.023 .286 -.037 .434 -.037c1.974 -.034 3.76 1.95 4.5 5c.74 -3.05 2.526 -5.034 4.5 -5a2.5 2.5 0 1 1 0 5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `gift` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gift />
      <TablerIcons.gift class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gift(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 8m0 1a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1z" />
      <path d="M12 8l0 13" />
      <path d="M19 12v7a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-7" />
      <path d="M7.5 8a2.5 2.5 0 0 1 0 -5a4.8 8 0 0 1 4.5 5a4.8 8 0 0 1 4.5 -5a2.5 2.5 0 0 1 0 5" />
    </svg>
    """
  end

  @doc """
  Renders the `git_branch_deleted` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.git_branch_deleted />
      <TablerIcons.git_branch_deleted class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def git_branch_deleted(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 8v8" />
      <path d="M9 18h6a2 2 0 0 0 2 -2v-5" />
      <path d="M14 14l3 -3l3 3" />
      <path d="M15 4l4 4" />
      <path d="M15 8l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `git_branch` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.git_branch />
      <TablerIcons.git_branch class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def git_branch(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 8l0 8" />
      <path d="M9 18h6a2 2 0 0 0 2 -2v-5" />
      <path d="M14 14l3 -3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `git_cherry_pick` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.git_cherry_pick />
      <TablerIcons.git_cherry_pick class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def git_cherry_pick(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M7 3v6" />
      <path d="M7 15v6" />
      <path d="M13 7h2.5l1.5 5l-1.5 5h-2.5" />
      <path d="M17 12h3" />
    </svg>
    """
  end

  @doc """
  Renders the `git_commit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.git_commit />
      <TablerIcons.git_commit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def git_commit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12 3l0 6" />
      <path d="M12 15l0 6" />
    </svg>
    """
  end

  @doc """
  Renders the `git_compare` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.git_compare />
      <TablerIcons.git_compare class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def git_compare(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M11 6h5a2 2 0 0 1 2 2v8" />
      <path d="M14 9l-3 -3l3 -3" />
      <path d="M13 18h-5a2 2 0 0 1 -2 -2v-8" />
      <path d="M10 15l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `git_fork` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.git_fork />
      <TablerIcons.git_fork class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def git_fork(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 8v2a2 2 0 0 0 2 2h6a2 2 0 0 0 2 -2v-2" />
      <path d="M12 12l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `git_merge` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.git_merge />
      <TablerIcons.git_merge class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def git_merge(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 8l0 8" />
      <path d="M7 8a4 4 0 0 0 4 4h4" />
    </svg>
    """
  end

  @doc """
  Renders the `git_pull_request_closed` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.git_pull_request_closed />
      <TablerIcons.git_pull_request_closed class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def git_pull_request_closed(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 8v8" />
      <path d="M18 11v5" />
      <path d="M16 4l4 4m0 -4l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `git_pull_request_draft` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.git_pull_request_draft />
      <TablerIcons.git_pull_request_draft class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def git_pull_request_draft(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 8v8" />
      <path d="M18 11h.01" />
      <path d="M18 6h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `git_pull_request` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.git_pull_request />
      <TablerIcons.git_pull_request class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def git_pull_request(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 8l0 8" />
      <path d="M11 6h5a2 2 0 0 1 2 2v8" />
      <path d="M14 9l-3 -3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `gizmo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gizmo />
      <TablerIcons.gizmo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gizmo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 19l-8 -5.5l-8 5.5" />
      <path d="M12 4v9.5" />
      <path d="M12 4m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M4 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M20 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `glass_full_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.glass_full_filled />
      <TablerIcons.glass_full_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def glass_full_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M5.004 10.229l-.003 -.186l.001 -.113l.008 -.071l1 -7a1 1 0 0 1 .877 -.853l.113 -.006h10a1 1 0 0 1 .968 .747l.022 .112l1.006 7.05l.004 .091c0 3.226 -2.56 5.564 -6 5.945v4.055h3a1 1 0 0 1 .117 1.993l-.117 .007h-8a1 1 0 0 1 -.117 -1.993l.117 -.007h3v-4.055c-3.358 -.371 -5.878 -2.609 -5.996 -5.716zm11.129 -6.229h-8.267l-.607 4.258a6.001 6.001 0 0 1 5.125 .787l.216 .155a4 4 0 0 0 4.32 .31l-.787 -5.51z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `glass_full` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.glass_full />
      <TablerIcons.glass_full class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def glass_full(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 21l8 0" />
      <path d="M12 15l0 6" />
      <path d="M17 3l1 7c0 3.012 -2.686 5 -6 5s-6 -1.988 -6 -5l1 -7h10z" />
      <path d="M6 10a5 5 0 0 1 6 0a5 5 0 0 0 6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `glass_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.glass_off />
      <TablerIcons.glass_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def glass_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 21l8 0" />
      <path d="M12 15l0 6" />
      <path d="M7 3h10l1 7a4.511 4.511 0 0 1 -1.053 2.94m-2.386 1.625a7.48 7.48 0 0 1 -2.561 .435c-3.314 0 -6 -1.988 -6 -5l.5 -3.495" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `glass` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.glass />
      <TablerIcons.glass class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def glass(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 21l8 0" />
      <path d="M12 15l0 6" />
      <path d="M17 3l1 7c0 3.012 -2.686 5 -6 5s-6 -1.988 -6 -5l1 -7h10z" />
    </svg>
    """
  end

  @doc """
  Renders the `globe_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.globe_filled />
      <TablerIcons.globe_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def globe_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11 4a5 5 0 1 1 -4.995 5.217l-.005 -.217l.005 -.217a5 5 0 0 1 4.995 -4.783z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M14.133 1.502a1 1 0 0 1 1.365 -.369a9.015 9.015 0 1 1 -10.404 14.622a1 1 0 1 1 1.312 -1.51a7.015 7.015 0 1 0 8.096 -11.378a1 1 0 0 1 -.369 -1.365z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M11 16a1 1 0 0 1 .993 .883l.007 .117v4a1 1 0 0 1 -1.993 .117l-.007 -.117v-4a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M15 20a1 1 0 0 1 .117 1.993l-.117 .007h-8a1 1 0 0 1 -.117 -1.993l.117 -.007h8z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `globe_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.globe_off />
      <TablerIcons.globe_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def globe_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.353 7.355a4 4 0 0 0 5.29 5.293m2.007 -2.009a4 4 0 0 0 -5.3 -5.284" />
      <path d="M5.75 15a8.015 8.015 0 0 0 9.792 .557m2.02 -1.998a8.015 8.015 0 0 0 -2.562 -11.559" />
      <path d="M11 17v4" />
      <path d="M7 21h8" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `globe` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.globe />
      <TablerIcons.globe class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def globe(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 9a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M5.75 15a8.015 8.015 0 1 0 9.25 -13" />
      <path d="M11 17v4" />
      <path d="M7 21h8" />
    </svg>
    """
  end

  @doc """
  Renders the `go_game` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.go_game />
      <TablerIcons.go_game class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def go_game(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M3 12h7m4 0h7" />
      <path d="M3 6h1m4 0h13" />
      <path d="M3 18h1m4 0h8m4 0h1" />
      <path d="M6 3v1m0 4v8m0 4v1" />
      <path d="M12 3v7m0 4v7" />
      <path d="M18 3v13m0 4v1" />
    </svg>
    """
  end

  @doc """
  Renders the `golf_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.golf_off />
      <TablerIcons.golf_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def golf_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18v-6m0 -4v-5l7 4l-5.07 2.897" />
      <path d="M9 17.67c-.62 .36 -1 .82 -1 1.33c0 1.1 1.8 2 4 2s4 -.9 4 -2c0 -.5 -.38 -.97 -1 -1.33" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `golf` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.golf />
      <TablerIcons.golf class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def golf(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18v-15l7 4l-7 4" />
      <path d="M9 17.67c-.62 .36 -1 .82 -1 1.33c0 1.1 1.8 2 4 2s4 -.9 4 -2c0 -.5 -.38 -.97 -1 -1.33" />
    </svg>
    """
  end

  @doc """
  Renders the `gps` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gps />
      <TablerIcons.gps class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gps(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 17l-1 -4l-4 -1l9 -4z" />
    </svg>
    """
  end

  @doc """
  Renders the `gradienter` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.gradienter />
      <TablerIcons.gradienter class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def gradienter(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.227 14c.917 4 4.497 7 8.773 7c4.277 0 7.858 -3 8.773 -7" />
      <path d="M20.78 10a9 9 0 0 0 -8.78 -7a8.985 8.985 0 0 0 -8.782 7" />
      <path d="M12 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `grain` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.grain />
      <TablerIcons.grain class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def grain(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.5 9.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M9.5 4.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M9.5 14.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M4.5 19.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M14.5 9.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M19.5 4.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M14.5 19.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M19.5 14.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `graph_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.graph_off />
      <TablerIcons.graph_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def graph_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h10a2 2 0 0 1 2 2v10m-.586 3.414a2 2 0 0 1 -1.414 .586h-12a2 2 0 0 1 -2 -2v-12c0 -.547 .22 -1.043 .576 -1.405" />
      <path d="M7 14l3 -3l2 2l.5 -.5m2 -2l.5 -.5l2 2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `graph` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.graph />
      <TablerIcons.graph class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def graph(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 18v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M7 14l3 -3l2 2l3 -3l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `grave_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.grave_2 />
      <TablerIcons.grave_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def grave_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 16.17v-9.17a3 3 0 0 1 3 -3h4a3 3 0 0 1 3 3v9.171" />
      <path d="M12 7v5" />
      <path d="M10 9h4" />
      <path d="M5 21v-2a3 3 0 0 1 3 -3h8a3 3 0 0 1 3 3v2h-14z" />
    </svg>
    """
  end

  @doc """
  Renders the `grave` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.grave />
      <TablerIcons.grave class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def grave(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 21v-2a3 3 0 0 1 3 -3h8a3 3 0 0 1 3 3v2h-14z" />
      <path d="M10 16v-5h-4v-4h4v-4h4v4h4v4h-4v5" />
    </svg>
    """
  end

  @doc """
  Renders the `grid_dots` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.grid_dots />
      <TablerIcons.grid_dots class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def grid_dots(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M19 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M5 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M19 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M5 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M19 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `grid_pattern` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.grid_pattern />
      <TablerIcons.grid_pattern class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def grid_pattern(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M10 8v8" />
      <path d="M14 8v8" />
      <path d="M8 10h8" />
      <path d="M8 14h8" />
    </svg>
    """
  end

  @doc """
  Renders the `grill_fork` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.grill_fork />
      <TablerIcons.grill_fork class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def grill_fork(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5l11.5 11.5" />
      <path d="M19.347 16.575l1.08 1.079a1.96 1.96 0 0 1 -2.773 2.772l-1.08 -1.079a1.96 1.96 0 0 1 2.773 -2.772z" />
      <path d="M3 7l3.05 3.15a2.9 2.9 0 0 0 4.1 -4.1l-3.15 -3.05" />
    </svg>
    """
  end

  @doc """
  Renders the `grill_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.grill_off />
      <TablerIcons.grill_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def grill_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8h-3a6 6 0 0 0 6 6h2c.315 0 .624 -.024 .926 -.071m2.786 -1.214a5.99 5.99 0 0 0 2.284 -4.49l0 -.225h-7" />
      <path d="M18.827 18.815a2 2 0 1 1 -2.663 -2.633" />
      <path d="M9 14l-3 6" />
      <path d="M15 18h-8" />
      <path d="M15 5v-1" />
      <path d="M12 5v-1" />
      <path d="M9 5v-1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `grill_spatula` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.grill_spatula />
      <TablerIcons.grill_spatula class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def grill_spatula(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.2 10.2l6.3 6.3" />
      <path d="M19.347 16.575l1.08 1.079a1.96 1.96 0 0 1 -2.773 2.772l-1.08 -1.079a1.96 1.96 0 0 1 2.773 -2.772z" />
      <path d="M3 7l3.05 3.15a2.9 2.9 0 0 0 4.1 -4.1l-3.15 -3.05l-4 4z" />
    </svg>
    """
  end

  @doc """
  Renders the `grill` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.grill />
      <TablerIcons.grill class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def grill(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 8h-14a6 6 0 0 0 6 6h2a6 6 0 0 0 6 -5.775l0 -.225z" />
      <path d="M17 20a2 2 0 1 1 0 -4a2 2 0 0 1 0 4z" />
      <path d="M15 14l1 2" />
      <path d="M9 14l-3 6" />
      <path d="M15 18h-8" />
      <path d="M15 5v-1" />
      <path d="M12 5v-1" />
      <path d="M9 5v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `grip_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.grip_horizontal />
      <TablerIcons.grip_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def grip_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 9m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M5 15m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 9m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 15m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M19 9m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M19 15m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `grip_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.grip_vertical />
      <TablerIcons.grip_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def grip_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M9 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M9 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M15 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M15 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M15 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `growth` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.growth />
      <TablerIcons.growth class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def growth(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.5 15a4.5 4.5 0 0 0 -4.5 4.5m4.5 -8.5a4.5 4.5 0 0 0 -4.5 4.5m4.5 -8.5a4.5 4.5 0 0 0 -4.5 4.5m-4 3.5c2.21 0 4 2.015 4 4.5m-4 -8.5c2.21 0 4 2.015 4 4.5m-4 -8.5c2.21 0 4 2.015 4 4.5m0 -7.5v6" />
    </svg>
    """
  end

  @doc """
  Renders the `guitar_pick_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.guitar_pick_filled />
      <TablerIcons.guitar_pick_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def guitar_pick_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c-1.613 0 -2.882 .104 -3.825 .323l-.23 .057c-3.019 .708 -4.945 2.503 -4.945 5.62c0 3.367 1.939 8.274 4.22 11.125c.32 .4 .664 .786 1.03 1.158l.367 .36a4.904 4.904 0 0 0 6.752 .011a15.04 15.04 0 0 0 1.41 -1.528c2.491 -3.113 4.221 -7.294 4.221 -11.126c0 -3.025 -1.813 -4.806 -4.71 -5.562l-.266 -.066c-.936 -.25 -2.281 -.372 -4.024 -.372z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `guitar_pick` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.guitar_pick />
      <TablerIcons.guitar_pick class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def guitar_pick(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 18.5c2 -2.5 4 -6.5 4 -10.5c0 -2.946 -2.084 -4.157 -4.204 -4.654c-.864 -.23 -2.13 -.346 -3.796 -.346c-1.667 0 -2.932 .115 -3.796 .346c-2.12 .497 -4.204 1.708 -4.204 4.654c0 3.312 2 8 4 10.5c.297 .37 .618 .731 .963 1.081l.354 .347a3.9 3.9 0 0 0 5.364 0a14.05 14.05 0 0 0 1.319 -1.428z" />
    </svg>
    """
  end

  @doc """
  Renders the `h_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.h_1 />
      <TablerIcons.h_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def h_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 18v-8l-2 2" />
      <path d="M4 6v12" />
      <path d="M12 6v12" />
      <path d="M11 18h2" />
      <path d="M3 18h2" />
      <path d="M4 12h8" />
      <path d="M3 6h2" />
      <path d="M11 6h2" />
    </svg>
    """
  end

  @doc """
  Renders the `h_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.h_2 />
      <TablerIcons.h_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def h_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 12a2 2 0 1 1 4 0c0 .591 -.417 1.318 -.816 1.858l-3.184 4.143l4 0" />
      <path d="M4 6v12" />
      <path d="M12 6v12" />
      <path d="M11 18h2" />
      <path d="M3 18h2" />
      <path d="M4 12h8" />
      <path d="M3 6h2" />
      <path d="M11 6h2" />
    </svg>
    """
  end

  @doc """
  Renders the `h_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.h_3 />
      <TablerIcons.h_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def h_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 14a2 2 0 1 0 -2 -2" />
      <path d="M17 16a2 2 0 1 0 2 -2" />
      <path d="M4 6v12" />
      <path d="M12 6v12" />
      <path d="M11 18h2" />
      <path d="M3 18h2" />
      <path d="M4 12h8" />
      <path d="M3 6h2" />
      <path d="M11 6h2" />
    </svg>
    """
  end

  @doc """
  Renders the `h_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.h_4 />
      <TablerIcons.h_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def h_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 18v-8l-4 6h5" />
      <path d="M4 6v12" />
      <path d="M12 6v12" />
      <path d="M11 18h2" />
      <path d="M3 18h2" />
      <path d="M4 12h8" />
      <path d="M3 6h2" />
      <path d="M11 6h2" />
    </svg>
    """
  end

  @doc """
  Renders the `h_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.h_5 />
      <TablerIcons.h_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def h_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 18h2a2 2 0 1 0 0 -4h-2v-4h4" />
      <path d="M4 6v12" />
      <path d="M12 6v12" />
      <path d="M11 18h2" />
      <path d="M3 18h2" />
      <path d="M4 12h8" />
      <path d="M3 6h2" />
      <path d="M11 6h2" />
    </svg>
    """
  end

  @doc """
  Renders the `h_6` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.h_6 />
      <TablerIcons.h_6 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def h_6(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 14a2 2 0 1 0 0 4a2 2 0 0 0 0 -4z" />
      <path d="M21 12a2 2 0 1 0 -4 0v4" />
      <path d="M4 6v12" />
      <path d="M12 6v12" />
      <path d="M11 18h2" />
      <path d="M3 18h2" />
      <path d="M4 12h8" />
      <path d="M3 6h2" />
      <path d="M11 6h2" />
    </svg>
    """
  end

  @doc """
  Renders the `hammer_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hammer_off />
      <TablerIcons.hammer_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hammer_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.698 10.72l-6.668 6.698a2.091 2.091 0 0 0 0 2.967a2.11 2.11 0 0 0 2.976 0l6.696 -6.676" />
      <path d="M18.713 14.702l2 -2a1 1 0 0 0 0 -1.414l-7.586 -7.586a1 1 0 0 0 -1.414 0l-2 2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `hammer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hammer />
      <TablerIcons.hammer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hammer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.414 10l-7.383 7.418a2.091 2.091 0 0 0 0 2.967a2.11 2.11 0 0 0 2.976 0l7.407 -7.385" />
      <path d="M18.121 15.293l2.586 -2.586a1 1 0 0 0 0 -1.414l-7.586 -7.586a1 1 0 0 0 -1.414 0l-2.586 2.586a1 1 0 0 0 0 1.414l7.586 7.586a1 1 0 0 0 1.414 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `hand_click` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hand_click />
      <TablerIcons.hand_click class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hand_click(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 13v-8.5a1.5 1.5 0 0 1 3 0v7.5" />
      <path d="M11 11.5v-2a1.5 1.5 0 0 1 3 0v2.5" />
      <path d="M14 10.5a1.5 1.5 0 0 1 3 0v1.5" />
      <path d="M17 11.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7l-.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47" />
      <path d="M5 3l-1 -1" />
      <path d="M4 7h-1" />
      <path d="M14 3l1 -1" />
      <path d="M15 6h1" />
    </svg>
    """
  end

  @doc """
  Renders the `hand_finger_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hand_finger_off />
      <TablerIcons.hand_finger_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hand_finger_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 13v-5" />
      <path d="M8.06 4.077a1.5 1.5 0 0 1 2.94 .423v2.5m0 4v1" />
      <path d="M12.063 8.065a1.5 1.5 0 0 1 1.937 1.435v.5" />
      <path d="M14.06 10.082a1.5 1.5 0 0 1 2.94 .418v1.5" />
      <path d="M17 11.5a1.5 1.5 0 0 1 3 0v4.5m-.88 3.129a6 6 0 0 1 -5.12 2.871h-2h.208a6 6 0 0 1 -5.012 -2.7l-.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `hand_finger` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hand_finger />
      <TablerIcons.hand_finger class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hand_finger(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 13v-8.5a1.5 1.5 0 0 1 3 0v7.5" />
      <path d="M11 11.5v-2a1.5 1.5 0 1 1 3 0v2.5" />
      <path d="M14 10.5a1.5 1.5 0 0 1 3 0v1.5" />
      <path d="M17 11.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47" />
    </svg>
    """
  end

  @doc """
  Renders the `hand_grab` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hand_grab />
      <TablerIcons.hand_grab class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hand_grab(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 11v-3.5a1.5 1.5 0 0 1 3 0v2.5" />
      <path d="M11 9.5v-3a1.5 1.5 0 0 1 3 0v3.5" />
      <path d="M14 7.5a1.5 1.5 0 0 1 3 0v2.5" />
      <path d="M17 9.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7l-.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47" />
    </svg>
    """
  end

  @doc """
  Renders the `hand_little_finger` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hand_little_finger />
      <TablerIcons.hand_little_finger class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hand_little_finger(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 13v-2.5a1.5 1.5 0 0 1 3 0v1.5" />
      <path d="M11 11.5v-1a1.5 1.5 0 0 1 3 0v1.5" />
      <path d="M17 12v-5.5a1.5 1.5 0 0 1 3 0v9.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47" />
      <path d="M14 10.5a1.5 1.5 0 0 1 3 0v1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `hand_middle_finger` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hand_middle_finger />
      <TablerIcons.hand_middle_finger class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hand_middle_finger(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 13v-2.5a1.5 1.5 0 0 1 3 0v1.5" />
      <path d="M14 10.5a1.5 1.5 0 0 1 3 0v1.5" />
      <path d="M17 11.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47" />
      <path d="M11 11.5v-8a1.5 1.5 0 1 1 3 0v8.5" />
    </svg>
    """
  end

  @doc """
  Renders the `hand_move` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hand_move />
      <TablerIcons.hand_move class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hand_move(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 13v-8.5a1.5 1.5 0 0 1 3 0v7.5" />
      <path d="M11 11.5v-2a1.5 1.5 0 0 1 3 0v2.5" />
      <path d="M14 10.5a1.5 1.5 0 0 1 3 0v1.5" />
      <path d="M17 11.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7l-.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47" />
      <path d="M2.541 5.594a13.487 13.487 0 0 1 2.46 -1.427" />
      <path d="M14 3.458c1.32 .354 2.558 .902 3.685 1.612" />
    </svg>
    """
  end

  @doc """
  Renders the `hand_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hand_off />
      <TablerIcons.hand_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hand_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M8 13.5v-5.5m.44 -3.562a1.5 1.5 0 0 1 2.56 1.062v1.5m0 4.008v.992m0 -6.5v-2a1.5 1.5 0 1 1 3 0v6.5m0 -4.5a1.5 1.5 0 0 1 3 0v6.5m0 -4.5a1.5 1.5 0 0 1 3 0v8.5a6 6 0 0 1 -6 6h-2c-2.114 -.292 -3.956 -1.397 -5 -3l-2.7 -5.25a1.7 1.7 0 0 1 2.75 -2l.9 1.75" />
    </svg>
    """
  end

  @doc """
  Renders the `hand_ring_finger` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hand_ring_finger />
      <TablerIcons.hand_ring_finger class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hand_ring_finger(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 13v-2.5a1.5 1.5 0 0 1 3 0v1.5" />
      <path d="M17 11.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47" />
      <path d="M11 11.5v-2a1.5 1.5 0 1 1 3 0v2.5" />
      <path d="M14 12v-6.5a1.5 1.5 0 0 1 3 0v6.5" />
    </svg>
    """
  end

  @doc """
  Renders the `hand_rock` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hand_rock />
      <TablerIcons.hand_rock class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hand_rock(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 11.5v-1a1.5 1.5 0 0 1 3 0v1.5" />
      <path d="M17 12v-6.5a1.5 1.5 0 0 1 3 0v10.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47" />
      <path d="M14 10.5a1.5 1.5 0 0 1 3 0v1.5" />
      <path d="M8 13v-8.5a1.5 1.5 0 0 1 3 0v7.5" />
    </svg>
    """
  end

  @doc """
  Renders the `hand_sanitizer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hand_sanitizer />
      <TablerIcons.hand_sanitizer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hand_sanitizer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 21h10v-10a3 3 0 0 0 -3 -3h-4a3 3 0 0 0 -3 3v10z" />
      <path d="M15 3h-6a2 2 0 0 0 -2 2" />
      <path d="M12 3v5" />
      <path d="M12 11v4" />
      <path d="M10 13h4" />
    </svg>
    """
  end

  @doc """
  Renders the `hand_stop` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hand_stop />
      <TablerIcons.hand_stop class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hand_stop(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 13v-7.5a1.5 1.5 0 0 1 3 0v6.5" />
      <path d="M11 5.5v-2a1.5 1.5 0 1 1 3 0v8.5" />
      <path d="M14 5.5a1.5 1.5 0 0 1 3 0v6.5" />
      <path d="M17 7.5a1.5 1.5 0 0 1 3 0v8.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47" />
    </svg>
    """
  end

  @doc """
  Renders the `hand_three_fingers` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hand_three_fingers />
      <TablerIcons.hand_three_fingers class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hand_three_fingers(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 13v-8.5a1.5 1.5 0 0 1 3 0v7.5" />
      <path d="M17 11.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47" />
      <path d="M11 5.5v-2a1.5 1.5 0 1 1 3 0v8.5" />
      <path d="M14 5.5a1.5 1.5 0 0 1 3 0v6.5" />
    </svg>
    """
  end

  @doc """
  Renders the `hand_two_fingers` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hand_two_fingers />
      <TablerIcons.hand_two_fingers class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hand_two_fingers(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 13v-8.5a1.5 1.5 0 0 1 3 0v7.5" />
      <path d="M17 11.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7a69.74 69.74 0 0 1 -.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47" />
      <path d="M14 10.5a1.5 1.5 0 0 1 3 0v1.5" />
      <path d="M11 5.5v-2a1.5 1.5 0 1 1 3 0v8.5" />
    </svg>
    """
  end

  @doc """
  Renders the `hanger_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hanger_2 />
      <TablerIcons.hanger_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hanger_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9l-7.971 4.428a2 2 0 0 0 -1.029 1.749v.823a2 2 0 0 0 2 2h1" />
      <path d="M18 18h1a2 2 0 0 0 2 -2v-.823a2 2 0 0 0 -1.029 -1.749l-7.971 -4.428c-1.457 -.81 -1.993 -2.333 -2 -4a2 2 0 1 1 4 0" />
      <path d="M6 16m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v1a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `hanger_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hanger_off />
      <TablerIcons.hanger_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hanger_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 6a2 2 0 1 0 -4 0m6.506 6.506l3.461 1.922a2 2 0 0 1 1.029 1.749v.823m-2 2h-14a2 2 0 0 1 -2 -2v-.823a2 2 0 0 1 1.029 -1.749l6.673 -3.707" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `hanger` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hanger />
      <TablerIcons.hanger class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hanger(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 6a2 2 0 1 0 -4 0c0 1.667 .67 3 2 4h-.008l7.971 4.428a2 2 0 0 1 1.029 1.749v.823a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-.823a2 2 0 0 1 1.029 -1.749l7.971 -4.428" />
    </svg>
    """
  end

  @doc """
  Renders the `hash` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hash />
      <TablerIcons.hash class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hash(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 9l14 0" />
      <path d="M5 15l14 0" />
      <path d="M11 4l-4 16" />
      <path d="M17 4l-4 16" />
    </svg>
    """
  end

  @doc """
  Renders the `haze_moon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.haze_moon />
      <TablerIcons.haze_moon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def haze_moon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 16h18" />
      <path d="M3 20h18" />
      <path d="M8.296 16c-2.268 -1.4 -3.598 -4.087 -3.237 -6.916c.443 -3.48 3.308 -6.083 6.698 -6.084v.006h.296c-1.991 1.916 -2.377 5.03 -.918 7.405c1.459 2.374 4.346 3.33 6.865 2.275a6.888 6.888 0 0 1 -2.777 3.314" />
    </svg>
    """
  end

  @doc """
  Renders the `haze` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.haze />
      <TablerIcons.haze class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def haze(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h1" />
      <path d="M12 3v1" />
      <path d="M20 12h1" />
      <path d="M5.6 5.6l.7 .7" />
      <path d="M18.4 5.6l-.7 .7" />
      <path d="M8 12a4 4 0 1 1 8 0" />
      <path d="M3 16h18" />
      <path d="M3 20h18" />
    </svg>
    """
  end

  @doc """
  Renders the `hdr` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hdr />
      <TablerIcons.hdr class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hdr(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 16v-8" />
      <path d="M7 8v8" />
      <path d="M3 12h4" />
      <path d="M10 8v8h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-2z" />
      <path d="M17 12h2a2 2 0 1 0 0 -4h-2v8m4 0l-3 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `heading_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heading_off />
      <TablerIcons.heading_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heading_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 12h5m4 0h1" />
      <path d="M7 7v12" />
      <path d="M17 5v8m0 4v2" />
      <path d="M15 19h4" />
      <path d="M15 5h4" />
      <path d="M5 19h4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `heading` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heading />
      <TablerIcons.heading class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heading(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 12h10" />
      <path d="M7 5v14" />
      <path d="M17 5v14" />
      <path d="M15 19h4" />
      <path d="M15 5h4" />
      <path d="M5 19h4" />
      <path d="M5 5h4" />
    </svg>
    """
  end

  @doc """
  Renders the `headphones_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.headphones_filled />
      <TablerIcons.headphones_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def headphones_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M21 18a3 3 0 0 1 -2.824 2.995l-.176 .005h-1a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-3a3 3 0 0 1 2.824 -2.995l.176 -.005h1c.351 0 .688 .06 1 .171v-.171a7 7 0 0 0 -13.996 -.24l-.004 .24v.17c.25 -.088 .516 -.144 .791 -.163l.209 -.007h1a3 3 0 0 1 2.995 2.824l.005 .176v3a3 3 0 0 1 -2.824 2.995l-.176 .005h-1a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-6a9 9 0 0 1 17.996 -.265l.004 .265v6z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `headphones_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.headphones_off />
      <TablerIcons.headphones_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def headphones_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M4 13m0 2a2 2 0 0 1 2 -2h1a2 2 0 0 1 2 2v3a2 2 0 0 1 -2 2h-1a2 2 0 0 1 -2 -2z" />
      <path d="M17 13h1a2 2 0 0 1 2 2v1m-.589 3.417c-.361 .36 -.86 .583 -1.411 .583h-1a2 2 0 0 1 -2 -2v-3" />
      <path d="M4 15v-3c0 -2.21 .896 -4.21 2.344 -5.658m2.369 -1.638a8 8 0 0 1 11.287 7.296v3" />
    </svg>
    """
  end

  @doc """
  Renders the `headphones` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.headphones />
      <TablerIcons.headphones class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def headphones(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 13m0 2a2 2 0 0 1 2 -2h1a2 2 0 0 1 2 2v3a2 2 0 0 1 -2 2h-1a2 2 0 0 1 -2 -2z" />
      <path d="M15 13m0 2a2 2 0 0 1 2 -2h1a2 2 0 0 1 2 2v3a2 2 0 0 1 -2 2h-1a2 2 0 0 1 -2 -2z" />
      <path d="M4 15v-3a8 8 0 0 1 16 0v3" />
    </svg>
    """
  end

  @doc """
  Renders the `headset_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.headset_off />
      <TablerIcons.headset_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def headset_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 14v-3c0 -1.953 .7 -3.742 1.862 -5.13m2.182 -1.825a8 8 0 0 1 11.956 6.955v3" />
      <path d="M18 19c0 1.657 -2.686 3 -6 3" />
      <path d="M4 14a2 2 0 0 1 2 -2h1a2 2 0 0 1 2 2v3a2 2 0 0 1 -2 2h-1a2 2 0 0 1 -2 -2v-3z" />
      <path d="M16.169 12.18c.253 -.115 .534 -.18 .831 -.18h1a2 2 0 0 1 2 2v2m-1.183 2.826c-.25 .112 -.526 .174 -.817 .174h-1a2 2 0 0 1 -2 -2v-2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `headset` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.headset />
      <TablerIcons.headset class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def headset(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 14v-3a8 8 0 1 1 16 0v3" />
      <path d="M18 19c0 1.657 -2.686 3 -6 3" />
      <path d="M4 14a2 2 0 0 1 2 -2h1a2 2 0 0 1 2 2v3a2 2 0 0 1 -2 2h-1a2 2 0 0 1 -2 -2v-3z" />
      <path d="M15 14a2 2 0 0 1 2 -2h1a2 2 0 0 1 2 2v3a2 2 0 0 1 -2 2h-1a2 2 0 0 1 -2 -2v-3z" />
    </svg>
    """
  end

  @doc """
  Renders the `health_recognition` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.health_recognition />
      <TablerIcons.health_recognition class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def health_recognition(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v-2a2 2 0 0 1 2 -2h2" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2a2 2 0 0 0 2 -2v-2" />
      <path d="M8.603 9.61a2.04 2.04 0 0 1 2.912 0l.485 .39l.5 -.396a2.035 2.035 0 0 1 2.897 .007a2.104 2.104 0 0 1 0 2.949l-3.397 3.44l-3.397 -3.44a2.104 2.104 0 0 1 0 -2.95z" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_bolt />
      <TablerIcons.heart_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19l-1 1l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 0 1 8.003 5.997" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_broken` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_broken />
      <TablerIcons.heart_broken class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_broken(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.5 12.572l-7.5 7.428l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572" />
      <path d="M12 6l-2 4l4 3l-2 4v3" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_cancel />
      <TablerIcons.heart_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 0 1 7.993 6.01" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_check />
      <TablerIcons.heart_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.5 12.572l-3 2.928m-5.5 3.5a8916.99 8916.99 0 0 0 -6.5 -6.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_code />
      <TablerIcons.heart_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.5 12.572l-.536 .53m-7.91 5.96l-6.554 -6.489a5 5 0 1 1 7.5 -6.567a5 5 0 1 1 7.5 6.572" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_cog />
      <TablerIcons.heart_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 0 1 8.21 5.697" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_discount` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_discount />
      <TablerIcons.heart_discount class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_discount(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19l-1 1l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572" />
      <path d="M16 21l5 -5" />
      <path d="M21 21v.01" />
      <path d="M16 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_dollar />
      <TablerIcons.heart_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19l-1 1l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 0 1 8.785 4.444" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_down />
      <TablerIcons.heart_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.907 6.12" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_exclamation />
      <TablerIcons.heart_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.03 17l-3.03 3l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.922 6.102" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_filled />
      <TablerIcons.heart_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M6.979 3.074a6 6 0 0 1 4.988 1.425l.037 .033l.034 -.03a6 6 0 0 1 4.733 -1.44l.246 .036a6 6 0 0 1 3.364 10.008l-.18 .185l-.048 .041l-7.45 7.379a1 1 0 0 1 -1.313 .082l-.094 -.082l-7.493 -7.422a6 6 0 0 1 3.176 -10.215z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `heart_handshake` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_handshake />
      <TablerIcons.heart_handshake class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_handshake(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.5 12.572l-7.5 7.428l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572" />
      <path d="M12 6l-3.293 3.293a1 1 0 0 0 0 1.414l.543 .543c.69 .69 1.81 .69 2.5 0l1 -1a3.182 3.182 0 0 1 4.5 0l2.25 2.25" />
      <path d="M12.5 15.5l2 2" />
      <path d="M15 13l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_minus />
      <TablerIcons.heart_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.5 12.572l-2.494 2.47m-5.006 4.958l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_off />
      <TablerIcons.heart_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M19.5 12.572l-1.5 1.428m-2 2l-4 4l-7.5 -7.428a5 5 0 0 1 -1.288 -5.068a4.976 4.976 0 0 1 1.788 -2.504m3 -1c1.56 0 3.05 .727 4 2a5 5 0 1 1 7.5 6.572" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_pause />
      <TablerIcons.heart_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.5 12.572l-.784 .777m-5.725 5.67l-.991 .981l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_pin />
      <TablerIcons.heart_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 0 1 8.5 5.179" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_plus />
      <TablerIcons.heart_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.96 6.053" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_question />
      <TablerIcons.heart_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.105 17.915l-2.105 2.085l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 0 1 8.524 5.127" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_rate_monitor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_rate_monitor />
      <TablerIcons.heart_rate_monitor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_rate_monitor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4m0 1a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1z" />
      <path d="M7 20h10" />
      <path d="M9 16v4" />
      <path d="M15 16v4" />
      <path d="M7 10h2l2 3l2 -6l1 3h3" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_search />
      <TablerIcons.heart_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20l-.975 -.966l-6.525 -6.462a5 5 0 1 1 7.5 -6.566a5 5 0 0 1 8.37 5.428" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_share />
      <TablerIcons.heart_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.5 12.572l-.468 .464m-6.077 6.019l-.955 .945l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_star />
      <TablerIcons.heart_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.73 17.753l-5.23 -5.181a5 5 0 1 1 7.5 -6.566a5 5 0 0 1 8.563 5.041" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_up />
      <TablerIcons.heart_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.893 6.139" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `heart_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart_x />
      <TablerIcons.heart_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.5 12.572l-.5 .428m-6 6l-1 1l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heart />
      <TablerIcons.heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.5 12.572l-7.5 7.428l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572" />
    </svg>
    """
  end

  @doc """
  Renders the `heartbeat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.heartbeat />
      <TablerIcons.heartbeat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def heartbeat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.5 13.572l-7.5 7.428l-2.896 -2.868m-6.117 -8.104a5 5 0 0 1 9.013 -3.022a5 5 0 1 1 7.5 6.572" />
      <path d="M3 13h2l2 3l2 -6l1 3h3" />
    </svg>
    """
  end

  @doc """
  Renders the `hearts_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hearts_off />
      <TablerIcons.hearts_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hearts_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.017 18l-2.017 2l-7.5 -7.428a5 5 0 0 1 .49 -7.586m3.01 -1a5 5 0 0 1 4 2.018a5 5 0 0 1 8.153 5.784" />
      <path d="M11.814 11.814a2.81 2.81 0 0 0 -.007 3.948l4.182 4.238l2.01 -2.021m1.977 -1.99l.211 -.212a2.81 2.81 0 0 0 0 -3.948a2.747 2.747 0 0 0 -3.91 -.007l-.283 .178" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `hearts` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hearts />
      <TablerIcons.hearts class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hearts(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.017 18l-2.017 2l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 0 1 8.153 5.784" />
      <path d="M15.99 20l4.197 -4.223a2.81 2.81 0 0 0 0 -3.948a2.747 2.747 0 0 0 -3.91 -.007l-.28 .282l-.279 -.283a2.747 2.747 0 0 0 -3.91 -.007a2.81 2.81 0 0 0 -.007 3.948l4.182 4.238z" />
    </svg>
    """
  end

  @doc """
  Renders the `helicopter_landing` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.helicopter_landing />
      <TablerIcons.helicopter_landing class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def helicopter_landing(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 8l0 8" />
      <path d="M9 12l6 0" />
      <path d="M15 8l0 8" />
    </svg>
    """
  end

  @doc """
  Renders the `helicopter` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.helicopter />
      <TablerIcons.helicopter class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def helicopter(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 10l1 2h6" />
      <path d="M12 9a2 2 0 0 0 -2 2v3c0 1.1 .9 2 2 2h7a2 2 0 0 0 2 -2c0 -3.31 -3.13 -5 -7 -5h-2z" />
      <path d="M13 9l0 -3" />
      <path d="M5 6l15 0" />
      <path d="M15 9.1v3.9h5.5" />
      <path d="M15 19l0 -3" />
      <path d="M19 19l-8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `helmet_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.helmet_off />
      <TablerIcons.helmet_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def helmet_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.633 4.654a9 9 0 0 1 11.718 11.7m-1.503 2.486a9.008 9.008 0 0 1 -1.192 1.16h-11.312a9 9 0 0 1 -.185 -13.847" />
      <path d="M20 9h-7m-2.768 1.246c.507 2 1.596 3.418 3.268 4.254c.524 .262 1.07 .49 1.64 .683" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `helmet` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.helmet />
      <TablerIcons.helmet class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def helmet(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 4a9 9 0 0 1 5.656 16h-11.312a9 9 0 0 1 5.656 -16z" />
      <path d="M20 9h-8.8a1 1 0 0 0 -.968 1.246c.507 2 1.596 3.418 3.268 4.254c2 1 4.333 1.5 7 1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `help_circle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.help_circle_filled />
      <TablerIcons.help_circle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def help_circle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10a10 10 0 0 1 -19.995 .324l-.005 -.324l.004 -.28c.148 -5.393 4.566 -9.72 9.996 -9.72zm0 13a1 1 0 0 0 -.993 .883l-.007 .117l.007 .127a1 1 0 0 0 1.986 0l.007 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm1.368 -6.673a2.98 2.98 0 0 0 -3.631 .728a1 1 0 0 0 1.44 1.383l.171 -.18a.98 .98 0 0 1 1.11 -.15a1 1 0 0 1 -.34 1.886l-.232 .012a1 1 0 0 0 .111 1.994a3 3 0 0 0 1.371 -5.673z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `help_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.help_circle />
      <TablerIcons.help_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def help_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
      <path d="M12 16v.01" />
      <path d="M12 13a2 2 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `help_hexagon_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.help_hexagon_filled />
      <TablerIcons.help_hexagon_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def help_hexagon_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.425 1.414a3.33 3.33 0 0 1 3.026 -.097l.19 .097l6.775 3.995l.096 .063l.092 .077l.107 .075a3.224 3.224 0 0 1 1.266 2.188l.018 .202l.005 .204v7.284c0 1.106 -.57 2.129 -1.454 2.693l-.17 .1l-6.803 4.302c-.918 .504 -2.019 .535 -3.004 .068l-.196 -.1l-6.695 -4.237a3.225 3.225 0 0 1 -1.671 -2.619l-.007 -.207v-7.285c0 -1.106 .57 -2.128 1.476 -2.705l6.95 -4.098zm1.575 13.586a1 1 0 0 0 -.993 .883l-.007 .117l.007 .127a1 1 0 0 0 1.986 0l.007 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm1.368 -6.673a2.98 2.98 0 0 0 -3.631 .728a1 1 0 0 0 1.44 1.383l.171 -.18a.98 .98 0 0 1 1.11 -.15a1 1 0 0 1 -.34 1.886l-.232 .012a1 1 0 0 0 .111 1.994a3 3 0 0 0 1.371 -5.673z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `help_hexagon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.help_hexagon />
      <TablerIcons.help_hexagon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def help_hexagon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27c.7 .398 1.13 1.143 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M12 16v.01" />
      <path d="M12 13a2 2 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `help_octagon_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.help_octagon_filled />
      <TablerIcons.help_octagon_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def help_octagon_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.897 1a4 4 0 0 1 2.664 1.016l.165 .156l4.1 4.1a4 4 0 0 1 1.168 2.605l.006 .227v5.794a4 4 0 0 1 -1.016 2.664l-.156 .165l-4.1 4.1a4 4 0 0 1 -2.603 1.168l-.227 .006h-5.795a3.999 3.999 0 0 1 -2.664 -1.017l-.165 -.156l-4.1 -4.1a4 4 0 0 1 -1.168 -2.604l-.006 -.227v-5.794a4 4 0 0 1 1.016 -2.664l.156 -.165l4.1 -4.1a4 4 0 0 1 2.605 -1.168l.227 -.006h5.793zm-2.897 14a1 1 0 0 0 -.993 .883l-.007 .117l.007 .127a1 1 0 0 0 1.986 0l.007 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm1.368 -6.673a2.98 2.98 0 0 0 -3.631 .728a1 1 0 0 0 1.44 1.383l.171 -.18a.98 .98 0 0 1 1.11 -.15a1 1 0 0 1 -.34 1.886l-.232 .012a1 1 0 0 0 .111 1.994a3 3 0 0 0 1.371 -5.673z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `help_octagon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.help_octagon />
      <TablerIcons.help_octagon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def help_octagon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.103 2h5.794a3 3 0 0 1 2.122 .879l4.101 4.1a3 3 0 0 1 .88 2.125v5.794a3 3 0 0 1 -.879 2.122l-4.1 4.101a3 3 0 0 1 -2.123 .88h-5.795a3 3 0 0 1 -2.122 -.88l-4.101 -4.1a3 3 0 0 1 -.88 -2.124v-5.794a3 3 0 0 1 .879 -2.122l4.1 -4.101a3 3 0 0 1 2.125 -.88z" />
      <path d="M12 16v.01" />
      <path d="M12 13a2 2 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `help_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.help_off />
      <TablerIcons.help_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def help_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.641 5.631a9 9 0 1 0 12.719 12.738m1.68 -2.318a9 9 0 0 0 -12.074 -12.098" />
      <path d="M12 17v.01" />
      <path d="M12 13.5a1.5 1.5 0 0 1 .394 -1.1m2.106 -1.9a2.6 2.6 0 0 0 -3.347 -3.361" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `help_small` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.help_small />
      <TablerIcons.help_small class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def help_small(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 16v.01" />
      <path d="M12 13a2 2 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `help_square_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.help_square_filled />
      <TablerIcons.help_square_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def help_square_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 2.995 2.824l.005 .176v14a3 3 0 0 1 -2.824 2.995l-.176 .005h-14a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-14a3 3 0 0 1 2.824 -2.995l.176 -.005h14zm-7 13a1 1 0 0 0 -.993 .883l-.007 .117l.007 .127a1 1 0 0 0 1.986 0l.007 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm1.368 -6.673a2.98 2.98 0 0 0 -3.631 .728a1 1 0 0 0 1.44 1.383l.171 -.18a.98 .98 0 0 1 1.11 -.15a1 1 0 0 1 -.34 1.886l-.232 .012a1 1 0 0 0 .111 1.994a3 3 0 0 0 1.371 -5.673z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `help_square_rounded_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.help_square_rounded_filled />
      <TablerIcons.help_square_rounded_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def help_square_rounded_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.642 .005l.616 .017l.299 .013l.579 .034l.553 .046c4.687 .455 6.65 2.333 7.166 6.906l.03 .29l.046 .553l.041 .727l.006 .15l.017 .617l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.455 4.687 -2.333 6.65 -6.906 7.166l-.29 .03l-.553 .046l-.727 .041l-.15 .006l-.617 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.687 -.455 -6.65 -2.333 -7.166 -6.906l-.03 -.29l-.046 -.553l-.041 -.727l-.006 -.15l-.017 -.617l-.004 -.318v-.648l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.455 -4.687 2.333 -6.65 6.906 -7.166l.29 -.03l.553 -.046l.727 -.041l.15 -.006l.617 -.017c.21 -.003 .424 -.005 .642 -.005zm0 13a1 1 0 0 0 -.993 .883l-.007 .117l.007 .127a1 1 0 0 0 1.986 0l.007 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm1.368 -6.673a2.98 2.98 0 0 0 -3.631 .728a1 1 0 0 0 1.44 1.383l.171 -.18a.98 .98 0 0 1 1.11 -.15a1 1 0 0 1 -.34 1.886l-.232 .012a1 1 0 0 0 .111 1.994a3 3 0 0 0 1.371 -5.673z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `help_square_rounded` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.help_square_rounded />
      <TablerIcons.help_square_rounded class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def help_square_rounded(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
      <path d="M12 16v.01" />
      <path d="M12 13a2 2 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `help_square` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.help_square />
      <TablerIcons.help_square class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def help_square(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
      <path d="M12 16v.01" />
      <path d="M12 13a2 2 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `help_triangle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.help_triangle_filled />
      <TablerIcons.help_triangle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def help_triangle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11.94 2a2.99 2.99 0 0 1 2.45 1.279l.108 .164l8.431 14.074a2.989 2.989 0 0 1 -2.366 4.474l-.2 .009h-16.856a2.99 2.99 0 0 1 -2.648 -4.308l.101 -.189l8.425 -14.065a2.989 2.989 0 0 1 2.555 -1.438zm.06 14a1 1 0 0 0 -.993 .883l-.007 .117l.007 .127a1 1 0 0 0 1.986 0l.007 -.117l-.007 -.127a1 1 0 0 0 -.993 -.883zm1.368 -6.673a2.98 2.98 0 0 0 -3.631 .728a1 1 0 0 0 1.44 1.383l.171 -.18a.98 .98 0 0 1 1.11 -.15a1 1 0 0 1 -.34 1.886l-.232 .012a1 1 0 0 0 .111 1.994a3 3 0 0 0 1.371 -5.673z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `help_triangle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.help_triangle />
      <TablerIcons.help_triangle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def help_triangle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.24 3.957l-8.422 14.06a1.989 1.989 0 0 0 1.7 2.983h16.845a1.989 1.989 0 0 0 1.7 -2.983l-8.423 -14.06a1.989 1.989 0 0 0 -3.4 0z" />
      <path d="M12 17v.01" />
      <path d="M12 14a2 2 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `help` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.help />
      <TablerIcons.help class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def help(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 17l0 .01" />
      <path d="M12 13.5a1.5 1.5 0 0 1 1 -1.5a2.6 2.6 0 1 0 -3 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `hemisphere_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hemisphere_off />
      <TablerIcons.hemisphere_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hemisphere_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.588 6.603c-2.178 .547 -3.588 1.417 -3.588 2.397c0 1.657 4.03 3 9 3m3.72 -.267c3.114 -.473 5.28 -1.518 5.28 -2.733c0 -1.657 -4.03 -3 -9 -3c-.662 0 -1.308 .024 -1.93 .07" />
      <path d="M3 9a9 9 0 0 0 13.677 7.69m2.165 -1.843a8.965 8.965 0 0 0 2.158 -5.847" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `hemisphere_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hemisphere_plus />
      <TablerIcons.hemisphere_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hemisphere_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9m-9 0a9 3 0 1 0 18 0a9 3 0 1 0 -18 0" />
      <path d="M3 9a9 9 0 0 0 9 9m8.396 -5.752a8.978 8.978 0 0 0 .604 -3.248" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `hemisphere` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hemisphere />
      <TablerIcons.hemisphere class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hemisphere(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9m-9 0a9 3 0 1 0 18 0a9 3 0 1 0 -18 0" />
      <path d="M3 9a9 9 0 0 0 18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_0_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_0_filled />
      <TablerIcons.hexagon_0_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_0_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.425 1.414a3.33 3.33 0 0 1 3.216 0l6.775 3.995c.067 .04 .127 .084 .18 .133l.008 .007l.107 .076a3.223 3.223 0 0 1 1.284 2.39l.005 .203v7.284c0 1.175 -.643 2.256 -1.623 2.793l-6.804 4.302c-.98 .538 -2.166 .538 -3.2 -.032l-6.695 -4.237a3.226 3.226 0 0 1 -1.678 -2.826v-7.285a3.21 3.21 0 0 1 1.65 -2.808zm1.575 5.586a3 3 0 0 0 -2.995 2.824l-.005 .176v4l.005 .176a3 3 0 0 0 5.99 0l.005 -.176v-4l-.005 -.176a3 3 0 0 0 -2.995 -2.824zm0 2a1 1 0 0 1 .993 .883l.007 .117v4l-.007 .117a1 1 0 0 1 -1.986 0l-.007 -.117v-4l.007 -.117a1 1 0 0 1 .993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_1_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_1_filled />
      <TablerIcons.hexagon_1_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_1_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.425 1.414a3.33 3.33 0 0 1 3.216 0l6.775 3.995c.067 .04 .127 .084 .18 .133l.008 .007l.107 .076a3.223 3.223 0 0 1 1.284 2.39l.005 .203v7.284c0 1.175 -.643 2.256 -1.623 2.793l-6.804 4.302c-.98 .538 -2.166 .538 -3.2 -.032l-6.695 -4.237a3.226 3.226 0 0 1 -1.678 -2.826v-7.285a3.21 3.21 0 0 1 1.65 -2.808zm.952 5.803l-.084 .076l-2 2l-.083 .094a1 1 0 0 0 0 1.226l.083 .094l.094 .083a1 1 0 0 0 1.226 0l.094 -.083l.293 -.293v5.586l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-8l-.006 -.114c-.083 -.777 -1.008 -1.16 -1.617 -.67z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_2_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_2_filled />
      <TablerIcons.hexagon_2_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_2_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.425 1.414a3.33 3.33 0 0 1 3.216 0l6.775 3.995c.067 .04 .127 .084 .18 .133l.008 .007l.107 .076a3.223 3.223 0 0 1 1.284 2.39l.005 .203v7.284c0 1.175 -.643 2.256 -1.623 2.793l-6.804 4.302c-.98 .538 -2.166 .538 -3.2 -.032l-6.695 -4.237a3.226 3.226 0 0 1 -1.678 -2.826v-7.285a3.21 3.21 0 0 1 1.65 -2.808zm2.575 5.586h-3l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h3v2h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v2l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h3l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007h-3v-2h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_3_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_3_filled />
      <TablerIcons.hexagon_3_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_3_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.425 1.414a3.33 3.33 0 0 1 3.216 0l6.775 3.995c.067 .04 .127 .084 .18 .133l.008 .007l.107 .076a3.223 3.223 0 0 1 1.284 2.39l.005 .203v7.284c0 1.175 -.643 2.256 -1.623 2.793l-6.804 4.302c-.98 .538 -2.166 .538 -3.2 -.032l-6.695 -4.237a3.226 3.226 0 0 1 -1.678 -2.826v-7.285a3.21 3.21 0 0 1 1.65 -2.808zm2.575 5.586h-2l-.15 .005a2 2 0 0 0 -1.85 1.995a1 1 0 0 0 1.974 .23l.02 -.113l.006 -.117h2v2h-2l-.133 .007c-1.111 .12 -1.154 1.73 -.128 1.965l.128 .021l.133 .007h2v2h-2l-.007 -.117a1 1 0 0 0 -1.993 .117a2 2 0 0 0 1.85 1.995l.15 .005h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a1.988 1.988 0 0 0 -.17 -.667l-.075 -.152l-.019 -.032l.02 -.03a2.01 2.01 0 0 0 .242 -.795l.007 -.174v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_3d` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_3d />
      <TablerIcons.hexagon_3d class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_3d(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 6.844a2.007 2.007 0 0 1 1 1.752v6.555c0 .728 -.394 1.399 -1.03 1.753l-6 3.844a2 2 0 0 1 -1.942 0l-6 -3.844a2.007 2.007 0 0 1 -1.029 -1.752v-6.556c0 -.729 .394 -1.4 1.029 -1.753l6 -3.583a2.05 2.05 0 0 1 2 0l6 3.584h-.03z" />
      <path d="M12 16.5v4.5" />
      <path d="M4.5 7.5l3.5 2.5" />
      <path d="M16 10l4 -2.5" />
      <path d="M12 7.5v4.5l-4 2" />
      <path d="M12 12l4 2" />
      <path d="M12 16.5l4 -2.5v-4l-4 -2.5l-4 2.5v4z" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_4_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_4_filled />
      <TablerIcons.hexagon_4_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_4_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.425 1.414a3.33 3.33 0 0 1 3.216 0l6.775 3.995c.067 .04 .127 .084 .18 .133l.008 .007l.107 .076a3.223 3.223 0 0 1 1.284 2.39l.005 .203v7.284c0 1.175 -.643 2.256 -1.623 2.793l-6.804 4.302c-.98 .538 -2.166 .538 -3.2 -.032l-6.695 -4.237a3.226 3.226 0 0 1 -1.678 -2.826v-7.285a3.21 3.21 0 0 1 1.65 -2.808zm3.575 5.586a1 1 0 0 0 -.993 .883l-.007 .117v3h-2v-3l-.007 -.117a1 1 0 0 0 -1.986 0l-.007 .117v3l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2v3l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-8l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_5_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_5_filled />
      <TablerIcons.hexagon_5_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_5_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.425 1.414a3.33 3.33 0 0 1 3.216 0l6.775 3.995c.067 .04 .127 .084 .18 .133l.008 .007l.107 .076a3.223 3.223 0 0 1 1.284 2.39l.005 .203v7.284c0 1.175 -.643 2.256 -1.623 2.793l-6.804 4.302c-.98 .538 -2.166 .538 -3.2 -.032l-6.695 -4.237a3.226 3.226 0 0 1 -1.678 -2.826v-7.285a3.21 3.21 0 0 1 1.65 -2.808zm3.575 5.586h-4a1 1 0 0 0 -.993 .883l-.007 .117v4a1 1 0 0 0 .883 .993l.117 .007h3v2h-2l-.007 -.117a1 1 0 0 0 -1.993 .117a2 2 0 0 0 1.85 1.995l.15 .005h2a2 2 0 0 0 1.995 -1.85l.005 -.15v-2a2 2 0 0 0 -1.85 -1.995l-.15 -.005h-2v-2h3a1 1 0 0 0 .993 -.883l.007 -.117a1 1 0 0 0 -.883 -.993l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_6_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_6_filled />
      <TablerIcons.hexagon_6_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_6_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.425 1.414a3.33 3.33 0 0 1 3.216 0l6.775 3.995c.067 .04 .127 .084 .18 .133l.008 .007l.107 .076a3.223 3.223 0 0 1 1.284 2.39l.005 .203v7.284c0 1.175 -.643 2.256 -1.623 2.793l-6.804 4.302c-.98 .538 -2.166 .538 -3.2 -.032l-6.695 -4.237a3.226 3.226 0 0 1 -1.678 -2.826v-7.285a3.21 3.21 0 0 1 1.65 -2.808zm2.575 5.586h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v6l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006h-2v-2h2l.007 .117a1 1 0 0 0 1.993 -.117a2 2 0 0 0 -1.85 -1.995l-.15 -.005zm0 6v2h-2v-2h2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_7_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_7_filled />
      <TablerIcons.hexagon_7_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_7_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.425 1.414a3.33 3.33 0 0 1 3.216 0l6.775 3.995c.067 .04 .127 .084 .18 .133l.008 .007l.107 .076a3.223 3.223 0 0 1 1.284 2.39l.005 .203v7.284c0 1.175 -.643 2.256 -1.623 2.793l-6.804 4.302c-.98 .538 -2.166 .538 -3.2 -.032l-6.695 -4.237a3.226 3.226 0 0 1 -1.678 -2.826v-7.285a3.21 3.21 0 0 1 1.65 -2.808zm3.575 5.586h-4l-.117 .007a1 1 0 0 0 -.876 .876l-.007 .117l.007 .117a1 1 0 0 0 .876 .876l.117 .007h2.718l-1.688 6.757l-.022 .115a1 1 0 0 0 1.927 .482l.035 -.111l2 -8l.021 -.112a1 1 0 0 0 -.878 -1.125l-.113 -.006z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_8_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_8_filled />
      <TablerIcons.hexagon_8_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_8_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.425 1.414a3.33 3.33 0 0 1 3.216 0l6.775 3.995c.067 .04 .127 .084 .18 .133l.008 .007l.107 .076a3.223 3.223 0 0 1 1.284 2.39l.005 .203v7.284c0 1.175 -.643 2.256 -1.623 2.793l-6.804 4.302c-.98 .538 -2.166 .538 -3.2 -.032l-6.695 -4.237a3.226 3.226 0 0 1 -1.678 -2.826v-7.285a3.21 3.21 0 0 1 1.65 -2.808zm2.575 5.586h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v2l.005 .15c.018 .236 .077 .46 .17 .667l.075 .152l.018 .03l-.018 .032c-.133 .24 -.218 .509 -.243 .795l-.007 .174v2l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a1.988 1.988 0 0 0 -.17 -.667l-.075 -.152l-.019 -.032l.02 -.03a2.01 2.01 0 0 0 .242 -.795l.007 -.174v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006zm0 6v2h-2v-2h2zm0 -4v2h-2v-2h2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_9_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_9_filled />
      <TablerIcons.hexagon_9_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_9_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.425 1.414a3.33 3.33 0 0 1 3.216 0l6.775 3.995c.067 .04 .127 .084 .18 .133l.008 .007l.107 .076a3.223 3.223 0 0 1 1.284 2.39l.005 .203v7.284c0 1.175 -.643 2.256 -1.623 2.793l-6.804 4.302c-.98 .538 -2.166 .538 -3.2 -.032l-6.695 -4.237a3.226 3.226 0 0 1 -1.678 -2.826v-7.285a3.21 3.21 0 0 1 1.65 -2.808zm2.575 5.586h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v2l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2v2h-2l-.007 -.117a1 1 0 0 0 -1.993 .117a2 2 0 0 0 1.85 1.995l.15 .005h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-6l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006zm0 2v2h-2v-2h2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_filled />
      <TablerIcons.hexagon_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.425 1.414l-6.775 3.996a3.21 3.21 0 0 0 -1.65 2.807v7.285a3.226 3.226 0 0 0 1.678 2.826l6.695 4.237c1.034 .57 2.22 .57 3.2 .032l6.804 -4.302c.98 -.537 1.623 -1.618 1.623 -2.793v-7.284l-.005 -.204a3.223 3.223 0 0 0 -1.284 -2.39l-.107 -.075l-.007 -.007a1.074 1.074 0 0 0 -.181 -.133l-6.776 -3.995a3.33 3.33 0 0 0 -3.216 0z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_a` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_a />
      <TablerIcons.hexagon_letter_a class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_a(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 16v-6a2 2 0 1 1 4 0v6" />
      <path d="M10 13h4" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_b` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_b />
      <TablerIcons.hexagon_letter_b class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_b(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 16h2a2 2 0 1 0 0 -4h-2h2a2 2 0 1 0 0 -4h-2v8z" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_c` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_c />
      <TablerIcons.hexagon_letter_c class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_c(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M14 10a2 2 0 1 0 -4 0v4a2 2 0 1 0 4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_d` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_d />
      <TablerIcons.hexagon_letter_d class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_d(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 8v8h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-2z" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_e` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_e />
      <TablerIcons.hexagon_letter_e class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_e(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M14 8h-4v8h4" />
      <path d="M10 12h2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_f` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_f />
      <TablerIcons.hexagon_letter_f class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_f(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 12h3" />
      <path d="M14 8h-4v8" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_g` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_g />
      <TablerIcons.hexagon_letter_g class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_g(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M14 8h-2a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2v-4h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_h` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_h />
      <TablerIcons.hexagon_letter_h class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_h(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 16v-8m4 0v8" />
      <path d="M10 12h4" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_i` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_i />
      <TablerIcons.hexagon_letter_i class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_i(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M12 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_j` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_j />
      <TablerIcons.hexagon_letter_j class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_j(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 8h4v6a2 2 0 1 1 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_k` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_k />
      <TablerIcons.hexagon_letter_k class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_k(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 8v8" />
      <path d="M14 8l-2.5 4l2.5 4" />
      <path d="M10 12h1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_l` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_l />
      <TablerIcons.hexagon_letter_l class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_l(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 8v8h4" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_m` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_m />
      <TablerIcons.hexagon_letter_m class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_m(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M9 16v-8l3 5l3 -5v8" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_n` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_n />
      <TablerIcons.hexagon_letter_n class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_n(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 16v-8l4 8v-8" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_o` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_o />
      <TablerIcons.hexagon_letter_o class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_o(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_p` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_p />
      <TablerIcons.hexagon_letter_p class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_p(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 12h2a2 2 0 1 0 0 -4h-2v8" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_q` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_q />
      <TablerIcons.hexagon_letter_q class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_q(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
      <path d="M13 15l1 1" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_r` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_r />
      <TablerIcons.hexagon_letter_r class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_r(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 12h2a2 2 0 1 0 0 -4h-2v8m4 0l-3 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_s` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_s />
      <TablerIcons.hexagon_letter_s class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_s(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-2a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_t` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_t />
      <TablerIcons.hexagon_letter_t class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_t(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 8h4" />
      <path d="M12 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_u` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_u />
      <TablerIcons.hexagon_letter_u class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_u(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 8v6a2 2 0 1 0 4 0v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_v` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_v />
      <TablerIcons.hexagon_letter_v class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_v(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 8l2 8l2 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_w` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_w />
      <TablerIcons.hexagon_letter_w class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_w(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M9 8l1 8l2 -5l2 5l1 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_x />
      <TablerIcons.hexagon_letter_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 8l4 8" />
      <path d="M10 16l4 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_y` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_y />
      <TablerIcons.hexagon_letter_y class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_y(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 8l2 5l2 -5" />
      <path d="M12 16v-3" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_letter_z` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_letter_z />
      <TablerIcons.hexagon_letter_z class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_letter_z(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 8h4l-4 8h4" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_number_0` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_number_0 />
      <TablerIcons.hexagon_number_0 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_number_0(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 10v4a2 2 0 1 0 4 0v-4a2 2 0 1 0 -4 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_number_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_number_1 />
      <TablerIcons.hexagon_number_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_number_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 10l2 -2v8" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_number_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_number_2 />
      <TablerIcons.hexagon_number_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_number_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 8h3a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h3" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_number_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_number_3 />
      <TablerIcons.hexagon_number_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_number_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 9a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_number_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_number_4 />
      <TablerIcons.hexagon_number_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_number_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 8v3a1 1 0 0 0 1 1h3" />
      <path d="M14 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_number_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_number_5 />
      <TablerIcons.hexagon_number_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_number_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-3v-4h4" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_number_6` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_number_6 />
      <TablerIcons.hexagon_number_6 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_number_6(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M14 9a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v6a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_number_7` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_number_7 />
      <TablerIcons.hexagon_number_7 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_number_7(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.02 6.858a2 2 0 0 1 1 1.752v6.555c0 .728 -.395 1.4 -1.032 1.753l-6.017 3.844a2 2 0 0 1 -1.948 0l-6.016 -3.844a2 2 0 0 1 -1.032 -1.752v-6.556c0 -.728 .395 -1.4 1.032 -1.753l6.017 -3.582a2.062 2.062 0 0 1 2 0l6.017 3.583h-.029z" />
      <path d="M10 8h4l-2 8" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_number_8` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_number_8 />
      <TablerIcons.hexagon_number_8 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_number_8(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M12 12h-1a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_number_9` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_number_9 />
      <TablerIcons.hexagon_number_9 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_number_9(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M10 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-6a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h3" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon_off />
      <TablerIcons.hexagon_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.693 4.69l2.336 -1.39a2.056 2.056 0 0 1 2 0l6 3.573h-.029a2 2 0 0 1 1 1.747v6.536c0 .246 -.045 .485 -.13 .707m-2.16 1.847l-4.739 3.027a2 2 0 0 1 -1.942 0l-6 -3.833a2 2 0 0 1 -1.029 -1.747v-6.537a2 2 0 0 1 1.029 -1.748l1.154 -.687" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagon />
      <TablerIcons.hexagon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagonal_prism_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagonal_prism_off />
      <TablerIcons.hexagonal_prism_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagonal_prism_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.792 6.996l-3.775 2.643a2.005 2.005 0 0 1 -1.147 .361h-1.87m-4 0h-1.87c-.41 0 -.81 -.126 -1.146 -.362l-3.774 -2.641" />
      <path d="M8 10v11" />
      <path d="M16 10v2m0 4v5" />
      <path d="M20.972 16.968a2.01 2.01 0 0 0 .028 -.337v-9.262c0 -.655 -.318 -1.268 -.853 -1.643l-3.367 -2.363a2 2 0 0 0 -1.147 -.363h-7.266a1.99 1.99 0 0 0 -1.066 .309m-2.345 1.643l-1.103 .774a2.006 2.006 0 0 0 -.853 1.644v9.261c0 .655 .318 1.269 .853 1.644l3.367 2.363a2 2 0 0 0 1.147 .362h7.265c.41 0 .811 -.126 1.147 -.363l2.26 -1.587" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagonal_prism_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagonal_prism_plus />
      <TablerIcons.hexagonal_prism_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagonal_prism_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.792 6.996l-3.775 2.643a2.005 2.005 0 0 1 -1.147 .361h-7.74c-.41 0 -.81 -.126 -1.146 -.362l-3.774 -2.641" />
      <path d="M8 10v11" />
      <path d="M16 10v3.5" />
      <path d="M21 12.5v-5.131c0 -.655 -.318 -1.268 -.853 -1.643l-3.367 -2.363a2 2 0 0 0 -1.147 -.363h-7.266c-.41 0 -.811 .126 -1.147 .363l-3.367 2.363a2.006 2.006 0 0 0 -.853 1.644v9.261c0 .655 .318 1.269 .853 1.644l3.367 2.363a2 2 0 0 0 1.147 .362h4.133" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagonal_prism` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagonal_prism />
      <TablerIcons.hexagonal_prism class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagonal_prism(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.792 6.996l-3.775 2.643a2.005 2.005 0 0 1 -1.147 .361h-7.74c-.41 0 -.81 -.126 -1.146 -.362l-3.774 -2.641" />
      <path d="M8 10v11" />
      <path d="M16 10v11" />
      <path d="M3.853 18.274l3.367 2.363a2 2 0 0 0 1.147 .363h7.265c.41 0 .811 -.126 1.147 -.363l3.367 -2.363c.536 -.375 .854 -.99 .854 -1.643v-9.262c0 -.655 -.318 -1.268 -.853 -1.643l-3.367 -2.363a2 2 0 0 0 -1.147 -.363h-7.266c-.41 0 -.811 .126 -1.147 .363l-3.367 2.363a2.006 2.006 0 0 0 -.853 1.644v9.261c0 .655 .318 1.269 .853 1.644z" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagonal_pyramid_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagonal_pyramid_off />
      <TablerIcons.hexagonal_pyramid_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagonal_pyramid_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.877 7.88l-4.56 7.53a1.988 1.988 0 0 0 .266 2.484l2.527 2.523c.374 .373 .88 .583 1.408 .583h8.964c.528 0 1.034 -.21 1.408 -.583l1.264 -1.263m1.792 -2.205a1.986 1.986 0 0 0 -.262 -1.538l-7.846 -12.954a.996 .996 0 0 0 -1.676 0l-1.772 2.926" />
      <path d="M12 2l-1.254 4.742m-.841 3.177l-2.905 10.981" />
      <path d="M12 2l2.153 8.14m1.444 5.457l1.403 5.303" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagonal_pyramid_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagonal_pyramid_plus />
      <TablerIcons.hexagonal_pyramid_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagonal_pyramid_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.642 12.04l-5.804 -9.583a.996 .996 0 0 0 -1.676 0l-7.846 12.954a1.988 1.988 0 0 0 .267 2.483l2.527 2.523c.374 .373 .88 .583 1.408 .583h4.982" />
      <path d="M12 2l-5 18.9" />
      <path d="M12 2l3.304 12.489" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagonal_pyramid` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagonal_pyramid />
      <TablerIcons.hexagonal_pyramid class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagonal_pyramid(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.162 2.457l-7.846 12.954a1.988 1.988 0 0 0 .267 2.483l2.527 2.523c.374 .373 .88 .583 1.408 .583h8.964c.528 0 1.034 -.21 1.408 -.583l2.527 -2.523a1.988 1.988 0 0 0 .267 -2.483l-7.846 -12.954a.996 .996 0 0 0 -1.676 0z" />
      <path d="M12 2l-5 18.9" />
      <path d="M12 2l5 18.9" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagons_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagons_off />
      <TablerIcons.hexagons_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagons_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 18v-5l4 -2l4 2v5l-4 2z" />
      <path d="M8 11v-3m1.332 -2.666l2.668 -1.334l4 2v5" />
      <path d="M12 13l.661 -.331" />
      <path d="M15.345 11.328l.655 -.328l4 2v3m-1.334 2.667l-2.666 1.333l-4 -2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `hexagons` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hexagons />
      <TablerIcons.hexagons class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hexagons(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 18v-5l4 -2l4 2v5l-4 2z" />
      <path d="M8 11v-5l4 -2l4 2v5" />
      <path d="M12 13l4 -2l4 2v5l-4 2l-4 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `hierarchy_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hierarchy_2 />
      <TablerIcons.hierarchy_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hierarchy_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 3h4v4h-4z" />
      <path d="M3 17h4v4h-4z" />
      <path d="M17 17h4v4h-4z" />
      <path d="M7 17l5 -4l5 4" />
      <path d="M12 7l0 6" />
    </svg>
    """
  end

  @doc """
  Renders the `hierarchy_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hierarchy_3 />
      <TablerIcons.hierarchy_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hierarchy_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M8 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M20 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M4 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M16 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 17l2 -3" />
      <path d="M9 10l2 -3" />
      <path d="M13 7l2 3" />
      <path d="M17 14l2 3" />
      <path d="M15 14l-2 3" />
      <path d="M9 14l2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `hierarchy_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hierarchy_off />
      <TablerIcons.hierarchy_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hierarchy_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17.585 17.587a2 2 0 0 0 2.813 2.843" />
      <path d="M6.5 17.5l5.5 -4.5l5.5 4.5" />
      <path d="M12 7v1m0 4v1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `hierarchy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hierarchy />
      <TablerIcons.hierarchy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hierarchy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6.5 17.5l5.5 -4.5l5.5 4.5" />
      <path d="M12 7l0 6" />
    </svg>
    """
  end

  @doc """
  Renders the `highlight_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.highlight_off />
      <TablerIcons.highlight_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def highlight_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 9l-6 6v4h4l6 -6m2 -2l2.503 -2.503a2.828 2.828 0 1 0 -4 -4l-2.497 2.497" />
      <path d="M12.5 5.5l4 4" />
      <path d="M4.5 13.5l4 4" />
      <path d="M19 15h2v2m-2 2h-6l3 -3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `highlight` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.highlight />
      <TablerIcons.highlight class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def highlight(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M12.5 5.5l4 4" />
      <path d="M4.5 13.5l4 4" />
      <path d="M21 15v4h-8l4 -4z" />
    </svg>
    """
  end

  @doc """
  Renders the `history_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.history_off />
      <TablerIcons.history_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def history_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.05 11a8.975 8.975 0 0 1 2.54 -5.403m2.314 -1.697a9 9 0 0 1 12.113 12.112m-1.695 2.312a9 9 0 0 1 -14.772 -3.324m-.5 5v-5h5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `history_toggle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.history_toggle />
      <TablerIcons.history_toggle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def history_toggle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 20.777a8.942 8.942 0 0 1 -2.48 -.969" />
      <path d="M14 3.223a9.003 9.003 0 0 1 0 17.554" />
      <path d="M4.579 17.093a8.961 8.961 0 0 1 -1.227 -2.592" />
      <path d="M3.124 10.5c.16 -.95 .468 -1.85 .9 -2.675l.169 -.305" />
      <path d="M6.907 4.579a8.954 8.954 0 0 1 3.093 -1.356" />
      <path d="M12 8v4l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `history` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.history />
      <TablerIcons.history class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def history(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8l0 4l2 2" />
      <path d="M3.05 11a9 9 0 1 1 .5 4m-.5 5v-5h5" />
    </svg>
    """
  end

  @doc """
  Renders the `home_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_2 />
      <TablerIcons.home_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12l-2 0l9 -9l9 9l-2 0" />
      <path d="M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7" />
      <path d="M10 12h4v4h-4z" />
    </svg>
    """
  end

  @doc """
  Renders the `home_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_bolt />
      <TablerIcons.home_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 10l-7 -7l-9 9h2v7a2 2 0 0 0 2 2h7.5" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2c.661 0 1.248 .32 1.612 .815" />
      <path d="M19 14l-2 4h4l-2 4" />
    </svg>
    """
  end

  @doc """
  Renders the `home_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_cancel />
      <TablerIcons.home_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
      <path d="M19 12h2l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h5.5" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2c.58 0 1.103 .247 1.468 .642" />
    </svg>
    """
  end

  @doc """
  Renders the `home_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_check />
      <TablerIcons.home_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2" />
      <path d="M19 13.488v-1.488h2l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h4.525" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `home_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_cog />
      <TablerIcons.home_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h1.6" />
      <path d="M20 11l-8 -8l-9 9h2v7a2 2 0 0 0 2 2h4.159" />
      <path d="M18 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 14.5v1.5" />
      <path d="M18 20v1.5" />
      <path d="M21.032 16.25l-1.299 .75" />
      <path d="M16.27 19l-1.3 .75" />
      <path d="M14.97 16.25l1.3 .75" />
      <path d="M19.733 19l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `home_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_dollar />
      <TablerIcons.home_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 10l-7 -7l-9 9h2v7a2 2 0 0 0 2 2h6" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2c.387 0 .748 .11 1.054 .3" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `home_dot` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_dot />
      <TablerIcons.home_dot class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_dot(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 12h2l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h5" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2c.641 0 1.212 .302 1.578 .771" />
    </svg>
    """
  end

  @doc """
  Renders the `home_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_down />
      <TablerIcons.home_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 12h2l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h5.5" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `home_eco` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_eco />
      <TablerIcons.home_eco class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_eco(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 11l-8 -8l-9 9h2v7a2 2 0 0 0 2 2h5" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2c.325 0 .631 .077 .902 .215" />
      <path d="M16 22s0 -2 3 -4" />
      <path d="M19 21a3 3 0 0 1 0 -6h3v3a3 3 0 0 1 -3 3z" />
    </svg>
    """
  end

  @doc """
  Renders the `home_edit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_edit />
      <TablerIcons.home_edit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_edit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2c.645 0 1.218 .305 1.584 .78" />
      <path d="M20 11l-8 -8l-9 9h2v7a2 2 0 0 0 2 2h4" />
      <path d="M18.42 15.61a2.1 2.1 0 0 1 2.97 2.97l-3.39 3.42h-3v-3l3.42 -3.39z" />
    </svg>
    """
  end

  @doc """
  Renders the `home_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_exclamation />
      <TablerIcons.home_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h8" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 1.857 1.257" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `home_hand` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_hand />
      <TablerIcons.home_hand class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_hand(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 9l-6 -6l-9 9h2v7a2 2 0 0 0 2 2h3.5" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2" />
      <path d="M16 17.5l-.585 -.578a1.516 1.516 0 0 0 -2 0c-.477 .433 -.551 1.112 -.177 1.622l1.762 2.456c.37 .506 1.331 1 2 1h3c1.009 0 1.497 -.683 1.622 -1.593c.252 -.938 .378 -1.74 .378 -2.407c0 -1 -.939 -1.843 -2 -2h-1v-2.636c0 -.754 -.672 -1.364 -1.5 -1.364s-1.5 .61 -1.5 1.364v4.136z" />
    </svg>
    """
  end

  @doc """
  Renders the `home_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_heart />
      <TablerIcons.home_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h6" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2c.39 0 .754 .112 1.061 .304" />
      <path d="M19 21.5l2.518 -2.58a1.74 1.74 0 0 0 0 -2.413a1.627 1.627 0 0 0 -2.346 0l-.168 .172l-.168 -.172a1.627 1.627 0 0 0 -2.346 0a1.74 1.74 0 0 0 0 2.412l2.51 2.59z" />
    </svg>
    """
  end

  @doc """
  Renders the `home_infinity` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_infinity />
      <TablerIcons.home_infinity class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_infinity(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 14v-2h2l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h2.5" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 1.75 1.032" />
      <path d="M15.536 17.586a2.123 2.123 0 0 0 -2.929 0a1.951 1.951 0 0 0 0 2.828c.809 .781 2.12 .781 2.929 0c.809 -.781 -.805 .778 0 0l1.46 -1.41l1.46 -1.419" />
      <path d="M15.54 17.582l1.46 1.42l1.46 1.41c.809 .78 -.805 -.779 0 0s2.12 .781 2.929 0a1.951 1.951 0 0 0 0 -2.828a2.123 2.123 0 0 0 -2.929 0" />
    </svg>
    """
  end

  @doc """
  Renders the `home_link` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_link />
      <TablerIcons.home_link class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_link(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.085 11.085l-8.085 -8.085l-9 9h2v7a2 2 0 0 0 2 2h4.5" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 1.807 1.143" />
      <path d="M21 21m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M21 16m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M16 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M21 16l-5 3l5 2" />
    </svg>
    """
  end

  @doc """
  Renders the `home_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_minus />
      <TablerIcons.home_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 15v-3h2l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h5.5" />
      <path d="M16 19h6" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `home_move` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_move />
      <TablerIcons.home_move class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_move(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2" />
      <path d="M19 12h2l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h5.5" />
      <path d="M16 19h6" />
      <path d="M19 16l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `home_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_off />
      <TablerIcons.home_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12h-2l4.497 -4.497m2 -2l2.504 -2.504l9 9h-2" />
      <path d="M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2m0 -4v-3" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2m2 2v6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `home_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_plus />
      <TablerIcons.home_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 12h2l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h5.5" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `home_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_question />
      <TablerIcons.home_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.136 11.136l-8.136 -8.136l-9 9h2v7a2 2 0 0 0 2 2h7" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2c.467 0 .896 .16 1.236 .428" />
      <path d="M19 22v.01" />
      <path d="M19 19a2 2 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `home_ribbon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_ribbon />
      <TablerIcons.home_ribbon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_ribbon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 15h5v7l-2.5 -1.5l-2.5 1.5z" />
      <path d="M20 11l-8 -8l-9 9h2v7a2 2 0 0 0 2 2h5" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `home_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_search />
      <TablerIcons.home_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h4.7" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `home_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_share />
      <TablerIcons.home_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2c.247 0 .484 .045 .702 .127" />
      <path d="M19 12h2l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h5" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `home_shield` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_shield />
      <TablerIcons.home_shield class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_shield(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h1.341" />
      <path d="M19.682 10.682l-7.682 -7.682l-9 9h2v7a2 2 0 0 0 2 2h5" />
      <path d="M22 16c0 4 -2.5 6 -3.5 6s-3.5 -2 -3.5 -6c1 0 2.5 -.5 3.5 -1.5c1 1 2.5 1.5 3.5 1.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `home_signal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_signal />
      <TablerIcons.home_signal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_signal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 22v-2" />
      <path d="M18 22v-4" />
      <path d="M21 22v-6" />
      <path d="M19 12.494v-.494h2l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h4" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v.5" />
    </svg>
    """
  end

  @doc """
  Renders the `home_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_star />
      <TablerIcons.home_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.258 10.258l-7.258 -7.258l-9 9h2v7a2 2 0 0 0 2 2h4" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h1.5" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `home_stats` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_stats />
      <TablerIcons.home_stats class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_stats(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 13v-1h2l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h2.5" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2" />
      <path d="M13 22l3 -3l2 2l4 -4" />
      <path d="M19 17h3v3" />
    </svg>
    """
  end

  @doc """
  Renders the `home_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_up />
      <TablerIcons.home_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2c.641 0 1.212 .302 1.578 .771" />
      <path d="M20.136 11.136l-8.136 -8.136l-9 9h2v7a2 2 0 0 0 2 2h6.344" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `home_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home_x />
      <TablerIcons.home_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 13.4v-1.4h2l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h5.5" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2c.402 0 .777 .119 1.091 .323" />
      <path d="M21.5 21.5l-5 -5" />
      <path d="M16.5 21.5l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `home` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.home />
      <TablerIcons.home class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def home(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12l-2 0l9 -9l9 9l-2 0" />
      <path d="M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7" />
      <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6" />
    </svg>
    """
  end

  @doc """
  Renders the `horse_toy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.horse_toy />
      <TablerIcons.horse_toy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def horse_toy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.5 17.5c5.667 4.667 11.333 4.667 17 0" />
      <path d="M19 18.5l-2 -8.5l1 -2l2 1l1.5 -1.5l-2.5 -4.5c-5.052 .218 -5.99 3.133 -7 6h-6a3 3 0 0 0 -3 3" />
      <path d="M5 18.5l2 -9.5" />
      <path d="M8 20l2 -5h4l2 5" />
    </svg>
    """
  end

  @doc """
  Renders the `hotel_service` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hotel_service />
      <TablerIcons.hotel_service class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hotel_service(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.5 10a1.5 1.5 0 0 1 -1.5 -1.5a5.5 5.5 0 0 1 11 0v10.5a2 2 0 0 1 -2 2h-7a2 2 0 0 1 -2 -2v-2c0 -1.38 .71 -2.444 1.88 -3.175l4.424 -2.765c1.055 -.66 1.696 -1.316 1.696 -2.56a2.5 2.5 0 1 0 -5 0a1.5 1.5 0 0 1 -1.5 1.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `hourglass_empty` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hourglass_empty />
      <TablerIcons.hourglass_empty class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hourglass_empty(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 20v-2a6 6 0 1 1 12 0v2a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1z" />
      <path d="M6 4v2a6 6 0 1 0 12 0v-2a1 1 0 0 0 -1 -1h-10a1 1 0 0 0 -1 1z" />
    </svg>
    """
  end

  @doc """
  Renders the `hourglass_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hourglass_filled />
      <TablerIcons.hourglass_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hourglass_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 2a2 2 0 0 1 1.995 1.85l.005 .15v2a6.996 6.996 0 0 1 -3.393 6a6.994 6.994 0 0 1 3.388 5.728l.005 .272v2a2 2 0 0 1 -1.85 1.995l-.15 .005h-10a2 2 0 0 1 -1.995 -1.85l-.005 -.15v-2a6.996 6.996 0 0 1 3.393 -6a6.994 6.994 0 0 1 -3.388 -5.728l-.005 -.272v-2a2 2 0 0 1 1.85 -1.995l.15 -.005h10z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `hourglass_high` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hourglass_high />
      <TablerIcons.hourglass_high class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hourglass_high(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.5 7h11" />
      <path d="M6 20v-2a6 6 0 1 1 12 0v2a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1z" />
      <path d="M6 4v2a6 6 0 1 0 12 0v-2a1 1 0 0 0 -1 -1h-10a1 1 0 0 0 -1 1z" />
    </svg>
    """
  end

  @doc """
  Renders the `hourglass_low` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hourglass_low />
      <TablerIcons.hourglass_low class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hourglass_low(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.5 17h11" />
      <path d="M6 20v-2a6 6 0 1 1 12 0v2a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1z" />
      <path d="M6 4v2a6 6 0 1 0 12 0v-2a1 1 0 0 0 -1 -1h-10a1 1 0 0 0 -1 1z" />
    </svg>
    """
  end

  @doc """
  Renders the `hourglass_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hourglass_off />
      <TablerIcons.hourglass_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hourglass_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 18v2a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1v-2a6 6 0 0 1 6 -6" />
      <path d="M6 6a6 6 0 0 0 6 6m3.13 -.88a6 6 0 0 0 2.87 -5.12v-2a1 1 0 0 0 -1 -1h-10" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `hourglass` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.hourglass />
      <TablerIcons.hourglass class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def hourglass(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.5 7h11" />
      <path d="M6.5 17h11" />
      <path d="M6 20v-2a6 6 0 1 1 12 0v2a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1z" />
      <path d="M6 4v2a6 6 0 1 0 12 0v-2a1 1 0 0 0 -1 -1h-10a1 1 0 0 0 -1 1z" />
    </svg>
    """
  end

  @doc """
  Renders the `html` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.html />
      <TablerIcons.html class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def html(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 16v-8l2 5l2 -5v8" />
      <path d="M1 16v-8" />
      <path d="M5 8v8" />
      <path d="M1 12h4" />
      <path d="M7 8h4" />
      <path d="M9 8v8" />
      <path d="M20 8v8h3" />
    </svg>
    """
  end

  @doc """
  Renders the `http_connect` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.http_connect />
      <TablerIcons.http_connect class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def http_connect(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 10a2 2 0 1 0 -4 0v4a2 2 0 1 0 4 0" />
      <path d="M17 16v-8l4 8v-8" />
      <path d="M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `http_delete` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.http_delete />
      <TablerIcons.http_delete class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def http_delete(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 8v8h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-2z" />
      <path d="M14 8h-4v8h4" />
      <path d="M10 12h2.5" />
      <path d="M17 8v8h4" />
    </svg>
    """
  end

  @doc """
  Renders the `http_get` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.http_get />
      <TablerIcons.http_get class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def http_get(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 8h-2a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2v-4h-1" />
      <path d="M14 8h-4v8h4" />
      <path d="M10 12h2.5" />
      <path d="M17 8h4" />
      <path d="M19 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `http_head` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.http_head />
      <TablerIcons.http_head class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def http_head(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 16v-8" />
      <path d="M7 8v8" />
      <path d="M3 12h4" />
      <path d="M14 8h-4v8h4" />
      <path d="M10 12h2.5" />
      <path d="M17 16v-6a2 2 0 1 1 4 0v6" />
      <path d="M17 13h4" />
    </svg>
    """
  end

  @doc """
  Renders the `http_options` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.http_options />
      <TablerIcons.http_options class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def http_options(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
      <path d="M10 12h2a2 2 0 1 0 0 -4h-2v8" />
      <path d="M17 8h4" />
      <path d="M19 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `http_patch` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.http_patch />
      <TablerIcons.http_patch class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def http_patch(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h2a2 2 0 1 0 0 -4h-2v8" />
      <path d="M10 16v-6a2 2 0 1 1 4 0v6" />
      <path d="M10 13h4" />
      <path d="M17 8h4" />
      <path d="M19 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `http_post` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.http_post />
      <TablerIcons.http_post class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def http_post(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h2a2 2 0 1 0 0 -4h-2v8" />
      <path d="M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
      <path d="M17 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-2a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1" />
    </svg>
    """
  end

  @doc """
  Renders the `http_put` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.http_put />
      <TablerIcons.http_put class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def http_put(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h2a2 2 0 1 0 0 -4h-2v8" />
      <path d="M17 8h4" />
      <path d="M19 8v8" />
      <path d="M10 8v6a2 2 0 1 0 4 0v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `http_que` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.http_que />
      <TablerIcons.http_que class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def http_que(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
      <path d="M6 15l1 1" />
      <path d="M21 8h-4v8h4" />
      <path d="M17 12h2.5" />
      <path d="M10 8v6a2 2 0 1 0 4 0v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `http_trace` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.http_trace />
      <TablerIcons.http_trace class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def http_trace(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 8h4" />
      <path d="M5 8v8" />
      <path d="M10 12h2a2 2 0 1 0 0 -4h-2v8m4 0l-3 -4" />
      <path d="M17 16v-6a2 2 0 1 1 4 0v6" />
      <path d="M17 13h4" />
    </svg>
    """
  end

  @doc """
  Renders the `ice_cream_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ice_cream_2 />
      <TablerIcons.ice_cream_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ice_cream_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.657 11a6 6 0 1 0 -11.315 0" />
      <path d="M6.342 11l5.658 11l5.657 -11z" />
    </svg>
    """
  end

  @doc """
  Renders the `ice_cream_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ice_cream_off />
      <TablerIcons.ice_cream_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ice_cream_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21.5v-4.5" />
      <path d="M8 8v9h8v-1m0 -4v-5a4 4 0 0 0 -7.277 -2.294" />
      <path d="M8 10.5l1.74 -.76m2.79 -1.222l3.47 -1.518" />
      <path d="M8 14.5l4.488 -1.964" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ice_cream` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ice_cream />
      <TablerIcons.ice_cream class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ice_cream(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21.5v-4.5" />
      <path d="M8 17h8v-10a4 4 0 1 0 -8 0v10z" />
      <path d="M8 10.5l8 -3.5" />
      <path d="M8 14.5l8 -3.5" />
    </svg>
    """
  end

  @doc """
  Renders the `ice_skating` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ice_skating />
      <TablerIcons.ice_skating class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ice_skating(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.905 5h3.418a1 1 0 0 1 .928 .629l1.143 2.856a3 3 0 0 0 2.207 1.83l4.717 .926a2.084 2.084 0 0 1 1.682 2.045v.714a1 1 0 0 1 -1 1h-13.895a1 1 0 0 1 -1 -1.1l.8 -8a1 1 0 0 1 1 -.9z" />
      <path d="M3 19h17a1 1 0 0 0 1 -1" />
      <path d="M9 15v4" />
      <path d="M15 15v4" />
    </svg>
    """
  end

  @doc """
  Renders the `icons_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.icons_off />
      <TablerIcons.icons_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def icons_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.01 4.041a3.5 3.5 0 0 0 2.49 5.959c.975 0 1.865 -.357 2.5 -1m.958 -3.044a3.503 3.503 0 0 0 -2.905 -2.912" />
      <path d="M2.5 21h8l-4 -7z" />
      <path d="M14 3l7 7" />
      <path d="M14 10l7 -7" />
      <path d="M18 14h3v3m0 4h-7v-7" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `icons` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.icons />
      <TablerIcons.icons class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def icons(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.5 6.5m-3.5 0a3.5 3.5 0 1 0 7 0a3.5 3.5 0 1 0 -7 0" />
      <path d="M2.5 21h8l-4 -7z" />
      <path d="M14 3l7 7" />
      <path d="M14 10l7 -7" />
      <path d="M14 14h7v7h-7z" />
    </svg>
    """
  end

  @doc """
  Renders the `id_badge_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.id_badge_2 />
      <TablerIcons.id_badge_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def id_badge_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 12h3v4h-3z" />
      <path d="M10 6h-6a1 1 0 0 0 -1 1v12a1 1 0 0 0 1 1h16a1 1 0 0 0 1 -1v-12a1 1 0 0 0 -1 -1h-6" />
      <path d="M10 3m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M14 16h2" />
      <path d="M14 12h4" />
    </svg>
    """
  end

  @doc """
  Renders the `id_badge_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.id_badge_off />
      <TablerIcons.id_badge_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def id_badge_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.141 3.125a3 3 0 0 1 .859 -.125h8a3 3 0 0 1 3 3v9m-.13 3.874a3 3 0 0 1 -2.87 2.126h-8a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 .128 -.869" />
      <path d="M11.179 11.176a2 2 0 1 0 2.635 2.667" />
      <path d="M10 6h4" />
      <path d="M9 18h6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `id_badge` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.id_badge />
      <TablerIcons.id_badge class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def id_badge(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 3m0 3a3 3 0 0 1 3 -3h8a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-8a3 3 0 0 1 -3 -3z" />
      <path d="M12 13m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M10 6h4" />
      <path d="M9 18h6" />
    </svg>
    """
  end

  @doc """
  Renders the `id_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.id_off />
      <TablerIcons.id_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def id_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h10a3 3 0 0 1 3 3v10m-1.437 2.561c-.455 .279 -.99 .439 -1.563 .439h-12a3 3 0 0 1 -3 -3v-10c0 -1.083 .573 -2.031 1.433 -2.559" />
      <path d="M8.175 8.178a2 2 0 1 0 2.646 2.65" />
      <path d="M15 8h2" />
      <path d="M16 12h1" />
      <path d="M7 16h9" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `id` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.id />
      <TablerIcons.id class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def id(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v10a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M9 10m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M15 8l2 0" />
      <path d="M15 12l2 0" />
      <path d="M7 16l10 0" />
    </svg>
    """
  end

  @doc """
  Renders the `inbox_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inbox_off />
      <TablerIcons.inbox_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inbox_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h10a2 2 0 0 1 2 2v10m-.593 3.422a2 2 0 0 1 -1.407 .578h-12a2 2 0 0 1 -2 -2v-12c0 -.554 .225 -1.056 .59 -1.418" />
      <path d="M4 13h3l3 3h4l.987 -.987m2.013 -2.013h3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `inbox` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inbox />
      <TablerIcons.inbox class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inbox(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M4 13h3l3 3h4l3 -3h3" />
    </svg>
    """
  end

  @doc """
  Renders the `indent_decrease` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.indent_decrease />
      <TablerIcons.indent_decrease class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def indent_decrease(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 6l-7 0" />
      <path d="M20 12l-9 0" />
      <path d="M20 18l-7 0" />
      <path d="M8 8l-4 4l4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `indent_increase` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.indent_increase />
      <TablerIcons.indent_increase class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def indent_increase(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 6l-11 0" />
      <path d="M20 12l-7 0" />
      <path d="M20 18l-11 0" />
      <path d="M4 8l4 4l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `infinity_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.infinity_off />
      <TablerIcons.infinity_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def infinity_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.165 8.174a4 4 0 0 0 -5.166 3.826a4 4 0 0 0 6.829 2.828a10 10 0 0 0 2.172 -2.828m1.677 -2.347a10 10 0 0 1 .495 -.481a4 4 0 1 1 5.129 6.1m-3.521 .537a4 4 0 0 1 -1.608 -.981a10 10 0 0 1 -2.172 -2.828" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `infinity` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.infinity />
      <TablerIcons.infinity class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def infinity(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.828 9.172a4 4 0 1 0 0 5.656a10 10 0 0 0 2.172 -2.828a10 10 0 0 1 2.172 -2.828a4 4 0 1 1 0 5.656a10 10 0 0 1 -2.172 -2.828a10 10 0 0 0 -2.172 -2.828" />
    </svg>
    """
  end

  @doc """
  Renders the `info_circle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.info_circle_filled />
      <TablerIcons.info_circle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def info_circle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10a10 10 0 0 1 -19.995 .324l-.005 -.324l.004 -.28c.148 -5.393 4.566 -9.72 9.996 -9.72zm0 9h-1l-.117 .007a1 1 0 0 0 0 1.986l.117 .007v3l.007 .117a1 1 0 0 0 .876 .876l.117 .007h1l.117 -.007a1 1 0 0 0 .876 -.876l.007 -.117l-.007 -.117a1 1 0 0 0 -.764 -.857l-.112 -.02l-.117 -.006v-3l-.007 -.117a1 1 0 0 0 -.876 -.876l-.117 -.007zm.01 -3l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `info_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.info_circle />
      <TablerIcons.info_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def info_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
      <path d="M12 9h.01" />
      <path d="M11 12h1v4h1" />
    </svg>
    """
  end

  @doc """
  Renders the `info_hexagon_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.info_hexagon_filled />
      <TablerIcons.info_hexagon_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def info_hexagon_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.425 1.414a3.33 3.33 0 0 1 3.026 -.097l.19 .097l6.775 3.995l.096 .063l.092 .077l.107 .075a3.224 3.224 0 0 1 1.266 2.188l.018 .202l.005 .204v7.284c0 1.106 -.57 2.129 -1.454 2.693l-.17 .1l-6.803 4.302c-.918 .504 -2.019 .535 -3.004 .068l-.196 -.1l-6.695 -4.237a3.225 3.225 0 0 1 -1.671 -2.619l-.007 -.207v-7.285c0 -1.106 .57 -2.128 1.476 -2.705l6.95 -4.098zm1.575 9.586h-1l-.117 .007a1 1 0 0 0 0 1.986l.117 .007v3l.007 .117a1 1 0 0 0 .876 .876l.117 .007h1l.117 -.007a1 1 0 0 0 .876 -.876l.007 -.117l-.007 -.117a1 1 0 0 0 -.764 -.857l-.112 -.02l-.117 -.006v-3l-.007 -.117a1 1 0 0 0 -.876 -.876l-.117 -.007zm.01 -3l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `info_hexagon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.info_hexagon />
      <TablerIcons.info_hexagon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def info_hexagon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27c.7 .398 1.13 1.143 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M12 9h.01" />
      <path d="M11 12h1v4h1" />
    </svg>
    """
  end

  @doc """
  Renders the `info_octagon_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.info_octagon_filled />
      <TablerIcons.info_octagon_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def info_octagon_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.897 1a4 4 0 0 1 2.664 1.016l.165 .156l4.1 4.1a4 4 0 0 1 1.168 2.605l.006 .227v5.794a4 4 0 0 1 -1.016 2.664l-.156 .165l-4.1 4.1a4 4 0 0 1 -2.603 1.168l-.227 .006h-5.795a3.999 3.999 0 0 1 -2.664 -1.017l-.165 -.156l-4.1 -4.1a4 4 0 0 1 -1.168 -2.604l-.006 -.227v-5.794a4 4 0 0 1 1.016 -2.664l.156 -.165l4.1 -4.1a4 4 0 0 1 2.605 -1.168l.227 -.006h5.793zm-2.897 10h-1l-.117 .007a1 1 0 0 0 0 1.986l.117 .007v3l.007 .117a1 1 0 0 0 .876 .876l.117 .007h1l.117 -.007a1 1 0 0 0 .876 -.876l.007 -.117l-.007 -.117a1 1 0 0 0 -.764 -.857l-.112 -.02l-.117 -.006v-3l-.007 -.117a1 1 0 0 0 -.876 -.876l-.117 -.007zm.01 -3l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `info_octagon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.info_octagon />
      <TablerIcons.info_octagon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def info_octagon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.103 2h5.794a3 3 0 0 1 2.122 .879l4.101 4.1a3 3 0 0 1 .88 2.125v5.794a3 3 0 0 1 -.879 2.122l-4.1 4.101a3 3 0 0 1 -2.123 .88h-5.795a3 3 0 0 1 -2.122 -.88l-4.101 -4.1a3 3 0 0 1 -.88 -2.124v-5.794a3 3 0 0 1 .879 -2.122l4.1 -4.101a3 3 0 0 1 2.125 -.88z" />
      <path d="M12 9h.01" />
      <path d="M11 12h1v4h1" />
    </svg>
    """
  end

  @doc """
  Renders the `info_small` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.info_small />
      <TablerIcons.info_small class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def info_small(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9h.01" />
      <path d="M11 12h1v4h1" />
    </svg>
    """
  end

  @doc """
  Renders the `info_square_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.info_square_filled />
      <TablerIcons.info_square_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def info_square_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 2.995 2.824l.005 .176v14a3 3 0 0 1 -2.824 2.995l-.176 .005h-14a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-14a3 3 0 0 1 2.824 -2.995l.176 -.005h14zm-7 9h-1l-.117 .007a1 1 0 0 0 0 1.986l.117 .007v3l.007 .117a1 1 0 0 0 .876 .876l.117 .007h1l.117 -.007a1 1 0 0 0 .876 -.876l.007 -.117l-.007 -.117a1 1 0 0 0 -.764 -.857l-.112 -.02l-.117 -.006v-3l-.007 -.117a1 1 0 0 0 -.876 -.876l-.117 -.007zm.01 -3l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `info_square_rounded_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.info_square_rounded_filled />
      <TablerIcons.info_square_rounded_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def info_square_rounded_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.642 .005l.616 .017l.299 .013l.579 .034l.553 .046c4.687 .455 6.65 2.333 7.166 6.906l.03 .29l.046 .553l.041 .727l.006 .15l.017 .617l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.455 4.687 -2.333 6.65 -6.906 7.166l-.29 .03l-.553 .046l-.727 .041l-.15 .006l-.617 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.687 -.455 -6.65 -2.333 -7.166 -6.906l-.03 -.29l-.046 -.553l-.041 -.727l-.006 -.15l-.017 -.617l-.004 -.318v-.648l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.455 -4.687 2.333 -6.65 6.906 -7.166l.29 -.03l.553 -.046l.727 -.041l.15 -.006l.617 -.017c.21 -.003 .424 -.005 .642 -.005zm0 9h-1l-.117 .007a1 1 0 0 0 0 1.986l.117 .007v3l.007 .117a1 1 0 0 0 .876 .876l.117 .007h1l.117 -.007a1 1 0 0 0 .876 -.876l.007 -.117l-.007 -.117a1 1 0 0 0 -.764 -.857l-.112 -.02l-.117 -.006v-3l-.007 -.117a1 1 0 0 0 -.876 -.876l-.117 -.007zm.01 -3l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `info_square_rounded` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.info_square_rounded />
      <TablerIcons.info_square_rounded class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def info_square_rounded(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9h.01" />
      <path d="M11 12h1v4h1" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `info_square` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.info_square />
      <TablerIcons.info_square class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def info_square(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9h.01" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
      <path d="M11 12h1v4h1" />
    </svg>
    """
  end

  @doc """
  Renders the `info_triangle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.info_triangle_filled />
      <TablerIcons.info_triangle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def info_triangle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11.94 2a2.99 2.99 0 0 1 2.45 1.279l.108 .164l8.431 14.074a2.989 2.989 0 0 1 -2.366 4.474l-.2 .009h-16.856a2.99 2.99 0 0 1 -2.648 -4.308l.101 -.189l8.425 -14.065a2.989 2.989 0 0 1 2.555 -1.438zm.06 10h-1l-.117 .007a1 1 0 0 0 0 1.986l.117 .007v3l.007 .117a1 1 0 0 0 .876 .876l.117 .007h1l.117 -.007a1 1 0 0 0 .876 -.876l.007 -.117l-.007 -.117a1 1 0 0 0 -.764 -.857l-.112 -.02l-.117 -.006v-3l-.007 -.117a1 1 0 0 0 -.876 -.876l-.117 -.007zm.01 -3l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `info_triangle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.info_triangle />
      <TablerIcons.info_triangle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def info_triangle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 10h.01" />
      <path d="M11 13h1v4h1" />
      <path d="M10.24 3.957l-8.422 14.06a1.989 1.989 0 0 0 1.7 2.983h16.845a1.989 1.989 0 0 0 1.7 -2.983l-8.423 -14.06a1.989 1.989 0 0 0 -3.4 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_bottom_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_bottom_filled />
      <TablerIcons.inner_shadow_bottom_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_bottom_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M5.144 4.72c3.92 -3.695 10.093 -3.625 13.927 .209c3.905 3.905 3.905 10.237 0 14.142c-3.905 3.905 -10.237 3.905 -14.142 0c-3.905 -3.905 -3.905 -10.237 0 -14.142zm3.32 10.816a1 1 0 1 0 -1.414 1.414a7 7 0 0 0 9.9 0a1 1 0 0 0 -1.414 -1.414a5 5 0 0 1 -7.072 0z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_bottom_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_bottom_left_filled />
      <TablerIcons.inner_shadow_bottom_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_bottom_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10s-4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10zm-6 9a1 1 0 0 0 -1 1a7 7 0 0 0 7 7a1 1 0 0 0 0 -2a5 5 0 0 1 -5 -5a1 1 0 0 0 -1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_bottom_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_bottom_left />
      <TablerIcons.inner_shadow_bottom_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_bottom_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M6 12a6 6 0 0 0 6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_bottom_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_bottom_right_filled />
      <TablerIcons.inner_shadow_bottom_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_bottom_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10s-4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10zm6 9a1 1 0 0 0 -1 1a5 5 0 0 1 -5 5a1 1 0 0 0 0 2a7 7 0 0 0 7 -7a1 1 0 0 0 -1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_bottom_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_bottom_right />
      <TablerIcons.inner_shadow_bottom_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_bottom_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 1 1 0 -18a9 9 0 0 1 0 18z" />
      <path d="M18 12a6 6 0 0 1 -6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_bottom` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_bottom />
      <TablerIcons.inner_shadow_bottom class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_bottom(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.364 18.364a9 9 0 1 0 -12.728 -12.728a9 9 0 0 0 12.728 12.728z" />
      <path d="M7.757 16.243a6 6 0 0 0 8.486 0" />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_left_filled />
      <TablerIcons.inner_shadow_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M4.929 4.929c3.905 -3.905 10.237 -3.905 14.142 0c3.905 3.905 3.905 10.237 0 14.142c-3.905 3.905 -10.237 3.905 -14.142 0c-3.905 -3.905 -3.905 -10.237 0 -14.142zm3.535 2.121a1 1 0 0 0 -1.414 0a7 7 0 0 0 0 9.9a1 1 0 1 0 1.414 -1.414a5 5 0 0 1 0 -7.072a1 1 0 0 0 0 -1.414z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_left />
      <TablerIcons.inner_shadow_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.636 5.636a9 9 0 1 1 12.728 12.728a9 9 0 0 1 -12.728 -12.728z" />
      <path d="M7.757 16.243a6 6 0 0 1 0 -8.486" />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_right_filled />
      <TablerIcons.inner_shadow_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M4.929 4.929c3.905 -3.905 10.237 -3.905 14.142 0c3.905 3.905 3.905 10.237 0 14.142c-3.905 3.905 -10.237 3.905 -14.142 0c-3.905 -3.905 -3.905 -10.237 0 -14.142zm12.02 2.121a1 1 0 0 0 -1.413 1.414a5 5 0 0 1 0 7.072a1 1 0 0 0 1.414 1.414a7 7 0 0 0 0 -9.9z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_right />
      <TablerIcons.inner_shadow_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.364 18.364a9 9 0 1 1 -12.728 -12.728a9 9 0 0 1 12.728 12.728z" />
      <path d="M16.243 7.757a6 6 0 0 1 0 8.486" />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_top_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_top_filled />
      <TablerIcons.inner_shadow_top_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_top_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M4.929 4.929c3.905 -3.905 10.237 -3.905 14.142 0c3.905 3.905 3.905 10.237 0 14.142c-3.905 3.905 -10.237 3.905 -14.142 0c-3.905 -3.905 -3.905 -10.237 0 -14.142zm12.02 2.121a7 7 0 0 0 -9.899 0a1 1 0 0 0 1.414 1.414a5 5 0 0 1 7.072 0a1 1 0 0 0 1.414 -1.414z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_top_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_top_left_filled />
      <TablerIcons.inner_shadow_top_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_top_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10s-4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10zm0 3a7 7 0 0 0 -7 7a1 1 0 0 0 2 0a5 5 0 0 1 5 -5a1 1 0 0 0 0 -2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_top_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_top_left />
      <TablerIcons.inner_shadow_top_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_top_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a9 9 0 1 1 0 18a9 9 0 0 1 0 -18z" />
      <path d="M6 12a6 6 0 0 1 6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_top_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_top_right_filled />
      <TablerIcons.inner_shadow_top_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_top_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c5.523 0 10 4.477 10 10s-4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10zm0 3a1 1 0 0 0 0 2a5 5 0 0 1 5 5a1 1 0 0 0 2 0a7 7 0 0 0 -7 -7z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_top_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_top_right />
      <TablerIcons.inner_shadow_top_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_top_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a9 9 0 1 0 0 18a9 9 0 0 0 0 -18z" />
      <path d="M18 12a6 6 0 0 0 -6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `inner_shadow_top` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.inner_shadow_top />
      <TablerIcons.inner_shadow_top class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def inner_shadow_top(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.636 5.636a9 9 0 1 0 12.728 12.728a9 9 0 0 0 -12.728 -12.728z" />
      <path d="M16.243 7.757a6 6 0 0 0 -8.486 0" />
    </svg>
    """
  end

  @doc """
  Renders the `input_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.input_search />
      <TablerIcons.input_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def input_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 11v-3a2 2 0 0 0 -2 -2h-12a2 2 0 0 0 -2 2v5a2 2 0 0 0 2 2h5" />
      <path d="M15.5 15.5m-2.5 0a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0 -5 0" />
      <path d="M17.5 17.5l2.5 2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `ironing_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ironing_1 />
      <TablerIcons.ironing_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ironing_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 6h7.459a3 3 0 0 1 2.959 2.507l.577 3.464l.81 4.865a1 1 0 0 1 -.985 1.164h-16.82a7 7 0 0 1 7 -7h9.8" />
      <path d="M12 15h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `ironing_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ironing_2 />
      <TablerIcons.ironing_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ironing_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 15h.01" />
      <path d="M9 6h7.459a3 3 0 0 1 2.959 2.507l.577 3.464l.81 4.865a1 1 0 0 1 -.985 1.164h-16.82a7 7 0 0 1 7 -7h9.8" />
      <path d="M14 15h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `ironing_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ironing_3 />
      <TablerIcons.ironing_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ironing_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 15h.01" />
      <path d="M9 6h7.459a3 3 0 0 1 2.959 2.507l.577 3.464l.81 4.865a1 1 0 0 1 -.985 1.164h-16.82a7 7 0 0 1 7 -7h9.8" />
      <path d="M9 15h.01" />
      <path d="M15 15h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `ironing_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ironing_off />
      <TablerIcons.ironing_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ironing_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 6h6.459a3 3 0 0 1 2.959 2.507l.577 3.464l.804 4.821l.007 .044m-2.806 1.164h-15a7 7 0 0 1 7 -7h1m4 0h4.8" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ironing_steam_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ironing_steam_off />
      <TablerIcons.ironing_steam_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ironing_steam_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 4h7.459a3 3 0 0 1 2.959 2.507l.577 3.464l.81 4.865a1 1 0 0 1 -.821 1.15" />
      <path d="M16 16h-13a7 7 0 0 1 6.056 -6.937" />
      <path d="M13 9h6.8" />
      <path d="M12 19v2" />
      <path d="M8 19l-1 2" />
      <path d="M16 19l1 2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ironing_steam` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ironing_steam />
      <TablerIcons.ironing_steam class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ironing_steam(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19v2" />
      <path d="M9 4h7.459a3 3 0 0 1 2.959 2.507l.577 3.464l.81 4.865a1 1 0 0 1 -.985 1.164h-16.82a7 7 0 0 1 7 -7h9.8" />
      <path d="M8 19l-1 2" />
      <path d="M16 19l1 2" />
    </svg>
    """
  end

  @doc """
  Renders the `ironing` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ironing />
      <TablerIcons.ironing class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ironing(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 6h7.459a3 3 0 0 1 2.959 2.507l.577 3.464l.81 4.865a1 1 0 0 1 -.985 1.164h-16.82a7 7 0 0 1 7 -7h9.8" />
    </svg>
    """
  end

  @doc """
  Renders the `irregular_polyhedron_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.irregular_polyhedron_off />
      <TablerIcons.irregular_polyhedron_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def irregular_polyhedron_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.706 4.73a1 1 0 0 0 -.458 1.14l1.752 6.13l-1.752 6.13a1 1 0 0 0 .592 1.205l6.282 2.503a2.46 2.46 0 0 0 1.756 0l6.282 -2.503c.04 -.016 .079 -.035 .116 -.055m-.474 -4.474l-.802 -2.806l1.752 -6.13a1 1 0 0 0 -.592 -1.205l-6.282 -2.503a2.46 2.46 0 0 0 -1.756 0l-3.544 1.412" />
      <path d="M4.5 5.5c.661 .214 1.161 .38 1.5 .5m6 2c.29 -.003 .603 -.06 .878 -.17l6.622 -2.33" />
      <path d="M6 12l5.21 1.862a2.34 2.34 0 0 0 1.58 0l.742 -.265m2.956 -1.057c.312 -.11 .816 -.291 1.512 -.54" />
      <path d="M12 22v-10" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `irregular_polyhedron_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.irregular_polyhedron_plus />
      <TablerIcons.irregular_polyhedron_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def irregular_polyhedron_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 12l1.752 -6.13a1 1 0 0 0 -.592 -1.205l-6.282 -2.503a2.46 2.46 0 0 0 -1.756 0l-6.282 2.503a1 1 0 0 0 -.592 1.204l1.752 6.131l-1.752 6.13a1 1 0 0 0 .592 1.205l6.282 2.503a2.46 2.46 0 0 0 1.756 0l.221 -.088" />
      <path d="M4.5 5.5l6.622 2.33a2.35 2.35 0 0 0 1.756 0l6.622 -2.33" />
      <path d="M6 12l5.21 1.862a2.34 2.34 0 0 0 1.58 0l5.21 -1.862" />
      <path d="M12 22v-14" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `irregular_polyhedron` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.irregular_polyhedron />
      <TablerIcons.irregular_polyhedron class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def irregular_polyhedron(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 12l-1.752 6.13a1 1 0 0 0 .592 1.205l6.282 2.503a2.46 2.46 0 0 0 1.756 0l6.282 -2.503a1 1 0 0 0 .592 -1.204l-1.752 -6.131l1.752 -6.13a1 1 0 0 0 -.592 -1.205l-6.282 -2.503a2.46 2.46 0 0 0 -1.756 0l-6.282 2.503a1 1 0 0 0 -.592 1.204l1.752 6.131z" />
      <path d="M4.5 5.5l6.622 2.33a2.35 2.35 0 0 0 1.756 0l6.622 -2.33" />
      <path d="M6 12l5.21 1.862a2.34 2.34 0 0 0 1.58 0l5.21 -1.862" />
      <path d="M12 22v-14" />
    </svg>
    """
  end

  @doc """
  Renders the `italic` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.italic />
      <TablerIcons.italic class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def italic(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 5l6 0" />
      <path d="M7 19l6 0" />
      <path d="M14 5l-4 14" />
    </svg>
    """
  end

  @doc """
  Renders the `jacket` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.jacket />
      <TablerIcons.jacket class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def jacket(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 3l-4 5l-4 -5" />
      <path d="M12 19a2 2 0 0 1 -2 2h-4a2 2 0 0 1 -2 -2v-8.172a2 2 0 0 1 .586 -1.414l.828 -.828a2 2 0 0 0 .586 -1.414v-2.172a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v2.172a2 2 0 0 0 .586 1.414l.828 .828a2 2 0 0 1 .586 1.414v8.172a2 2 0 0 1 -2 2h-4a2 2 0 0 1 -2 -2z" />
      <path d="M20 13h-3a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h3" />
      <path d="M4 17h3a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-3" />
      <path d="M12 19v-11" />
    </svg>
    """
  end

  @doc """
  Renders the `jetpack` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.jetpack />
      <TablerIcons.jetpack class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def jetpack(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 6a3 3 0 1 0 -6 0v7h6v-7z" />
      <path d="M14 13h6v-7a3 3 0 0 0 -6 0v7z" />
      <path d="M5 16c0 2.333 .667 4 2 5c1.333 -1 2 -2.667 2 -5" />
      <path d="M15 16c0 2.333 .667 4 2 5c1.333 -1 2 -2.667 2 -5" />
      <path d="M10 8h4" />
      <path d="M10 11h4" />
    </svg>
    """
  end

  @doc """
  Renders the `jewish_star_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.jewish_star_filled />
      <TablerIcons.jewish_star_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def jewish_star_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M8.433 6h-5.433l-.114 .006a1 1 0 0 0 -.743 1.508l2.69 4.486l-2.69 4.486l-.054 .1a1 1 0 0 0 .911 1.414h5.434l2.709 4.514l.074 .108a1 1 0 0 0 1.64 -.108l2.708 -4.514h5.435l.114 -.006a1 1 0 0 0 .743 -1.508l-2.691 -4.486l2.691 -4.486l.054 -.1a1 1 0 0 0 -.911 -1.414h-5.434l-2.709 -4.514a1 1 0 0 0 -1.714 0l-2.71 4.514z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `jewish_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.jewish_star />
      <TablerIcons.jewish_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def jewish_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 2l3 5h6l-3 5l3 5h-6l-3 5l-3 -5h-6l3 -5l-3 -5h6z" />
    </svg>
    """
  end

  @doc """
  Renders the `jpg` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.jpg />
      <TablerIcons.jpg class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def jpg(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 8h-2a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2v-4h-1" />
      <path d="M10 16v-8h2a2 2 0 1 1 0 4h-2" />
      <path d="M3 8h4v6a2 2 0 0 1 -2 2h-1.5a.5 .5 0 0 1 -.5 -.5v-.5" />
    </svg>
    """
  end

  @doc """
  Renders the `json` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.json />
      <TablerIcons.json class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def json(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 16v-8l3 8v-8" />
      <path d="M15 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
      <path d="M1 8h3v6.5a1.5 1.5 0 0 1 -3 0v-.5" />
      <path d="M7 15a1 1 0 0 0 1 1h1a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h1a1 1 0 0 1 1 1" />
    </svg>
    """
  end

  @doc """
  Renders the `jump_rope` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.jump_rope />
      <TablerIcons.jump_rope class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def jump_rope(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 14v-6a3 3 0 1 1 6 0v8a3 3 0 0 0 6 0v-6" />
      <path d="M16 3m0 2a2 2 0 0 1 2 -2h0a2 2 0 0 1 2 2v3a2 2 0 0 1 -2 2h0a2 2 0 0 1 -2 -2z" />
      <path d="M4 14m0 2a2 2 0 0 1 2 -2h0a2 2 0 0 1 2 2v3a2 2 0 0 1 -2 2h0a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `karate` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.karate />
      <TablerIcons.karate class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def karate(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 4m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M3 9l4.5 1l3 2.5" />
      <path d="M13 21v-8l3 -5.5" />
      <path d="M8 4.5l4 2l4 1l4 3.5l-2 3.5" />
    </svg>
    """
  end

  @doc """
  Renders the `kayak` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.kayak />
      <TablerIcons.kayak class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def kayak(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.414 6.414a2 2 0 0 0 0 -2.828l-1.414 -1.414l-2.828 2.828l1.414 1.414a2 2 0 0 0 2.828 0z" />
      <path d="M17.586 17.586a2 2 0 0 0 0 2.828l1.414 1.414l2.828 -2.828l-1.414 -1.414a2 2 0 0 0 -2.828 0z" />
      <path d="M6.5 6.5l11 11" />
      <path d="M22 2.5c-9.983 2.601 -17.627 7.952 -20 19.5c9.983 -2.601 17.627 -7.952 20 -19.5z" />
      <path d="M6.5 12.5l5 5" />
      <path d="M12.5 6.5l5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `kering` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.kering />
      <TablerIcons.kering class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def kering(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 15v-3.5a2.5 2.5 0 1 1 5 0v3.5m0 -2h-5" />
      <path d="M3 9l3 6l3 -6" />
      <path d="M9 20l6 -16" />
    </svg>
    """
  end

  @doc """
  Renders the `key_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.key_off />
      <TablerIcons.key_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def key_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.17 6.159l2.316 -2.316a2.877 2.877 0 0 1 4.069 0l3.602 3.602a2.877 2.877 0 0 1 0 4.069l-2.33 2.33" />
      <path d="M14.931 14.948a2.863 2.863 0 0 1 -1.486 -.79l-.301 -.302l-6.558 6.558a2 2 0 0 1 -1.239 .578l-.175 .008h-1.172a1 1 0 0 1 -.993 -.883l-.007 -.117v-1.172a2 2 0 0 1 .467 -1.284l.119 -.13l.414 -.414h2v-2h2v-2l2.144 -2.144l-.301 -.301a2.863 2.863 0 0 1 -.794 -1.504" />
      <path d="M15 9h.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `key` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.key />
      <TablerIcons.key class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def key(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.555 3.843l3.602 3.602a2.877 2.877 0 0 1 0 4.069l-2.643 2.643a2.877 2.877 0 0 1 -4.069 0l-.301 -.301l-6.558 6.558a2 2 0 0 1 -1.239 .578l-.175 .008h-1.172a1 1 0 0 1 -.993 -.883l-.007 -.117v-1.172a2 2 0 0 1 .467 -1.284l.119 -.13l.414 -.414h2v-2h2v-2l2.144 -2.144l-.301 -.301a2.877 2.877 0 0 1 0 -4.069l2.643 -2.643a2.877 2.877 0 0 1 4.069 0z" />
      <path d="M15 9h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `keyboard_hide` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.keyboard_hide />
      <TablerIcons.keyboard_hide class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def keyboard_hide(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 3m0 2a2 2 0 0 1 2 -2h16a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-16a2 2 0 0 1 -2 -2z" />
      <path d="M6 7l0 .01" />
      <path d="M10 7l0 .01" />
      <path d="M14 7l0 .01" />
      <path d="M18 7l0 .01" />
      <path d="M6 11l0 .01" />
      <path d="M18 11l0 .01" />
      <path d="M10 11l4 0" />
      <path d="M10 21l2 -2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `keyboard_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.keyboard_off />
      <TablerIcons.keyboard_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def keyboard_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 18h-14a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h2m4 0h10a2 2 0 0 1 2 2v8c0 .554 -.226 1.056 -.59 1.418" />
      <path d="M6 10l0 .01" />
      <path d="M10 10l0 .01" />
      <path d="M14 10l0 .01" />
      <path d="M18 10l0 .01" />
      <path d="M6 14l0 .01" />
      <path d="M18 14l0 .01" />
      <path d="M10 14l4 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `keyboard_show` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.keyboard_show />
      <TablerIcons.keyboard_show class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def keyboard_show(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 3m0 2a2 2 0 0 1 2 -2h16a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-16a2 2 0 0 1 -2 -2z" />
      <path d="M6 7l0 .01" />
      <path d="M10 7l0 .01" />
      <path d="M14 7l0 .01" />
      <path d="M18 7l0 .01" />
      <path d="M6 11l0 .01" />
      <path d="M18 11l0 .01" />
      <path d="M10 11l4 0" />
      <path d="M10 19l2 2l2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `keyboard` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.keyboard />
      <TablerIcons.keyboard class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def keyboard(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 6m0 2a2 2 0 0 1 2 -2h16a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-16a2 2 0 0 1 -2 -2z" />
      <path d="M6 10l0 .01" />
      <path d="M10 10l0 .01" />
      <path d="M14 10l0 .01" />
      <path d="M18 10l0 .01" />
      <path d="M6 14l0 .01" />
      <path d="M18 14l0 .01" />
      <path d="M10 14l4 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `keyframe_align_center_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.keyframe_align_center_filled />
      <TablerIcons.keyframe_align_center_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def keyframe_align_center_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 19a1 1 0 0 1 .993 .883l.007 .117v2a1 1 0 0 1 -1.993 .117l-.007 -.117v-2a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 6c-.629 0 -1.214 .301 -1.606 .807l-2.908 3.748a2.395 2.395 0 0 0 -.011 2.876l2.919 3.762c.39 .505 .977 .807 1.606 .807c.629 0 1.214 -.301 1.606 -.807l2.908 -3.748a2.395 2.395 0 0 0 .011 -2.876l-2.919 -3.762a2.032 2.032 0 0 0 -1.606 -.807z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 1a1 1 0 0 1 .993 .883l.007 .117v2a1 1 0 0 1 -1.993 .117l-.007 -.117v-2a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M5 11a1 1 0 0 1 .117 1.993l-.117 .007h-2a1 1 0 0 1 -.117 -1.993l.117 -.007h2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M21 11a1 1 0 0 1 .117 1.993l-.117 .007h-2a1 1 0 0 1 -.117 -1.993l.117 -.007h2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `keyframe_align_center` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.keyframe_align_center />
      <TablerIcons.keyframe_align_center class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def keyframe_align_center(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20v2" />
      <path d="M12.816 16.58c-.207 .267 -.504 .42 -.816 .42c-.312 0 -.61 -.153 -.816 -.42l-2.908 -3.748a1.39 1.39 0 0 1 0 -1.664l2.908 -3.748c.207 -.267 .504 -.42 .816 -.42c.312 0 .61 .153 .816 .42l2.908 3.748a1.39 1.39 0 0 1 0 1.664l-2.908 3.748z" />
      <path d="M12 2v2" />
      <path d="M3 12h2" />
      <path d="M19 12h2" />
    </svg>
    """
  end

  @doc """
  Renders the `keyframe_align_horizontal_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.keyframe_align_horizontal_filled />
      <TablerIcons.keyframe_align_horizontal_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def keyframe_align_horizontal_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 6c-.629 0 -1.214 .301 -1.606 .807l-2.908 3.748a2.395 2.395 0 0 0 -.011 2.876l2.919 3.762c.39 .505 .977 .807 1.606 .807c.629 0 1.214 -.301 1.606 -.807l2.908 -3.748a2.395 2.395 0 0 0 .011 -2.876l-2.919 -3.762a2.032 2.032 0 0 0 -1.606 -.807z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M5 11a1 1 0 0 1 .117 1.993l-.117 .007h-2a1 1 0 0 1 -.117 -1.993l.117 -.007h2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M21 11a1 1 0 0 1 .117 1.993l-.117 .007h-2a1 1 0 0 1 -.117 -1.993l.117 -.007h2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `keyframe_align_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.keyframe_align_horizontal />
      <TablerIcons.keyframe_align_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def keyframe_align_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.816 16.58c-.207 .267 -.504 .42 -.816 .42c-.312 0 -.61 -.153 -.816 -.42l-2.908 -3.748a1.39 1.39 0 0 1 0 -1.664l2.908 -3.748c.207 -.267 .504 -.42 .816 -.42c.312 0 .61 .153 .816 .42l2.908 3.748a1.39 1.39 0 0 1 0 1.664l-2.908 3.748z" />
      <path d="M3 12h2" />
      <path d="M19 12h2" />
    </svg>
    """
  end

  @doc """
  Renders the `keyframe_align_vertical_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.keyframe_align_vertical_filled />
      <TablerIcons.keyframe_align_vertical_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def keyframe_align_vertical_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 1a1 1 0 0 1 .993 .883l.007 .117v2a1 1 0 0 1 -1.993 .117l-.007 -.117v-2a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 6c-.629 0 -1.214 .301 -1.606 .807l-2.908 3.748a2.395 2.395 0 0 0 -.011 2.876l2.919 3.762c.39 .505 .977 .807 1.606 .807c.629 0 1.214 -.301 1.606 -.807l2.908 -3.748a2.395 2.395 0 0 0 .011 -2.876l-2.919 -3.762a2.032 2.032 0 0 0 -1.606 -.807z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 19a1 1 0 0 1 .993 .883l.007 .117v2a1 1 0 0 1 -1.993 .117l-.007 -.117v-2a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `keyframe_align_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.keyframe_align_vertical />
      <TablerIcons.keyframe_align_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def keyframe_align_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 2v2" />
      <path d="M12.816 16.58c-.207 .267 -.504 .42 -.816 .42c-.312 0 -.61 -.153 -.816 -.42l-2.908 -3.748a1.39 1.39 0 0 1 0 -1.664l2.908 -3.748c.207 -.267 .504 -.42 .816 -.42c.312 0 .61 .153 .816 .42l2.908 3.748a1.39 1.39 0 0 1 0 1.664l-2.908 3.748z" />
      <path d="M12 20v2" />
    </svg>
    """
  end

  @doc """
  Renders the `keyframe_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.keyframe_filled />
      <TablerIcons.keyframe_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def keyframe_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 4a2.599 2.599 0 0 0 -2 .957l-4.355 5.24a2.847 2.847 0 0 0 -.007 3.598l4.368 5.256c.499 .6 1.225 .949 1.994 .949a2.599 2.599 0 0 0 2 -.957l4.355 -5.24a2.847 2.847 0 0 0 .007 -3.598l-4.368 -5.256a2.593 2.593 0 0 0 -1.994 -.949z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `keyframe` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.keyframe />
      <TablerIcons.keyframe class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def keyframe(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.225 18.412a1.595 1.595 0 0 1 -1.225 .588c-.468 0 -.914 -.214 -1.225 -.588l-4.361 -5.248a1.844 1.844 0 0 1 0 -2.328l4.361 -5.248a1.595 1.595 0 0 1 1.225 -.588c.468 0 .914 .214 1.225 .588l4.361 5.248a1.844 1.844 0 0 1 0 2.328l-4.361 5.248z" />
    </svg>
    """
  end

  @doc """
  Renders the `keyframes_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.keyframes_filled />
      <TablerIcons.keyframes_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def keyframes_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M8 4a2.599 2.599 0 0 0 -2 .957l-4.355 5.24a2.847 2.847 0 0 0 -.007 3.598l4.368 5.256c.499 .6 1.224 .949 1.994 .949a2.599 2.599 0 0 0 2 -.957l4.355 -5.24a2.847 2.847 0 0 0 .007 -3.598l-4.368 -5.256a2.593 2.593 0 0 0 -1.994 -.949z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M16.382 4.214a1 1 0 0 1 1.32 .074l.084 .094l4.576 5.823c.808 .993 .848 2.396 .13 3.419l-.12 .158l-4.586 5.836a1 1 0 0 1 -1.644 -1.132l.072 -.104l4.596 -5.85a.845 .845 0 0 0 .06 -.978l-.07 -.1l-4.586 -5.836a1 1 0 0 1 .168 -1.404z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12.382 4.214a1 1 0 0 1 1.32 .074l.084 .094l4.576 5.823c.808 .993 .848 2.396 .13 3.419l-.12 .158l-4.586 5.836a1 1 0 0 1 -1.644 -1.132l.072 -.104l4.596 -5.85a.845 .845 0 0 0 .06 -.978l-.07 -.1l-4.586 -5.836a1 1 0 0 1 .168 -1.404z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `keyframes` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.keyframes />
      <TablerIcons.keyframes class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def keyframes(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.225 18.412a1.595 1.595 0 0 1 -1.225 .588c-.468 0 -.914 -.214 -1.225 -.588l-4.361 -5.248a1.844 1.844 0 0 1 0 -2.328l4.361 -5.248a1.595 1.595 0 0 1 1.225 -.588c.468 0 .914 .214 1.225 .588l4.361 5.248a1.844 1.844 0 0 1 0 2.328l-4.361 5.248z" />
      <path d="M17 5l4.586 5.836a1.844 1.844 0 0 1 0 2.328l-4.586 5.836" />
      <path d="M13 5l4.586 5.836a1.844 1.844 0 0 1 0 2.328l-4.586 5.836" />
    </svg>
    """
  end

  @doc """
  Renders the `ladder_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ladder_off />
      <TablerIcons.ladder_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ladder_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 3v1m0 4v13" />
      <path d="M16 3v9m0 4v5" />
      <path d="M8 14h6" />
      <path d="M8 10h2m4 0h2" />
      <path d="M10 6h6" />
      <path d="M8 18h8" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ladder` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ladder />
      <TablerIcons.ladder class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ladder(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 3v18" />
      <path d="M16 3v18" />
      <path d="M8 14h8" />
      <path d="M8 10h8" />
      <path d="M8 6h8" />
      <path d="M8 18h8" />
    </svg>
    """
  end

  @doc """
  Renders the `ladle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ladle />
      <TablerIcons.ladle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ladle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 14v1a6 6 0 1 0 12 0v-9a3 3 0 0 1 6 0" />
      <path d="M9 16c-.663 0 -1.3 -.036 -1.896 -.102l-.5 -.064c-2.123 -.308 -3.604 -1.013 -3.604 -1.834c0 -.82 1.482 -1.526 3.603 -1.834l.5 -.064a17.27 17.27 0 0 1 1.897 -.102c.663 0 1.3 .036 1.896 .102l.5 .064c2.123 .308 3.604 1.013 3.604 1.834c0 .82 -1.482 1.526 -3.603 1.834l-.5 .064a17.27 17.27 0 0 1 -1.897 .102z" />
    </svg>
    """
  end

  @doc """
  Renders the `lambda` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lambda />
      <TablerIcons.lambda class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lambda(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 20l6.5 -9" />
      <path d="M19 20c-6 0 -6 -16 -12 -16" />
    </svg>
    """
  end

  @doc """
  Renders the `lamp_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lamp_2 />
      <TablerIcons.lamp_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lamp_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 21h9" />
      <path d="M10 21l-7 -8l8.5 -5.5" />
      <path d="M13 14c-2.148 -2.148 -2.148 -5.852 0 -8c2.088 -2.088 5.842 -1.972 8 0l-8 8z" />
      <path d="M11.742 7.574l-1.156 -1.156a2 2 0 0 1 2.828 -2.829l1.144 1.144" />
      <path d="M15.5 12l.208 .274a2.527 2.527 0 0 0 3.556 0c.939 -.933 .98 -2.42 .122 -3.4l-.366 -.369" />
    </svg>
    """
  end

  @doc """
  Renders the `lamp_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lamp_off />
      <TablerIcons.lamp_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lamp_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 20h6" />
      <path d="M12 20v-8" />
      <path d="M7.325 7.35l-2.325 4.65h7m4 0h3l-4 -8h-6l-.338 .676" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `lamp` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lamp />
      <TablerIcons.lamp class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lamp(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 20h6" />
      <path d="M12 20v-8" />
      <path d="M5 12h14l-4 -8h-6z" />
    </svg>
    """
  end

  @doc """
  Renders the `lane` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lane />
      <TablerIcons.lane class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lane(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6v13" />
      <path d="M20 6v13" />
    </svg>
    """
  end

  @doc """
  Renders the `language_hiragana` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.language_hiragana />
      <TablerIcons.language_hiragana class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def language_hiragana(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 5h7" />
      <path d="M7 4c0 4.846 0 7 .5 8" />
      <path d="M10 8.5c0 2.286 -2 4.5 -3.5 4.5s-2.5 -1.135 -2.5 -2c0 -2 1 -3 3 -3s5 .57 5 2.857c0 1.524 -.667 2.571 -2 3.143" />
      <path d="M12 20l4 -9l4 9" />
      <path d="M19.1 18h-6.2" />
    </svg>
    """
  end

  @doc """
  Renders the `language_katakana` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.language_katakana />
      <TablerIcons.language_katakana class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def language_katakana(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5h6.586a1 1 0 0 1 .707 1.707l-1.293 1.293" />
      <path d="M8 8c0 1.5 .5 3 -2 5" />
      <path d="M12 20l4 -9l4 9" />
      <path d="M19.1 18h-6.2" />
    </svg>
    """
  end

  @doc """
  Renders the `language_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.language_off />
      <TablerIcons.language_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def language_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 5h1m4 0h2" />
      <path d="M9 3v2m-.508 3.517c-.814 2.655 -2.52 4.483 -4.492 4.483" />
      <path d="M5 9c0 2.144 2.952 3.908 6.7 4" />
      <path d="M12 20l2.463 -5.541m1.228 -2.764l.309 -.695l.8 1.8" />
      <path d="M18 18h-5.1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `language` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.language />
      <TablerIcons.language class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def language(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 5h7" />
      <path d="M9 3v2c0 4.418 -2.239 8 -5 8" />
      <path d="M5 9c0 2.144 2.952 3.908 6.7 4" />
      <path d="M12 20l4 -9l4 9" />
      <path d="M19.1 18h-6.2" />
    </svg>
    """
  end

  @doc """
  Renders the `lasso_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lasso_off />
      <TablerIcons.lasso_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lasso_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.028 13.252c-.657 -.972 -1.028 -2.078 -1.028 -3.252c0 -1.804 .878 -3.449 2.319 -4.69m2.49 -1.506a11.066 11.066 0 0 1 4.191 -.804c4.97 0 9 3.134 9 7c0 1.799 -.873 3.44 -2.307 4.68m-2.503 1.517a11.066 11.066 0 0 1 -4.19 .803c-1.913 0 -3.686 -.464 -5.144 -1.255" />
      <path d="M5 15m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 17c0 1.42 .316 2.805 1 4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `lasso_polygon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lasso_polygon />
      <TablerIcons.lasso_polygon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lasso_polygon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.028 13.252l-1.028 -3.252l2 -7l7 5l8 -3l1 9l-9 3l-5.144 -1.255" />
      <path d="M5 15m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 17c0 1.42 .316 2.805 1 4" />
    </svg>
    """
  end

  @doc """
  Renders the `lasso` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lasso />
      <TablerIcons.lasso class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lasso(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.028 13.252c-.657 -.972 -1.028 -2.078 -1.028 -3.252c0 -3.866 4.03 -7 9 -7s9 3.134 9 7s-4.03 7 -9 7c-1.913 0 -3.686 -.464 -5.144 -1.255" />
      <path d="M5 15m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 17c0 1.42 .316 2.805 1 4" />
    </svg>
    """
  end

  @doc """
  Renders the `layers_difference` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layers_difference />
      <TablerIcons.layers_difference class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layers_difference(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 16v2a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h2v-2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-2" />
      <path d="M10 8l-2 0l0 2" />
      <path d="M8 14l0 2l2 0" />
      <path d="M14 8l2 0l0 2" />
      <path d="M16 14l0 2l-2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `layers_intersect_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layers_intersect_2 />
      <TablerIcons.layers_intersect_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layers_intersect_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
      <path d="M4 8m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
      <path d="M9 15l6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `layers_intersect` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layers_intersect />
      <TablerIcons.layers_intersect class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layers_intersect(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
      <path d="M4 8m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `layers_linked` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layers_linked />
      <TablerIcons.layers_linked class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layers_linked(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 8.268a2 2 0 0 1 1 1.732v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h3" />
      <path d="M5 15.734a2 2 0 0 1 -1 -1.734v-8a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `layers_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layers_off />
      <TablerIcons.layers_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layers_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.59 4.581c.362 -.359 .86 -.581 1.41 -.581h8a2 2 0 0 1 2 2v8c0 .556 -.227 1.06 -.594 1.422m-3.406 .578h-6a2 2 0 0 1 -2 -2v-6" />
      <path d="M16 16v2a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `layers_subtract` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layers_subtract />
      <TablerIcons.layers_subtract class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layers_subtract(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
      <path d="M16 16v2a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h2" />
    </svg>
    """
  end

  @doc """
  Renders the `layers_union` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layers_union />
      <TablerIcons.layers_union class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layers_union(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 16v2a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h2v-2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-2" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_2 />
      <TablerIcons.layout_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v1a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M4 13m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v3a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M14 4m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v3a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M14 15m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v1a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_align_bottom` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_align_bottom />
      <TablerIcons.layout_align_bottom class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_align_bottom(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20l16 0" />
      <path d="M9 4m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_align_center` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_align_center />
      <TablerIcons.layout_align_center class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_align_center(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 4l0 5" />
      <path d="M12 15l0 5" />
      <path d="M6 9m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_align_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_align_left />
      <TablerIcons.layout_align_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_align_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4l0 16" />
      <path d="M8 9m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_align_middle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_align_middle />
      <TablerIcons.layout_align_middle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_align_middle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12l5 0" />
      <path d="M15 12l5 0" />
      <path d="M9 6m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_align_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_align_right />
      <TablerIcons.layout_align_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_align_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 4l0 16" />
      <path d="M4 9m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_align_top` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_align_top />
      <TablerIcons.layout_align_top class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_align_top(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4l16 0" />
      <path d="M9 8m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_board_split` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_board_split />
      <TablerIcons.layout_board_split class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_board_split(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M4 12h8" />
      <path d="M12 15h8" />
      <path d="M12 9h8" />
      <path d="M12 4v16" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_board` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_board />
      <TablerIcons.layout_board class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_board(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M4 9h8" />
      <path d="M12 15h8" />
      <path d="M12 4v16" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_bottombar_collapse_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_bottombar_collapse_filled />
      <TablerIcons.layout_bottombar_collapse_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_bottombar_collapse_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 3a3 3 0 0 1 2.995 2.824l.005 .176v12a3 3 0 0 1 -2.824 2.995l-.176 .005h-12a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-12a3 3 0 0 1 2.824 -2.995l.176 -.005h12zm0 2h-12a1 1 0 0 0 -.993 .883l-.007 .117v9h14v-9a1 1 0 0 0 -.883 -.993l-.117 -.007zm-7.387 3.21l.094 .083l1.293 1.292l1.293 -1.292a1 1 0 0 1 1.32 -.083l.094 .083a1 1 0 0 1 .083 1.32l-.083 .094l-2 2a1 1 0 0 1 -1.32 .083l-.094 -.083l-2 -2a1 1 0 0 1 1.32 -1.497z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `layout_bottombar_collapse` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_bottombar_collapse />
      <TablerIcons.layout_bottombar_collapse class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_bottombar_collapse(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 6v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2z" />
      <path d="M20 15h-16" />
      <path d="M14 8l-2 2l-2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_bottombar_expand_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_bottombar_expand_filled />
      <TablerIcons.layout_bottombar_expand_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_bottombar_expand_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 3a3 3 0 0 1 2.995 2.824l.005 .176v12a3 3 0 0 1 -2.824 2.995l-.176 .005h-12a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-12a3 3 0 0 1 2.824 -2.995l.176 -.005h12zm0 2h-12a1 1 0 0 0 -.993 .883l-.007 .117v9h14v-9a1 1 0 0 0 -.883 -.993l-.117 -.007zm-5.387 3.21l.094 .083l2 2a1 1 0 0 1 -1.32 1.497l-.094 -.083l-1.293 -1.292l-1.293 1.292a1 1 0 0 1 -1.32 .083l-.094 -.083a1 1 0 0 1 -.083 -1.32l.083 -.094l2 -2a1 1 0 0 1 1.32 -.083z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `layout_bottombar_expand` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_bottombar_expand />
      <TablerIcons.layout_bottombar_expand class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_bottombar_expand(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 6v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2z" />
      <path d="M20 15h-16" />
      <path d="M14 10l-2 -2l-2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_bottombar_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_bottombar_filled />
      <TablerIcons.layout_bottombar_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_bottombar_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 3a3 3 0 0 1 2.995 2.824l.005 .176v12a3 3 0 0 1 -2.824 2.995l-.176 .005h-12a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-12a3 3 0 0 1 2.824 -2.995l.176 -.005h12zm0 2h-12a1 1 0 0 0 -.993 .883l-.007 .117v9h14v-9a1 1 0 0 0 -.883 -.993l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `layout_bottombar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_bottombar />
      <TablerIcons.layout_bottombar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_bottombar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M4 15l16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_cards` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_cards />
      <TablerIcons.layout_cards class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_cards(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M14 4m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_collage` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_collage />
      <TablerIcons.layout_collage class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_collage(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M10 4l4 16" />
      <path d="M12 12l-8 2" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_columns` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_columns />
      <TablerIcons.layout_columns class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_columns(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M12 4l0 16" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_dashboard` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_dashboard />
      <TablerIcons.layout_dashboard class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_dashboard(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4h6v8h-6z" />
      <path d="M4 16h6v4h-6z" />
      <path d="M14 12h6v8h-6z" />
      <path d="M14 4h6v4h-6z" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_distribute_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_distribute_horizontal />
      <TablerIcons.layout_distribute_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_distribute_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4l16 0" />
      <path d="M4 20l16 0" />
      <path d="M6 9m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_distribute_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_distribute_vertical />
      <TablerIcons.layout_distribute_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_distribute_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4l0 16" />
      <path d="M20 4l0 16" />
      <path d="M9 6m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_grid_add` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_grid_add />
      <TablerIcons.layout_grid_add class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_grid_add(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M14 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M4 14m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M14 17h6m-3 -3v6" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_grid_remove` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_grid_remove />
      <TablerIcons.layout_grid_remove class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_grid_remove(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 5a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1v-4z" />
      <path d="M14 5a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1v-4z" />
      <path d="M4 15a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1v-4z" />
      <path d="M14 17h6" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_grid` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_grid />
      <TablerIcons.layout_grid class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_grid(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M14 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M4 14m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M14 14m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_kanban` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_kanban />
      <TablerIcons.layout_kanban class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_kanban(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4l6 0" />
      <path d="M14 4l6 0" />
      <path d="M4 8m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M14 8m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_list` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_list />
      <TablerIcons.layout_list class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_list(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M4 14m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_navbar_collapse_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_navbar_collapse_filled />
      <TablerIcons.layout_navbar_collapse_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_navbar_collapse_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 3a3 3 0 0 1 2.995 2.824l.005 .176v12a3 3 0 0 1 -2.824 2.995l-.176 .005h-12a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-12a3 3 0 0 1 2.824 -2.995l.176 -.005h12zm1 6h-14v9a1 1 0 0 0 .883 .993l.117 .007h12a1 1 0 0 0 .993 -.883l.007 -.117v-9zm-6.387 3.21l.094 .083l2 2a1 1 0 0 1 -1.32 1.497l-.094 -.083l-1.293 -1.292l-1.293 1.292a1 1 0 0 1 -1.32 .083l-.094 -.083a1 1 0 0 1 -.083 -1.32l.083 -.094l2 -2a1 1 0 0 1 1.32 -.083z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `layout_navbar_collapse` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_navbar_collapse />
      <TablerIcons.layout_navbar_collapse class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_navbar_collapse(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 18v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M4 9h16" />
      <path d="M10 16l2 -2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_navbar_expand_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_navbar_expand_filled />
      <TablerIcons.layout_navbar_expand_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_navbar_expand_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 3a3 3 0 0 1 2.995 2.824l.005 .176v12a3 3 0 0 1 -2.824 2.995l-.176 .005h-12a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-12a3 3 0 0 1 2.824 -2.995l.176 -.005h12zm1 6h-14v9a1 1 0 0 0 .883 .993l.117 .007h12a1 1 0 0 0 .993 -.883l.007 -.117v-9zm-8.387 3.21l.094 .083l1.293 1.292l1.293 -1.292a1 1 0 0 1 1.32 -.083l.094 .083a1 1 0 0 1 .083 1.32l-.083 .094l-2 2a1 1 0 0 1 -1.32 .083l-.094 -.083l-2 -2a1 1 0 0 1 1.32 -1.497z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `layout_navbar_expand` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_navbar_expand />
      <TablerIcons.layout_navbar_expand class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_navbar_expand(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 18v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M4 9h16" />
      <path d="M10 14l2 2l2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_navbar_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_navbar_filled />
      <TablerIcons.layout_navbar_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_navbar_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 3a3 3 0 0 1 2.995 2.824l.005 .176v12a3 3 0 0 1 -2.824 2.995l-.176 .005h-12a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-12a3 3 0 0 1 2.824 -2.995l.176 -.005h12zm1 6h-14v9a1 1 0 0 0 .883 .993l.117 .007h12a1 1 0 0 0 .993 -.883l.007 -.117v-9z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `layout_navbar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_navbar />
      <TablerIcons.layout_navbar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_navbar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M4 9l16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_off />
      <TablerIcons.layout_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4a2 2 0 0 1 2 2m-1.162 2.816a1.993 1.993 0 0 1 -.838 .184h-2a2 2 0 0 1 -2 -2v-1c0 -.549 .221 -1.046 .58 -1.407" />
      <path d="M4 13m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v3a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M14 10v-4a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v10m-.595 3.423a2 2 0 0 1 -1.405 .577h-2a2 2 0 0 1 -2 -2v-4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_rows` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_rows />
      <TablerIcons.layout_rows class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_rows(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M4 12l16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_sidebar_left_collapse_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_sidebar_left_collapse_filled />
      <TablerIcons.layout_sidebar_left_collapse_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_sidebar_left_collapse_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 3a3 3 0 0 1 2.995 2.824l.005 .176v12a3 3 0 0 1 -2.824 2.995l-.176 .005h-12a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-12a3 3 0 0 1 2.824 -2.995l.176 -.005h12zm0 2h-9v14h9a1 1 0 0 0 .993 -.883l.007 -.117v-12a1 1 0 0 0 -.883 -.993l-.117 -.007zm-2.293 4.293a1 1 0 0 1 .083 1.32l-.083 .094l-1.292 1.293l1.292 1.293a1 1 0 0 1 .083 1.32l-.083 .094a1 1 0 0 1 -1.32 .083l-.094 -.083l-2 -2a1 1 0 0 1 -.083 -1.32l.083 -.094l2 -2a1 1 0 0 1 1.414 0z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `layout_sidebar_left_collapse` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_sidebar_left_collapse />
      <TablerIcons.layout_sidebar_left_collapse class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_sidebar_left_collapse(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M9 4v16" />
      <path d="M15 10l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_sidebar_left_expand_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_sidebar_left_expand_filled />
      <TablerIcons.layout_sidebar_left_expand_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_sidebar_left_expand_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 3a3 3 0 0 1 2.995 2.824l.005 .176v12a3 3 0 0 1 -2.824 2.995l-.176 .005h-12a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-12a3 3 0 0 1 2.824 -2.995l.176 -.005h12zm0 2h-9v14h9a1 1 0 0 0 .993 -.883l.007 -.117v-12a1 1 0 0 0 -.883 -.993l-.117 -.007zm-4.387 4.21l.094 .083l2 2a1 1 0 0 1 .083 1.32l-.083 .094l-2 2a1 1 0 0 1 -1.497 -1.32l.083 -.094l1.292 -1.293l-1.292 -1.293a1 1 0 0 1 -.083 -1.32l.083 -.094a1 1 0 0 1 1.32 -.083z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `layout_sidebar_left_expand` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_sidebar_left_expand />
      <TablerIcons.layout_sidebar_left_expand class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_sidebar_left_expand(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M9 4v16" />
      <path d="M14 10l2 2l-2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_sidebar_right_collapse_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_sidebar_right_collapse_filled />
      <TablerIcons.layout_sidebar_right_collapse_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_sidebar_right_collapse_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 3a3 3 0 0 1 2.995 2.824l.005 .176v12a3 3 0 0 1 -2.824 2.995l-.176 .005h-12a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-12a3 3 0 0 1 2.824 -2.995l.176 -.005h12zm-3 2h-9a1 1 0 0 0 -.993 .883l-.007 .117v12a1 1 0 0 0 .883 .993l.117 .007h9v-14zm-5.387 4.21l.094 .083l2 2a1 1 0 0 1 .083 1.32l-.083 .094l-2 2a1 1 0 0 1 -1.497 -1.32l.083 -.094l1.292 -1.293l-1.292 -1.293a1 1 0 0 1 -.083 -1.32l.083 -.094a1 1 0 0 1 1.32 -.083z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `layout_sidebar_right_collapse` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_sidebar_right_collapse />
      <TablerIcons.layout_sidebar_right_collapse class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_sidebar_right_collapse(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M15 4v16" />
      <path d="M9 10l2 2l-2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_sidebar_right_expand_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_sidebar_right_expand_filled />
      <TablerIcons.layout_sidebar_right_expand_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_sidebar_right_expand_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 3a3 3 0 0 1 2.995 2.824l.005 .176v12a3 3 0 0 1 -2.824 2.995l-.176 .005h-12a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-12a3 3 0 0 1 2.824 -2.995l.176 -.005h12zm-3 2h-9a1 1 0 0 0 -.993 .883l-.007 .117v12a1 1 0 0 0 .883 .993l.117 .007h9v-14zm-3.293 4.293a1 1 0 0 1 .083 1.32l-.083 .094l-1.292 1.293l1.292 1.293a1 1 0 0 1 .083 1.32l-.083 .094a1 1 0 0 1 -1.32 .083l-.094 -.083l-2 -2a1 1 0 0 1 -.083 -1.32l.083 -.094l2 -2a1 1 0 0 1 1.414 0z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `layout_sidebar_right_expand` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_sidebar_right_expand />
      <TablerIcons.layout_sidebar_right_expand class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_sidebar_right_expand(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M15 4v16" />
      <path d="M10 10l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_sidebar_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_sidebar_right />
      <TablerIcons.layout_sidebar_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_sidebar_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M15 4l0 16" />
    </svg>
    """
  end

  @doc """
  Renders the `layout_sidebar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout_sidebar />
      <TablerIcons.layout_sidebar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout_sidebar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M9 4l0 16" />
    </svg>
    """
  end

  @doc """
  Renders the `layout` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.layout />
      <TablerIcons.layout class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def layout(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v1a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M4 13m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v3a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M14 4m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `leaf_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.leaf_off />
      <TablerIcons.leaf_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def leaf_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 21c.475 -4.27 2.3 -7.64 6.331 -9.683" />
      <path d="M6.618 6.623c-1.874 1.625 -2.625 3.877 -2.632 6.377c0 1 0 3 2 5h3.014c2.733 0 5.092 -.635 6.92 -2.087m1.899 -2.099c1.224 -1.872 1.987 -4.434 2.181 -7.814v-2h-4.014c-2.863 0 -5.118 .405 -6.861 1.118" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `leaf` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.leaf />
      <TablerIcons.leaf class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def leaf(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 21c.5 -4.5 2.5 -8 7 -10" />
      <path d="M9 18c6.218 0 10.5 -3.288 11 -12v-2h-4.014c-9 0 -11.986 4 -12 9c0 1 0 3 2 5h3z" />
    </svg>
    """
  end

  @doc """
  Renders the `lego_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lego_off />
      <TablerIcons.lego_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lego_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.5 11h.01" />
      <path d="M9.5 15a3.5 3.5 0 0 0 5 0" />
      <path d="M8 4v-1h8v2h1a3 3 0 0 1 3 3v8m-.884 3.127a2.99 2.99 0 0 1 -2.116 .873v1h-10v-1a3 3 0 0 1 -3 -3v-9c0 -1.083 .574 -2.032 1.435 -2.56" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `lego` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lego />
      <TablerIcons.lego class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lego(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.5 11l.01 0" />
      <path d="M14.5 11l.01 0" />
      <path d="M9.5 15a3.5 3.5 0 0 0 5 0" />
      <path d="M7 5h1v-2h8v2h1a3 3 0 0 1 3 3v9a3 3 0 0 1 -3 3v1h-10v-1a3 3 0 0 1 -3 -3v-9a3 3 0 0 1 3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `lemon_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lemon_2 />
      <TablerIcons.lemon_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lemon_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 4a2 2 0 0 1 1.185 3.611c1.55 2.94 .873 6.917 -1.892 9.682c-2.765 2.765 -6.743 3.442 -9.682 1.892a2 2 0 1 1 -2.796 -2.796c-1.55 -2.94 -.873 -6.917 1.892 -9.682c2.765 -2.765 6.743 -3.442 9.682 -1.892a2 2 0 0 1 1.611 -.815z" />
    </svg>
    """
  end

  @doc """
  Renders the `lemon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lemon />
      <TablerIcons.lemon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lemon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.536 3.393c3.905 3.906 3.905 10.237 0 14.143c-3.906 3.905 -10.237 3.905 -14.143 0l14.143 -14.143" />
      <path d="M5.868 15.06a6.5 6.5 0 0 0 9.193 -9.192" />
      <path d="M10.464 10.464l4.597 4.597" />
      <path d="M10.464 10.464v6.364" />
      <path d="M10.464 10.464h6.364" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_a` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_a />
      <TablerIcons.letter_a class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_a(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 20v-12a4 4 0 0 1 4 -4h2a4 4 0 0 1 4 4v12" />
      <path d="M7 13l10 0" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_b` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_b />
      <TablerIcons.letter_b class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_b(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 20v-16h6a4 4 0 0 1 0 8a4 4 0 0 1 0 8h-6" />
      <path d="M7 12l6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_c` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_c />
      <TablerIcons.letter_c class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_c(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 9a5 5 0 0 0 -5 -5h-2a5 5 0 0 0 -5 5v6a5 5 0 0 0 5 5h2a5 5 0 0 0 5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_case_lower` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_case_lower />
      <TablerIcons.letter_case_lower class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_case_lower(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.5 15.5m-3.5 0a3.5 3.5 0 1 0 7 0a3.5 3.5 0 1 0 -7 0" />
      <path d="M10 12v7" />
      <path d="M17.5 15.5m-3.5 0a3.5 3.5 0 1 0 7 0a3.5 3.5 0 1 0 -7 0" />
      <path d="M21 12v7" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_case_toggle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_case_toggle />
      <TablerIcons.letter_case_toggle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_case_toggle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.5 15.5m-3.5 0a3.5 3.5 0 1 0 7 0a3.5 3.5 0 1 0 -7 0" />
      <path d="M14 19v-10.5a3.5 3.5 0 0 1 7 0v10.5" />
      <path d="M14 13h7" />
      <path d="M10 12v7" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_case_upper` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_case_upper />
      <TablerIcons.letter_case_upper class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_case_upper(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19v-10.5a3.5 3.5 0 0 1 7 0v10.5" />
      <path d="M3 13h7" />
      <path d="M14 19v-10.5a3.5 3.5 0 0 1 7 0v10.5" />
      <path d="M14 13h7" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_case` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_case />
      <TablerIcons.letter_case class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_case(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.5 15.5m-3.5 0a3.5 3.5 0 1 0 7 0a3.5 3.5 0 1 0 -7 0" />
      <path d="M3 19v-10.5a3.5 3.5 0 0 1 7 0v10.5" />
      <path d="M3 13h7" />
      <path d="M21 12v7" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_d` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_d />
      <TablerIcons.letter_d class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_d(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 4h6a5 5 0 0 1 5 5v6a5 5 0 0 1 -5 5h-6v-16" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_e` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_e />
      <TablerIcons.letter_e class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_e(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 4h-10v16h10" />
      <path d="M7 12l8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_f` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_f />
      <TablerIcons.letter_f class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_f(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 4h-10v16" />
      <path d="M7 12l8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_g` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_g />
      <TablerIcons.letter_g class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_g(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 9a5 5 0 0 0 -5 -5h-2a5 5 0 0 0 -5 5v6a5 5 0 0 0 5 5h2a5 5 0 0 0 5 -5v-2h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_h` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_h />
      <TablerIcons.letter_h class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_h(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 4l0 16" />
      <path d="M7 12l10 0" />
      <path d="M7 4l0 16" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_i` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_i />
      <TablerIcons.letter_i class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_i(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 4l0 16" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_j` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_j />
      <TablerIcons.letter_j class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_j(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 4v12a4 4 0 0 1 -4 4h-2a4 4 0 0 1 -4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_k` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_k />
      <TablerIcons.letter_k class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_k(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 4l0 16" />
      <path d="M7 12h2l8 -8" />
      <path d="M9 12l8 8" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_l` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_l />
      <TablerIcons.letter_l class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_l(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 4v16h10" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_m` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_m />
      <TablerIcons.letter_m class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_m(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 20v-16l6 14l6 -14v16" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_n` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_n />
      <TablerIcons.letter_n class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_n(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 20v-16l10 16v-16" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_o` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_o />
      <TablerIcons.letter_o class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_o(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 9a5 5 0 0 0 -5 -5h-2a5 5 0 0 0 -5 5v6a5 5 0 0 0 5 5h2a5 5 0 0 0 5 -5v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_p` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_p />
      <TablerIcons.letter_p class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_p(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 20v-16h5.5a4 4 0 0 1 0 9h-5.5" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_q` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_q />
      <TablerIcons.letter_q class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_q(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 9a5 5 0 0 0 -5 -5h-2a5 5 0 0 0 -5 5v6a5 5 0 0 0 5 5h2a5 5 0 0 0 5 -5v-6" />
      <path d="M13 15l5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_r` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_r />
      <TablerIcons.letter_r class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_r(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 20v-16h5.5a4 4 0 0 1 0 9h-5.5" />
      <path d="M12 13l5 7" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_s` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_s />
      <TablerIcons.letter_s class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_s(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 8a4 4 0 0 0 -4 -4h-2a4 4 0 0 0 0 8h2a4 4 0 0 1 0 8h-2a4 4 0 0 1 -4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_spacing` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_spacing />
      <TablerIcons.letter_spacing class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_spacing(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12v-5.5a2.5 2.5 0 0 1 5 0v5.5m0 -4h-5" />
      <path d="M13 4l3 8l3 -8" />
      <path d="M5 18h14" />
      <path d="M17 20l2 -2l-2 -2" />
      <path d="M7 16l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_t` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_t />
      <TablerIcons.letter_t class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_t(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 4l12 0" />
      <path d="M12 4l0 16" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_u` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_u />
      <TablerIcons.letter_u class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_u(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 4v11a5 5 0 0 0 5 5h2a5 5 0 0 0 5 -5v-11" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_v` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_v />
      <TablerIcons.letter_v class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_v(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 4l6 16l6 -16" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_w` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_w />
      <TablerIcons.letter_w class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_w(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4l4 16l4 -14l4 14l4 -16" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_x />
      <TablerIcons.letter_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 4l10 16" />
      <path d="M17 4l-10 16" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_y` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_y />
      <TablerIcons.letter_y class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_y(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 4l5 9l5 -9" />
      <path d="M12 13l0 7" />
    </svg>
    """
  end

  @doc """
  Renders the `letter_z` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.letter_z />
      <TablerIcons.letter_z class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def letter_z(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 4h10l-10 16h10" />
    </svg>
    """
  end

  @doc """
  Renders the `license_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.license_off />
      <TablerIcons.license_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def license_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 21h-9a3 3 0 0 1 -3 -3v-1h10v2a2 2 0 1 0 4 0v-2m0 -4v-8a2 2 0 1 1 2 2h-2m2 -4h-11a3 3 0 0 0 -.864 .126m-2.014 2.025a3 3 0 0 0 -.122 .849v11" />
      <path d="M11 7h2" />
      <path d="M9 11h2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `license` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.license />
      <TablerIcons.license class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def license(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 21h-9a3 3 0 0 1 -3 -3v-1h10v2a2 2 0 0 0 4 0v-14a2 2 0 1 1 2 2h-2m2 -4h-11a3 3 0 0 0 -3 3v11" />
      <path d="M9 7l4 0" />
      <path d="M9 11l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `lifebuoy_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lifebuoy_off />
      <TablerIcons.lifebuoy_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lifebuoy_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.171 9.172a4 4 0 0 0 5.65 5.663m1.179 -2.835a4 4 0 0 0 -4 -4" />
      <path d="M5.64 5.632a9 9 0 1 0 12.73 12.725m1.667 -2.301a9 9 0 0 0 -12.077 -12.1" />
      <path d="M15 15l3.35 3.35" />
      <path d="M9 15l-3.35 3.35" />
      <path d="M5.65 5.65l3.35 3.35" />
      <path d="M18.35 5.65l-3.35 3.35" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `lifebuoy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lifebuoy />
      <TablerIcons.lifebuoy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lifebuoy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M15 15l3.35 3.35" />
      <path d="M9 15l-3.35 3.35" />
      <path d="M5.65 5.65l3.35 3.35" />
      <path d="M18.35 5.65l-3.35 3.35" />
    </svg>
    """
  end

  @doc """
  Renders the `lighter` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lighter />
      <TablerIcons.lighter class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lighter(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 3v16a2 2 0 0 0 2 2h5a2 2 0 0 0 2 -2v-7h-12a2 2 0 0 1 -2 -2v-5a2 2 0 0 1 2 -2h3z" />
      <path d="M16 4l1.465 1.638a2 2 0 1 1 -3.015 .099l1.55 -1.737z" />
    </svg>
    """
  end

  @doc """
  Renders the `line_dashed` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.line_dashed />
      <TablerIcons.line_dashed class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def line_dashed(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12h2" />
      <path d="M17 12h2" />
      <path d="M11 12h2" />
    </svg>
    """
  end

  @doc """
  Renders the `line_dotted` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.line_dotted />
      <TablerIcons.line_dotted class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def line_dotted(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12v.01" />
      <path d="M8 12v.01" />
      <path d="M12 12v.01" />
      <path d="M16 12v.01" />
      <path d="M20 12v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `line_height` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.line_height />
      <TablerIcons.line_height class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def line_height(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 8l3 -3l3 3" />
      <path d="M3 16l3 3l3 -3" />
      <path d="M6 5l0 14" />
      <path d="M13 6l7 0" />
      <path d="M13 12l7 0" />
      <path d="M13 18l7 0" />
    </svg>
    """
  end

  @doc """
  Renders the `line` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.line />
      <TablerIcons.line class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def line(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7.5 16.5l9 -9" />
    </svg>
    """
  end

  @doc """
  Renders the `link_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.link_off />
      <TablerIcons.link_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def link_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15l3 -3m2 -2l1 -1" />
      <path d="M11 6l.463 -.536a5 5 0 0 1 7.071 7.072l-.534 .464" />
      <path d="M3 3l18 18" />
      <path d="M13 18l-.397 .534a5.068 5.068 0 0 1 -7.127 0a4.972 4.972 0 0 1 0 -7.071l.524 -.463" />
    </svg>
    """
  end

  @doc """
  Renders the `link` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.link />
      <TablerIcons.link class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def link(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15l6 -6" />
      <path d="M11 6l.463 -.536a5 5 0 0 1 7.071 7.072l-.534 .464" />
      <path d="M13 18l-.397 .534a5.068 5.068 0 0 1 -7.127 0a4.972 4.972 0 0 1 0 -7.071l.524 -.463" />
    </svg>
    """
  end

  @doc """
  Renders the `list_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.list_check />
      <TablerIcons.list_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def list_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.5 5.5l1.5 1.5l2.5 -2.5" />
      <path d="M3.5 11.5l1.5 1.5l2.5 -2.5" />
      <path d="M3.5 17.5l1.5 1.5l2.5 -2.5" />
      <path d="M11 6l9 0" />
      <path d="M11 12l9 0" />
      <path d="M11 18l9 0" />
    </svg>
    """
  end

  @doc """
  Renders the `list_details` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.list_details />
      <TablerIcons.list_details class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def list_details(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 5h8" />
      <path d="M13 9h5" />
      <path d="M13 15h8" />
      <path d="M13 19h5" />
      <path d="M3 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M3 14m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `list_numbers` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.list_numbers />
      <TablerIcons.list_numbers class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def list_numbers(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 6h9" />
      <path d="M11 12h9" />
      <path d="M12 18h8" />
      <path d="M4 16a2 2 0 1 1 4 0c0 .591 -.5 1 -1 1.5l-3 2.5h4" />
      <path d="M6 10v-6l-2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `list_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.list_search />
      <TablerIcons.list_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def list_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 15m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M18.5 18.5l2.5 2.5" />
      <path d="M4 6h16" />
      <path d="M4 12h4" />
      <path d="M4 18h4" />
    </svg>
    """
  end

  @doc """
  Renders the `list_tree` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.list_tree />
      <TablerIcons.list_tree class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def list_tree(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 6h11" />
      <path d="M12 12h8" />
      <path d="M15 18h5" />
      <path d="M5 6v.01" />
      <path d="M8 12v.01" />
      <path d="M11 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `list` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.list />
      <TablerIcons.list class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def list(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 6l11 0" />
      <path d="M9 12l11 0" />
      <path d="M9 18l11 0" />
      <path d="M5 6l0 .01" />
      <path d="M5 12l0 .01" />
      <path d="M5 18l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `live_photo_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.live_photo_off />
      <TablerIcons.live_photo_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def live_photo_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.296 11.29a1 1 0 1 0 1.414 1.415" />
      <path d="M8.473 8.456a5 5 0 1 0 7.076 7.066m1.365 -2.591a5 5 0 0 0 -5.807 -5.851" />
      <path d="M15.9 20.11v.01" />
      <path d="M19.04 17.61v.01" />
      <path d="M20.77 14v.01" />
      <path d="M20.77 10v.01" />
      <path d="M19.04 6.39v.01" />
      <path d="M15.9 3.89v.01" />
      <path d="M12 3v.01" />
      <path d="M8.1 3.89v.01" />
      <path d="M4.96 6.39v.01" />
      <path d="M3.23 10v.01" />
      <path d="M3.23 14v.01" />
      <path d="M4.96 17.61v.01" />
      <path d="M8.1 20.11v.01" />
      <path d="M12 21v.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `live_photo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.live_photo />
      <TablerIcons.live_photo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def live_photo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 12m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M15.9 20.11l0 .01" />
      <path d="M19.04 17.61l0 .01" />
      <path d="M20.77 14l0 .01" />
      <path d="M20.77 10l0 .01" />
      <path d="M19.04 6.39l0 .01" />
      <path d="M15.9 3.89l0 .01" />
      <path d="M12 3l0 .01" />
      <path d="M8.1 3.89l0 .01" />
      <path d="M4.96 6.39l0 .01" />
      <path d="M3.23 10l0 .01" />
      <path d="M3.23 14l0 .01" />
      <path d="M4.96 17.61l0 .01" />
      <path d="M8.1 20.11l0 .01" />
      <path d="M12 21l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `live_view` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.live_view />
      <TablerIcons.live_view class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def live_view(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v-2a2 2 0 0 1 2 -2h2" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2a2 2 0 0 0 2 -2v-2" />
      <path d="M12 11l0 .01" />
      <path d="M12 18l-3.5 -5a4 4 0 1 1 7 0l-3.5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `load_balancer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.load_balancer />
      <TablerIcons.load_balancer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def load_balancer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 13m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12 20m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 16v3" />
      <path d="M12 10v-7" />
      <path d="M9 6l3 -3l3 3" />
      <path d="M12 10v-7" />
      <path d="M9 6l3 -3l3 3" />
      <path d="M14.894 12.227l6.11 -2.224" />
      <path d="M17.159 8.21l3.845 1.793l-1.793 3.845" />
      <path d="M9.101 12.214l-6.075 -2.211" />
      <path d="M6.871 8.21l-3.845 1.793l1.793 3.845" />
    </svg>
    """
  end

  @doc """
  Renders the `loader_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.loader_2 />
      <TablerIcons.loader_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def loader_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a9 9 0 1 0 9 9" />
    </svg>
    """
  end

  @doc """
  Renders the `loader_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.loader_3 />
      <TablerIcons.loader_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def loader_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12a9 9 0 0 0 9 9a9 9 0 0 0 9 -9a9 9 0 0 0 -9 -9" />
      <path d="M17 12a5 5 0 1 0 -5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `loader_quarter` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.loader_quarter />
      <TablerIcons.loader_quarter class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def loader_quarter(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 6l0 -3" />
      <path d="M6 12l-3 0" />
      <path d="M7.75 7.75l-2.15 -2.15" />
    </svg>
    """
  end

  @doc """
  Renders the `loader` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.loader />
      <TablerIcons.loader class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def loader(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 6l0 -3" />
      <path d="M16.25 7.75l2.15 -2.15" />
      <path d="M18 12l3 0" />
      <path d="M16.25 16.25l2.15 2.15" />
      <path d="M12 18l0 3" />
      <path d="M7.75 16.25l-2.15 2.15" />
      <path d="M6 12l-3 0" />
      <path d="M7.75 7.75l-2.15 -2.15" />
    </svg>
    """
  end

  @doc """
  Renders the `location_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_bolt />
      <TablerIcons.location_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.05 20.1l-3.05 -6.1l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-3.312 9.173" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `location_broken` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_broken />
      <TablerIcons.location_broken class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_broken(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.896 19.792l-2.896 -5.792l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-3.487 9.657" />
      <path d="M21.5 21.5l-5 -5" />
      <path d="M16.5 21.5l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `location_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_cancel />
      <TablerIcons.location_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18l-2 -4l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-3.305 9.151" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `location_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_check />
      <TablerIcons.location_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.512 17.023l-1.512 -3.023l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-4.45 12.324" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `location_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_code />
      <TablerIcons.location_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.505 17.01l-1.505 -3.01l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-3.677 10.184" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `location_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_cog />
      <TablerIcons.location_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18l-2 -4l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-3.14 8.697" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `location_discount` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_discount />
      <TablerIcons.location_discount class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_discount(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.797 19.595l-2.797 -5.595l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-3.548 9.826" />
      <path d="M16 21l5 -5" />
      <path d="M21 21v.01" />
      <path d="M16 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `location_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_dollar />
      <TablerIcons.location_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.08 20.162l-3.08 -6.162l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-2.55 7.063" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `location_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_down />
      <TablerIcons.location_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18l-2 -4l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-3.328 9.217" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `location_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_exclamation />
      <TablerIcons.location_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.024 19.55l-.524 1.45a.55 .55 0 0 1 -1 0l-3.5 -7l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-3.317 9.186" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `location_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_filled />
      <TablerIcons.location_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M20.891 2.006l.106 -.006l.13 .008l.09 .016l.123 .035l.107 .046l.1 .057l.09 .067l.082 .075l.052 .059l.082 .116l.052 .096c.047 .1 .077 .206 .09 .316l.005 .106c0 .075 -.008 .149 -.024 .22l-.035 .123l-6.532 18.077a1.55 1.55 0 0 1 -1.409 .903a1.547 1.547 0 0 1 -1.329 -.747l-.065 -.127l-3.352 -6.702l-6.67 -3.336a1.55 1.55 0 0 1 -.898 -1.259l-.006 -.149c0 -.56 .301 -1.072 .841 -1.37l.14 -.07l18.017 -6.506l.106 -.03l.108 -.018z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `location_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_heart />
      <TablerIcons.location_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.365 14.73l-.365 -.73l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-3.024 8.373" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `location_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_minus />
      <TablerIcons.location_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18l-2 -4l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-4.347 12.038" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `location_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_off />
      <TablerIcons.location_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.72 6.712l10.28 -3.712l-3.724 10.313m-1.056 2.925l-1.72 4.762a.55 .55 0 0 1 -1 0l-3.5 -7l-7 -3.5a.55 .55 0 0 1 0 -1l4.775 -1.724" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `location_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_pause />
      <TablerIcons.location_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.02 20.04l-3.02 -6.04l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-3.634 10.062" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `location_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_pin />
      <TablerIcons.location_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18l-2 -4l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-2.901 8.034" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `location_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_plus />
      <TablerIcons.location_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18l-2 -4l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-3.361 9.308" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `location_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_question />
      <TablerIcons.location_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.5 21a.55 .55 0 0 1 -1 0l-3.5 -7l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-2.967 8.215" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `location_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_search />
      <TablerIcons.location_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 16l-1 -2l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-2.916 8.076" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `location_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_share />
      <TablerIcons.location_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18l-2 -4l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-3.616 10.015" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `location_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_star />
      <TablerIcons.location_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.336 14.672l-.336 -.672l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-2.565 7.104" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `location_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_up />
      <TablerIcons.location_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18l-2 -4l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-3.251 9.003" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `location_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location_x />
      <TablerIcons.location_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 21l-.224 -.448l-3.276 -6.552l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5l-3.622 10.03" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `location` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.location />
      <TablerIcons.location class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def location(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 3l-6.5 18a.55 .55 0 0 1 -1 0l-3.5 -7l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_access_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_access_off />
      <TablerIcons.lock_access_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_access_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v-2c0 -.554 .225 -1.055 .588 -1.417" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2c.55 0 1.05 -.222 1.41 -.582" />
      <path d="M15 11a1 1 0 0 1 1 1m-.29 3.704a1 1 0 0 1 -.71 .296h-6a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1h2" />
      <path d="M10 11v-1m1.182 -2.826a2 2 0 0 1 2.818 1.826v1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_access` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_access />
      <TablerIcons.lock_access class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_access(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v-2a2 2 0 0 1 2 -2h2" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2a2 2 0 0 0 2 -2v-2" />
      <path d="M8 11m0 1a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1z" />
      <path d="M10 11v-2a2 2 0 1 1 4 0v2" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_bolt />
      <TablerIcons.lock_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 21h-6.5a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10a2 2 0 0 1 1.74 1.012" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_cancel />
      <TablerIcons.lock_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-5.5a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10a2 2 0 0 1 1.749 1.028" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_check />
      <TablerIcons.lock_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-4.5a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v.5" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_code />
      <TablerIcons.lock_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-4.5a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_cog />
      <TablerIcons.lock_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21h-5a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10c.564 0 1.074 .234 1.437 .61" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_dollar />
      <TablerIcons.lock_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21h-6a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_down />
      <TablerIcons.lock_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-5.5a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10a2 2 0 0 1 1.74 1.015" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_exclamation />
      <TablerIcons.lock_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 21h-8a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10a2 2 0 0 1 1.734 1.002" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_heart />
      <TablerIcons.lock_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-4.5a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10c.38 0 .734 .106 1.037 .29" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_minus />
      <TablerIcons.lock_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-5.5a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v2" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_off />
      <TablerIcons.lock_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 11h2a2 2 0 0 1 2 2v2m0 4a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h4" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-3m.719 -3.289a4 4 0 0 1 7.281 2.289v4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_open_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_open_off />
      <TablerIcons.lock_open_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_open_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 11h2a2 2 0 0 1 2 2v2m0 4a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h4" />
      <path d="M12 16m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M8 11v-3m.347 -3.631a4 4 0 0 1 7.653 1.631" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_open` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_open />
      <TablerIcons.lock_open class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_open(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 11m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M12 16m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M8 11v-5a4 4 0 0 1 8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_pause />
      <TablerIcons.lock_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21h-6a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v.5" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_pin />
      <TablerIcons.lock_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-5.5a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10c.24 0 .47 .042 .683 .12" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_plus />
      <TablerIcons.lock_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-5.5a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10a2 2 0 0 1 1.74 1.012" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_question />
      <TablerIcons.lock_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 21h-8a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10c.265 0 .518 .052 .75 .145" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_search />
      <TablerIcons.lock_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-4.5a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_share />
      <TablerIcons.lock_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M12 21h-5a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_square_rounded_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_square_rounded_filled />
      <TablerIcons.lock_square_rounded_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_square_rounded_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c-.218 0 -.432 .002 -.642 .005l-.616 .017l-.299 .013l-.579 .034l-.553 .046c-4.785 .464 -6.732 2.411 -7.196 7.196l-.046 .553l-.034 .579c-.005 .098 -.01 .198 -.013 .299l-.017 .616l-.004 .318l-.001 .324c0 .218 .002 .432 .005 .642l.017 .616l.013 .299l.034 .579l.046 .553c.464 4.785 2.411 6.732 7.196 7.196l.553 .046l.579 .034c.098 .005 .198 .01 .299 .013l.616 .017l.642 .005l.642 -.005l.616 -.017l.299 -.013l.579 -.034l.553 -.046c4.785 -.464 6.732 -2.411 7.196 -7.196l.046 -.553l.034 -.579c.005 -.098 .01 -.198 .013 -.299l.017 -.616l.005 -.642l-.005 -.642l-.017 -.616l-.013 -.299l-.034 -.579l-.046 -.553c-.464 -4.785 -2.411 -6.732 -7.196 -7.196l-.553 -.046l-.579 -.034a28.058 28.058 0 0 0 -.299 -.013l-.616 -.017l-.318 -.004l-.324 -.001zm0 4a3 3 0 0 1 2.995 2.824l.005 .176v1a2 2 0 0 1 1.995 1.85l.005 .15v3a2 2 0 0 1 -1.85 1.995l-.15 .005h-6a2 2 0 0 1 -1.995 -1.85l-.005 -.15v-3a2 2 0 0 1 1.85 -1.995l.15 -.005v-1a3 3 0 0 1 3 -3zm3 6h-6v3h6v-3zm-3 -4a1 1 0 0 0 -.993 .883l-.007 .117v1h2v-1a1 1 0 0 0 -1 -1z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `lock_square_rounded` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_square_rounded />
      <TablerIcons.lock_square_rounded class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_square_rounded(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
      <path d="M8 11m0 1a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1z" />
      <path d="M10 11v-2a2 2 0 1 1 4 0v2" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_square` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_square />
      <TablerIcons.lock_square class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_square(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 11m0 1a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1z" />
      <path d="M10 11v-2a2 2 0 1 1 4 0v2" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_star />
      <TablerIcons.lock_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 21h-4a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h9" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_up />
      <TablerIcons.lock_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-5.5a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10a2 2 0 0 1 1.739 1.01" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `lock_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock_x />
      <TablerIcons.lock_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21h-6a2 2 0 0 1 -2 -2v-6a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v.5" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `lock` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lock />
      <TablerIcons.lock class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lock(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 13a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6z" />
      <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M8 11v-4a4 4 0 1 1 8 0v4" />
    </svg>
    """
  end

  @doc """
  Renders the `logic_and` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.logic_and />
      <TablerIcons.logic_and class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def logic_and(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12h-5" />
      <path d="M2 9h5" />
      <path d="M2 15h5" />
      <path d="M9 5c6 0 8 3.5 8 7s-2 7 -8 7h-2v-14h2z" />
    </svg>
    """
  end

  @doc """
  Renders the `logic_buffer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.logic_buffer />
      <TablerIcons.logic_buffer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def logic_buffer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12h-5" />
      <path d="M2 9h5" />
      <path d="M2 15h5" />
      <path d="M7 5l10 7l-10 7z" />
    </svg>
    """
  end

  @doc """
  Renders the `logic_nand` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.logic_nand />
      <TablerIcons.logic_nand class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def logic_nand(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12h-3" />
      <path d="M2 9h3" />
      <path d="M2 15h3" />
      <path d="M7 5c6 0 8 3.5 8 7s-2 7 -8 7h-2v-14h2z" />
      <path d="M17 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `logic_nor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.logic_nor />
      <TablerIcons.logic_nor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def logic_nor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12h-4" />
      <path d="M2 9h5" />
      <path d="M2 15h5" />
      <path d="M6 5c10.667 2.1 10.667 12.6 0 14c1.806 -4.667 1.806 -9.333 0 -14z" />
      <path d="M16 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `logic_not` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.logic_not />
      <TablerIcons.logic_not class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def logic_not(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12h-3" />
      <path d="M2 9h3" />
      <path d="M2 15h3" />
      <path d="M5 5l10 7l-10 7z" />
      <path d="M17 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `logic_or` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.logic_or />
      <TablerIcons.logic_or class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def logic_or(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12h-6" />
      <path d="M2 9h7" />
      <path d="M2 15h7" />
      <path d="M8 5c10.667 2.1 10.667 12.6 0 14c1.806 -4.667 1.806 -9.333 0 -14z" />
    </svg>
    """
  end

  @doc """
  Renders the `logic_xnor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.logic_xnor />
      <TablerIcons.logic_xnor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def logic_xnor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12h-2" />
      <path d="M2 9h4" />
      <path d="M2 15h4" />
      <path d="M5 19c1.778 -4.667 1.778 -9.333 0 -14" />
      <path d="M8 5c10.667 2.1 10.667 12.6 0 14c1.806 -4.667 1.806 -9.333 0 -14z" />
      <path d="M18 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `logic_xor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.logic_xor />
      <TablerIcons.logic_xor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def logic_xor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12h-4" />
      <path d="M2 9h6" />
      <path d="M2 15h6" />
      <path d="M7 19c1.778 -4.667 1.778 -9.333 0 -14" />
      <path d="M10 5c10.667 2.1 10.667 12.6 0 14c1.806 -4.667 1.806 -9.333 0 -14z" />
    </svg>
    """
  end

  @doc """
  Renders the `login` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.login />
      <TablerIcons.login class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def login(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2" />
      <path d="M20 12h-13l3 -3m0 6l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `logout_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.logout_2 />
      <TablerIcons.logout_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def logout_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8v-2a2 2 0 0 1 2 -2h7a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-7a2 2 0 0 1 -2 -2v-2" />
      <path d="M15 12h-12l3 -3" />
      <path d="M6 15l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `logout` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.logout />
      <TablerIcons.logout class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def logout(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2" />
      <path d="M9 12h12l-3 -3" />
      <path d="M18 15l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `lollipop_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lollipop_off />
      <TablerIcons.lollipop_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lollipop_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.462 7.493a7 7 0 0 0 9.06 9.039m2.416 -1.57a7 7 0 1 0 -9.884 -9.915" />
      <path d="M21 10a3.5 3.5 0 0 0 -7 0" />
      <path d="M12.71 12.715a3.5 3.5 0 0 1 -5.71 -2.715" />
      <path d="M14 17c.838 0 1.607 -.294 2.209 -.785m1.291 -2.715a3.5 3.5 0 0 0 -3.5 -3.5" />
      <path d="M14 3a3.5 3.5 0 0 0 -3.5 3.5" />
      <path d="M3 21l6 -6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `lollipop` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lollipop />
      <TablerIcons.lollipop class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lollipop(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M21 10a3.5 3.5 0 0 0 -7 0" />
      <path d="M14 10a3.5 3.5 0 0 1 -7 0" />
      <path d="M14 17a3.5 3.5 0 0 0 0 -7" />
      <path d="M14 3a3.5 3.5 0 0 0 0 7" />
      <path d="M3 21l6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `luggage_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.luggage_off />
      <TablerIcons.luggage_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def luggage_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 6h6a2 2 0 0 1 2 2v6m0 4a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-10c0 -.546 .218 -1.04 .573 -1.4" />
      <path d="M9 5a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v1" />
      <path d="M6 10h4m4 0h4" />
      <path d="M6 16h10" />
      <path d="M9 20v1" />
      <path d="M15 20v1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `luggage` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.luggage />
      <TablerIcons.luggage class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def luggage(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 6m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
      <path d="M9 6v-1a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v1" />
      <path d="M6 10h12" />
      <path d="M6 16h12" />
      <path d="M9 20v1" />
      <path d="M15 20v1" />
    </svg>
    """
  end

  @doc """
  Renders the `lungs_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lungs_off />
      <TablerIcons.lungs_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lungs_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.583 6.608c-1.206 1.058 -2.07 2.626 -2.933 5.449c-.42 1.37 -.636 2.962 -.648 4.775c-.012 1.675 1.261 3.054 2.877 3.161l.203 .007c1.611 0 2.918 -1.335 2.918 -2.98v-8.02" />
      <path d="M15 11v-3.743c0 -.694 .552 -1.257 1.233 -1.257c.204 0 .405 .052 .584 .15l.13 .083c1.46 1.059 2.432 2.647 3.405 5.824c.42 1.37 .636 2.962 .648 4.775c0 .063 0 .125 0 .187m-1.455 2.51c-.417 .265 -.9 .43 -1.419 .464l-.202 .007c-1.613 0 -2.92 -1.335 -2.92 -2.98v-2.02" />
      <path d="M9 12a2.99 2.99 0 0 0 2.132 -.89" />
      <path d="M12 4v4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `lungs` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.lungs />
      <TablerIcons.lungs class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def lungs(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.081 20c1.612 0 2.919 -1.335 2.919 -2.98v-9.763c0 -.694 -.552 -1.257 -1.232 -1.257c-.205 0 -.405 .052 -.584 .15l-.13 .083c-1.46 1.059 -2.432 2.647 -3.404 5.824c-.42 1.37 -.636 2.962 -.648 4.775c-.012 1.675 1.261 3.054 2.877 3.161l.203 .007z" />
      <path d="M17.92 20c-1.613 0 -2.92 -1.335 -2.92 -2.98v-9.763c0 -.694 .552 -1.257 1.233 -1.257c.204 0 .405 .052 .584 .15l.13 .083c1.46 1.059 2.432 2.647 3.405 5.824c.42 1.37 .636 2.962 .648 4.775c.012 1.675 -1.261 3.054 -2.878 3.161l-.202 .007z" />
      <path d="M9 12a3 3 0 0 0 3 -3a3 3 0 0 0 3 3" />
      <path d="M12 4v5" />
    </svg>
    """
  end

  @doc """
  Renders the `macro_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.macro_off />
      <TablerIcons.macro_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def macro_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 15a6 6 0 0 0 11.47 2.467" />
      <path d="M15.53 15.53a6 6 0 0 0 -3.53 5.47" />
      <path d="M12 21a6 6 0 0 0 -6 -6" />
      <path d="M12 21v-10" />
      <path d="M10.866 10.87a5.007 5.007 0 0 1 -3.734 -3.723m-.132 -4.147l3 2l2 -2l2 2l3 -2v3a5 5 0 0 1 -2.604 4.389" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `macro` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.macro />
      <TablerIcons.macro class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def macro(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 15a6 6 0 1 0 12 0" />
      <path d="M18 15a6 6 0 0 0 -6 6" />
      <path d="M12 21a6 6 0 0 0 -6 -6" />
      <path d="M12 21v-10" />
      <path d="M12 11a5 5 0 0 1 -5 -5v-3l3 2l2 -2l2 2l3 -2v3a5 5 0 0 1 -5 5z" />
    </svg>
    """
  end

  @doc """
  Renders the `magnet_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.magnet_off />
      <TablerIcons.magnet_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def magnet_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3a2 2 0 0 1 2 2m0 4v4a3 3 0 0 0 5.552 1.578m.448 -3.578v-6a2 2 0 0 1 2 -2h1a2 2 0 0 1 2 2v8a7.99 7.99 0 0 1 -.424 2.577m-1.463 2.584a8 8 0 0 1 -14.113 -5.161v-8c0 -.297 .065 -.58 .181 -.833" />
      <path d="M4 8h4" />
      <path d="M15 8h4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `magnet` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.magnet />
      <TablerIcons.magnet class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def magnet(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 13v-8a2 2 0 0 1 2 -2h1a2 2 0 0 1 2 2v8a2 2 0 0 0 6 0v-8a2 2 0 0 1 2 -2h1a2 2 0 0 1 2 2v8a8 8 0 0 1 -16 0" />
      <path d="M4 8l5 0" />
      <path d="M15 8l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_ai` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_ai />
      <TablerIcons.mail_ai class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_ai(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 19h-5a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4" />
      <path d="M3 7l8 5.345m4 -1.345l6 -4" />
      <path d="M14 21v-4a2 2 0 1 1 4 0v4" />
      <path d="M14 19h4" />
      <path d="M21 15v6" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_bolt />
      <TablerIcons.mail_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19h-8a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v5.5" />
      <path d="M3 7l9 6l9 -6" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_cancel />
      <TablerIcons.mail_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v5" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
      <path d="M3 7l9 6l9 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_check />
      <TablerIcons.mail_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 19h-6a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v6" />
      <path d="M3 7l9 6l9 -6" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_code />
      <TablerIcons.mail_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 19h-6a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v6" />
      <path d="M3 7l9 6l9 -6" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_cog />
      <TablerIcons.mail_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v5" />
      <path d="M3 7l9 6l9 -6" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_dollar />
      <TablerIcons.mail_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 19h-8.5a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v3.5" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
      <path d="M3 7l9 6l9 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_down />
      <TablerIcons.mail_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v5.5" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
      <path d="M3 7l9 6l9 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_exclamation />
      <TablerIcons.mail_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 19h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v5.5" />
      <path d="M3 7l9 6l9 -6" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_fast` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_fast />
      <TablerIcons.mail_fast class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_fast(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7h3" />
      <path d="M3 11h2" />
      <path d="M9.02 8.801l-.6 6a2 2 0 0 0 1.99 2.199h7.98a2 2 0 0 0 1.99 -1.801l.6 -6a2 2 0 0 0 -1.99 -2.199h-7.98a2 2 0 0 0 -1.99 1.801z" />
      <path d="M9.8 7.5l2.982 3.28a3 3 0 0 0 4.238 .202l3.28 -2.982" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_filled />
      <TablerIcons.mail_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M22 7.535v9.465a3 3 0 0 1 -2.824 2.995l-.176 .005h-14a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-9.465l9.445 6.297l.116 .066a1 1 0 0 0 .878 0l.116 -.066l9.445 -6.297z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M19 4c1.08 0 2.027 .57 2.555 1.427l-9.555 6.37l-9.555 -6.37a2.999 2.999 0 0 1 2.354 -1.42l.201 -.007h14z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `mail_forward` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_forward />
      <TablerIcons.mail_forward class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_forward(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v7.5" />
      <path d="M3 6l9 6l9 -6" />
      <path d="M15 18h6" />
      <path d="M18 15l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_heart />
      <TablerIcons.mail_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.5 19h-5.5a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4" />
      <path d="M3 7l9 6l2.983 -1.989l6.017 -4.011" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_minus />
      <TablerIcons.mail_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v8" />
      <path d="M16 19h6" />
      <path d="M3 7l9 6l9 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_off />
      <TablerIcons.mail_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h10a2 2 0 0 1 2 2v10m-2 2h-14a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2" />
      <path d="M3 7l9 6l.565 -.377m2.435 -1.623l6 -4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_opened_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_opened_filled />
      <TablerIcons.mail_opened_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_opened_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.872 14.287l6.522 6.52a2.996 2.996 0 0 1 -2.218 1.188l-.176 .005h-14a2.995 2.995 0 0 1 -2.394 -1.191l6.521 -6.522l2.318 1.545l.116 .066a1 1 0 0 0 .878 0l.116 -.066l2.317 -1.545z"
        stroke-width="0"
        fill="currentColor"
      />
      <path d="M2 9.535l5.429 3.62l-5.429 5.43z" stroke-width="0" fill="currentColor" />
      <path d="M22 9.535v9.05l-5.43 -5.43z" stroke-width="0" fill="currentColor" />
      <path
        d="M12.44 2.102l.115 .066l8.444 5.629l-8.999 6l-9 -6l8.445 -5.63a1 1 0 0 1 .994 -.065z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `mail_opened` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_opened />
      <TablerIcons.mail_opened class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_opened(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 9l9 6l9 -6l-9 -6l-9 6" />
      <path d="M21 9v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10" />
      <path d="M3 19l6 -6" />
      <path d="M15 13l6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_pause />
      <TablerIcons.mail_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19h-8a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v6" />
      <path d="M3 7l9 6l9 -6" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_pin />
      <TablerIcons.mail_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4.5" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
      <path d="M3 7l9 6l9 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_plus />
      <TablerIcons.mail_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v5.5" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
      <path d="M3 7l9 6l9 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_question />
      <TablerIcons.mail_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 19h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4.5" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
      <path d="M3 7l9 6l9 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_search />
      <TablerIcons.mail_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 19h-6a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4.5" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
      <path d="M3 7l9 6l9 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_share />
      <TablerIcons.mail_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19h-8a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v6" />
      <path d="M3 7l9 6l9 -6" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_star />
      <TablerIcons.mail_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 19h-5a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4.5" />
      <path d="M3 7l9 6l9 -6" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_up />
      <TablerIcons.mail_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v5.5" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
      <path d="M3 7l9 6l9 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `mail_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail_x />
      <TablerIcons.mail_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 19h-8.5a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v6" />
      <path d="M3 7l9 6l9 -6" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `mail` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mail />
      <TablerIcons.mail class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mail(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10z" />
      <path d="M3 7l9 6l9 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `mailbox_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mailbox_off />
      <TablerIcons.mailbox_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mailbox_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 21v-6.5a3.5 3.5 0 0 0 -7 0v6.5h18m0 -4v-2a4 4 0 0 0 -4 -4h-2m-4 0h-4.5" />
      <path d="M12 8v-5h4l2 2l-2 2h-4" />
      <path d="M6 15h1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `mailbox` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mailbox />
      <TablerIcons.mailbox class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mailbox(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 21v-6.5a3.5 3.5 0 0 0 -7 0v6.5h18v-6a4 4 0 0 0 -4 -4h-10.5" />
      <path d="M12 11v-8h4l2 2l-2 2h-4" />
      <path d="M6 15h1" />
    </svg>
    """
  end

  @doc """
  Renders the `man` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.man />
      <TablerIcons.man class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def man(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 16v5" />
      <path d="M14 16v5" />
      <path d="M9 9h6l-1 7h-4z" />
      <path d="M5 11c1.333 -1.333 2.667 -2 4 -2" />
      <path d="M19 11c-1.333 -1.333 -2.667 -2 -4 -2" />
      <path d="M12 4m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `manual_gearbox` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.manual_gearbox />
      <TablerIcons.manual_gearbox class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def manual_gearbox(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 8l0 8" />
      <path d="M12 8l0 8" />
      <path d="M19 8v2a2 2 0 0 1 -2 2h-12" />
    </svg>
    """
  end

  @doc """
  Renders the `map_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_2 />
      <TablerIcons.map_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.5l-3 -1.5l-6 3v-13l6 -3l6 3l6 -3v7.5" />
      <path d="M9 4v13" />
      <path d="M15 7v5.5" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `map_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_bolt />
      <TablerIcons.map_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19l-4 -2l-6 3v-13l6 -3l6 3l6 -3v8.5" />
      <path d="M9 4v13" />
      <path d="M15 7v7.5" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `map_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_cancel />
      <TablerIcons.map_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.5l-3 -1.5l-6 3v-13l6 -3l6 3l6 -3v8" />
      <path d="M9 4v13" />
      <path d="M15 7v6" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `map_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_check />
      <TablerIcons.map_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 18l-2 -1l-6 3v-13l6 -3l6 3l6 -3v9" />
      <path d="M9 4v13" />
      <path d="M15 7v8" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `map_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_code />
      <TablerIcons.map_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 18l-2 -1l-6 3v-13l6 -3l6 3l6 -3v9" />
      <path d="M9 4v13" />
      <path d="M15 7v6.5" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `map_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_cog />
      <TablerIcons.map_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.5l-3 -1.5l-6 3v-13l6 -3l6 3l6 -3v8" />
      <path d="M9 4v13" />
      <path d="M15 7v6.5" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `map_discount` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_discount />
      <TablerIcons.map_discount class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_discount(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19l-4 -2l-6 3v-13l6 -3l6 3l6 -3v8.5" />
      <path d="M9 4v13" />
      <path d="M15 7v5.5" />
      <path d="M16 21l5 -5" />
      <path d="M21 21v.01" />
      <path d="M16 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `map_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_dollar />
      <TablerIcons.map_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19l-4 -2l-6 3v-13l6 -3l6 3l6 -3v6.5" />
      <path d="M9 4v13" />
      <path d="M15 7v5" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `map_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_down />
      <TablerIcons.map_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.5l-3 -1.5l-6 3v-13l6 -3l6 3l6 -3v8.5" />
      <path d="M9 4v13" />
      <path d="M15 7v8" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `map_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_exclamation />
      <TablerIcons.map_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 20l-6 -3l-6 3v-13l6 -3l6 3l6 -3v8.5" />
      <path d="M9 4v13" />
      <path d="M15 7v13" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `map_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_heart />
      <TablerIcons.map_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 17.5l-1 -.5l-6 3v-13l6 -3l6 3l6 -3v7" />
      <path d="M9 4v13" />
      <path d="M15 7v4" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `map_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_minus />
      <TablerIcons.map_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.5l-3 -1.5l-6 3v-13l6 -3l6 3l6 -3v11" />
      <path d="M9 4v13" />
      <path d="M15 7v8" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `map_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_off />
      <TablerIcons.map_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.32 4.34l.68 -.34l6 3l6 -3v13m-2.67 1.335l-3.33 1.665l-6 -3l-6 3v-13l2.665 -1.333" />
      <path d="M9 4v1m0 4v8" />
      <path d="M15 7v4m0 4v5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pause />
      <TablerIcons.map_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19l-4 -2l-6 3v-13l6 -3l6 3l6 -3v9" />
      <path d="M9 4v13" />
      <path d="M15 7v6.5" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_bolt />
      <TablerIcons.map_pin_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M13.414 20.9a2 2 0 0 1 -2.827 0l-4.244 -4.243a8 8 0 1 1 13.591 -4.629" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_cancel />
      <TablerIcons.map_pin_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M12.463 21.431a1.999 1.999 0 0 1 -1.876 -.531l-4.244 -4.243a8 8 0 1 1 13.594 -4.655" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_check />
      <TablerIcons.map_pin_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M11.87 21.48a1.992 1.992 0 0 1 -1.283 -.58l-4.244 -4.243a8 8 0 1 1 13.355 -3.474" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_code />
      <TablerIcons.map_pin_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M11.85 21.48a1.992 1.992 0 0 1 -1.263 -.58l-4.244 -4.243a8 8 0 1 1 13.385 -3.585" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_cog />
      <TablerIcons.map_pin_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M12.005 21.485a1.994 1.994 0 0 1 -1.418 -.585l-4.244 -4.243a8 8 0 1 1 13.634 -5.05" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_dollar />
      <TablerIcons.map_pin_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M13.02 21.206a2 2 0 0 1 -2.433 -.306l-4.244 -4.243a8 8 0 1 1 13.607 -6.555" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_down />
      <TablerIcons.map_pin_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M12.736 21.345a2 2 0 0 1 -2.149 -.445l-4.244 -4.243a8 8 0 1 1 13.59 -4.624" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_exclamation />
      <TablerIcons.map_pin_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M15.005 19.31l-1.591 1.59a2 2 0 0 1 -2.827 0l-4.244 -4.243a8 8 0 1 1 13.592 -4.638" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_filled />
      <TablerIcons.map_pin_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.364 4.636a9 9 0 0 1 .203 12.519l-.203 .21l-4.243 4.242a3 3 0 0 1 -4.097 .135l-.144 -.135l-4.244 -4.243a9 9 0 0 1 12.728 -12.728zm-6.364 3.364a3 3 0 1 0 0 6a3 3 0 0 0 0 -6z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_heart />
      <TablerIcons.map_pin_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 11a3 3 0 1 0 -3.973 2.839" />
      <path d="M11.76 21.47a1.991 1.991 0 0 1 -1.173 -.57l-4.244 -4.243a8 8 0 1 1 13.657 -5.588" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_minus />
      <TablerIcons.map_pin_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M12.758 21.337a2 2 0 0 1 -2.171 -.437l-4.244 -4.243a8 8 0 1 1 12.585 -1.652" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_off />
      <TablerIcons.map_pin_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.442 9.432a3 3 0 0 0 4.113 4.134m1.445 -2.566a3 3 0 0 0 -3 -3" />
      <path d="M17.152 17.162l-3.738 3.738a2 2 0 0 1 -2.827 0l-4.244 -4.243a8 8 0 0 1 -.476 -10.794m2.18 -1.82a8.003 8.003 0 0 1 10.91 10.912" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_pause />
      <TablerIcons.map_pin_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M13.414 20.9a2 2 0 0 1 -2.827 0l-4.244 -4.243a8 8 0 1 1 13.337 -3.413" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_pin />
      <TablerIcons.map_pin_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M12.783 21.326a2 2 0 0 1 -2.196 -.426l-4.244 -4.243a8 8 0 1 1 13.657 -5.62" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_plus />
      <TablerIcons.map_pin_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M12.794 21.322a2 2 0 0 1 -2.207 -.422l-4.244 -4.243a8 8 0 1 1 13.59 -4.616" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_question />
      <TablerIcons.map_pin_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M14.997 19.317l-1.583 1.583a2 2 0 0 1 -2.827 0l-4.244 -4.243a8 8 0 1 1 13.657 -5.584" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_search />
      <TablerIcons.map_pin_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.916 11.707a3 3 0 1 0 -2.916 2.293" />
      <path d="M11.991 21.485a1.994 1.994 0 0 1 -1.404 -.585l-4.244 -4.243a8 8 0 1 1 13.651 -5.351" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_share />
      <TablerIcons.map_pin_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M12.02 21.485a1.996 1.996 0 0 1 -1.433 -.585l-4.244 -4.243a8 8 0 1 1 13.403 -3.651" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_star />
      <TablerIcons.map_pin_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 11a3 3 0 1 0 -3.908 2.86" />
      <path d="M11.059 21.25a2 2 0 0 1 -.472 -.35l-4.244 -4.243a8 8 0 1 1 13.646 -6.079" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_up />
      <TablerIcons.map_pin_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M12.789 21.324a2 2 0 0 1 -2.202 -.424l-4.244 -4.243a8 8 0 1 1 13.59 -4.626" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin_x />
      <TablerIcons.map_pin_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M13.024 21.204a2 2 0 0 1 -2.437 -.304l-4.244 -4.243a8 8 0 1 1 13.119 -2.766" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pin />
      <TablerIcons.map_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.5l-3 -1.5l-6 3v-13l6 -3l6 3l6 -3v7" />
      <path d="M9 4v13" />
      <path d="M15 7v5" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `map_pins` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_pins />
      <TablerIcons.map_pins class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_pins(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.828 9.828a4 4 0 1 0 -5.656 0l2.828 2.829l2.828 -2.829z" />
      <path d="M8 7l0 .01" />
      <path d="M18.828 17.828a4 4 0 1 0 -5.656 0l2.828 2.829l2.828 -2.829z" />
      <path d="M16 15l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `map_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_plus />
      <TablerIcons.map_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.5l-3 -1.5l-6 3v-13l6 -3l6 3l6 -3v8.5" />
      <path d="M9 4v13" />
      <path d="M15 7v8" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `map_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_question />
      <TablerIcons.map_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 20l-6 -3l-6 3v-13l6 -3l6 3l6 -3v7.5" />
      <path d="M9 4v13" />
      <path d="M15 7v5.5" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `map_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_search />
      <TablerIcons.map_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 18l-2 -1l-6 3v-13l6 -3l6 3l6 -3v7.5" />
      <path d="M9 4v13" />
      <path d="M15 7v5" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `map_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_share />
      <TablerIcons.map_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 19l-4 -2l-6 3v-13l6 -3l6 3l6 -3v9" />
      <path d="M9 4v13" />
      <path d="M15 7v6.5" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `map_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_star />
      <TablerIcons.map_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.718 17.359l-.718 -.359l-6 3v-13l6 -3l6 3l6 -3v7.5" />
      <path d="M9 4v13" />
      <path d="M15 7v4" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `map_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_up />
      <TablerIcons.map_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.5l-3 -1.5l-6 3v-13l6 -3l6 3l6 -3v8.5" />
      <path d="M9 4v13" />
      <path d="M15 7v7.5" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `map_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map_x />
      <TablerIcons.map_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 19.5l-5 -2.5l-6 3v-13l6 -3l6 3l6 -3v9" />
      <path d="M9 4v13" />
      <path d="M15 7v6.5" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `map` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.map />
      <TablerIcons.map class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def map(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7l6 -3l6 3l6 -3v13l-6 3l-6 -3l-6 3v-13" />
      <path d="M9 4v13" />
      <path d="M15 7v13" />
    </svg>
    """
  end

  @doc """
  Renders the `markdown_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.markdown_off />
      <TablerIcons.markdown_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def markdown_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h10a2 2 0 0 1 2 2v10" />
      <path d="M19 19h-14a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 1.85 -2" />
      <path d="M7 15v-6l2 2l1 -1m1 1v4" />
      <path d="M17.5 13.5l.5 -.5m-2 -1v-3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `markdown` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.markdown />
      <TablerIcons.markdown class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def markdown(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M7 15v-6l2 2l2 -2v6" />
      <path d="M14 13l2 2l2 -2m-2 2v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `marquee_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.marquee_2 />
      <TablerIcons.marquee_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def marquee_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6v-1a1 1 0 0 1 1 -1h1m5 0h2m5 0h1a1 1 0 0 1 1 1v1m0 5v2m0 5v1a1 1 0 0 1 -1 1h-1m-5 0h-2m-5 0h-1a1 1 0 0 1 -1 -1v-1m0 -5v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `marquee_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.marquee_off />
      <TablerIcons.marquee_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def marquee_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6c0 -.556 .227 -1.059 .593 -1.421" />
      <path d="M9 4h1.5" />
      <path d="M13.5 4h1.5" />
      <path d="M18 4a2 2 0 0 1 2 2" />
      <path d="M20 9v1.5" />
      <path d="M20 13.5v1.5" />
      <path d="M19.402 19.426a1.993 1.993 0 0 1 -1.402 .574" />
      <path d="M15 20h-1.5" />
      <path d="M10.5 20h-1.5" />
      <path d="M6 20a2 2 0 0 1 -2 -2" />
      <path d="M4 15v-1.5" />
      <path d="M4 10.5v-1.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `marquee` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.marquee />
      <TablerIcons.marquee class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def marquee(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6a2 2 0 0 1 2 -2m3 0h1.5m3 0h1.5m3 0a2 2 0 0 1 2 2m0 3v1.5m0 3v1.5m0 3a2 2 0 0 1 -2 2m-3 0h-1.5m-3 0h-1.5m-3 0a2 2 0 0 1 -2 -2m0 -3v-1.5m0 -3v-1.5m0 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `mars` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mars />
      <TablerIcons.mars class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mars(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 14m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M19 5l-5.4 5.4" />
      <path d="M19 5l-5 0" />
      <path d="M19 5l0 5" />
    </svg>
    """
  end

  @doc """
  Renders the `mask_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mask_off />
      <TablerIcons.mask_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mask_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.42 19.41a2 2 0 0 1 -1.42 .59h-12a2 2 0 0 1 -2 -2v-12c0 -.554 .225 -1.055 .588 -1.417m3.412 -.583h10a2 2 0 0 1 2 2v10" />
      <path d="M9.885 9.872a3 3 0 1 0 4.245 4.24m.582 -3.396a3.012 3.012 0 0 0 -1.438 -1.433" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `mask` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mask />
      <TablerIcons.mask class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mask(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `masks_theater_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.masks_theater_off />
      <TablerIcons.masks_theater_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def masks_theater_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 9c.058 0 .133 0 .192 0h6.616a2 2 0 0 1 1.992 2.183l-.554 6.041m-1.286 2.718a3.99 3.99 0 0 1 -2.71 1.058h-1.5a4 4 0 0 1 -3.983 -3.635l-.567 -6.182" />
      <path d="M18 13h.01" />
      <path d="M15 16.5c.657 .438 1.313 .588 1.97 .451" />
      <path d="M8.632 15.982a4.05 4.05 0 0 1 -.382 .018h-1.5a4 4 0 0 1 -3.983 -3.635l-.567 -6.182a2 2 0 0 1 .514 -1.531a1.99 1.99 0 0 1 1.286 -.652m4 0h2.808a2 2 0 0 1 2 2" />
      <path d="M6 8h.01" />
      <path d="M6 12c.764 -.51 1.528 -.63 2.291 -.36" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `masks_theater` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.masks_theater />
      <TablerIcons.masks_theater class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def masks_theater(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.192 9h6.616a2 2 0 0 1 1.992 2.183l-.567 6.182a4 4 0 0 1 -3.983 3.635h-1.5a4 4 0 0 1 -3.983 -3.635l-.567 -6.182a2 2 0 0 1 1.992 -2.183z" />
      <path d="M15 13h.01" />
      <path d="M18 13h.01" />
      <path d="M15 16.5c1 .667 2 .667 3 0" />
      <path d="M8.632 15.982a4.037 4.037 0 0 1 -.382 .018h-1.5a4 4 0 0 1 -3.983 -3.635l-.567 -6.182a2 2 0 0 1 1.992 -2.183h6.616a2 2 0 0 1 2 2" />
      <path d="M6 8h.01" />
      <path d="M9 8h.01" />
      <path d="M6 12c.764 -.51 1.528 -.63 2.291 -.36" />
    </svg>
    """
  end

  @doc """
  Renders the `massage` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.massage />
      <TablerIcons.massage class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def massage(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 17m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M9 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M4 22l4 -2v-3h12" />
      <path d="M11 20h9" />
      <path d="M8 14l3 -2l1 -4c3 1 3 4 3 6" />
    </svg>
    """
  end

  @doc """
  Renders the `matchstick` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.matchstick />
      <TablerIcons.matchstick class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def matchstick(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21l14 -9" />
      <path d="M17 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M17 3l3.62 7.29a4.007 4.007 0 0 1 -.764 4.51a4 4 0 0 1 -6.493 -4.464l3.637 -7.336z" />
    </svg>
    """
  end

  @doc """
  Renders the `math_1_divide_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_1_divide_2 />
      <TablerIcons.math_1_divide_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_1_divide_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12h14" />
      <path d="M10 15h3a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-2a1 1 0 0 0 -1 1v1a1 1 0 0 0 1 1h3" />
      <path d="M10 5l2 -2v6" />
    </svg>
    """
  end

  @doc """
  Renders the `math_1_divide_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_1_divide_3 />
      <TablerIcons.math_1_divide_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_1_divide_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 15.5a.5 .5 0 0 1 .5 -.5h2a1.5 1.5 0 0 1 0 3h-1.167h1.167a1.5 1.5 0 0 1 0 3h-2a.5 .5 0 0 1 -.5 -.5" />
      <path d="M5 12h14" />
      <path d="M10 5l2 -2v6" />
    </svg>
    """
  end

  @doc """
  Renders the `math_avg` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_avg />
      <TablerIcons.math_avg class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_avg(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21l18 -18" />
      <path d="M12 12m-8 0a8 8 0 1 0 16 0a8 8 0 1 0 -16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `math_equal_greater` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_equal_greater />
      <TablerIcons.math_equal_greater class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_equal_greater(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 18l14 -4" />
      <path d="M5 14l14 -4l-14 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `math_equal_lower` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_equal_lower />
      <TablerIcons.math_equal_lower class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_equal_lower(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 18l-14 -4" />
      <path d="M19 14l-14 -4l14 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `math_function_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_function_off />
      <TablerIcons.math_function_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_function_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 10h1c.882 0 .986 .777 1.694 2.692" />
      <path d="M13 17c.864 0 1.727 -.663 2.495 -1.512m1.717 -2.302c.993 -1.45 2.39 -3.186 3.788 -3.186" />
      <path d="M3 19c0 1.5 .5 2 2 2s2 -4 3 -9c.237 -1.186 .446 -2.317 .647 -3.35m.727 -3.248c.423 -1.492 .91 -2.402 1.626 -2.402c1.5 0 2 .5 2 2" />
      <path d="M5 12h6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `math_function_y` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_function_y />
      <TablerIcons.math_function_y class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_function_y(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19a2 2 0 0 0 2 2c2 0 2 -4 3 -9s1 -9 3 -9a2 2 0 0 1 2 2" />
      <path d="M5 12h6" />
      <path d="M15 12l3 5.063" />
      <path d="M21 12l-4.8 9" />
    </svg>
    """
  end

  @doc """
  Renders the `math_function` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_function />
      <TablerIcons.math_function class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_function(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19a2 2 0 0 0 2 2c2 0 2 -4 3 -9s1 -9 3 -9a2 2 0 0 1 2 2" />
      <path d="M5 12h6" />
      <path d="M15 12l6 6" />
      <path d="M15 18l6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `math_greater` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_greater />
      <TablerIcons.math_greater class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_greater(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 18l14 -6l-14 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `math_integral_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_integral_x />
      <TablerIcons.math_integral_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_integral_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19a2 2 0 0 0 2 2c2 0 2 -4 3 -9s1 -9 3 -9a2 2 0 0 1 2 2" />
      <path d="M14 12l6 6" />
      <path d="M14 18l6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `math_integral` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_integral />
      <TablerIcons.math_integral class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_integral(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 19a2 2 0 0 0 2 2c2 0 2 -4 3 -9s1 -9 3 -9a2 2 0 0 1 2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `math_integrals` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_integrals />
      <TablerIcons.math_integrals class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_integrals(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19a2 2 0 0 0 2 2c2 0 2 -4 3 -9s1 -9 3 -9a2 2 0 0 1 2 2" />
      <path d="M11 19a2 2 0 0 0 2 2c2 0 2 -4 3 -9s1 -9 3 -9a2 2 0 0 1 2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `math_lower` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_lower />
      <TablerIcons.math_lower class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_lower(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 18l-14 -6l14 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `math_max` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_max />
      <TablerIcons.math_max class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_max(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M3 20c0 -8.75 4 -14 7 -14.5m4 0c3 .5 7 5.75 7 14.5" />
    </svg>
    """
  end

  @doc """
  Renders the `math_min` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_min />
      <TablerIcons.math_min class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_min(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 17a2 2 0 1 1 0 4a2 2 0 0 1 0 -4z" />
      <path d="M3 4c0 8.75 4 14 7 14.5" />
      <path d="M14 18.5c3 -.5 7 -5.75 7 -14.5" />
    </svg>
    """
  end

  @doc """
  Renders the `math_not` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_not />
      <TablerIcons.math_not class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_not(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12h14v4" />
    </svg>
    """
  end

  @doc """
  Renders the `math_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_off />
      <TablerIcons.math_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 19l2.5 -2.5" />
      <path d="M18.5 14.5l1.5 -1.5" />
      <path d="M3 3l18 18" />
      <path d="M19 5h-7l-.646 2.262" />
      <path d="M10.448 10.431l-2.448 8.569l-3 -6h-2" />
    </svg>
    """
  end

  @doc """
  Renders the `math_pi_divide_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_pi_divide_2 />
      <TablerIcons.math_pi_divide_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_pi_divide_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 15h3a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-2a1 1 0 0 0 -1 1v1a1 1 0 0 0 1 1h3" />
      <path d="M5 12h14" />
      <path d="M10 9v-6" />
      <path d="M14 3v6" />
      <path d="M15 3h-6" />
    </svg>
    """
  end

  @doc """
  Renders the `math_pi` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_pi />
      <TablerIcons.math_pi class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_pi(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 20v-16" />
      <path d="M17 4v16" />
      <path d="M20 4h-16" />
    </svg>
    """
  end

  @doc """
  Renders the `math_symbols` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_symbols />
      <TablerIcons.math_symbols class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_symbols(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12l18 0" />
      <path d="M12 3l0 18" />
      <path d="M16.5 4.5l3 3" />
      <path d="M19.5 4.5l-3 3" />
      <path d="M6 4l0 4" />
      <path d="M4 6l4 0" />
      <path d="M18 16l.01 0" />
      <path d="M18 20l.01 0" />
      <path d="M4 18l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `math_x_divide_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_x_divide_2 />
      <TablerIcons.math_x_divide_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_x_divide_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 15h3a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-2a1 1 0 0 0 -1 1v1a1 1 0 0 0 1 1h3" />
      <path d="M5 12h14" />
      <path d="M9 3l6 6" />
      <path d="M9 9l6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `math_x_divide_y_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_x_divide_y_2 />
      <TablerIcons.math_x_divide_y_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_x_divide_y_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21l18 -18" />
      <path d="M15 14l3 4.5" />
      <path d="M21 14l-4.5 7" />
      <path d="M3 4l6 6" />
      <path d="M3 10l6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `math_x_divide_y` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_x_divide_y />
      <TablerIcons.math_x_divide_y class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_x_divide_y(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 3l6 6" />
      <path d="M9 9l6 -6" />
      <path d="M9 15l3 4.5" />
      <path d="M15 15l-4.5 7" />
      <path d="M5 12h14" />
    </svg>
    """
  end

  @doc """
  Renders the `math_x_minus_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_x_minus_x />
      <TablerIcons.math_x_minus_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_x_minus_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 9l6 6" />
      <path d="M2 15l6 -6" />
      <path d="M16 9l6 6" />
      <path d="M16 15l6 -6" />
      <path d="M10 12h4" />
    </svg>
    """
  end

  @doc """
  Renders the `math_x_minus_y` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_x_minus_y />
      <TablerIcons.math_x_minus_y class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_x_minus_y(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 9l6 6" />
      <path d="M2 15l6 -6" />
      <path d="M16 9l3 5.063" />
      <path d="M22 9l-4.8 9" />
      <path d="M10 12h4" />
    </svg>
    """
  end

  @doc """
  Renders the `math_x_plus_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_x_plus_x />
      <TablerIcons.math_x_plus_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_x_plus_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 9l6 6" />
      <path d="M2 15l6 -6" />
      <path d="M16 9l6 6" />
      <path d="M16 15l6 -6" />
      <path d="M10 12h4" />
      <path d="M12 10v4" />
    </svg>
    """
  end

  @doc """
  Renders the `math_x_plus_y` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_x_plus_y />
      <TablerIcons.math_x_plus_y class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_x_plus_y(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 9l3 5.063" />
      <path d="M2 9l6 6" />
      <path d="M2 15l6 -6" />
      <path d="M22 9l-4.8 9" />
      <path d="M10 12h4" />
      <path d="M12 10v4" />
    </svg>
    """
  end

  @doc """
  Renders the `math_xy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_xy />
      <TablerIcons.math_xy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_xy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 9l3 5.063" />
      <path d="M4 9l6 6" />
      <path d="M4 15l6 -6" />
      <path d="M20 9l-4.8 9" />
    </svg>
    """
  end

  @doc """
  Renders the `math_y_minus_y` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_y_minus_y />
      <TablerIcons.math_y_minus_y class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_y_minus_y(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 9l3 5.063" />
      <path d="M8 9l-4.8 9" />
      <path d="M16 9l3 5.063" />
      <path d="M22 9l-4.8 9" />
      <path d="M10 12h4" />
    </svg>
    """
  end

  @doc """
  Renders the `math_y_plus_y` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math_y_plus_y />
      <TablerIcons.math_y_plus_y class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math_y_plus_y(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 9l3 5.063" />
      <path d="M8 9l-4.8 9" />
      <path d="M16 9l3 5.063" />
      <path d="M22 9l-4.8 9" />
      <path d="M10 12h4" />
      <path d="M12 10v4" />
    </svg>
    """
  end

  @doc """
  Renders the `math` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.math />
      <TablerIcons.math class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def math(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 5h-7l-4 14l-3 -6h-2" />
      <path d="M14 13l6 6" />
      <path d="M14 19l6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `maximize_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.maximize_off />
      <TablerIcons.maximize_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def maximize_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v-2c0 -.551 .223 -1.05 .584 -1.412" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2c.545 0 1.04 -.218 1.4 -.572" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `maximize` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.maximize />
      <TablerIcons.maximize class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def maximize(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v-2a2 2 0 0 1 2 -2h2" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2a2 2 0 0 0 2 -2v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `meat_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.meat_off />
      <TablerIcons.meat_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def meat_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.62 8.382l1.966 -1.967a2 2 0 1 1 3.414 -1.415a2 2 0 1 1 -1.413 3.414l-1.82 1.821" />
      <path d="M5.904 18.596c2.733 2.734 5.9 4 7.07 2.829c1.172 -1.172 -.094 -4.338 -2.828 -7.071c-2.733 -2.734 -5.9 -4 -7.07 -2.829c-1.172 1.172 .094 4.338 2.828 7.071z" />
      <path d="M7.5 16l1 1" />
      <path d="M12.975 21.425c1.582 -1.582 2.679 -3.407 3.242 -5.2" />
      <path d="M16.6 12.6c-.16 -1.238 -.653 -2.345 -1.504 -3.195c-.85 -.85 -1.955 -1.344 -3.192 -1.503" />
      <path d="M8.274 8.284c-1.792 .563 -3.616 1.66 -5.198 3.242" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `meat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.meat />
      <TablerIcons.meat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def meat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.62 8.382l1.966 -1.967a2 2 0 1 1 3.414 -1.415a2 2 0 1 1 -1.413 3.414l-1.82 1.821" />
      <path d="M5.904 18.596c2.733 2.734 5.9 4 7.07 2.829c1.172 -1.172 -.094 -4.338 -2.828 -7.071c-2.733 -2.734 -5.9 -4 -7.07 -2.829c-1.172 1.172 .094 4.338 2.828 7.071z" />
      <path d="M7.5 16l1 1" />
      <path d="M12.975 21.425c3.905 -3.906 4.855 -9.288 2.121 -12.021c-2.733 -2.734 -8.115 -1.784 -12.02 2.121" />
    </svg>
    """
  end

  @doc """
  Renders the `medal_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.medal_2 />
      <TablerIcons.medal_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def medal_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 3h6l3 7l-6 2l-6 -2z" />
      <path d="M12 12l-3 -9" />
      <path d="M15 11l-3 -8" />
      <path d="M12 19.5l-3 1.5l.5 -3.5l-2 -2l3 -.5l1.5 -3l1.5 3l3 .5l-2 2l.5 3.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `medal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.medal />
      <TablerIcons.medal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def medal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 4v3m-4 -3v6m8 -6v6" />
      <path d="M12 18.5l-3 1.5l.5 -3.5l-2 -2l3 -.5l1.5 -3l1.5 3l3 .5l-2 2l.5 3.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `medical_cross_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.medical_cross_circle />
      <TablerIcons.medical_cross_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def medical_cross_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
      <path d="M12 8v8" />
      <path d="M15.5 10l-7 4" />
      <path d="M15.5 14l-7 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `medical_cross_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.medical_cross_filled />
      <TablerIcons.medical_cross_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def medical_cross_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11 2l-.15 .005a2 2 0 0 0 -1.85 1.995v2.803l-2.428 -1.401a2 2 0 0 0 -2.732 .732l-1 1.732l-.073 .138a2 2 0 0 0 .805 2.594l2.427 1.402l-2.427 1.402a2 2 0 0 0 -.732 2.732l1 1.732l.083 .132a2 2 0 0 0 2.649 .6l2.428 -1.402v2.804a2 2 0 0 0 2 2h2l.15 -.005a2 2 0 0 0 1.85 -1.995v-2.804l2.428 1.403a2 2 0 0 0 2.732 -.732l1 -1.732l.073 -.138a2 2 0 0 0 -.805 -2.594l-2.428 -1.403l2.428 -1.402a2 2 0 0 0 .732 -2.732l-1 -1.732l-.083 -.132a2 2 0 0 0 -2.649 -.6l-2.428 1.4v-2.802a2 2 0 0 0 -2 -2h-2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `medical_cross_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.medical_cross_off />
      <TablerIcons.medical_cross_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def medical_cross_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.928 17.733l-.574 -.331l-3.354 -1.938v4.536a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-4.536l-3.928 2.268a1 1 0 0 1 -1.366 -.366l-1 -1.732a1 1 0 0 1 .366 -1.366l3.927 -2.268l-3.927 -2.268a1 1 0 0 1 -.366 -1.366l1 -1.732a1 1 0 0 1 1.366 -.366l.333 .192m3.595 -.46v-2a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4.535l3.928 -2.267a1 1 0 0 1 1.366 .366l1 1.732a1 1 0 0 1 -.366 1.366l-3.927 2.268l3.927 2.269a1 1 0 0 1 .366 1.366l-.24 .416" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `medical_cross` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.medical_cross />
      <TablerIcons.medical_cross class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def medical_cross(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 3a1 1 0 0 1 1 1v4.535l3.928 -2.267a1 1 0 0 1 1.366 .366l1 1.732a1 1 0 0 1 -.366 1.366l-3.927 2.268l3.927 2.269a1 1 0 0 1 .366 1.366l-1 1.732a1 1 0 0 1 -1.366 .366l-3.928 -2.269v4.536a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-4.536l-3.928 2.268a1 1 0 0 1 -1.366 -.366l-1 -1.732a1 1 0 0 1 .366 -1.366l3.927 -2.268l-3.927 -2.268a1 1 0 0 1 -.366 -1.366l1 -1.732a1 1 0 0 1 1.366 -.366l3.928 2.267v-4.535a1 1 0 0 1 1 -1h2z" />
    </svg>
    """
  end

  @doc """
  Renders the `medicine_syrup` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.medicine_syrup />
      <TablerIcons.medicine_syrup class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def medicine_syrup(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 21h8a1 1 0 0 0 1 -1v-10a3 3 0 0 0 -3 -3h-4a3 3 0 0 0 -3 3v10a1 1 0 0 0 1 1z" />
      <path d="M10 14h4" />
      <path d="M12 12v4" />
      <path d="M10 7v-3a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v3" />
    </svg>
    """
  end

  @doc """
  Renders the `meeple` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.meeple />
      <TablerIcons.meeple class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def meeple(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 20h-5a1 1 0 0 1 -1 -1c0 -2 3.378 -4.907 4 -6c-1 0 -4 -.5 -4 -2c0 -2 4 -3.5 6 -4c0 -1.5 .5 -4 3 -4s3 2.5 3 4c2 .5 6 2 6 4c0 1.5 -3 2 -4 2c.622 1.093 4 4 4 6a1 1 0 0 1 -1 1h-5c-1 0 -2 -4 -3 -4s-2 4 -3 4z" />
    </svg>
    """
  end

  @doc """
  Renders the `menorah` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.menorah />
      <TablerIcons.menorah class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def menorah(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 4v16" />
      <path d="M8 4v2a4 4 0 1 0 8 0v-2" />
      <path d="M4 4v2a8 8 0 1 0 16 0v-2" />
      <path d="M10 20h4" />
    </svg>
    """
  end

  @doc """
  Renders the `menu_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.menu_2 />
      <TablerIcons.menu_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def menu_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6l16 0" />
      <path d="M4 12l16 0" />
      <path d="M4 18l16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `menu_deep` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.menu_deep />
      <TablerIcons.menu_deep class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def menu_deep(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6h16" />
      <path d="M7 12h13" />
      <path d="M10 18h10" />
    </svg>
    """
  end

  @doc """
  Renders the `menu_order` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.menu_order />
      <TablerIcons.menu_order class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def menu_order(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10h16" />
      <path d="M4 14h16" />
      <path d="M9 18l3 3l3 -3" />
      <path d="M9 6l3 -3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `menu` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.menu />
      <TablerIcons.menu class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def menu(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8l16 0" />
      <path d="M4 16l16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_bolt />
      <TablerIcons.message_2_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M13 20l-1 1l-3 -3h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_cancel />
      <TablerIcons.message_2_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M12 21l-3 -3h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_check />
      <TablerIcons.message_2_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M12 21l-1 -1l-2 -2h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_code />
      <TablerIcons.message_2_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M12 21l-1 -1l-2 -2h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_cog />
      <TablerIcons.message_2_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M12 21l-3 -3h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_dollar />
      <TablerIcons.message_2_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M13.5 19.5l-1.5 1.5l-3 -3h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v3.5" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_down />
      <TablerIcons.message_2_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M12.5 20.5l-.5 .5l-3 -3h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_exclamation />
      <TablerIcons.message_2_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M15 18l-3 3l-3 -3h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_heart />
      <TablerIcons.message_2_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h3.5" />
      <path d="M10.5 19.5l-1.5 -1.5h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v4" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_minus />
      <TablerIcons.message_2_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M12 21l-3 -3h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v8" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_off />
      <TablerIcons.message_2_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h1m4 0h3" />
      <path d="M8 13h5" />
      <path d="M8 4h10a3 3 0 0 1 3 3v8c0 .57 -.16 1.104 -.436 1.558m-2.564 1.442h-3l-3 3l-3 -3h-3a3 3 0 0 1 -3 -3v-8c0 -1.084 .575 -2.034 1.437 -2.561" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_pause />
      <TablerIcons.message_2_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M13 20l-1 1l-3 -3h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_pin />
      <TablerIcons.message_2_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M12.5 20.5l-.5 .5l-3 -3h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v4" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_plus />
      <TablerIcons.message_2_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M12.5 20.5l-.5 .5l-3 -3h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_question />
      <TablerIcons.message_2_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M14.5 18.5l-2.5 2.5l-3 -3h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v4.5" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_search />
      <TablerIcons.message_2_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h5" />
      <path d="M12 21l-.5 -.5l-2.5 -2.5h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v4.5" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_share />
      <TablerIcons.message_2_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M12 21l-3 -3h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_star />
      <TablerIcons.message_2_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h4.5" />
      <path d="M10 19l-1 -1h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v4.5" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_up />
      <TablerIcons.message_2_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M12.354 20.646l-.354 .354l-3 -3h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2_x />
      <TablerIcons.message_2_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M13.5 19.5l-1.5 1.5l-3 -3h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `message_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_2 />
      <TablerIcons.message_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M9 18h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v8a3 3 0 0 1 -3 3h-3l-3 3l-3 -3z" />
    </svg>
    """
  end

  @doc """
  Renders the `message_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_bolt />
      <TablerIcons.message_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M13 18l-5 3v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `message_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_cancel />
      <TablerIcons.message_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M11.995 18.603l-3.995 2.397v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `message_chatbot` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_chatbot />
      <TablerIcons.message_chatbot class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_chatbot(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 21v-13a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-9l-4 4" />
      <path d="M9.5 9h.01" />
      <path d="M14.5 9h.01" />
      <path d="M9.5 13a3.5 3.5 0 0 0 5 0" />
    </svg>
    """
  end

  @doc """
  Renders the `message_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_check />
      <TablerIcons.message_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M10.99 19.206l-2.99 1.794v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_2_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_2_filled />
      <TablerIcons.message_circle_2_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_2_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M5.821 4.91c3.898 -2.765 9.469 -2.539 13.073 .536c3.667 3.127 4.168 8.238 1.152 11.897c-2.842 3.447 -7.965 4.583 -12.231 2.805l-.232 -.101l-4.375 .931l-.075 .013l-.11 .009l-.113 -.004l-.044 -.005l-.11 -.02l-.105 -.034l-.1 -.044l-.076 -.042l-.108 -.077l-.081 -.074l-.073 -.083l-.053 -.075l-.065 -.115l-.042 -.106l-.031 -.113l-.013 -.075l-.009 -.11l.004 -.113l.005 -.044l.02 -.11l.022 -.072l1.15 -3.451l-.022 -.036c-2.21 -3.747 -1.209 -8.392 2.411 -11.118l.23 -.168z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_2 />
      <TablerIcons.message_circle_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 20l1.3 -3.9a9 8 0 1 1 3.4 2.9l-4.7 1" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_bolt />
      <TablerIcons.message_circle_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.038 19.927a9.933 9.933 0 0 1 -5.338 -.927l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c1.993 1.7 2.93 4.043 2.746 6.346" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_cancel />
      <TablerIcons.message_circle_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.015 19.98a9.87 9.87 0 0 1 -4.315 -.98l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c1.927 1.644 2.867 3.887 2.761 6.114" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_check />
      <TablerIcons.message_circle_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.042 19.933a9.798 9.798 0 0 1 -3.342 -.933l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c2.127 1.814 3.052 4.36 2.694 6.808" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_code />
      <TablerIcons.message_circle_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.036 19.933a9.798 9.798 0 0 1 -3.336 -.933l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c2.128 1.815 3.053 4.361 2.694 6.81" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_cog />
      <TablerIcons.message_circle_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.996 19.98a9.868 9.868 0 0 1 -4.296 -.98l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c1.842 1.572 2.783 3.691 2.77 5.821" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_dollar />
      <TablerIcons.message_circle_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.16 19.914a9.94 9.94 0 0 1 -5.46 -.914l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c1.384 1.181 2.26 2.672 2.603 4.243" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_down />
      <TablerIcons.message_circle_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.006 19.98a9.869 9.869 0 0 1 -4.306 -.98l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c1.993 1.7 2.93 4.041 2.746 6.344" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_exclamation />
      <TablerIcons.message_circle_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.02 19.52c-2.34 .736 -5 .606 -7.32 -.52l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c1.96 1.671 2.898 3.963 2.755 6.227" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_heart />
      <TablerIcons.message_circle_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.59 19.88a9.763 9.763 0 0 1 -2.89 -.88l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c1.565 1.335 2.479 3.065 2.71 4.861" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_minus />
      <TablerIcons.message_circle_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.023 19.98a9.87 9.87 0 0 1 -4.323 -.98l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c2.718 2.319 3.473 5.832 2.096 8.811" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_off />
      <TablerIcons.message_circle_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.595 4.577c3.223 -1.176 7.025 -.61 9.65 1.63c2.982 2.543 3.601 6.523 1.636 9.66m-1.908 2.109c-2.787 2.19 -6.89 2.666 -10.273 1.024l-4.7 1l1.3 -3.9c-2.229 -3.296 -1.494 -7.511 1.68 -10.057" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_pause />
      <TablerIcons.message_circle_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.989 19.932a9.93 9.93 0 0 1 -5.289 -.932l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c2.131 1.818 3.056 4.37 2.692 6.824" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_pin />
      <TablerIcons.message_circle_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.337 19.974a9.891 9.891 0 0 1 -4.637 -.974l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c1.63 1.39 2.554 3.21 2.736 5.085" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_plus />
      <TablerIcons.message_circle_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.007 19.98a9.869 9.869 0 0 1 -4.307 -.98l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c1.992 1.7 2.93 4.04 2.747 6.34" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_question />
      <TablerIcons.message_circle_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.02 19.52c-2.341 .736 -5 .606 -7.32 -.52l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c1.649 1.407 2.575 3.253 2.742 5.152" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_search />
      <TablerIcons.message_circle_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.303 19.955a9.818 9.818 0 0 1 -3.603 -.955l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c1.73 1.476 2.665 3.435 2.76 5.433" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_share />
      <TablerIcons.message_circle_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.58 19.963a9.906 9.906 0 0 1 -4.88 -.963l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c2.13 1.817 3.055 4.368 2.692 6.82" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_star />
      <TablerIcons.message_circle_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.517 19.869a9.757 9.757 0 0 1 -2.817 -.869l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c1.666 1.421 2.594 3.29 2.747 5.21" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_up />
      <TablerIcons.message_circle_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.004 19.98a9.869 9.869 0 0 1 -4.304 -.98l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c1.994 1.701 2.932 4.045 2.746 6.349" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle_x />
      <TablerIcons.message_circle_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.593 19.855a9.96 9.96 0 0 1 -5.893 -.855l-4.7 1l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c2.128 1.816 3.053 4.363 2.693 6.813" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `message_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_circle />
      <TablerIcons.message_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 20l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c3.255 2.777 3.695 7.266 1.029 10.501c-2.666 3.235 -7.615 4.215 -11.574 2.293l-4.7 1" />
    </svg>
    """
  end

  @doc """
  Renders the `message_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_code />
      <TablerIcons.message_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M11.012 19.193l-3.012 1.807v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `message_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_cog />
      <TablerIcons.message_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M12.031 18.581l-4.031 2.419v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `message_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_dollar />
      <TablerIcons.message_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M13 18l-5 3v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v3.5" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `message_dots` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_dots />
      <TablerIcons.message_dots class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_dots(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 21v-13a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-9l-4 4" />
      <path d="M12 11l0 .01" />
      <path d="M8 11l0 .01" />
      <path d="M16 11l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `message_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_down />
      <TablerIcons.message_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M11.998 18.601l-3.998 2.399v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `message_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_exclamation />
      <TablerIcons.message_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M15 18h-2l-5 3v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `message_forward` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_forward />
      <TablerIcons.message_forward class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_forward(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 21v-13a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-9l-4 4" />
      <path d="M13 9l2 2l-2 2" />
      <path d="M15 11h-6" />
    </svg>
    """
  end

  @doc """
  Renders the `message_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_heart />
      <TablerIcons.message_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h3.5" />
      <path d="M10.48 19.512l-2.48 1.488v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v4" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `message_language` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_language />
      <TablerIcons.message_language class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_language(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 21v-13a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-9l-4 4" />
      <path d="M10 14v-4a2 2 0 1 1 4 0v4" />
      <path d="M14 12h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `message_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_minus />
      <TablerIcons.message_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M11.976 18.614l-3.976 2.386v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v8" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `message_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_off />
      <TablerIcons.message_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h1m4 0h3" />
      <path d="M8 13h5" />
      <path d="M8 4h10a3 3 0 0 1 3 3v8c0 .577 -.163 1.116 -.445 1.573m-2.555 1.427h-5l-5 3v-3h-2a3 3 0 0 1 -3 -3v-8c0 -1.085 .576 -2.036 1.439 -2.562" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `message_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_pause />
      <TablerIcons.message_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M13 18l-5 3v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `message_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_pin />
      <TablerIcons.message_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M12.007 18.596l-4.007 2.404v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v4.5" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `message_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_plus />
      <TablerIcons.message_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M12.01 18.594l-4.01 2.406v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `message_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_question />
      <TablerIcons.message_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M14 18h-1l-5 3v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v4.5" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `message_report` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_report />
      <TablerIcons.message_report class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_report(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 21v-13a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v6a3 3 0 0 1 -3 3h-9l-4 4" />
      <path d="M12 8l0 3" />
      <path d="M12 14l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `message_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_search />
      <TablerIcons.message_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h5" />
      <path d="M11.008 19.195l-3.008 1.805v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v4.5" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `message_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_share />
      <TablerIcons.message_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M13 18l-5 3v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `message_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_star />
      <TablerIcons.message_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h4.5" />
      <path d="M10.325 19.605l-2.325 1.395v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v4.5" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `message_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_up />
      <TablerIcons.message_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M11.99 18.606l-3.99 2.394v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `message_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message_x />
      <TablerIcons.message_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M13 18l-5 3v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `message` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.message />
      <TablerIcons.message class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def message(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h8" />
      <path d="M8 13h6" />
      <path d="M18 4a3 3 0 0 1 3 3v8a3 3 0 0 1 -3 3h-5l-5 3v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12z" />
    </svg>
    """
  end

  @doc """
  Renders the `messages_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.messages_off />
      <TablerIcons.messages_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def messages_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M11 11a1 1 0 0 1 -1 -1m0 -3.968v-2.032a1 1 0 0 1 1 -1h9a1 1 0 0 1 1 1v10l-3 -3h-3" />
      <path d="M14 15v2a1 1 0 0 1 -1 1h-7l-3 3v-10a1 1 0 0 1 1 -1h2" />
    </svg>
    """
  end

  @doc """
  Renders the `messages` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.messages />
      <TablerIcons.messages class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def messages(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 14l-3 -3h-7a1 1 0 0 1 -1 -1v-6a1 1 0 0 1 1 -1h9a1 1 0 0 1 1 1v10" />
      <path d="M14 15v2a1 1 0 0 1 -1 1h-7l-3 3v-10a1 1 0 0 1 1 -1h2" />
    </svg>
    """
  end

  @doc """
  Renders the `meteor_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.meteor_off />
      <TablerIcons.meteor_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def meteor_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.75 5.761l3.25 -2.761l-1 5l9 -5l-5 9h5l-2.467 2.536m-1.983 2.04l-2.441 2.51a6.5 6.5 0 1 1 -8.855 -9.506l2.322 -1.972" />
      <path d="M9.5 14.5m-2.5 0a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0 -5 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `meteor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.meteor />
      <TablerIcons.meteor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def meteor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 3l-5 9h5l-6.891 7.086a6.5 6.5 0 1 1 -8.855 -9.506l7.746 -6.58l-1 5l9 -5z" />
      <path d="M9.5 14.5m-2.5 0a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0 -5 0" />
    </svg>
    """
  end

  @doc """
  Renders the `michelin_bib_gourmand` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.michelin_bib_gourmand />
      <TablerIcons.michelin_bib_gourmand class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def michelin_bib_gourmand(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.97 20c-2.395 -1.947 -4.763 -5.245 -1.005 -8c-.52 -4 3.442 -7.5 5.524 -7.5c.347 -1 1.499 -1.5 2.54 -1.5c1.04 0 2.135 .5 2.482 1.5c2.082 0 6.044 3.5 5.524 7.5c3.758 2.755 1.39 6.053 -1.005 8" />
      <path d="M9 11m-1 0a1 2 0 1 0 2 0a1 2 0 1 0 -2 0" />
      <path d="M15 11m-1 0a1 2 0 1 0 2 0a1 2 0 1 0 -2 0" />
      <path d="M8 17.085c3.5 2.712 6.5 2.712 9 -1.085" />
      <path d="M13 18.5c.815 -2.337 1.881 -1.472 2 -.55" />
    </svg>
    """
  end

  @doc """
  Renders the `michelin_star_green` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.michelin_star_green />
      <TablerIcons.michelin_star_green class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def michelin_star_green(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.432 17.949c.863 1.544 2.589 1.976 4.13 1.112c1.54 -.865 1.972 -2.594 1.048 -4.138c-.185 -.309 -.309 -.556 -.494 -.74c.247 .06 .555 .06 .925 .06c1.726 0 2.959 -1.234 2.959 -2.963c0 -1.73 -1.233 -2.965 -3.02 -2.965c-.37 0 -.617 0 -.925 .062c.185 -.185 .308 -.432 .493 -.74c.863 -1.545 .431 -3.274 -1.048 -4.138c-1.541 -.865 -3.205 -.433 -4.13 1.111c-.185 .309 -.308 .556 -.432 .803c-.123 -.247 -.246 -.494 -.431 -.803c-.802 -1.605 -2.528 -2.038 -4.007 -1.173c-1.541 .865 -1.973 2.594 -1.048 4.137c.185 .31 .308 .556 .493 .741c-.246 -.061 -.555 -.061 -.924 -.061c-1.788 0 -3.021 1.235 -3.021 2.964c0 1.729 1.233 2.964 3.02 2.964" />
      <path d="M4.073 21c4.286 -2.756 5.9 -5.254 7.927 -9" />
    </svg>
    """
  end

  @doc """
  Renders the `michelin_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.michelin_star />
      <TablerIcons.michelin_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def michelin_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.792 17.063c0 .337 .057 .618 .057 .9c0 1.8 -1.238 3.037 -2.982 3.037c-1.8 0 -2.98 -1.238 -2.98 -3.206v-.731c-.957 .675 -1.576 .9 -2.42 .9c-1.518 0 -2.925 -1.463 -2.925 -3.094c0 -1.181 .844 -2.194 2.082 -2.756l.28 -.113c-1.574 -.787 -2.362 -1.688 -2.362 -2.925c0 -1.687 1.294 -3.094 2.925 -3.094c.675 0 1.52 .338 2.138 .788l.281 .112c0 -.337 -.056 -.619 -.056 -.844c0 -1.8 1.237 -3.037 2.98 -3.037c1.8 0 2.981 1.237 2.981 3.206v.394l-.056 .281c.956 -.675 1.575 -.9 2.419 -.9c1.519 0 2.925 1.463 2.925 3.094c0 1.181 -.844 2.194 -2.081 2.756l-.282 .169c1.575 .787 2.363 1.688 2.363 2.925c0 1.688 -1.294 3.094 -2.925 3.094c-.675 0 -1.575 -.281 -2.138 -.788l-.225 -.169z" />
    </svg>
    """
  end

  @doc """
  Renders the `mickey_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mickey_filled />
      <TablerIcons.mickey_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mickey_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.501 2a4.5 4.5 0 0 1 .878 8.913a8 8 0 1 1 -15.374 3.372l-.005 -.285l.005 -.285a7.991 7.991 0 0 1 .615 -2.803a4.5 4.5 0 0 1 -3.187 -6.348a4.505 4.505 0 0 1 3.596 -2.539l.225 -.018l.281 -.007l.244 .009a4.5 4.5 0 0 1 4.215 4.247a8.001 8.001 0 0 1 4.013 0a4.5 4.5 0 0 1 4.493 -4.256z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `mickey` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mickey />
      <TablerIcons.mickey class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mickey(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.5 3a3.5 3.5 0 0 1 3.25 4.8a7.017 7.017 0 0 0 -2.424 2.1a3.5 3.5 0 1 1 -.826 -6.9z" />
      <path d="M18.5 3a3.5 3.5 0 1 1 -.826 6.902a7.013 7.013 0 0 0 -2.424 -2.103a3.5 3.5 0 0 1 3.25 -4.799z" />
      <path d="M12 14m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
    </svg>
    """
  end

  @doc """
  Renders the `microphone_2_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.microphone_2_off />
      <TablerIcons.microphone_2_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def microphone_2_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.908 12.917a5 5 0 1 0 -5.827 -5.819" />
      <path d="M10.116 10.125l-6.529 7.46a2 2 0 1 0 2.827 2.83l7.461 -6.529" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `microphone_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.microphone_2 />
      <TablerIcons.microphone_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def microphone_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 12.9a5 5 0 1 0 -3.902 -3.9" />
      <path d="M15 12.9l-3.902 -3.899l-7.513 8.584a2 2 0 1 0 2.827 2.83l8.588 -7.515z" />
    </svg>
    """
  end

  @doc """
  Renders the `microphone_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.microphone_off />
      <TablerIcons.microphone_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def microphone_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M9 5a3 3 0 0 1 6 0v5a3 3 0 0 1 -.13 .874m-2 2a3 3 0 0 1 -3.87 -2.872v-1" />
      <path d="M5 10a7 7 0 0 0 10.846 5.85m2 -2a6.967 6.967 0 0 0 1.152 -3.85" />
      <path d="M8 21l8 0" />
      <path d="M12 17l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `microphone` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.microphone />
      <TablerIcons.microphone class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def microphone(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 2m0 3a3 3 0 0 1 3 -3h0a3 3 0 0 1 3 3v5a3 3 0 0 1 -3 3h0a3 3 0 0 1 -3 -3z" />
      <path d="M5 10a7 7 0 0 0 14 0" />
      <path d="M8 21l8 0" />
      <path d="M12 17l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `microscope_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.microscope_off />
      <TablerIcons.microscope_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def microscope_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 21h14" />
      <path d="M6 18h2" />
      <path d="M7 18v3" />
      <path d="M10 10l-1 1l3 3l1 -1m2 -2l3 -3l-3 -3l-3 3" />
      <path d="M10.5 12.5l-1.5 1.5" />
      <path d="M17 3l3 3" />
      <path d="M12 21a6 6 0 0 0 5.457 -3.505m.441 -3.599a6 6 0 0 0 -2.183 -3.608" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `microscope` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.microscope />
      <TablerIcons.microscope class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def microscope(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 21h14" />
      <path d="M6 18h2" />
      <path d="M7 18v3" />
      <path d="M9 11l3 3l6 -6l-3 -3z" />
      <path d="M10.5 12.5l-1.5 1.5" />
      <path d="M17 3l3 3" />
      <path d="M12 21a6 6 0 0 0 3.715 -10.712" />
    </svg>
    """
  end

  @doc """
  Renders the `microwave_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.microwave_off />
      <TablerIcons.microwave_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def microwave_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 18h-14a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h2m4 0h10a1 1 0 0 1 1 1v10" />
      <path d="M15 6v5m0 4v3" />
      <path d="M18 12h.01" />
      <path d="M18 9h.01" />
      <path d="M6.5 10.5c1 -.667 1.5 -.667 2.5 0c.636 .265 1.272 .665 1.907 .428" />
      <path d="M6.5 13.5c1 -.667 1.5 -.667 2.5 0c.833 .347 1.667 .926 2.5 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `microwave` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.microwave />
      <TablerIcons.microwave class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def microwave(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 6m0 1a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1z" />
      <path d="M15 6v12" />
      <path d="M18 12h.01" />
      <path d="M18 15h.01" />
      <path d="M18 9h.01" />
      <path d="M6.5 10.5c1 -.667 1.5 -.667 2.5 0c.833 .347 1.667 .926 2.5 0" />
      <path d="M6.5 13.5c1 -.667 1.5 -.667 2.5 0c.833 .347 1.667 .926 2.5 0" />
    </svg>
    """
  end

  @doc """
  Renders the `military_award` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.military_award />
      <TablerIcons.military_award class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def military_award(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 13m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M8.5 10.5l-1 -2.5h-5.5l2.48 5.788a2 2 0 0 0 1.84 1.212h2.18" />
      <path d="M15.5 10.5l1 -2.5h5.5l-2.48 5.788a2 2 0 0 1 -1.84 1.212h-2.18" />
    </svg>
    """
  end

  @doc """
  Renders the `military_rank` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.military_rank />
      <TablerIcons.military_rank class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def military_rank(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 7v13h-10v-13l5 -3z" />
      <path d="M10 13l2 -1l2 1" />
      <path d="M10 17l2 -1l2 1" />
      <path d="M10 9l2 -1l2 1" />
    </svg>
    """
  end

  @doc """
  Renders the `milk_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.milk_off />
      <TablerIcons.milk_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def milk_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 6h6v-2a1 1 0 0 0 -1 -1h-6a1 1 0 0 0 -1 1" />
      <path d="M16 6l1.094 1.759a6 6 0 0 1 .906 3.17v3.071m0 4v1a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-8.071a6 6 0 0 1 .906 -3.17l.327 -.525" />
      <path d="M12 16m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `milk` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.milk />
      <TablerIcons.milk class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def milk(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 6h8v-2a1 1 0 0 0 -1 -1h-6a1 1 0 0 0 -1 1v2z" />
      <path d="M16 6l1.094 1.759a6 6 0 0 1 .906 3.17v8.071a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-8.071a6 6 0 0 1 .906 -3.17l1.094 -1.759" />
      <path d="M12 16m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M10 10h4" />
    </svg>
    """
  end

  @doc """
  Renders the `milkshake` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.milkshake />
      <TablerIcons.milkshake class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def milkshake(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 10a5 5 0 0 0 -10 0" />
      <path d="M6 10m0 1a1 1 0 0 1 1 -1h10a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1z" />
      <path d="M7 13l1.81 7.243a1 1 0 0 0 .97 .757h4.44a1 1 0 0 0 .97 -.757l1.81 -7.243" />
      <path d="M12 5v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `minimize` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.minimize />
      <TablerIcons.minimize class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def minimize(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 19v-2a2 2 0 0 1 2 -2h2" />
      <path d="M15 5v2a2 2 0 0 0 2 2h2" />
      <path d="M5 15h2a2 2 0 0 1 2 2v2" />
      <path d="M5 9h2a2 2 0 0 0 2 -2v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `minus_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.minus_vertical />
      <TablerIcons.minus_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def minus_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5v14" />
    </svg>
    """
  end

  @doc """
  Renders the `minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.minus />
      <TablerIcons.minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12l14 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mist_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mist_off />
      <TablerIcons.mist_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mist_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5h9" />
      <path d="M3 10h7" />
      <path d="M18 10h1" />
      <path d="M5 15h5" />
      <path d="M14 15h1m4 0h2" />
      <path d="M3 20h9m4 0h3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `mist` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mist />
      <TablerIcons.mist class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mist(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5h3m4 0h9" />
      <path d="M3 10h11m4 0h1" />
      <path d="M5 15h5m4 0h7" />
      <path d="M3 20h9m4 0h3" />
    </svg>
    """
  end

  @doc """
  Renders the `mobiledata_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mobiledata_off />
      <TablerIcons.mobiledata_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mobiledata_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 12v-8" />
      <path d="M8 20v-8" />
      <path d="M13 7l3 -3l3 3" />
      <path d="M5 17l3 3l3 -3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `mobiledata` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mobiledata />
      <TablerIcons.mobiledata class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mobiledata(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 12v-8" />
      <path d="M8 20v-8" />
      <path d="M13 7l3 -3l3 3" />
      <path d="M5 17l3 3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `moneybag` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.moneybag />
      <TablerIcons.moneybag class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def moneybag(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.5 3h5a1.5 1.5 0 0 1 1.5 1.5a3.5 3.5 0 0 1 -3.5 3.5h-1a3.5 3.5 0 0 1 -3.5 -3.5a1.5 1.5 0 0 1 1.5 -1.5z" />
      <path d="M4 17v-1a8 8 0 1 1 16 0v1a4 4 0 0 1 -4 4h-8a4 4 0 0 1 -4 -4z" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_angry` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_angry />
      <TablerIcons.mood_angry class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_angry(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 1 1 0 -18a9 9 0 0 1 0 18z" />
      <path d="M8 9l2 1" />
      <path d="M16 9l-2 1" />
      <path d="M14.5 16.05a3.5 3.5 0 0 0 -5 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_annoyed_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_annoyed_2 />
      <TablerIcons.mood_annoyed_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_annoyed_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 1 1 0 -18a9 9 0 0 1 0 18z" />
      <path d="M15 14c-2 0 -3 1 -3.5 2.05" />
      <path d="M10 9.25c-.5 1 -2.5 1 -3 0" />
      <path d="M17 9.25c-.5 1 -2.5 1 -3 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_annoyed` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_annoyed />
      <TablerIcons.mood_annoyed class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_annoyed(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 1 1 0 -18a9 9 0 0 1 0 18z" />
      <path d="M15 14c-2 0 -3 1 -3.5 2.05" />
      <path d="M9 10h-.01" />
      <path d="M15 10h-.01" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_boy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_boy />
      <TablerIcons.mood_boy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_boy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 4.5a9 9 0 0 1 3.864 5.89a2.5 2.5 0 0 1 -.29 4.36a9 9 0 0 1 -17.137 0a2.5 2.5 0 0 1 -.29 -4.36a9 9 0 0 1 3.746 -5.81" />
      <path d="M9.5 16a3.5 3.5 0 0 0 5 0" />
      <path d="M8.5 2c1.5 1 2.5 3.5 2.5 5" />
      <path d="M12.5 2c1.5 2 2 3.5 2 5" />
      <path d="M9 12l.01 0" />
      <path d="M15 12l.01 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_check />
      <TablerIcons.mood_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.925 13.163a8.998 8.998 0 0 0 -8.925 -10.163a9 9 0 0 0 0 18" />
      <path d="M9 10h.01" />
      <path d="M15 10h.01" />
      <path d="M9.5 15c.658 .64 1.56 1 2.5 1s1.842 -.36 2.5 -1" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_cog />
      <TablerIcons.mood_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 0 -8.983 9" />
      <path d="M18.001 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18.001 14.5v1.5" />
      <path d="M18.001 20v1.5" />
      <path d="M21.032 16.25l-1.299 .75" />
      <path d="M16.27 19l-1.3 .75" />
      <path d="M14.97 16.25l1.3 .75" />
      <path d="M19.733 19l1.3 .75" />
      <path d="M9 10h.01" />
      <path d="M15 10h.01" />
      <path d="M9.5 15c.658 .64 1.56 1 2.5 1" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_confuzed_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_confuzed_filled />
      <TablerIcons.mood_confuzed_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_confuzed_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-1.43 10.162a11 11 0 0 0 -6.6 1.65a1 1 0 0 0 1.06 1.696a9 9 0 0 1 5.4 -1.35a1 1 0 0 0 .14 -1.996zm-6.56 -4.502l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm6 0l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `mood_confuzed` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_confuzed />
      <TablerIcons.mood_confuzed class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_confuzed(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 10l.01 0" />
      <path d="M15 10l.01 0" />
      <path d="M9.5 16a10 10 0 0 1 6 -1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_crazy_happy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_crazy_happy />
      <TablerIcons.mood_crazy_happy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_crazy_happy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M7 8.5l3 3" />
      <path d="M7 11.5l3 -3" />
      <path d="M14 8.5l3 3" />
      <path d="M14 11.5l3 -3" />
      <path d="M9.5 15a3.5 3.5 0 0 0 5 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_cry` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_cry />
      <TablerIcons.mood_cry class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_cry(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 10l.01 0" />
      <path d="M15 10l.01 0" />
      <path d="M9.5 15.25a3.5 3.5 0 0 1 5 0" />
      <path d="M17.566 17.606a2 2 0 1 0 2.897 .03l-1.463 -1.636l-1.434 1.606z" />
      <path d="M20.865 13.517a8.937 8.937 0 0 0 .135 -1.517a9 9 0 1 0 -9 9c.69 0 1.36 -.076 2 -.222" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_dollar />
      <TablerIcons.mood_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.87 10.48a9 9 0 1 0 -7.876 10.465" />
      <path d="M9 10h.01" />
      <path d="M15 10h.01" />
      <path d="M9.5 15c.658 .64 1.56 1 2.5 1c.357 0 .709 -.052 1.043 -.151" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_edit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_edit />
      <TablerIcons.mood_edit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_edit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.955 11.104a9 9 0 1 0 -9.895 9.847" />
      <path d="M9 10h.01" />
      <path d="M15 10h.01" />
      <path d="M9.5 15c.658 .672 1.56 1 2.5 1c.126 0 .251 -.006 .376 -.018" />
      <path d="M18.42 15.61a2.1 2.1 0 0 1 2.97 2.97l-3.39 3.42h-3v-3l3.42 -3.39z" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_empty_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_empty_filled />
      <TablerIcons.mood_empty_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_empty_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-2 10.66h-6l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h6l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm-5.99 -5l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm6 0l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `mood_empty` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_empty />
      <TablerIcons.mood_empty class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_empty(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 10l.01 0" />
      <path d="M15 10l.01 0" />
      <path d="M9 15l6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_happy_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_happy_filled />
      <TablerIcons.mood_happy_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_happy_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-2 9.66h-6a1 1 0 0 0 -1 1v.05a3.975 3.975 0 0 0 3.777 3.97l.227 .005a4.026 4.026 0 0 0 3.99 -3.79l.006 -.206a1 1 0 0 0 -1 -1.029zm-5.99 -5l-.127 .007a1 1 0 0 0 .117 1.993l.127 -.007a1 1 0 0 0 -.117 -1.993zm6 0l-.127 .007a1 1 0 0 0 .117 1.993l.127 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `mood_happy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_happy />
      <TablerIcons.mood_happy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_happy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 9l.01 0" />
      <path d="M15 9l.01 0" />
      <path d="M8 13a4 4 0 1 0 8 0h-8" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_heart />
      <TablerIcons.mood_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 0 -8.012 8.946" />
      <path d="M9 10h.01" />
      <path d="M15 10h.01" />
      <path d="M9.5 15a3.59 3.59 0 0 0 2.774 .99" />
      <path d="M18.994 21.5l2.518 -2.58a1.74 1.74 0 0 0 .004 -2.413a1.627 1.627 0 0 0 -2.346 -.005l-.168 .172l-.168 -.172a1.627 1.627 0 0 0 -2.346 -.004a1.74 1.74 0 0 0 -.004 2.412l2.51 2.59z" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_kid_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_kid_filled />
      <TablerIcons.mood_kid_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_kid_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 7.046 -9.232a3 3 0 0 0 2.949 3.556a1 1 0 0 0 0 -2l-.117 -.007a1 1 0 0 1 .117 -1.993c1.726 0 3.453 .447 5 1.34zm-1.8 10.946a1 1 0 0 0 -1.414 .014a2.5 2.5 0 0 1 -3.572 0a1 1 0 0 0 -1.428 1.4a4.5 4.5 0 0 0 6.428 0a1 1 0 0 0 -.014 -1.414zm-6.19 -5.286l-.127 .007a1 1 0 0 0 .117 1.993l.127 -.007a1 1 0 0 0 -.117 -1.993zm6 0l-.127 .007a1 1 0 0 0 .117 1.993l.127 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `mood_kid` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_kid />
      <TablerIcons.mood_kid class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_kid(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 10l.01 0" />
      <path d="M15 10l.01 0" />
      <path d="M9.5 15a3.5 3.5 0 0 0 5 0" />
      <path d="M12 3a2 2 0 0 0 0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_look_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_look_left />
      <TablerIcons.mood_look_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_look_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 9h.01" />
      <path d="M4 15h4" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_look_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_look_right />
      <TablerIcons.mood_look_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_look_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 1 1 0 -18a9 9 0 0 1 0 18z" />
      <path d="M15 9h-.01" />
      <path d="M20 15h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_minus />
      <TablerIcons.mood_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.48 15.014a9 9 0 1 0 -7.956 5.97" />
      <path d="M9 10h.01" />
      <path d="M15 10h.01" />
      <path d="M16 19h6" />
      <path d="M9.5 15c.658 .64 1.56 1 2.5 1s1.842 -.36 2.5 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_nerd` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_nerd />
      <TablerIcons.mood_nerd class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_nerd(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M8 10m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M16 10m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M9.5 15a3.5 3.5 0 0 0 5 0" />
      <path d="M3.5 9h2.5" />
      <path d="M18 9h2.5" />
      <path d="M10 9.5c1.333 -1.333 2.667 -1.333 4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_nervous` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_nervous />
      <TablerIcons.mood_nervous class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_nervous(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 10h.01" />
      <path d="M15 10h.01" />
      <path d="M8 16l2 -2l2 2l2 -2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_neutral_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_neutral_filled />
      <TablerIcons.mood_neutral_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_neutral_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-7.99 5.66l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm6 0l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `mood_neutral` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_neutral />
      <TablerIcons.mood_neutral class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_neutral(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 10l.01 0" />
      <path d="M15 10l.01 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_off />
      <TablerIcons.mood_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.634 5.638a9 9 0 0 0 12.732 12.724m1.679 -2.322a9 9 0 0 0 -12.08 -12.086" />
      <path d="M9 10h.01" />
      <path d="M15 10h.01" />
      <path d="M9.5 15a3.5 3.5 0 0 0 5 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_pin />
      <TablerIcons.mood_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 0 -8.352 8.977" />
      <path d="M9 10h.01" />
      <path d="M15 10h.01" />
      <path d="M9.5 15c.658 .672 1.56 1 2.5 1c.102 0 .203 -.004 .304 -.012" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_plus />
      <TablerIcons.mood_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.985 12.528a9 9 0 1 0 -8.45 8.456" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
      <path d="M9 10h.01" />
      <path d="M15 10h.01" />
      <path d="M9.5 15c.658 .64 1.56 1 2.5 1s1.842 -.36 2.5 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_sad_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_sad_2 />
      <TablerIcons.mood_sad_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_sad_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M14.5 16.05a3.5 3.5 0 0 0 -5 0" />
      <path d="M10 9.25c-.5 1 -2.5 1 -3 0" />
      <path d="M17 9.25c-.5 1 -2.5 1 -3 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_sad_dizzy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_sad_dizzy />
      <TablerIcons.mood_sad_dizzy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_sad_dizzy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M14.5 16.05a3.5 3.5 0 0 0 -5 0" />
      <path d="M8 9l2 2" />
      <path d="M10 9l-2 2" />
      <path d="M14 9l2 2" />
      <path d="M16 9l-2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_sad_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_sad_filled />
      <TablerIcons.mood_sad_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_sad_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-5 9.86a4.5 4.5 0 0 0 -3.214 1.35a1 1 0 1 0 1.428 1.4a2.5 2.5 0 0 1 3.572 0a1 1 0 0 0 1.428 -1.4a4.5 4.5 0 0 0 -3.214 -1.35zm-2.99 -4.2l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm6 0l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `mood_sad_squint` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_sad_squint />
      <TablerIcons.mood_sad_squint class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_sad_squint(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M14.5 16.05a3.5 3.5 0 0 0 -5 0" />
      <path d="M8.5 11.5l1.5 -1.5l-1.5 -1.5" />
      <path d="M15.5 11.5l-1.5 -1.5l1.5 -1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_sad` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_sad />
      <TablerIcons.mood_sad class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_sad(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 10l.01 0" />
      <path d="M15 10l.01 0" />
      <path d="M9.5 15.25a3.5 3.5 0 0 1 5 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_search />
      <TablerIcons.mood_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 0 -9 9" />
      <path d="M9 10h.01" />
      <path d="M15 10h.01" />
      <path d="M9.5 15c.658 .672 1.56 1 2.5 1" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_share />
      <TablerIcons.mood_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.942 13.018a9 9 0 1 0 -8.942 7.982" />
      <path d="M9 10h.01" />
      <path d="M15 10h.01" />
      <path d="M9.5 15c.658 .672 1.56 1 2.5 1c.213 0 .424 -.017 .63 -.05" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_sick` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_sick />
      <TablerIcons.mood_sick class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_sick(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 1 1 0 -18a9 9 0 0 1 0 18z" />
      <path d="M9 10h-.01" />
      <path d="M15 10h-.01" />
      <path d="M8 16l1 -1l1.5 1l1.5 -1l1.5 1l1.5 -1l1 1" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_silence` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_silence />
      <TablerIcons.mood_silence class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_silence(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 1 1 0 -18a9 9 0 0 1 0 18z" />
      <path d="M9 10h-.01" />
      <path d="M15 10h-.01" />
      <path d="M8 15h8" />
      <path d="M9 14v2" />
      <path d="M12 14v2" />
      <path d="M15 14v2" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_sing` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_sing />
      <TablerIcons.mood_sing class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_sing(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 9h.01" />
      <path d="M15 9h.01" />
      <path d="M15 15m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_smile_beam` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_smile_beam />
      <TablerIcons.mood_smile_beam class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_smile_beam(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 1 1 0 -18a9 9 0 0 1 0 18z" />
      <path d="M10 10c-.5 -1 -2.5 -1 -3 0" />
      <path d="M17 10c-.5 -1 -2.5 -1 -3 0" />
      <path d="M14.5 15a3.5 3.5 0 0 1 -5 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_smile_dizzy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_smile_dizzy />
      <TablerIcons.mood_smile_dizzy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_smile_dizzy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M14.5 15a3.5 3.5 0 0 1 -5 0" />
      <path d="M8 9l2 2" />
      <path d="M10 9l-2 2" />
      <path d="M14 9l2 2" />
      <path d="M16 9l-2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_smile_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_smile_filled />
      <TablerIcons.mood_smile_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_smile_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-1.8 10.946a1 1 0 0 0 -1.414 .014a2.5 2.5 0 0 1 -3.572 0a1 1 0 0 0 -1.428 1.4a4.5 4.5 0 0 0 6.428 0a1 1 0 0 0 -.014 -1.414zm-6.19 -5.286l-.127 .007a1 1 0 0 0 .117 1.993l.127 -.007a1 1 0 0 0 -.117 -1.993zm6 0l-.127 .007a1 1 0 0 0 .117 1.993l.127 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `mood_smile` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_smile />
      <TablerIcons.mood_smile class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_smile(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 10l.01 0" />
      <path d="M15 10l.01 0" />
      <path d="M9.5 15a3.5 3.5 0 0 0 5 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_suprised` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_suprised />
      <TablerIcons.mood_suprised class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_suprised(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 9l.01 0" />
      <path d="M15 9l.01 0" />
      <path d="M12 15m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_tongue_wink_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_tongue_wink_2 />
      <TablerIcons.mood_tongue_wink_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_tongue_wink_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 21a9 9 0 1 1 0 -18a9 9 0 0 1 0 18z" />
      <path d="M15 10h-.01" />
      <path d="M10 14v2a2 2 0 1 0 4 0v-2m1.5 0h-7" />
      <path d="M7 10c.5 -1 2.5 -1 3 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_tongue_wink` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_tongue_wink />
      <TablerIcons.mood_tongue_wink class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_tongue_wink(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 1 1 0 -18a9 9 0 0 1 0 18z" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 10h.01" />
      <path d="M10 14v2a2 2 0 0 0 4 0v-2" />
      <path d="M15.5 14h-7" />
      <path d="M17 10c-.5 -1 -2.5 -1 -3 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_tongue` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_tongue />
      <TablerIcons.mood_tongue class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_tongue(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 10l.01 0" />
      <path d="M15 10l.01 0" />
      <path d="M10 14v2a2 2 0 0 0 4 0v-2m1.5 0h-7" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_unamused` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_unamused />
      <TablerIcons.mood_unamused class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_unamused(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M11 16l4 -1.5" />
      <path d="M10 10c-.5 -1 -2.5 -1 -3 0" />
      <path d="M17 10c-.5 -1 -2.5 -1 -3 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_up />
      <TablerIcons.mood_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.984 12.536a9 9 0 1 0 -8.463 8.449" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
      <path d="M9 10h.01" />
      <path d="M15 10h.01" />
      <path d="M9.5 15c.658 .64 1.56 1 2.5 1s1.842 -.36 2.5 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_wink_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_wink_2 />
      <TablerIcons.mood_wink_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_wink_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 1 1 0 -18a9 9 0 0 1 0 18z" />
      <path d="M9 10h-.01" />
      <path d="M14.5 15a3.5 3.5 0 0 1 -5 0" />
      <path d="M15.5 8.5l-1.5 1.5l1.5 1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_wink` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_wink />
      <TablerIcons.mood_wink class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_wink(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M15 10h.01" />
      <path d="M9.5 15a3.5 3.5 0 0 0 5 0" />
      <path d="M8.5 8.5l1.5 1.5l-1.5 1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_wrrr` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_wrrr />
      <TablerIcons.mood_wrrr class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_wrrr(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 1 1 0 -18a9 9 0 0 1 0 18z" />
      <path d="M8 16l1 -1l1.5 1l1.5 -1l1.5 1l1.5 -1l1 1" />
      <path d="M8.5 11.5l1.5 -1.5l-1.5 -1.5" />
      <path d="M15.5 11.5l-1.5 -1.5l1.5 -1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_x />
      <TablerIcons.mood_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.983 12.556a9 9 0 1 0 -8.433 8.427" />
      <path d="M9 10h.01" />
      <path d="M15 10h.01" />
      <path d="M9.5 15c.658 .64 1.56 1 2.5 1c.194 0 .386 -.015 .574 -.045" />
      <path d="M21.5 21.5l-5 -5" />
      <path d="M16.5 21.5l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `mood_xd` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mood_xd />
      <TablerIcons.mood_xd class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mood_xd(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 21a9 9 0 1 1 0 -18a9 9 0 0 1 0 18z" />
      <path d="M9 14h6a3 3 0 1 1 -6 0z" />
      <path d="M9 8l6 3" />
      <path d="M9 11l6 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `moon_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.moon_2 />
      <TablerIcons.moon_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def moon_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.418 4.157a8 8 0 0 0 0 15.686" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `moon_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.moon_filled />
      <TablerIcons.moon_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def moon_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 1.992a10 10 0 1 0 9.236 13.838c.341 -.82 -.476 -1.644 -1.298 -1.31a6.5 6.5 0 0 1 -6.864 -10.787l.077 -.08c.551 -.63 .113 -1.653 -.758 -1.653h-.266l-.068 -.006l-.06 -.002z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `moon_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.moon_off />
      <TablerIcons.moon_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def moon_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.962 3.949a8.97 8.97 0 0 1 4.038 -.957v.008h.393a7.478 7.478 0 0 0 -2.07 3.308m-.141 3.84c.186 .823 .514 1.626 .989 2.373a7.49 7.49 0 0 0 4.586 3.268m3.893 -.11c.223 -.067 .444 -.144 .663 -.233a9.088 9.088 0 0 1 -.274 .597m-1.695 2.337a9 9 0 0 1 -12.71 -12.749" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `moon_stars` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.moon_stars />
      <TablerIcons.moon_stars class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def moon_stars(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z" />
      <path d="M17 4a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2" />
      <path d="M19 11h2m-1 -1v2" />
    </svg>
    """
  end

  @doc """
  Renders the `moon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.moon />
      <TablerIcons.moon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def moon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z" />
    </svg>
    """
  end

  @doc """
  Renders the `moped` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.moped />
      <TablerIcons.moped class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def moped(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 16v1a2 2 0 0 0 4 0v-5h-3a3 3 0 0 0 -3 3v1h10a6 6 0 0 1 5 -4v-5a2 2 0 0 0 -2 -2h-1" />
      <path d="M6 9l3 0" />
    </svg>
    """
  end

  @doc """
  Renders the `motorbike` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.motorbike />
      <TablerIcons.motorbike class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def motorbike(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 16m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M19 16m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M7.5 14h5l4 -4h-10.5m1.5 4l4 -4" />
      <path d="M13 6h2l1.5 3l2 4" />
    </svg>
    """
  end

  @doc """
  Renders the `mountain_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mountain_off />
      <TablerIcons.mountain_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mountain_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.281 14.26l-4.201 -8.872a2.3 2.3 0 0 0 -4.158 0l-.165 .349m-1.289 2.719l-5.468 11.544h17" />
      <path d="M7.5 11l2 2.5l2 -2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `mountain` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mountain />
      <TablerIcons.mountain class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mountain(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 20h18l-6.921 -14.612a2.3 2.3 0 0 0 -4.158 0l-6.921 14.612z" />
      <path d="M7.5 11l2 2.5l2.5 -2.5l2 3l2.5 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `mouse_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mouse_2 />
      <TablerIcons.mouse_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mouse_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 3m0 4a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v10a4 4 0 0 1 -4 4h-4a4 4 0 0 1 -4 -4z" />
      <path d="M12 3v7" />
      <path d="M6 10h12" />
    </svg>
    """
  end

  @doc """
  Renders the `mouse_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mouse_filled />
      <TablerIcons.mouse_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mouse_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14 2a5 5 0 0 1 5 5v10a5 5 0 0 1 -5 5h-4a5 5 0 0 1 -5 -5v-10a5 5 0 0 1 5 -5zm-2 4a1 1 0 0 0 -1 1v4l.007 .117a1 1 0 0 0 1.993 -.117v-4l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `mouse_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mouse_off />
      <TablerIcons.mouse_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mouse_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.733 3.704a3.982 3.982 0 0 1 2.267 -.704h4a4 4 0 0 1 4 4v7m-.1 3.895a4 4 0 0 1 -3.9 3.105h-4a4 4 0 0 1 -4 -4v-10c0 -.3 .033 -.593 .096 -.874" />
      <path d="M12 7v1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `mouse` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mouse />
      <TablerIcons.mouse class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mouse(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 3m0 4a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v10a4 4 0 0 1 -4 4h-4a4 4 0 0 1 -4 -4z" />
      <path d="M12 7l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `moustache` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.moustache />
      <TablerIcons.moustache class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def moustache(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 9a3 3 0 0 1 2.599 1.5h0c.933 1.333 2.133 1.556 3.126 1.556l.291 0l.77 -.044l.213 0c-.963 1.926 -3.163 2.925 -6.6 3l-.4 0l-.165 0a3 3 0 0 1 .165 -6z" />
      <path d="M9 9a3 3 0 0 0 -2.599 1.5h0c-.933 1.333 -2.133 1.556 -3.126 1.556l-.291 0l-.77 -.044l-.213 0c.963 1.926 3.163 2.925 6.6 3l.4 0l.165 0a3 3 0 0 0 -.165 -6z" />
    </svg>
    """
  end

  @doc """
  Renders the `movie_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.movie_off />
      <TablerIcons.movie_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def movie_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h10a2 2 0 0 1 2 2v10m-.592 3.42c-.362 .359 -.859 .58 -1.408 .58h-12a2 2 0 0 1 -2 -2v-12c0 -.539 .213 -1.028 .56 -1.388" />
      <path d="M8 8v12" />
      <path d="M16 4v8m0 4v4" />
      <path d="M4 8h4" />
      <path d="M4 16h4" />
      <path d="M4 12h8m4 0h4" />
      <path d="M16 8h4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `movie` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.movie />
      <TablerIcons.movie class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def movie(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M8 4l0 16" />
      <path d="M16 4l0 16" />
      <path d="M4 8l4 0" />
      <path d="M4 16l4 0" />
      <path d="M4 12l16 0" />
      <path d="M16 8l4 0" />
      <path d="M16 16l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mug_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mug_off />
      <TablerIcons.mug_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mug_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h5.917a1.08 1.08 0 0 1 1.083 1.077v5.923m-.167 3.88a4.33 4.33 0 0 1 -4.166 3.12h-4.334c-2.393 0 -4.333 -1.929 -4.333 -4.308v-8.615a1.08 1.08 0 0 1 1.083 -1.077h.917" />
      <path d="M16 8h2.5c1.38 0 2.5 1.045 2.5 2.333v2.334c0 1.148 -.89 2.103 -2.06 2.297" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `mug` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mug />
      <TablerIcons.mug class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mug(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.083 5h10.834a1.08 1.08 0 0 1 1.083 1.077v8.615c0 2.38 -1.94 4.308 -4.333 4.308h-4.334c-2.393 0 -4.333 -1.929 -4.333 -4.308v-8.615a1.08 1.08 0 0 1 1.083 -1.077" />
      <path d="M16 8h2.5c1.38 0 2.5 1.045 2.5 2.333v2.334c0 1.288 -1.12 2.333 -2.5 2.333h-2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `multiplier_0_5x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.multiplier_0_5x />
      <TablerIcons.multiplier_0_5x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def multiplier_0_5x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 16h2a2 2 0 1 0 0 -4h-2v-4h4" />
      <path d="M5 16v.01" />
      <path d="M15 16l4 -4" />
      <path d="M19 16l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `multiplier_1_5x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.multiplier_1_5x />
      <TablerIcons.multiplier_1_5x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def multiplier_1_5x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 16v-8l-2 2" />
      <path d="M10 16h2a2 2 0 1 0 0 -4h-2v-4h4" />
      <path d="M7 16v.01" />
      <path d="M17 16l4 -4" />
      <path d="M21 16l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `multiplier_1x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.multiplier_1x />
      <TablerIcons.multiplier_1x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def multiplier_1x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 16v-8l-2 2" />
      <path d="M13 16l4 -4" />
      <path d="M17 16l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `multiplier_2x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.multiplier_2x />
      <TablerIcons.multiplier_2x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def multiplier_2x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 16l4 -4" />
      <path d="M18 16l-4 -4" />
      <path d="M6 10a2 2 0 1 1 4 0c0 .591 -.417 1.318 -.816 1.858l-3.184 4.143l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `mushroom_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mushroom_filled />
      <TablerIcons.mushroom_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mushroom_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M15 15v4a3 3 0 0 1 -5.995 .176l-.005 -.176v-4h6zm-10.1 -2a1.9 1.9 0 0 1 -1.894 -1.752l-.006 -.148c0 -5.023 4.027 -9.1 9 -9.1s9 4.077 9 9.1a1.9 1.9 0 0 1 -1.752 1.894l-.148 .006h-14.2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `mushroom_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mushroom_off />
      <TablerIcons.mushroom_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mushroom_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.874 5.89a8.128 8.128 0 0 0 -1.874 5.21a.9 .9 0 0 0 .9 .9h7.1m4 0h3.1a.9 .9 0 0 0 .9 -.9c0 -4.474 -3.582 -8.1 -8 -8.1c-1.43 0 -2.774 .38 -3.936 1.047" />
      <path d="M10 12v7a2 2 0 1 0 4 0v-5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `mushroom` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.mushroom />
      <TablerIcons.mushroom class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def mushroom(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 11.1c0 -4.474 -3.582 -8.1 -8 -8.1s-8 3.626 -8 8.1a.9 .9 0 0 0 .9 .9h14.2a.9 .9 0 0 0 .9 -.9z" />
      <path d="M10 12v7a2 2 0 1 0 4 0v-7" />
    </svg>
    """
  end

  @doc """
  Renders the `music_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_bolt />
      <TablerIcons.music_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v8" />
      <path d="M9 8h10" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `music_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_cancel />
      <TablerIcons.music_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v8" />
      <path d="M9 8h10" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `music_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_check />
      <TablerIcons.music_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v9.5" />
      <path d="M9 8h10" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `music_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_code />
      <TablerIcons.music_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v9" />
      <path d="M9 8h10" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `music_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_cog />
      <TablerIcons.music_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v7.5" />
      <path d="M9 8h10" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `music_discount` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_discount />
      <TablerIcons.music_discount class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_discount(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v9" />
      <path d="M9 8h10" />
      <path d="M16 21l5 -5" />
      <path d="M21 21v.01" />
      <path d="M16 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `music_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_dollar />
      <TablerIcons.music_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v6" />
      <path d="M9 8h10" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `music_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_down />
      <TablerIcons.music_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v8" />
      <path d="M9 8h10" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `music_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_exclamation />
      <TablerIcons.music_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v8" />
      <path d="M9 8h10" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `music_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_heart />
      <TablerIcons.music_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v7" />
      <path d="M9 8h10" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `music_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_minus />
      <TablerIcons.music_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v11" />
      <path d="M9 8h10" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `music_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_off />
      <TablerIcons.music_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M14.42 14.45a3 3 0 1 0 4.138 4.119" />
      <path d="M9 17v-8m0 -4v-1h10v11" />
      <path d="M12 8h7" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `music_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_pause />
      <TablerIcons.music_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v9" />
      <path d="M9 8h10" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `music_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_pin />
      <TablerIcons.music_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v7" />
      <path d="M9 8h10" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `music_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_plus />
      <TablerIcons.music_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v8" />
      <path d="M9 8h10" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `music_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_question />
      <TablerIcons.music_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v7" />
      <path d="M9 8h10" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `music_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_search />
      <TablerIcons.music_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v7" />
      <path d="M9 8h10" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `music_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_share />
      <TablerIcons.music_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v9" />
      <path d="M9 8h10" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `music_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_star />
      <TablerIcons.music_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v6" />
      <path d="M9 8h10" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `music_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_up />
      <TablerIcons.music_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v8" />
      <path d="M9 8h10" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `music_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music_x />
      <TablerIcons.music_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v9" />
      <path d="M9 8h10" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `music` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.music />
      <TablerIcons.music class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def music(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M13 17a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M9 17v-13h10v13" />
      <path d="M9 8h10" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_bolt />
      <TablerIcons.navigation_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.559 12.882l-4.559 -9.882l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463l1.036 .351" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_cancel />
      <TablerIcons.navigation_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.371 12.476l-4.371 -9.476l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_check />
      <TablerIcons.navigation_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.487 14.894l-5.487 -11.894l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l6.275 -2.127" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_code />
      <TablerIcons.navigation_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.653 13.086l-4.653 -10.086l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l6.246 -2.117" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_cog />
      <TablerIcons.navigation_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.387 12.51l-4.387 -9.51l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_discount` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_discount />
      <TablerIcons.navigation_discount class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_discount(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.43 12.603l-4.43 -9.603l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463l1.272 .431" />
      <path d="M16 21l5 -5" />
      <path d="M21 21v.01" />
      <path d="M16 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_dollar />
      <TablerIcons.navigation_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.945 11.551l-3.945 -8.551l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463l1.594 .54" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_down />
      <TablerIcons.navigation_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.528 12.815l-4.528 -9.815l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_exclamation />
      <TablerIcons.navigation_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.535 12.832l-4.535 -9.832l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463c1.38 .468 2.416 .82 3.107 1.053" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_filled />
      <TablerIcons.navigation_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11.092 2.581a1 1 0 0 1 1.754 -.116l.062 .116l8.005 17.365c.198 .566 .05 1.196 -.378 1.615a1.53 1.53 0 0 1 -1.459 .393l-7.077 -2.398l-6.899 2.338a1.535 1.535 0 0 1 -1.52 -.231l-.112 -.1c-.398 -.386 -.556 -.954 -.393 -1.556l.047 -.15l7.97 -17.276z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_heart />
      <TablerIcons.navigation_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.721 11.067l-3.721 -8.067l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l5.614 -1.903" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_minus />
      <TablerIcons.navigation_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.5 15c-1.232 -2.67 -3.065 -6.67 -5.5 -12l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_north` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_north />
      <TablerIcons.navigation_north class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_north(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.54 19.977a.34 .34 0 0 0 .357 -.07a.33 .33 0 0 0 .084 -.35l-4.981 -10.557l-4.982 10.557a.33 .33 0 0 0 .084 .35a.34 .34 0 0 0 .357 .07l4.541 -1.477l4.54 1.477z" />
      <path d="M12 3v2" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_off />
      <TablerIcons.navigation_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.28 12.28c-.95 -2.064 -2.377 -5.157 -4.28 -9.28c-.7 1.515 -1.223 2.652 -1.573 3.41m-1.27 2.75c-.882 1.913 -2.59 5.618 -5.127 11.115c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463l7.265 2.463c.196 .077 .42 .032 .57 -.116a.548 .548 0 0 0 .134 -.572l-.26 -.563" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_pause />
      <TablerIcons.navigation_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.666 13.114l-4.666 -10.114l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463l1.056 .358" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_pin />
      <TablerIcons.navigation_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.002 11.676l-4.002 -8.676l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_plus />
      <TablerIcons.navigation_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.573 12.914l-4.573 -9.914l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_question />
      <TablerIcons.navigation_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.081 11.847l-4.081 -8.847l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463c1.35 .458 2.362 .8 3.037 1.03" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_search />
      <TablerIcons.navigation_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.876 11.403l-3.876 -8.403l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l6.29 -2.132" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_share />
      <TablerIcons.navigation_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.633 13.043l-4.633 -10.043l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463l.955 .324" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_star />
      <TablerIcons.navigation_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.574 10.747l-3.574 -7.747l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l5.454 -1.85" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_up />
      <TablerIcons.navigation_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.54 12.843l-4.54 -9.843l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation_x />
      <TablerIcons.navigation_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.622 13.02l-4.622 -10.02l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463l1.563 .53" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `navigation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.navigation />
      <TablerIcons.navigation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def navigation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18.5l7.265 2.463c.196 .077 .42 .032 .57 -.116a.548 .548 0 0 0 .134 -.572l-7.969 -17.275l-7.97 17.275c-.07 .2 -.017 .424 .135 .572c.15 .148 .374 .193 .57 .116l7.265 -2.463" />
    </svg>
    """
  end

  @doc """
  Renders the `needle_thread` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.needle_thread />
      <TablerIcons.needle_thread class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def needle_thread(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21c-.667 -.667 3.262 -6.236 11.785 -16.709a3.5 3.5 0 1 1 5.078 4.791c-10.575 8.612 -16.196 12.585 -16.863 11.918z" />
      <path d="M17.5 6.5l-1 1" />
      <path d="M17 7c-2.333 -2.667 -3.5 -4 -5 -4s-2 1 -2 2c0 4 8.161 8.406 6 11c-1.056 1.268 -3.363 1.285 -5.75 .808" />
      <path d="M5.739 15.425c-1.393 -.565 -3.739 -1.925 -3.739 -3.425" />
      <path d="M19.5 9.5l1.5 1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `needle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.needle />
      <TablerIcons.needle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def needle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21c-.667 -.667 3.262 -6.236 11.785 -16.709a3.5 3.5 0 1 1 5.078 4.791c-10.575 8.612 -16.196 12.585 -16.863 11.918z" />
      <path d="M17.5 6.5l-1 1" />
    </svg>
    """
  end

  @doc """
  Renders the `network_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.network_off />
      <TablerIcons.network_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def network_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.537 6.516a6 6 0 0 0 7.932 7.954m2.246 -1.76a6 6 0 0 0 -8.415 -8.433" />
      <path d="M12 3c1.333 .333 2 2.333 2 6c0 .348 0 .681 -.018 1m-.545 3.43c-.332 .89 -.811 1.414 -1.437 1.57" />
      <path d="M12 3c-.938 .234 -1.547 1.295 -1.825 3.182m-.156 3.837c.117 3.02 .777 4.68 1.981 4.981" />
      <path d="M6 9h3m4 0h5" />
      <path d="M3 19h7" />
      <path d="M14 19h5" />
      <path d="M12 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 15v2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `network` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.network />
      <TablerIcons.network class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def network(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9m-6 0a6 6 0 1 0 12 0a6 6 0 1 0 -12 0" />
      <path d="M12 3c1.333 .333 2 2.333 2 6s-.667 5.667 -2 6" />
      <path d="M12 3c-1.333 .333 -2 2.333 -2 6s.667 5.667 2 6" />
      <path d="M6 9h12" />
      <path d="M3 19h7" />
      <path d="M14 19h7" />
      <path d="M12 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 15v2" />
    </svg>
    """
  end

  @doc """
  Renders the `new_section` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.new_section />
      <TablerIcons.new_section class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def new_section(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 12l6 0" />
      <path d="M12 9l0 6" />
      <path d="M4 6v-1a1 1 0 0 1 1 -1h1m5 0h2m5 0h1a1 1 0 0 1 1 1v1m0 5v2m0 5v1a1 1 0 0 1 -1 1h-1m-5 0h-2m-5 0h-1a1 1 0 0 1 -1 -1v-1m0 -5v-2m0 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `news_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.news_off />
      <TablerIcons.news_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def news_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 6h3a1 1 0 0 1 1 1v9m-.606 3.435a2 2 0 0 1 -3.394 -1.435v-2m0 -4v-7a1 1 0 0 0 -1 -1h-7m-3.735 .321a1 1 0 0 0 -.265 .679v12a3 3 0 0 0 3 3h11" />
      <path d="M8 12h4" />
      <path d="M8 16h4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `news` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.news />
      <TablerIcons.news class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def news(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 6h3a1 1 0 0 1 1 1v11a2 2 0 0 1 -4 0v-13a1 1 0 0 0 -1 -1h-10a1 1 0 0 0 -1 1v12a3 3 0 0 0 3 3h11" />
      <path d="M8 8l4 0" />
      <path d="M8 12l4 0" />
      <path d="M8 16l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `nfc_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.nfc_off />
      <TablerIcons.nfc_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def nfc_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 20a3 3 0 0 1 -3 -3v-9" />
      <path d="M13 4a3 3 0 0 1 3 3v5m0 4v2l-5 -5" />
      <path d="M8 4h9a3 3 0 0 1 3 3v9m-.873 3.116a2.99 2.99 0 0 1 -2.127 .884h-10a3 3 0 0 1 -3 -3v-10c0 -.83 .337 -1.582 .882 -2.125" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `nfc` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.nfc />
      <TablerIcons.nfc class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def nfc(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 20a3 3 0 0 1 -3 -3v-11l5 5" />
      <path d="M13 4a3 3 0 0 1 3 3v11l-5 -5" />
      <path d="M4 4m0 3a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v10a3 3 0 0 1 -3 3h-10a3 3 0 0 1 -3 -3z" />
    </svg>
    """
  end

  @doc """
  Renders the `no_copyright` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.no_copyright />
      <TablerIcons.no_copyright class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def no_copyright(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M14 9.75a3.016 3.016 0 0 0 -4.163 .173a2.993 2.993 0 0 0 0 4.154a3.016 3.016 0 0 0 4.163 .173" />
      <path d="M6 6l1.5 1.5" />
      <path d="M16.5 16.5l1.5 1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `no_creative_commons` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.no_creative_commons />
      <TablerIcons.no_creative_commons class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def no_creative_commons(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10.5 10.5c-.847 -.71 -2.132 -.658 -2.914 .116a1.928 1.928 0 0 0 0 2.768c.782 .774 2.067 .825 2.914 .116" />
      <path d="M16.5 10.5c-.847 -.71 -2.132 -.658 -2.914 .116a1.928 1.928 0 0 0 0 2.768c.782 .774 2.067 .825 2.914 .116" />
      <path d="M6 6l1.5 1.5" />
      <path d="M16.5 16.5l1.5 1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `no_derivatives` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.no_derivatives />
      <TablerIcons.no_derivatives class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def no_derivatives(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 10h6" />
      <path d="M9 14h6" />
    </svg>
    """
  end

  @doc """
  Renders the `north_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.north_star />
      <TablerIcons.north_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def north_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h18" />
      <path d="M12 21v-18" />
      <path d="M7.5 7.5l9 9" />
      <path d="M7.5 16.5l9 -9" />
    </svg>
    """
  end

  @doc """
  Renders the `note_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.note_off />
      <TablerIcons.note_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def note_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 20l3.505 -3.505m2 -2l1.501 -1.501" />
      <path d="M17 13h3v-7a2 2 0 0 0 -2 -2h-10m-3.427 .6c-.355 .36 -.573 .853 -.573 1.4v12a2 2 0 0 0 2 2h7v-6c0 -.272 .109 -.519 .285 -.699" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `note` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.note />
      <TablerIcons.note class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def note(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 20l7 -7" />
      <path d="M13 20v-6a1 1 0 0 1 1 -1h6v-7a2 2 0 0 0 -2 -2h-12a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7" />
    </svg>
    """
  end

  @doc """
  Renders the `notebook_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.notebook_off />
      <TablerIcons.notebook_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def notebook_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h9a2 2 0 0 1 2 2v9m-.179 3.828a2 2 0 0 1 -1.821 1.172h-11a1 1 0 0 1 -1 -1v-14m4 -1v1m0 4v13" />
      <path d="M13 8h2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `notebook` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.notebook />
      <TablerIcons.notebook class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def notebook(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 4h11a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-11a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1m3 0v18" />
      <path d="M13 8l2 0" />
      <path d="M13 12l2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `notes_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.notes_off />
      <TablerIcons.notes_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def notes_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h10a2 2 0 0 1 2 2v10m0 4a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-14" />
      <path d="M11 7h4" />
      <path d="M9 11h2" />
      <path d="M9 15h4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `notes` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.notes />
      <TablerIcons.notes class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def notes(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M9 7l6 0" />
      <path d="M9 11l6 0" />
      <path d="M9 15l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `notification_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.notification_off />
      <TablerIcons.notification_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def notification_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.154 6.187a2 2 0 0 0 -1.154 1.813v9a2 2 0 0 0 2 2h9a2 2 0 0 0 1.811 -1.151" />
      <path d="M17 7m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `notification` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.notification />
      <TablerIcons.notification class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def notification(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 6h-3a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-3" />
      <path d="M17 7m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `number_0` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.number_0 />
      <TablerIcons.number_0 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def number_0(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 16v-8" />
      <path d="M12 20a4 4 0 0 0 4 -4v-8a4 4 0 1 0 -8 0v8a4 4 0 0 0 4 4z" />
    </svg>
    """
  end

  @doc """
  Renders the `number_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.number_1 />
      <TablerIcons.number_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def number_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 20v-16l-5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `number_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.number_2 />
      <TablerIcons.number_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def number_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8a4 4 0 1 1 8 0c0 1.098 -.564 2.025 -1.159 2.815l-6.841 9.185h8" />
    </svg>
    """
  end

  @doc """
  Renders the `number_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.number_3 />
      <TablerIcons.number_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def number_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12a4 4 0 1 0 -4 -4" />
      <path d="M8 16a4 4 0 1 0 4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `number_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.number_4 />
      <TablerIcons.number_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def number_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 20v-15l-8 11h10" />
    </svg>
    """
  end

  @doc """
  Renders the `number_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.number_5 />
      <TablerIcons.number_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def number_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 20h4a4 4 0 1 0 0 -8h-4v-8h8" />
    </svg>
    """
  end

  @doc """
  Renders the `number_6` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.number_6 />
      <TablerIcons.number_6 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def number_6(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 16a4 4 0 1 0 8 0v-1a4 4 0 1 0 -8 0" />
      <path d="M16 8a4 4 0 1 0 -8 0v8" />
    </svg>
    """
  end

  @doc """
  Renders the `number_7` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.number_7 />
      <TablerIcons.number_7 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def number_7(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h8l-4 16" />
    </svg>
    """
  end

  @doc """
  Renders the `number_8` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.number_8 />
      <TablerIcons.number_8 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def number_8(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M12 16m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `number_9` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.number_9 />
      <TablerIcons.number_9 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def number_9(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 8a4 4 0 1 0 -8 0v1a4 4 0 1 0 8 0" />
      <path d="M8 16a4 4 0 1 0 8 0v-8" />
    </svg>
    """
  end

  @doc """
  Renders the `number` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.number />
      <TablerIcons.number class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def number(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 17v-10l7 10v-10" />
      <path d="M15 17h5" />
      <path d="M17.5 10m-2.5 0a2.5 3 0 1 0 5 0a2.5 3 0 1 0 -5 0" />
    </svg>
    """
  end

  @doc """
  Renders the `numbers` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.numbers />
      <TablerIcons.numbers class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def numbers(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 10v-7l-2 2" />
      <path d="M6 16a2 2 0 1 1 4 0c0 .591 -.601 1.46 -1 2l-3 3h4" />
      <path d="M15 14a2 2 0 1 0 2 -2a2 2 0 1 0 -2 -2" />
      <path d="M6.5 10h3" />
    </svg>
    """
  end

  @doc """
  Renders the `nurse` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.nurse />
      <TablerIcons.nurse class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def nurse(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 6c2.941 0 5.685 .847 8 2.31l-2 9.69h-12l-2 -9.691a14.93 14.93 0 0 1 8 -2.309z" />
      <path d="M10 12h4" />
      <path d="M12 10v4" />
    </svg>
    """
  end

  @doc """
  Renders the `octagon_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.octagon_filled />
      <TablerIcons.octagon_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def octagon_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M15.3 2h-6.6c-.562 0 -1.016 .201 -1.407 .593l-4.7 4.7a1.894 1.894 0 0 0 -.593 1.407v6.6c0 .562 .201 1.016 .593 1.407l4.7 4.7c.391 .392 .845 .593 1.407 .593h6.6c.562 0 1.016 -.201 1.407 -.593l4.7 -4.7c.392 -.391 .593 -.845 .593 -1.407v-6.6c0 -.562 -.201 -1.016 -.593 -1.407l-4.7 -4.7a1.894 1.894 0 0 0 -1.407 -.593z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `octagon_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.octagon_off />
      <TablerIcons.octagon_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def octagon_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.647 3.653l.353 -.353c.2 -.2 .4 -.3 .7 -.3h6.6c.3 0 .5 .1 .7 .3l4.7 4.7c.2 .2 .3 .4 .3 .7v6.6c0 .3 -.1 .5 -.3 .7l-.35 .35m-2 2l-2.353 2.353c-.2 .2 -.4 .3 -.7 .3h-6.6c-.3 0 -.5 -.1 -.7 -.3l-4.7 -4.7c-.2 -.2 -.3 -.4 -.3 -.7v-6.6c0 -.3 .1 -.5 .3 -.7l2.35 -2.35" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `octagon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.octagon />
      <TablerIcons.octagon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def octagon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.103 2h5.794a3 3 0 0 1 2.122 .879l4.101 4.101a3 3 0 0 1 .88 2.123v5.794a3 3 0 0 1 -.879 2.122l-4.101 4.101a3 3 0 0 1 -2.122 .879h-5.795a3 3 0 0 1 -2.122 -.879l-4.101 -4.1a3 3 0 0 1 -.88 -2.123v-5.794a3 3 0 0 1 .879 -2.122l4.101 -4.101a3 3 0 0 1 2.123 -.88z" />
    </svg>
    """
  end

  @doc """
  Renders the `octahedron_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.octahedron_off />
      <TablerIcons.octahedron_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def octahedron_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.771 6.77l-4.475 4.527a.984 .984 0 0 0 0 1.407l8.845 8.949a1.234 1.234 0 0 0 1.718 -.001l4.36 -4.412m2.002 -2.025l2.483 -2.512a.984 .984 0 0 0 0 -1.407l-8.845 -8.948a1.233 1.233 0 0 0 -1.718 0l-2.375 2.403" />
      <path d="M2 12c.004 .086 .103 .178 .296 .246l8.845 2.632c.459 .163 1.259 .163 1.718 0l1.544 -.46m3.094 -.92l4.207 -1.252c.195 -.07 .294 -.156 .296 -.243" />
      <path d="M12 2.12v5.88m0 4v9.88" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `octahedron_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.octahedron_plus />
      <TablerIcons.octahedron_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def octahedron_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21.498 12.911l.206 -.208a.984 .984 0 0 0 0 -1.407l-8.845 -8.948a1.233 1.233 0 0 0 -1.718 0l-8.845 8.949a.984 .984 0 0 0 0 1.407l8.845 8.949a1.234 1.234 0 0 0 1.718 -.001l.08 -.081" />
      <path d="M2 12c.004 .086 .103 .178 .296 .246l8.845 2.632c.459 .163 1.259 .163 1.718 0l2.634 -.784m5.41 -1.61l.801 -.238c.195 -.07 .294 -.156 .296 -.243" />
      <path d="M12 2.12v19.76" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `octahedron` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.octahedron />
      <TablerIcons.octahedron class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def octahedron(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.859 21.652l8.845 -8.949a.984 .984 0 0 0 0 -1.407l-8.845 -8.948a1.233 1.233 0 0 0 -1.718 0l-8.845 8.949a.984 .984 0 0 0 0 1.407l8.845 8.949a1.234 1.234 0 0 0 1.718 -.001z" />
      <path d="M2 12c.004 .086 .103 .178 .296 .246l8.845 2.632c.459 .163 1.259 .163 1.718 0l8.845 -2.632c.195 -.07 .294 -.156 .296 -.243" />
      <path d="M12 2.12v19.76" />
    </svg>
    """
  end

  @doc """
  Renders the `old` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.old />
      <TablerIcons.old class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def old(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 21l-1 -4l-2 -3v-6" />
      <path d="M5 14l-1 -3l4 -3l3 2l3 .5" />
      <path d="M8 4m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M7 17l-2 4" />
      <path d="M16 21v-8.5a1.5 1.5 0 0 1 3 0v.5" />
    </svg>
    """
  end

  @doc """
  Renders the `olympics_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.olympics_off />
      <TablerIcons.olympics_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def olympics_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 6a3 3 0 1 0 3 3" />
      <path d="M18 9m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M9 9a3 3 0 0 0 3 3m2.566 -1.445a3 3 0 0 0 -4.135 -4.113" />
      <path d="M9 15m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12.878 12.88a3 3 0 0 0 4.239 4.247m.586 -3.431a3.012 3.012 0 0 0 -1.43 -1.414" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `olympics` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.olympics />
      <TablerIcons.olympics class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def olympics(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 9m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M18 9m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12 9m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M9 15m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M15 15m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `om` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.om />
      <TablerIcons.om class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def om(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 12c2.21 0 4 -1.567 4 -3.5s-1.79 -3.5 -4 -3.5c-1.594 0 -2.97 .816 -3.613 2" />
      <path d="M3.423 14.483a4.944 4.944 0 0 0 -.423 2.017c0 2.485 1.79 4.5 4 4.5s4 -2.015 4 -4.5s-1.79 -4.5 -4 -4.5" />
      <path d="M14.071 17.01c.327 2.277 1.739 3.99 3.429 3.99c1.933 0 3.5 -2.239 3.5 -5s-1.567 -5 -3.5 -5c-.96 0 -1.868 .606 -2.5 1.5c-.717 1.049 -1.76 1.7 -2.936 1.7c-.92 0 -1.766 -.406 -2.434 -1.087" />
      <path d="M17 3l2 2" />
      <path d="M12 3c1.667 3.667 4.667 5.333 9 5" />
    </svg>
    """
  end

  @doc """
  Renders the `omega` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.omega />
      <TablerIcons.omega class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def omega(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19h5v-1a7.35 7.35 0 1 1 6 0v1h5" />
    </svg>
    """
  end

  @doc """
  Renders the `outbound` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.outbound />
      <TablerIcons.outbound class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def outbound(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 15l6 -6" />
      <path d="M11 9h4v4" />
    </svg>
    """
  end

  @doc """
  Renders the `outlet` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.outlet />
      <TablerIcons.outlet class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def outlet(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <circle cx="9" cy="12" r=".5" fill="currentColor" />
      <circle cx="15" cy="12" r=".5" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `oval_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.oval_filled />
      <TablerIcons.oval_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def oval_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c3.972 0 7 4.542 7 10s-3.028 10 -7 10c-3.9 0 -6.89 -4.379 -6.997 -9.703l-.003 -.297l.003 -.297c.107 -5.323 3.097 -9.703 6.997 -9.703z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `oval_vertical_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.oval_vertical_filled />
      <TablerIcons.oval_vertical_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def oval_vertical_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 5c-5.457 0 -10 3.028 -10 7s4.543 7 10 7s10 -3.028 10 -7s-4.543 -7 -10 -7z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `oval_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.oval_vertical />
      <TablerIcons.oval_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def oval_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12c0 -3.314 4.03 -6 9 -6s9 2.686 9 6s-4.03 6 -9 6s-9 -2.686 -9 -6z" />
    </svg>
    """
  end

  @doc """
  Renders the `oval` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.oval />
      <TablerIcons.oval class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def oval(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-6 0a6 9 0 1 0 12 0a6 9 0 1 0 -12 0" />
    </svg>
    """
  end

  @doc """
  Renders the `overline` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.overline />
      <TablerIcons.overline class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def overline(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 9v5a5 5 0 0 0 10 0v-5" />
      <path d="M5 5h14" />
    </svg>
    """
  end

  @doc """
  Renders the `package_export` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.package_export />
      <TablerIcons.package_export class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def package_export(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21l-8 -4.5v-9l8 -4.5l8 4.5v4.5" />
      <path d="M12 12l8 -4.5" />
      <path d="M12 12v9" />
      <path d="M12 12l-8 -4.5" />
      <path d="M15 18h7" />
      <path d="M19 15l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `package_import` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.package_import />
      <TablerIcons.package_import class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def package_import(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21l-8 -4.5v-9l8 -4.5l8 4.5v4.5" />
      <path d="M12 12l8 -4.5" />
      <path d="M12 12v9" />
      <path d="M12 12l-8 -4.5" />
      <path d="M22 18h-7" />
      <path d="M18 15l-3 3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `package_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.package_off />
      <TablerIcons.package_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def package_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.812 4.793l3.188 -1.793l8 4.5v8.5m-2.282 1.784l-5.718 3.216l-8 -4.5v-9l2.223 -1.25" />
      <path d="M14.543 10.57l5.457 -3.07" />
      <path d="M12 12v9" />
      <path d="M12 12l-8 -4.5" />
      <path d="M16 5.25l-4.35 2.447m-2.564 1.442l-1.086 .611" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `package` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.package />
      <TablerIcons.package class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def package(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3l8 4.5l0 9l-8 4.5l-8 -4.5l0 -9l8 -4.5" />
      <path d="M12 12l8 -4.5" />
      <path d="M12 12l0 9" />
      <path d="M12 12l-8 -4.5" />
      <path d="M16 5.25l-8 4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `packages` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.packages />
      <TablerIcons.packages class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def packages(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 16.5l-5 -3l5 -3l5 3v5.5l-5 3z" />
      <path d="M2 13.5v5.5l5 3" />
      <path d="M7 16.545l5 -3.03" />
      <path d="M17 16.5l-5 -3l5 -3l5 3v5.5l-5 3z" />
      <path d="M12 19l5 3" />
      <path d="M17 16.5l5 -3" />
      <path d="M12 13.5v-5.5l-5 -3l5 -3l5 3v5.5" />
      <path d="M7 5.03v5.455" />
      <path d="M12 8l5 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `pacman` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pacman />
      <TablerIcons.pacman class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pacman(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.636 5.636a9 9 0 0 1 13.397 .747l-5.619 5.617l5.619 5.617a9 9 0 1 1 -13.397 -11.981z" />
      <circle cx="11.5" cy="7.5" r="1" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `page_break` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.page_break />
      <TablerIcons.page_break class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def page_break(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3v4a1 1 0 0 0 1 1h4" />
      <path d="M19 18v1a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-1" />
      <path d="M3 14h3m4.5 0h3m4.5 0h3" />
      <path d="M5 10v-5a2 2 0 0 1 2 -2h7l5 5v2" />
    </svg>
    """
  end

  @doc """
  Renders the `paint_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.paint_filled />
      <TablerIcons.paint_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def paint_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 2a3 3 0 0 1 2.995 2.824l.005 .176a3 3 0 0 1 3 3a6 6 0 0 1 -5.775 5.996l-.225 .004h-4l.15 .005a2 2 0 0 1 1.844 1.838l.006 .157v4a2 2 0 0 1 -1.85 1.995l-.15 .005h-2a2 2 0 0 1 -1.995 -1.85l-.005 -.15v-4a2 2 0 0 1 1.85 -1.995l.15 -.005v-1a1 1 0 0 1 .883 -.993l.117 -.007h5a4 4 0 0 0 4 -4a1 1 0 0 0 -.883 -.993l-.117 -.007l-.005 .176a3 3 0 0 1 -2.819 2.819l-.176 .005h-10a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-2a3 3 0 0 1 2.824 -2.995l.176 -.005h10z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `paint_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.paint_off />
      <TablerIcons.paint_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def paint_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h10a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-4m-4 0h-2a2 2 0 0 1 -2 -2v-2" />
      <path d="M19 6h1a2 2 0 0 1 2 2a5 5 0 0 1 -5 5m-4 0h-1v2" />
      <path d="M10 15m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `paint` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.paint />
      <TablerIcons.paint class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def paint(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M19 6h1a2 2 0 0 1 2 2a5 5 0 0 1 -5 5l-5 0v2" />
      <path d="M10 15m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `palette_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.palette_off />
      <TablerIcons.palette_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def palette_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 15h-1a2 2 0 0 0 -1 3.75a1.3 1.3 0 0 1 -1 2.25a9 9 0 0 1 -6.372 -15.356" />
      <path d="M8 4c1.236 -.623 2.569 -1 4 -1c4.97 0 9 3.582 9 8c0 1.06 -.474 2.078 -1.318 2.828a4.516 4.516 0 0 1 -1.127 .73" />
      <path d="M8.5 10.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12.5 7.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M16.5 10.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `palette` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.palette />
      <TablerIcons.palette class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def palette(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 0 1 0 -18c4.97 0 9 3.582 9 8c0 1.06 -.474 2.078 -1.318 2.828c-.844 .75 -1.989 1.172 -3.182 1.172h-2.5a2 2 0 0 0 -1 3.75a1.3 1.3 0 0 1 -1 2.25" />
      <path d="M8.5 10.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12.5 7.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M16.5 10.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `panorama_horizontal_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.panorama_horizontal_off />
      <TablerIcons.panorama_horizontal_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def panorama_horizontal_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.95 6.952c2.901 .15 5.803 -.323 8.705 -1.42a1 1 0 0 1 1.345 .934v10.534m-3.212 .806c-4.483 -1.281 -8.966 -1.074 -13.449 .622a.993 .993 0 0 1 -1.339 -.935v-11.027a1 1 0 0 1 1.338 -.935c.588 .221 1.176 .418 1.764 .59" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `panorama_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.panorama_horizontal />
      <TablerIcons.panorama_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def panorama_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.338 5.53c5.106 1.932 10.211 1.932 15.317 0a1 1 0 0 1 1.345 .934v11c0 .692 -.692 1.2 -1.34 .962c-5.107 -1.932 -10.214 -1.932 -15.321 0c-.648 .246 -1.339 -.242 -1.339 -.935v-11.027a1 1 0 0 1 1.338 -.935z" />
    </svg>
    """
  end

  @doc """
  Renders the `panorama_vertical_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.panorama_vertical_off />
      <TablerIcons.panorama_vertical_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def panorama_vertical_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h10.53c.693 0 1.18 .691 .935 1.338c-1.098 2.898 -1.573 5.795 -1.425 8.692m.828 4.847c.172 .592 .37 1.185 .595 1.778a1 1 0 0 1 -.934 1.345h-11c-.692 0 -1.208 -.692 -.962 -1.34c1.697 -4.486 1.903 -8.973 .619 -13.46" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `panorama_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.panorama_vertical />
      <TablerIcons.panorama_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def panorama_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.463 4.338c-1.932 5.106 -1.932 10.211 0 15.317a1 1 0 0 1 -.934 1.345h-11c-.692 0 -1.208 -.692 -.962 -1.34c1.932 -5.107 1.932 -10.214 0 -15.321c-.246 -.648 .243 -1.339 .935 -1.339h11.028c.693 0 1.18 .691 .935 1.338z" />
    </svg>
    """
  end

  @doc """
  Renders the `paper_bag_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.paper_bag_off />
      <TablerIcons.paper_bag_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def paper_bag_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.158 3.185c.256 -.119 .542 -.185 .842 -.185h8a2 2 0 0 1 2 2v1.82a5 5 0 0 0 .528 2.236l.944 1.888a5 5 0 0 1 .528 2.236v2.82m-.177 3.824a2 2 0 0 1 -1.823 1.176h-12a2 2 0 0 1 -2 -2v-5.82a5 5 0 0 1 .528 -2.236l1.472 -2.944v-2" />
      <path d="M13.185 13.173a2 2 0 1 0 2.64 2.647" />
      <path d="M6 21a2 2 0 0 0 2 -2v-5.82a5 5 0 0 0 -.528 -2.236l-1.472 -2.944" />
      <path d="M11 7h2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `paper_bag` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.paper_bag />
      <TablerIcons.paper_bag class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def paper_bag(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 3h8a2 2 0 0 1 2 2v1.82a5 5 0 0 0 .528 2.236l.944 1.888a5 5 0 0 1 .528 2.236v5.82a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-5.82a5 5 0 0 1 .528 -2.236l1.472 -2.944v-3a2 2 0 0 1 2 -2z" />
      <path d="M14 15m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 21a2 2 0 0 0 2 -2v-5.82a5 5 0 0 0 -.528 -2.236l-1.472 -2.944" />
      <path d="M11 7h2" />
    </svg>
    """
  end

  @doc """
  Renders the `paperclip` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.paperclip />
      <TablerIcons.paperclip class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def paperclip(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 7l-6.5 6.5a1.5 1.5 0 0 0 3 3l6.5 -6.5a3 3 0 0 0 -6 -6l-6.5 6.5a4.5 4.5 0 0 0 9 9l6.5 -6.5" />
    </svg>
    """
  end

  @doc """
  Renders the `parachute_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.parachute_off />
      <TablerIcons.parachute_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def parachute_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12c0 -5.523 -4.477 -10 -10 -10c-1.737 0 -3.37 .443 -4.794 1.222m-2.28 1.71a9.969 9.969 0 0 0 -2.926 7.068" />
      <path d="M22 12c0 -1.66 -1.46 -3 -3.25 -3c-1.63 0 -2.973 1.099 -3.212 2.54m-.097 -.09c-.23 -1.067 -1.12 -1.935 -2.29 -2.284m-3.445 .568c-.739 .55 -1.206 1.36 -1.206 2.266c0 -1.66 -1.46 -3 -3.25 -3c-1.8 0 -3.25 1.34 -3.25 3" />
      <path d="M2 12l10 10l-3.5 -10" />
      <path d="M14.582 14.624l-2.582 7.376l4.992 -4.992m2.014 -2.014l3 -3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `parachute` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.parachute />
      <TablerIcons.parachute class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def parachute(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12a10 10 0 1 0 -20 0" />
      <path d="M22 12c0 -1.66 -1.46 -3 -3.25 -3c-1.8 0 -3.25 1.34 -3.25 3c0 -1.66 -1.57 -3 -3.5 -3s-3.5 1.34 -3.5 3c0 -1.66 -1.46 -3 -3.25 -3c-1.8 0 -3.25 1.34 -3.25 3" />
      <path d="M2 12l10 10l-3.5 -10" />
      <path d="M15.5 12l-3.5 10l10 -10" />
    </svg>
    """
  end

  @doc """
  Renders the `parentheses_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.parentheses_off />
      <TablerIcons.parentheses_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def parentheses_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.743 5.745a12.253 12.253 0 0 0 1.257 14.255" />
      <path d="M17 4a12.25 12.25 0 0 1 2.474 11.467m-1.22 2.794a12.291 12.291 0 0 1 -1.254 1.739" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `parentheses` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.parentheses />
      <TablerIcons.parentheses class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def parentheses(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 4a12.25 12.25 0 0 0 0 16" />
      <path d="M17 4a12.25 12.25 0 0 1 0 16" />
    </svg>
    """
  end

  @doc """
  Renders the `parking_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.parking_off />
      <TablerIcons.parking_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def parking_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h10a2 2 0 0 1 2 2v10m-.582 3.41c-.362 .365 -.864 .59 -1.418 .59h-12a2 2 0 0 1 -2 -2v-12c0 -.554 .225 -1.056 .59 -1.418" />
      <path d="M9 16v-7m3 -1h1a2 2 0 0 1 1.817 2.836m-2.817 1.164h-3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `parking` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.parking />
      <TablerIcons.parking class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def parking(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 16v-8h4a2 2 0 0 1 0 4h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `password` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.password />
      <TablerIcons.password class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def password(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 10v4" />
      <path d="M10 13l4 -2" />
      <path d="M10 11l4 2" />
      <path d="M5 10v4" />
      <path d="M3 13l4 -2" />
      <path d="M3 11l4 2" />
      <path d="M19 10v4" />
      <path d="M17 13l4 -2" />
      <path d="M17 11l4 2" />
    </svg>
    """
  end

  @doc """
  Renders the `paw_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.paw_filled />
      <TablerIcons.paw_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def paw_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 10c-1.32 0 -1.983 .421 -2.931 1.924l-.244 .398l-.395 .688a50.89 50.89 0 0 0 -.141 .254c-.24 .434 -.571 .753 -1.139 1.142l-.55 .365c-.94 .627 -1.432 1.118 -1.707 1.955c-.124 .338 -.196 .853 -.193 1.28c0 1.687 1.198 2.994 2.8 2.994l.242 -.006c.119 -.006 .234 -.017 .354 -.034l.248 -.043l.132 -.028l.291 -.073l.162 -.045l.57 -.17l.763 -.243l.455 -.136c.53 -.15 .94 -.222 1.283 -.222c.344 0 .753 .073 1.283 .222l.455 .136l.764 .242l.569 .171l.312 .084c.097 .024 .187 .045 .273 .062l.248 .043c.12 .017 .235 .028 .354 .034l.242 .006c1.602 0 2.8 -1.307 2.8 -3c0 -.427 -.073 -.939 -.207 -1.306c-.236 -.724 -.677 -1.223 -1.48 -1.83l-.257 -.19l-.528 -.38c-.642 -.47 -1.003 -.826 -1.253 -1.278l-.27 -.485l-.252 -.432c-1.011 -1.696 -1.618 -2.099 -3.053 -2.099z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M19.78 7h-.03c-1.219 .02 -2.35 1.066 -2.908 2.504c-.69 1.775 -.348 3.72 1.075 4.333c.256 .109 .527 .163 .801 .163c1.231 0 2.38 -1.053 2.943 -2.504c.686 -1.774 .34 -3.72 -1.076 -4.332a2.05 2.05 0 0 0 -.804 -.164z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M9.025 3c-.112 0 -.185 .002 -.27 .015l-.093 .016c-1.532 .206 -2.397 1.989 -2.108 3.855c.272 1.725 1.462 3.114 2.92 3.114l.187 -.005a1.26 1.26 0 0 0 .084 -.01l.092 -.016c1.533 -.206 2.397 -1.989 2.108 -3.855c-.27 -1.727 -1.46 -3.114 -2.92 -3.114z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M14.972 3c-1.459 0 -2.647 1.388 -2.916 3.113c-.29 1.867 .574 3.65 2.174 3.867c.103 .013 .2 .02 .296 .02c1.39 0 2.543 -1.265 2.877 -2.883l.041 -.23c.29 -1.867 -.574 -3.65 -2.174 -3.867a2.154 2.154 0 0 0 -.298 -.02z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4.217 7c-.274 0 -.544 .054 -.797 .161c-1.426 .615 -1.767 2.562 -1.078 4.335c.563 1.451 1.71 2.504 2.941 2.504c.274 0 .544 -.054 .797 -.161c1.426 -.615 1.767 -2.562 1.078 -4.335c-.563 -1.451 -1.71 -2.504 -2.941 -2.504z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `paw_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.paw_off />
      <TablerIcons.paw_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def paw_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.168 11.154c-.71 .31 -1.184 1.107 -2 2.593c-.942 1.703 -2.846 1.845 -3.321 3.291c-.097 .265 -.145 .677 -.143 .962c0 1.176 .787 2 1.8 2c1.259 0 3 -1 4.5 -1s3.241 1 4.5 1c.927 0 1.664 -.689 1.783 -1.708" />
      <path d="M20.188 8.082a1.039 1.039 0 0 0 -.406 -.082h-.015c-.735 .012 -1.56 .75 -1.993 1.866c-.519 1.335 -.28 2.7 .538 3.052c.129 .055 .267 .082 .406 .082c.739 0 1.575 -.742 2.011 -1.866c.516 -1.335 .273 -2.7 -.54 -3.052h0z" />
      <path d="M11 6.992a3.608 3.608 0 0 0 -.04 -.725c-.203 -1.297 -1.047 -2.267 -1.932 -2.267a1.237 1.237 0 0 0 -.758 .265" />
      <path d="M16.456 6.733c.214 -1.376 -.375 -2.594 -1.32 -2.722a1.164 1.164 0 0 0 -.162 -.011c-.885 0 -1.728 .97 -1.93 2.267c-.214 1.376 .375 2.594 1.32 2.722c.054 .007 .108 .011 .162 .011c.885 0 1.73 -.974 1.93 -2.267z" />
      <path d="M5.69 12.918c.816 -.352 1.054 -1.719 .536 -3.052c-.436 -1.124 -1.271 -1.866 -2.009 -1.866c-.14 0 -.277 .027 -.407 .082c-.816 .352 -1.054 1.719 -.536 3.052c.436 1.124 1.271 1.866 2.009 1.866c.14 0 .277 -.027 .407 -.082z" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `paw` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.paw />
      <TablerIcons.paw class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def paw(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.7 13.5c-1.1 -2 -1.441 -2.5 -2.7 -2.5c-1.259 0 -1.736 .755 -2.836 2.747c-.942 1.703 -2.846 1.845 -3.321 3.291c-.097 .265 -.145 .677 -.143 .962c0 1.176 .787 2 1.8 2c1.259 0 3 -1 4.5 -1s3.241 1 4.5 1c1.013 0 1.8 -.823 1.8 -2c0 -.285 -.049 -.697 -.146 -.962c-.475 -1.451 -2.512 -1.835 -3.454 -3.538z" />
      <path d="M20.188 8.082a1.039 1.039 0 0 0 -.406 -.082h-.015c-.735 .012 -1.56 .75 -1.993 1.866c-.519 1.335 -.28 2.7 .538 3.052c.129 .055 .267 .082 .406 .082c.739 0 1.575 -.742 2.011 -1.866c.516 -1.335 .273 -2.7 -.54 -3.052z" />
      <path d="M9.474 9c.055 0 .109 0 .163 -.011c.944 -.128 1.533 -1.346 1.32 -2.722c-.203 -1.297 -1.047 -2.267 -1.932 -2.267c-.055 0 -.109 0 -.163 .011c-.944 .128 -1.533 1.346 -1.32 2.722c.204 1.293 1.048 2.267 1.933 2.267z" />
      <path d="M16.456 6.733c.214 -1.376 -.375 -2.594 -1.32 -2.722a1.164 1.164 0 0 0 -.162 -.011c-.885 0 -1.728 .97 -1.93 2.267c-.214 1.376 .375 2.594 1.32 2.722c.054 .007 .108 .011 .162 .011c.885 0 1.73 -.974 1.93 -2.267z" />
      <path d="M5.69 12.918c.816 -.352 1.054 -1.719 .536 -3.052c-.436 -1.124 -1.271 -1.866 -2.009 -1.866c-.14 0 -.277 .027 -.407 .082c-.816 .352 -1.054 1.719 -.536 3.052c.436 1.124 1.271 1.866 2.009 1.866c.14 0 .277 -.027 .407 -.082z" />
    </svg>
    """
  end

  @doc """
  Renders the `pdf` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pdf />
      <TablerIcons.pdf class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pdf(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8v8h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-2z" />
      <path d="M3 12h2a2 2 0 1 0 0 -4h-2v8" />
      <path d="M17 12h3" />
      <path d="M21 8h-4v8" />
    </svg>
    """
  end

  @doc """
  Renders the `peace` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.peace />
      <TablerIcons.peace class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def peace(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 3l0 18" />
      <path d="M12 12l6.3 6.3" />
      <path d="M12 12l-6.3 6.3" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_bolt />
      <TablerIcons.pencil_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_cancel />
      <TablerIcons.pencil_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_check />
      <TablerIcons.pencil_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_code />
      <TablerIcons.pencil_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_cog />
      <TablerIcons.pencil_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_discount` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_discount />
      <TablerIcons.pencil_discount class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_discount(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M16 21l5 -5" />
      <path d="M21 21v.01" />
      <path d="M16 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_dollar />
      <TablerIcons.pencil_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_down />
      <TablerIcons.pencil_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_exclamation />
      <TablerIcons.pencil_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_heart />
      <TablerIcons.pencil_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 11l1.5 -1.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4h4l2 -2" />
      <path d="M13.5 6.5l4 4" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_minus />
      <TablerIcons.pencil_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_off />
      <TablerIcons.pencil_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10l-6 6v4h4l6 -6m1.99 -1.99l2.504 -2.504a2.828 2.828 0 1 0 -4 -4l-2.5 2.5" />
      <path d="M13.5 6.5l4 4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_pause />
      <TablerIcons.pencil_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_pin />
      <TablerIcons.pencil_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_plus />
      <TablerIcons.pencil_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_question />
      <TablerIcons.pencil_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 20l6 -6l3 -3l1.5 -1.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4h4z" />
      <path d="M13.5 6.5l4 4" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_search />
      <TablerIcons.pencil_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 11l1.5 -1.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4h4l3 -3" />
      <path d="M13.5 6.5l4 4" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_share />
      <TablerIcons.pencil_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_star />
      <TablerIcons.pencil_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.5 10.5l1 -1a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4h4l2 -2" />
      <path d="M13.5 6.5l4 4" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_up />
      <TablerIcons.pencil_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil_x />
      <TablerIcons.pencil_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `pencil` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pencil />
      <TablerIcons.pencil class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pencil(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `pennant_2_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pennant_2_filled />
      <TablerIcons.pennant_2_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pennant_2_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14 2a1 1 0 0 1 .993 .883l.007 .117v17h1a1 1 0 0 1 .117 1.993l-.117 .007h-4a1 1 0 0 1 -.117 -1.993l.117 -.007h1v-7.351l-8.406 -3.735c-.752 -.335 -.79 -1.365 -.113 -1.77l.113 -.058l8.406 -3.736v-.35a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `pennant_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pennant_2 />
      <TablerIcons.pennant_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pennant_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 21h-4" />
      <path d="M14 21v-18" />
      <path d="M14 4l-9 4l9 4" />
    </svg>
    """
  end

  @doc """
  Renders the `pennant_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pennant_filled />
      <TablerIcons.pennant_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pennant_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10 2a1 1 0 0 1 .993 .883l.007 .117v.35l8.406 3.736c.752 .335 .79 1.365 .113 1.77l-.113 .058l-8.406 3.735v7.351h1a1 1 0 0 1 .117 1.993l-.117 .007h-4a1 1 0 0 1 -.117 -1.993l.117 -.007h1v-17a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `pennant_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pennant_off />
      <TablerIcons.pennant_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pennant_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 21h4" />
      <path d="M10 21v-11m0 -4v-3" />
      <path d="M10 4l9 4l-4.858 2.16m-2.764 1.227l-1.378 .613" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `pennant` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pennant />
      <TablerIcons.pennant class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pennant(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 21l4 0" />
      <path d="M10 21l0 -18" />
      <path d="M10 4l9 4l-9 4" />
    </svg>
    """
  end

  @doc """
  Renders the `pentagon_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pentagon_filled />
      <TablerIcons.pentagon_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pentagon_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10.205 2.6l-6.96 5.238a3 3 0 0 0 -1.045 3.338l2.896 8.765a3 3 0 0 0 2.85 2.059h8.12a3 3 0 0 0 2.841 -2.037l2.973 -8.764a3 3 0 0 0 -1.05 -3.37l-7.033 -5.237l-.091 -.061l-.018 -.01l-.106 -.07a3 3 0 0 0 -3.377 .148z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `pentagon_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pentagon_off />
      <TablerIcons.pentagon_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pentagon_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.868 4.857l1.936 -1.457a2 2 0 0 1 2.397 0l7.032 5.237a2 2 0 0 1 .7 2.247l-1.522 4.485m-1.027 3.029l-.424 1.25a2 2 0 0 1 -1.894 1.358h-8.12a2 2 0 0 1 -1.9 -1.373l-2.896 -8.765a2 2 0 0 1 .696 -2.225l2.736 -2.06" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `pentagon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pentagon />
      <TablerIcons.pentagon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pentagon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.2 3.394l7.033 5.237a2 2 0 0 1 .7 2.247l-2.973 8.764a2 2 0 0 1 -1.894 1.358h-8.12a2 2 0 0 1 -1.9 -1.373l-2.896 -8.765a2 2 0 0 1 .696 -2.225l6.958 -5.237a2 2 0 0 1 2.397 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `pentagram` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pentagram />
      <TablerIcons.pentagram class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pentagram(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.636 5.636a9 9 0 1 1 12.728 12.728a9 9 0 0 1 -12.728 -12.728z" />
      <path d="M15.236 11l5.264 4h-6.5l-2 6l-2 -6h-6.5l5.276 -4l-2.056 -6.28l5.28 3.78l5.28 -3.78z" />
    </svg>
    """
  end

  @doc """
  Renders the `pepper_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pepper_off />
      <TablerIcons.pepper_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pepper_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.59 12.59c-.77 1.418 -2.535 2.41 -4.59 2.41c-2.761 0 -5 -1.79 -5 -4a8 8 0 0 0 13.643 5.67m1.64 -2.357a7.97 7.97 0 0 0 .717 -3.313a3 3 0 0 0 -5.545 -1.59" />
      <path d="M16 8c0 -2 2 -4 4 -4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `pepper` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pepper />
      <TablerIcons.pepper class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pepper(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 11c0 2.21 -2.239 4 -5 4s-5 -1.79 -5 -4a8 8 0 1 0 16 0a3 3 0 0 0 -6 0" />
      <path d="M16 8c0 -2 2 -4 4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `percentage` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.percentage />
      <TablerIcons.percentage class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def percentage(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 17m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M7 7m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M6 18l12 -12" />
    </svg>
    """
  end

  @doc """
  Renders the `perfume` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.perfume />
      <TablerIcons.perfume class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def perfume(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 6v3" />
      <path d="M14 6v3" />
      <path d="M5 9m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M12 15m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M9 3h6v3h-6z" />
    </svg>
    """
  end

  @doc """
  Renders the `perspective_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.perspective_off />
      <TablerIcons.perspective_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def perspective_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.511 4.502l9.63 1.375a1 1 0 0 1 .859 .99v8.133m-.859 3.123l-12 1.714a1 1 0 0 1 -1.141 -.99v-13.694a1 1 0 0 1 .01 -.137" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `perspective` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.perspective />
      <TablerIcons.perspective class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def perspective(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.141 4.163l12 1.714a1 1 0 0 1 .859 .99v10.266a1 1 0 0 1 -.859 .99l-12 1.714a1 1 0 0 1 -1.141 -.99v-13.694a1 1 0 0 1 1.141 -.99z" />
    </svg>
    """
  end

  @doc """
  Renders the `phone_call` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.phone_call />
      <TablerIcons.phone_call class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def phone_call(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2" />
      <path d="M15 7a2 2 0 0 1 2 2" />
      <path d="M15 3a6 6 0 0 1 6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `phone_calling` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.phone_calling />
      <TablerIcons.phone_calling class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def phone_calling(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2" />
      <path d="M15 7l0 .01" />
      <path d="M18 7l0 .01" />
      <path d="M21 7l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `phone_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.phone_check />
      <TablerIcons.phone_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def phone_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2" />
      <path d="M15 6l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `phone_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.phone_filled />
      <TablerIcons.phone_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def phone_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M9 3a1 1 0 0 1 .877 .519l.051 .11l2 5a1 1 0 0 1 -.313 1.16l-.1 .068l-1.674 1.004l.063 .103a10 10 0 0 0 3.132 3.132l.102 .062l1.005 -1.672a1 1 0 0 1 1.113 -.453l.115 .039l5 2a1 1 0 0 1 .622 .807l.007 .121v4c0 1.657 -1.343 3 -3.06 2.998c-8.579 -.521 -15.418 -7.36 -15.94 -15.998a3 3 0 0 1 2.824 -2.995l.176 -.005h4z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `phone_incoming` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.phone_incoming />
      <TablerIcons.phone_incoming class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def phone_incoming(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2" />
      <path d="M15 9l5 -5" />
      <path d="M15 5l0 4l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `phone_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.phone_off />
      <TablerIcons.phone_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def phone_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21l18 -18" />
      <path d="M5.831 14.161a15.946 15.946 0 0 1 -2.831 -8.161a2 2 0 0 1 2 -2h4l2 5l-2.5 1.5c.108 .22 .223 .435 .345 .645m1.751 2.277c.843 .84 1.822 1.544 2.904 2.078l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a15.963 15.963 0 0 1 -10.344 -4.657" />
    </svg>
    """
  end

  @doc """
  Renders the `phone_outgoing` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.phone_outgoing />
      <TablerIcons.phone_outgoing class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def phone_outgoing(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2" />
      <path d="M15 9l5 -5" />
      <path d="M16 4l4 0l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `phone_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.phone_pause />
      <TablerIcons.phone_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def phone_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2" />
      <path d="M20 3l0 4" />
      <path d="M16 3l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `phone_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.phone_plus />
      <TablerIcons.phone_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def phone_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2" />
      <path d="M15 6h6m-3 -3v6" />
    </svg>
    """
  end

  @doc """
  Renders the `phone_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.phone_x />
      <TablerIcons.phone_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def phone_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2" />
      <path d="M16 4l4 4m0 -4l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `phone` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.phone />
      <TablerIcons.phone class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def phone(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_ai` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_ai />
      <TablerIcons.photo_ai class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_ai(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M10 21h-4a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l1 1" />
      <path d="M14 21v-4a2 2 0 1 1 4 0v4" />
      <path d="M14 19h4" />
      <path d="M21 15v6" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_bolt />
      <TablerIcons.photo_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M13.5 21h-7.5a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6.5" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l4 4" />
      <path d="M14 14l1 -1c.669 -.643 1.45 -.823 2.18 -.54" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_cancel />
      <TablerIcons.photo_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M12.5 21h-6.5a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6.5" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l3 3" />
      <path d="M14 14l1 -1c.616 -.593 1.328 -.792 2.008 -.598" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_check />
      <TablerIcons.photo_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M11.5 21h-5.5a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v7" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l4 4" />
      <path d="M14 14l1 -1c.928 -.893 2.072 -.893 3 0l.5 .5" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_code />
      <TablerIcons.photo_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M11.5 21h-5.5a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v7" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l3 3" />
      <path d="M14 14l1 -1c.928 -.893 2.072 -.893 3 0" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_cog />
      <TablerIcons.photo_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M12 21h-6a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l3 3" />
      <path d="M14 14l1 -1c.48 -.461 1.016 -.684 1.551 -.67" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_dollar />
      <TablerIcons.photo_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M13 21h-7a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v4.5" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l2.5 2.5" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_down />
      <TablerIcons.photo_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M12.5 21h-6.5a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6.5" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l4 4" />
      <path d="M14 14l1 -1c.653 -.629 1.413 -.815 2.13 -.559" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_edit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_edit />
      <TablerIcons.photo_edit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_edit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M11 20h-4a3 3 0 0 1 -3 -3v-10a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v4" />
      <path d="M4 15l4 -4c.928 -.893 2.072 -.893 3 0l3 3" />
      <path d="M14 14l1 -1c.31 -.298 .644 -.497 .987 -.596" />
      <path d="M18.42 15.61a2.1 2.1 0 0 1 2.97 2.97l-3.39 3.42h-3v-3l3.42 -3.39z" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_exclamation />
      <TablerIcons.photo_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M15 21h-9a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l4 4" />
      <path d="M14 14l1 -1c.665 -.64 1.44 -.821 2.167 -.545" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_filled />
      <TablerIcons.photo_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M8.813 11.612c.457 -.38 .918 -.38 1.386 .011l.108 .098l4.986 4.986l.094 .083a1 1 0 0 0 1.403 -1.403l-.083 -.094l-1.292 -1.293l.292 -.293l.106 -.095c.457 -.38 .918 -.38 1.386 .011l.108 .098l4.674 4.675a4 4 0 0 1 -3.775 3.599l-.206 .005h-12a4 4 0 0 1 -3.98 -3.603l6.687 -6.69l.106 -.095zm9.187 -9.612a4 4 0 0 1 3.995 3.8l.005 .2v9.585l-3.293 -3.292l-.15 -.137c-1.256 -1.095 -2.85 -1.097 -4.096 -.017l-.154 .14l-.307 .306l-2.293 -2.292l-.15 -.137c-1.256 -1.095 -2.85 -1.097 -4.096 -.017l-.154 .14l-5.307 5.306v-9.585a4 4 0 0 1 3.8 -3.995l.2 -.005h12zm-2.99 5l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `photo_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_heart />
      <TablerIcons.photo_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M11.5 21h-5.5a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l1.5 1.5" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_minus />
      <TablerIcons.photo_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M12.5 21h-6.5a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v9" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l4 4" />
      <path d="M14 14l1 -1c.928 -.893 2.072 -.893 3 0l2 2" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_off />
      <TablerIcons.photo_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M7 3h11a3 3 0 0 1 3 3v11m-.856 3.099a2.991 2.991 0 0 1 -2.144 .901h-12a3 3 0 0 1 -3 -3v-12c0 -.845 .349 -1.608 .91 -2.153" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l5 5" />
      <path d="M16.33 12.338c.574 -.054 1.155 .166 1.67 .662l3 3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_pause />
      <TablerIcons.photo_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M13 21h-7a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v7" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l3 3" />
      <path d="M14 14l1 -1c.928 -.893 2.072 -.893 3 0" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_pin />
      <TablerIcons.photo_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M12.5 21h-6.5a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l2.5 2.5" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_plus />
      <TablerIcons.photo_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M12.5 21h-6.5a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6.5" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l4 4" />
      <path d="M14 14l1 -1c.67 -.644 1.45 -.824 2.182 -.54" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_question />
      <TablerIcons.photo_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M15 21h-9a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l3 3" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_search />
      <TablerIcons.photo_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M11.5 21h-5.5a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_sensor_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_sensor_2 />
      <TablerIcons.photo_sensor_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_sensor_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 5h2a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-2" />
      <path d="M7 19h-2a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2" />
      <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_sensor_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_sensor_3 />
      <TablerIcons.photo_sensor_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_sensor_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 4h1a2 2 0 0 1 2 2v1" />
      <path d="M20 17v1a2 2 0 0 1 -2 2h-1" />
      <path d="M7 20h-1a2 2 0 0 1 -2 -2v-1" />
      <path d="M4 7v-1a2 2 0 0 1 2 -2h1" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12 18v2" />
      <path d="M4 12h2" />
      <path d="M12 4v2" />
      <path d="M20 12h-2" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_sensor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_sensor />
      <TablerIcons.photo_sensor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_sensor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 5h2a2 2 0 0 1 2 2v2" />
      <path d="M21 15v2a2 2 0 0 1 -2 2h-2" />
      <path d="M7 19h-2a2 2 0 0 1 -2 -2v-2" />
      <path d="M3 9v-2a2 2 0 0 1 2 -2h2" />
      <path d="M7 9m0 1a1 1 0 0 1 1 -1h8a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-8a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_share />
      <TablerIcons.photo_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M12 21h-6a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v7" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l3 3" />
      <path d="M14 14l1 -1c.928 -.893 2.072 -.893 3 0" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_shield` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_shield />
      <TablerIcons.photo_shield class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_shield(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M11.5 20h-4.5a3 3 0 0 1 -3 -3v-10a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v4" />
      <path d="M4 15l4 -4c.928 -.893 2.072 -.893 3 0l1.5 1.5" />
      <path d="M22 16c0 4 -2.5 6 -3.5 6s-3.5 -2 -3.5 -6c1 0 2.5 -.5 3.5 -1.5c1 1 2.5 1.5 3.5 1.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_star />
      <TablerIcons.photo_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M11 21h-5a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l2 2" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_up />
      <TablerIcons.photo_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M12.5 21h-6.5a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6.5" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l3.5 3.5" />
      <path d="M14 14l1 -1c.679 -.653 1.473 -.829 2.214 -.526" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `photo_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo_x />
      <TablerIcons.photo_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M13 21h-7a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v7" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l3 3" />
      <path d="M14 14l1 -1c.928 -.893 2.072 -.893 3 0" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `photo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.photo />
      <TablerIcons.photo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def photo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8h.01" />
      <path d="M3 6a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3v-12z" />
      <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l5 5" />
      <path d="M14 14l1 -1c.928 -.893 2.072 -.893 3 0l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `physotherapist` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.physotherapist />
      <TablerIcons.physotherapist class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def physotherapist(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15l-1 -3l4 -2l4 1h3.5" />
      <path d="M4 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 6m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 17v-7" />
      <path d="M8 20h7l1 -4l4 -2" />
      <path d="M18 20h3" />
    </svg>
    """
  end

  @doc """
  Renders the `piano` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.piano />
      <TablerIcons.piano class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def piano(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 19v-6" />
      <path d="M8 5v8h2v-8" />
      <path d="M15 19v-6" />
      <path d="M14 5v8h2v-8" />
    </svg>
    """
  end

  @doc """
  Renders the `pick` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pick />
      <TablerIcons.pick class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pick(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 8l-9.383 9.418a2.091 2.091 0 0 0 0 2.967a2.11 2.11 0 0 0 2.976 0l9.407 -9.385" />
      <path d="M9 3h4.586a1 1 0 0 1 .707 .293l6.414 6.414a1 1 0 0 1 .293 .707v4.586a2 2 0 1 1 -4 0v-3l-5 -5h-3a2 2 0 1 1 0 -4z" />
    </svg>
    """
  end

  @doc """
  Renders the `picture_in_picture_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.picture_in_picture_off />
      <TablerIcons.picture_in_picture_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def picture_in_picture_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 19h-6a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4" />
      <path d="M14 14m0 1a1 1 0 0 1 1 -1h5a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-5a1 1 0 0 1 -1 -1z" />
      <path d="M7 9l4 4" />
      <path d="M7 12v-3h3" />
    </svg>
    """
  end

  @doc """
  Renders the `picture_in_picture_on` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.picture_in_picture_on />
      <TablerIcons.picture_in_picture_on class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def picture_in_picture_on(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 19h-6a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4" />
      <path d="M14 14m0 1a1 1 0 0 1 1 -1h5a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-5a1 1 0 0 1 -1 -1z" />
      <path d="M7 9l4 4" />
      <path d="M8 13h3v-3" />
    </svg>
    """
  end

  @doc """
  Renders the `picture_in_picture_top` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.picture_in_picture_top />
      <TablerIcons.picture_in_picture_top class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def picture_in_picture_top(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 5h-6a2 2 0 0 0 -2 2v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2 -2v-4" />
      <path d="M15 10h5a1 1 0 0 0 1 -1v-3a1 1 0 0 0 -1 -1h-5a1 1 0 0 0 -1 1v3a1 1 0 0 0 1 1z" />
    </svg>
    """
  end

  @doc """
  Renders the `picture_in_picture` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.picture_in_picture />
      <TablerIcons.picture_in_picture class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def picture_in_picture(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 19h-6a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4" />
      <path d="M14 14m0 1a1 1 0 0 1 1 -1h5a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-5a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `pig_money` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pig_money />
      <TablerIcons.pig_money class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pig_money(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 11v.01" />
      <path d="M5.173 8.378a3 3 0 1 1 4.656 -1.377" />
      <path d="M16 4v3.803a6.019 6.019 0 0 1 2.658 3.197h1.341a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-1.342c-.336 .95 -.907 1.8 -1.658 2.473v2.027a1.5 1.5 0 0 1 -3 0v-.583a6.04 6.04 0 0 1 -1 .083h-4a6.04 6.04 0 0 1 -1 -.083v.583a1.5 1.5 0 0 1 -3 0v-2l0 -.027a6 6 0 0 1 4 -10.473h2.5l4.5 -3h0z" />
    </svg>
    """
  end

  @doc """
  Renders the `pig_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pig_off />
      <TablerIcons.pig_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pig_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 11v.01" />
      <path d="M10 6h1.499l4.5 -3l0 3.803a6.019 6.019 0 0 1 2.658 3.197h1.341a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-1.342c-.057 .16 -.12 .318 -.19 .472m-1.467 2.528v1.5a1.5 1.5 0 0 1 -3 0v-.583a6.04 6.04 0 0 1 -1 .083h-4a6.04 6.04 0 0 1 -1 -.083v.583a1.5 1.5 0 0 1 -3 0v-2l0 -.027a6 6 0 0 1 1.5 -9.928" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `pig` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pig />
      <TablerIcons.pig class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pig(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 11v.01" />
      <path d="M16 3l0 3.803a6.019 6.019 0 0 1 2.658 3.197h1.341a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-1.342a6.008 6.008 0 0 1 -1.658 2.473v2.027a1.5 1.5 0 0 1 -3 0v-.583a6.04 6.04 0 0 1 -1 .083h-4a6.04 6.04 0 0 1 -1 -.083v.583a1.5 1.5 0 0 1 -3 0v-2l0 -.027a6 6 0 0 1 4 -10.473h2.5l4.5 -3z" />
    </svg>
    """
  end

  @doc """
  Renders the `pilcrow` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pilcrow />
      <TablerIcons.pilcrow class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pilcrow(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 4v16" />
      <path d="M17 4v16" />
      <path d="M19 4h-9.5a4.5 4.5 0 0 0 0 9h3.5" />
    </svg>
    """
  end

  @doc """
  Renders the `pill_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pill_off />
      <TablerIcons.pill_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pill_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.495 6.505l2 -2a4.95 4.95 0 0 1 7 7l-2 2m-2 2l-4 4a4.95 4.95 0 0 1 -7 -7l4 -4" />
      <path d="M8.5 8.5l7 7" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `pill` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pill />
      <TablerIcons.pill class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pill(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.5 12.5l8 -8a4.94 4.94 0 0 1 7 7l-8 8a4.94 4.94 0 0 1 -7 -7" />
      <path d="M8.5 8.5l7 7" />
    </svg>
    """
  end

  @doc """
  Renders the `pills` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pills />
      <TablerIcons.pills class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pills(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M17 17m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M4.5 4.5l7 7" />
      <path d="M19.5 14.5l-5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `pin_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pin_filled />
      <TablerIcons.pin_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pin_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M15.113 3.21l.094 .083l5.5 5.5a1 1 0 0 1 -1.175 1.59l-3.172 3.171l-1.424 3.797a1 1 0 0 1 -.158 .277l-.07 .08l-1.5 1.5a1 1 0 0 1 -1.32 .082l-.095 -.083l-2.793 -2.792l-3.793 3.792a1 1 0 0 1 -1.497 -1.32l.083 -.094l3.792 -3.793l-2.792 -2.793a1 1 0 0 1 -.083 -1.32l.083 -.094l1.5 -1.5a1 1 0 0 1 .258 -.187l.098 -.042l3.796 -1.425l3.171 -3.17a1 1 0 0 1 1.497 -1.26z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pin />
      <TablerIcons.pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 4.5l-4 4l-4 1.5l-1.5 1.5l7 7l1.5 -1.5l1.5 -4l4 -4" />
      <path d="M9 15l-4.5 4.5" />
      <path d="M14.5 4l5.5 5.5" />
    </svg>
    """
  end

  @doc """
  Renders the `ping_pong` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ping_pong />
      <TablerIcons.ping_pong class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ping_pong(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.718 20.713a7.64 7.64 0 0 1 -7.48 -12.755l.72 -.72a7.643 7.643 0 0 1 9.105 -1.283l2.387 -2.345a2.08 2.08 0 0 1 3.057 2.815l-.116 .126l-2.346 2.387a7.644 7.644 0 0 1 -1.052 8.864" />
      <path d="M14 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M9.3 5.3l9.4 9.4" />
    </svg>
    """
  end

  @doc """
  Renders the `pinned_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pinned_filled />
      <TablerIcons.pinned_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pinned_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M16 3a1 1 0 0 1 .117 1.993l-.117 .007v4.764l1.894 3.789a1 1 0 0 1 .1 .331l.006 .116v2a1 1 0 0 1 -.883 .993l-.117 .007h-4v4a1 1 0 0 1 -1.993 .117l-.007 -.117v-4h-4a1 1 0 0 1 -.993 -.883l-.007 -.117v-2a1 1 0 0 1 .06 -.34l.046 -.107l1.894 -3.791v-4.762a1 1 0 0 1 -.117 -1.993l.117 -.007h8z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `pinned_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pinned_off />
      <TablerIcons.pinned_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pinned_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M15 4.5l-3.249 3.249m-2.57 1.433l-2.181 .818l-1.5 1.5l7 7l1.5 -1.5l.82 -2.186m1.43 -2.563l3.25 -3.251" />
      <path d="M9 15l-4.5 4.5" />
      <path d="M14.5 4l5.5 5.5" />
    </svg>
    """
  end

  @doc """
  Renders the `pinned` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pinned />
      <TablerIcons.pinned class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pinned(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 4v6l-2 4v2h10v-2l-2 -4v-6" />
      <path d="M12 16l0 5" />
      <path d="M8 4l8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `pizza_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pizza_off />
      <TablerIcons.pizza_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pizza_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.313 6.277l1.687 -3.277l5.34 10.376m2.477 6.463a19.093 19.093 0 0 1 -7.817 1.661c-3.04 0 -5.952 -.714 -8.5 -1.983l5.434 -10.559" />
      <path d="M5.38 15.866a14.94 14.94 0 0 0 6.815 1.634c1.56 0 3.105 -.24 4.582 -.713" />
      <path d="M11 14v-.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `pizza` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pizza />
      <TablerIcons.pizza class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pizza(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21.5c-3.04 0 -5.952 -.714 -8.5 -1.983l8.5 -16.517l8.5 16.517a19.09 19.09 0 0 1 -8.5 1.983z" />
      <path d="M5.38 15.866a14.94 14.94 0 0 0 6.815 1.634a14.944 14.944 0 0 0 6.502 -1.479" />
      <path d="M13 11.01v-.01" />
      <path d="M11 14v-.01" />
    </svg>
    """
  end

  @doc """
  Renders the `placeholder` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.placeholder />
      <TablerIcons.placeholder class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def placeholder(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 20.415a8 8 0 1 0 3 -15.415h-3" />
      <path d="M13 8l-3 -3l3 -3" />
      <path d="M7 17l4 -4l-4 -4l-4 4z" />
    </svg>
    """
  end

  @doc """
  Renders the `plane_arrival` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plane_arrival />
      <TablerIcons.plane_arrival class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plane_arrival(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.157 11.81l4.83 1.295a2 2 0 1 1 -1.036 3.863l-14.489 -3.882l-1.345 -6.572l2.898 .776l1.414 2.45l2.898 .776l-.12 -7.279l2.898 .777l2.052 7.797z" />
      <path d="M3 21h18" />
    </svg>
    """
  end

  @doc """
  Renders the `plane_departure` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plane_departure />
      <TablerIcons.plane_departure class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plane_departure(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.639 10.258l4.83 -1.294a2 2 0 1 1 1.035 3.863l-14.489 3.883l-4.45 -5.02l2.897 -.776l2.45 1.414l2.897 -.776l-3.743 -6.244l2.898 -.777l5.675 5.727z" />
      <path d="M3 21h18" />
    </svg>
    """
  end

  @doc """
  Renders the `plane_inflight` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plane_inflight />
      <TablerIcons.plane_inflight class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plane_inflight(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 11.085h5a2 2 0 1 1 0 4h-15l-3 -6h3l2 2h3l-2 -7h3l4 7z" />
      <path d="M3 21h18" />
    </svg>
    """
  end

  @doc """
  Renders the `plane_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plane_off />
      <TablerIcons.plane_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plane_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.788 5.758l-.788 -2.758h3l4 7h4a2 2 0 1 1 0 4h-2m-2.718 1.256l-3.282 5.744h-3l2 -7h-4l-2 2h-3l2 -4l-2 -4h3l2 2h3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `plane_tilt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plane_tilt />
      <TablerIcons.plane_tilt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plane_tilt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.5 6.5l3 -2.9a2.05 2.05 0 0 1 2.9 2.9l-2.9 3l2.5 7.5l-2.5 2.55l-3.5 -6.55l-3 3v3l-2 2l-1.5 -4.5l-4.5 -1.5l2 -2h3l3 -3l-6.5 -3.5l2.5 -2.5l7.5 2.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `plane` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plane />
      <TablerIcons.plane class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plane(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 10h4a2 2 0 0 1 0 4h-4l-4 7h-3l2 -7h-4l-2 2h-3l2 -4l-2 -4h3l2 2h4l-2 -7h3z" />
    </svg>
    """
  end

  @doc """
  Renders the `planet_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.planet_off />
      <TablerIcons.planet_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def planet_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.816 13.58c1.956 1.825 3.157 3.449 3.184 4.445m-3.428 .593c-2.098 -.634 -4.944 -2.03 -7.919 -3.976c-5.47 -3.579 -9.304 -7.664 -8.56 -9.123c.32 -.628 1.591 -.6 3.294 -.113" />
      <path d="M7.042 7.059a7 7 0 0 0 9.908 9.89m1.581 -2.425a7 7 0 0 0 -9.057 -9.054" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `planet` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.planet />
      <TablerIcons.planet class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def planet(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.816 13.58c2.292 2.138 3.546 4 3.092 4.9c-.745 1.46 -5.783 -.259 -11.255 -3.838c-5.47 -3.579 -9.304 -7.664 -8.56 -9.123c.464 -.91 2.926 -.444 5.803 .805" />
      <path d="M12 12m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
    </svg>
    """
  end

  @doc """
  Renders the `plant_2_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plant_2_off />
      <TablerIcons.plant_2_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plant_2_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 9c0 5.523 4.477 10 10 10a9.953 9.953 0 0 0 5.418 -1.593m2.137 -1.855a9.961 9.961 0 0 0 2.445 -6.552" />
      <path d="M12 19c0 -1.988 .58 -3.84 1.58 -5.397m1.878 -2.167a9.961 9.961 0 0 1 6.542 -2.436" />
      <path d="M2 9a10 10 0 0 1 10 10" />
      <path d="M12 4a9.7 9.7 0 0 1 3 7.013" />
      <path d="M9.01 11.5a9.696 9.696 0 0 1 .163 -2.318m1.082 -2.942a9.696 9.696 0 0 1 1.745 -2.24" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `plant_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plant_2 />
      <TablerIcons.plant_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plant_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 9a10 10 0 1 0 20 0" />
      <path d="M12 19a10 10 0 0 1 10 -10" />
      <path d="M2 9a10 10 0 0 1 10 10" />
      <path d="M12 4a9.7 9.7 0 0 1 2.99 7.5" />
      <path d="M9.01 11.5a9.7 9.7 0 0 1 2.99 -7.5" />
    </svg>
    """
  end

  @doc """
  Renders the `plant_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plant_off />
      <TablerIcons.plant_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plant_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 17v2a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2v-4h8" />
      <path d="M11.9 7.908a6 6 0 0 0 -4.79 -4.806m-4.11 -.102v2a6 6 0 0 0 6 6h2" />
      <path d="M12.531 8.528a6 6 0 0 1 5.469 -3.528h3v1a6 6 0 0 1 -5.037 5.923" />
      <path d="M12 15v-3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `plant` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plant />
      <TablerIcons.plant class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plant(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 15h10v4a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2v-4z" />
      <path d="M12 9a6 6 0 0 0 -6 -6h-3v2a6 6 0 0 0 6 6h3" />
      <path d="M12 11a6 6 0 0 1 6 -6h3v1a6 6 0 0 1 -6 6h-3" />
      <path d="M12 15l0 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `play_basketball` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.play_basketball />
      <TablerIcons.play_basketball class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def play_basketball(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 4a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M5 21l3 -3l.75 -1.5" />
      <path d="M14 21v-4l-4 -3l.5 -6" />
      <path d="M5 12l1 -3l4.5 -1l3.5 3l4 1" />
      <path d="M18.5 16a.5 .5 0 1 0 0 -1a.5 .5 0 0 0 0 1z" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `play_card_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.play_card_off />
      <TablerIcons.play_card_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def play_card_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h10a2 2 0 0 1 2 2v10m0 4a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-14" />
      <path d="M16 18h.01" />
      <path d="M13.716 13.712l-1.716 2.288l-3 -4l1.29 -1.72" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `play_card` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.play_card />
      <TablerIcons.play_card class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def play_card(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 5v14a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2z" />
      <path d="M8 6h.01" />
      <path d="M16 18h.01" />
      <path d="M12 16l-3 -4l3 -4l3 4z" />
    </svg>
    """
  end

  @doc """
  Renders the `play_football` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.play_football />
      <TablerIcons.play_football class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def play_football(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 4a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M3 17l5 1l.75 -1.5" />
      <path d="M14 21v-4l-4 -3l1 -6" />
      <path d="M6 12v-3l5 -1l3 3l3 1" />
      <path d="M19.5 20a.5 .5 0 1 0 0 -1a.5 .5 0 0 0 0 1z" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `play_handball` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.play_handball />
      <TablerIcons.play_handball class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def play_handball(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21l3.5 -2l-4.5 -4l2 -4.5" />
      <path d="M7 6l2 4l5 .5l4 2.5l2.5 3" />
      <path d="M4 20l5 -1l1.5 -2" />
      <path d="M15 7a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M9.5 5a.5 .5 0 1 0 0 -1a.5 .5 0 0 0 0 1z" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `play_volleyball` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.play_volleyball />
      <TablerIcons.play_volleyball class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def play_volleyball(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 4a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M20.5 10a.5 .5 0 1 0 0 -1a.5 .5 0 0 0 0 1z" fill="currentColor" />
      <path d="M2 16l5 1l.5 -2.5" />
      <path d="M11.5 21l2.5 -5.5l-5.5 -3.5l3.5 -4l3 4l4 2" />
    </svg>
    """
  end

  @doc """
  Renders the `player_eject_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_eject_filled />
      <TablerIcons.player_eject_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_eject_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11.247 3.341l-7 8c-.565 .647 -.106 1.659 .753 1.659h14c.86 0 1.318 -1.012 .753 -1.659l-7 -8a1 1 0 0 0 -1.506 0z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M18 15h-12a2 2 0 0 0 -2 2v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `player_eject` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_eject />
      <TablerIcons.player_eject class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_eject(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12h14l-7 -8z" />
      <path d="M5 16m0 1a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `player_pause_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_pause_filled />
      <TablerIcons.player_pause_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_pause_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M9 4h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h2a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M17 4h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h2a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `player_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_pause />
      <TablerIcons.player_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 5m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v12a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M14 5m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v12a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `player_play_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_play_filled />
      <TablerIcons.player_play_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_play_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M6 4v16a1 1 0 0 0 1.524 .852l13 -8a1 1 0 0 0 0 -1.704l-13 -8a1 1 0 0 0 -1.524 .852z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `player_play` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_play />
      <TablerIcons.player_play class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_play(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 4v16l13 -8z" />
    </svg>
    """
  end

  @doc """
  Renders the `player_record_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_record_filled />
      <TablerIcons.player_record_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_record_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M8 5.072a8 8 0 1 1 -3.995 7.213l-.005 -.285l.005 -.285a8 8 0 0 1 3.995 -6.643z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `player_record` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_record />
      <TablerIcons.player_record class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_record(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
    </svg>
    """
  end

  @doc """
  Renders the `player_skip_back_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_skip_back_filled />
      <TablerIcons.player_skip_back_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_skip_back_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19.496 4.136l-12 7a1 1 0 0 0 0 1.728l12 7a1 1 0 0 0 1.504 -.864v-14a1 1 0 0 0 -1.504 -.864z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 4a1 1 0 0 1 .993 .883l.007 .117v14a1 1 0 0 1 -1.993 .117l-.007 -.117v-14a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `player_skip_back` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_skip_back />
      <TablerIcons.player_skip_back class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_skip_back(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 5v14l-12 -7z" />
      <path d="M4 5l0 14" />
    </svg>
    """
  end

  @doc """
  Renders the `player_skip_forward_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_skip_forward_filled />
      <TablerIcons.player_skip_forward_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_skip_forward_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M3 5v14a1 1 0 0 0 1.504 .864l12 -7a1 1 0 0 0 0 -1.728l-12 -7a1 1 0 0 0 -1.504 .864z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 4a1 1 0 0 1 .993 .883l.007 .117v14a1 1 0 0 1 -1.993 .117l-.007 -.117v-14a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `player_skip_forward` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_skip_forward />
      <TablerIcons.player_skip_forward class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_skip_forward(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 5v14l12 -7z" />
      <path d="M20 5l0 14" />
    </svg>
    """
  end

  @doc """
  Renders the `player_stop_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_stop_filled />
      <TablerIcons.player_stop_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_stop_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 4h-10a3 3 0 0 0 -3 3v10a3 3 0 0 0 3 3h10a3 3 0 0 0 3 -3v-10a3 3 0 0 0 -3 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `player_stop` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_stop />
      <TablerIcons.player_stop class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_stop(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `player_track_next_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_track_next_filled />
      <TablerIcons.player_track_next_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_track_next_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M2 5v14c0 .86 1.012 1.318 1.659 .753l8 -7a1 1 0 0 0 0 -1.506l-8 -7c-.647 -.565 -1.659 -.106 -1.659 .753z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M13 5v14c0 .86 1.012 1.318 1.659 .753l8 -7a1 1 0 0 0 0 -1.506l-8 -7c-.647 -.565 -1.659 -.106 -1.659 .753z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `player_track_next` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_track_next />
      <TablerIcons.player_track_next class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_track_next(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5v14l8 -7z" />
      <path d="M14 5v14l8 -7z" />
    </svg>
    """
  end

  @doc """
  Renders the `player_track_prev_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_track_prev_filled />
      <TablerIcons.player_track_prev_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_track_prev_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M20.341 4.247l-8 7a1 1 0 0 0 0 1.506l8 7c.647 .565 1.659 .106 1.659 -.753v-14c0 -.86 -1.012 -1.318 -1.659 -.753z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M9.341 4.247l-8 7a1 1 0 0 0 0 1.506l8 7c.647 .565 1.659 .106 1.659 -.753v-14c0 -.86 -1.012 -1.318 -1.659 -.753z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `player_track_prev` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.player_track_prev />
      <TablerIcons.player_track_prev class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def player_track_prev(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 5v14l-8 -7z" />
      <path d="M10 5v14l-8 -7z" />
    </svg>
    """
  end

  @doc """
  Renders the `playlist_add` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.playlist_add />
      <TablerIcons.playlist_add class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def playlist_add(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 8h-14" />
      <path d="M5 12h9" />
      <path d="M11 16h-6" />
      <path d="M15 16h6" />
      <path d="M18 13v6" />
    </svg>
    """
  end

  @doc """
  Renders the `playlist_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.playlist_off />
      <TablerIcons.playlist_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def playlist_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 14a3 3 0 1 0 3 3" />
      <path d="M17 13v-9h4" />
      <path d="M13 5h-4m-4 0h-2" />
      <path d="M3 9h6" />
      <path d="M9 13h-6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `playlist_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.playlist_x />
      <TablerIcons.playlist_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def playlist_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 8h-14" />
      <path d="M5 12h7" />
      <path d="M12 16h-7" />
      <path d="M16 14l4 4" />
      <path d="M20 14l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `playlist` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.playlist />
      <TablerIcons.playlist class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def playlist(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 17v-13h4" />
      <path d="M13 5h-10" />
      <path d="M3 9l10 0" />
      <path d="M9 13h-6" />
    </svg>
    """
  end

  @doc """
  Renders the `playstation_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.playstation_circle />
      <TablerIcons.playstation_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def playstation_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 0 0 9 -9a9 9 0 0 0 -9 -9a9 9 0 0 0 -9 9a9 9 0 0 0 9 9z" />
      <path d="M12 12m-4.5 0a4.5 4.5 0 1 0 9 0a4.5 4.5 0 1 0 -9 0" />
    </svg>
    """
  end

  @doc """
  Renders the `playstation_square` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.playstation_square />
      <TablerIcons.playstation_square class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def playstation_square(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 0 0 9 -9a9 9 0 0 0 -9 -9a9 9 0 0 0 -9 9a9 9 0 0 0 9 9z" />
      <path d="M8 8m0 1a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `playstation_triangle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.playstation_triangle />
      <TablerIcons.playstation_triangle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def playstation_triangle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 0 0 9 -9a9 9 0 0 0 -9 -9a9 9 0 0 0 -9 9a9 9 0 0 0 9 9z" />
      <path d="M7.5 15h9l-4.5 -8z" />
    </svg>
    """
  end

  @doc """
  Renders the `playstation_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.playstation_x />
      <TablerIcons.playstation_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def playstation_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 0 0 9 -9a9 9 0 0 0 -9 -9a9 9 0 0 0 -9 9a9 9 0 0 0 9 9z" />
      <path d="M8.5 8.5l7 7" />
      <path d="M8.5 15.5l7 -7" />
    </svg>
    """
  end

  @doc """
  Renders the `plug_connected_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plug_connected_x />
      <TablerIcons.plug_connected_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plug_connected_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 16l-4 4" />
      <path d="M7 12l5 5l-1.5 1.5a3.536 3.536 0 1 1 -5 -5l1.5 -1.5z" />
      <path d="M17 12l-5 -5l1.5 -1.5a3.536 3.536 0 1 1 5 5l-1.5 1.5z" />
      <path d="M3 21l2.5 -2.5" />
      <path d="M18.5 5.5l2.5 -2.5" />
      <path d="M10 11l-2 2" />
      <path d="M13 14l-2 2" />
      <path d="M16 16l4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `plug_connected` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plug_connected />
      <TablerIcons.plug_connected class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plug_connected(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 12l5 5l-1.5 1.5a3.536 3.536 0 1 1 -5 -5l1.5 -1.5z" />
      <path d="M17 12l-5 -5l1.5 -1.5a3.536 3.536 0 1 1 5 5l-1.5 1.5z" />
      <path d="M3 21l2.5 -2.5" />
      <path d="M18.5 5.5l2.5 -2.5" />
      <path d="M10 11l-2 2" />
      <path d="M13 14l-2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `plug_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plug_off />
      <TablerIcons.plug_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plug_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.123 16.092l-.177 .177a5.81 5.81 0 1 1 -8.215 -8.215l.159 -.159" />
      <path d="M4 20l3.5 -3.5" />
      <path d="M15 4l-3.5 3.5" />
      <path d="M20 9l-3.5 3.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `plug_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plug_x />
      <TablerIcons.plug_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plug_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.55 17.733a5.806 5.806 0 0 1 -7.356 -4.052a5.81 5.81 0 0 1 1.537 -5.627l2.054 -2.054l7.165 7.165" />
      <path d="M4 20l3.5 -3.5" />
      <path d="M15 4l-3.5 3.5" />
      <path d="M20 9l-3.5 3.5" />
      <path d="M16 16l4 4" />
      <path d="M20 16l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `plug` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plug />
      <TablerIcons.plug class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plug(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.785 6l8.215 8.215l-2.054 2.054a5.81 5.81 0 1 1 -8.215 -8.215l2.054 -2.054z" />
      <path d="M4 20l3.5 -3.5" />
      <path d="M15 4l-3.5 3.5" />
      <path d="M20 9l-3.5 3.5" />
    </svg>
    """
  end

  @doc """
  Renders the `plus_equal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plus_equal />
      <TablerIcons.plus_equal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plus_equal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 7h6" />
      <path d="M7 4v6" />
      <path d="M20 16h-6" />
      <path d="M20 19h-6" />
      <path d="M5 19l14 -14" />
    </svg>
    """
  end

  @doc """
  Renders the `plus_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plus_minus />
      <TablerIcons.plus_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plus_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 7h6" />
      <path d="M7 4v6" />
      <path d="M20 18h-6" />
      <path d="M5 19l14 -14" />
    </svg>
    """
  end

  @doc """
  Renders the `plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.plus />
      <TablerIcons.plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5l0 14" />
      <path d="M5 12l14 0" />
    </svg>
    """
  end

  @doc """
  Renders the `png` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.png />
      <TablerIcons.png class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def png(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 8h-2a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2v-4h-1" />
      <path d="M3 16v-8h2a2 2 0 1 1 0 4h-2" />
      <path d="M10 16v-8l4 8v-8" />
    </svg>
    """
  end

  @doc """
  Renders the `podium_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.podium_off />
      <TablerIcons.podium_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def podium_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8h7l-.621 2.485a2 2 0 0 1 -1.94 1.515h-.439m-4 0h-4.439a2 2 0 0 1 -1.94 -1.515l-.621 -2.485h3" />
      <path d="M7 8v-1m.864 -3.106a2.99 2.99 0 0 1 2.136 -.894" />
      <path d="M8 12l1 9" />
      <path d="M15.599 15.613l-.599 5.387" />
      <path d="M7 21h10" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `podium` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.podium />
      <TablerIcons.podium class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def podium(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 8h14l-.621 2.485a2 2 0 0 1 -1.94 1.515h-8.878a2 2 0 0 1 -1.94 -1.515l-.621 -2.485z" />
      <path d="M7 8v-2a3 3 0 0 1 3 -3" />
      <path d="M8 12l1 9" />
      <path d="M16 12l-1 9" />
      <path d="M7 21h10" />
    </svg>
    """
  end

  @doc """
  Renders the `point_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.point_filled />
      <TablerIcons.point_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def point_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 7a5 5 0 1 1 -4.995 5.217l-.005 -.217l.005 -.217a5 5 0 0 1 4.995 -4.783z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `point_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.point_off />
      <TablerIcons.point_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def point_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.15 9.194a4 4 0 0 0 5.697 5.617m1.153 -2.811a4 4 0 0 0 -4 -4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `point` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.point />
      <TablerIcons.point class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def point(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_bolt />
      <TablerIcons.pointer_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.044 13.488l-1.266 -1.266l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l1.678 1.678" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_cancel />
      <TablerIcons.pointer_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.526 12.97l-.748 -.748l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l.714 .714" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_check />
      <TablerIcons.pointer_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.487 14.93l-2.709 -2.708l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l.785 .785" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_code />
      <TablerIcons.pointer_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.76 13.203l-.982 -.981l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l.67 .67" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_cog />
      <TablerIcons.pointer_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.774 13.218l-.996 -.996l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l.343 .343" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_dollar />
      <TablerIcons.pointer_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.778 12.222l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l.787 .787" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_down />
      <TablerIcons.pointer_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.992 13.436l-1.214 -1.214l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l1.171 1.171" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_exclamation />
      <TablerIcons.pointer_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.97 13.414l-1.192 -1.192l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l2.778 2.778" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_filled />
      <TablerIcons.pointer_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M3.039 4.277l3.904 13.563c.185 .837 .92 1.516 1.831 1.642l.17 .016a2.2 2.2 0 0 0 1.982 -1.006l.045 -.078l1.4 -2.072l4.05 4.05a2.067 2.067 0 0 0 2.924 0l1.047 -1.047c.388 -.388 .606 -.913 .606 -1.461l-.008 -.182a2.067 2.067 0 0 0 -.598 -1.28l-4.047 -4.048l2.103 -1.412c.726 -.385 1.18 -1.278 1.053 -2.189a2.2 2.2 0 0 0 -1.701 -1.845l-13.524 -3.89a1 1 0 0 0 -1.236 1.24z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_heart />
      <TablerIcons.pointer_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.571 11.018l1.32 -.886a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_minus />
      <TablerIcons.pointer_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.6 15.043l-2.822 -2.821l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l1.188 1.188" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_off />
      <TablerIcons.pointer_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.662 11.628l2.229 -1.496a1.2 1.2 0 0 0 -.309 -2.228l-8.013 -2.303m-5.569 -1.601l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l4.907 4.907a1.067 1.067 0 0 0 1.509 0l.524 -.524" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_pause />
      <TablerIcons.pointer_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.72 13.163l-.942 -.941l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l.969 .969" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_pin />
      <TablerIcons.pointer_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.778 12.222l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l.381 .381" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_plus />
      <TablerIcons.pointer_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.941 13.385l-1.163 -1.163l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l1.23 1.23" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_question />
      <TablerIcons.pointer_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.062 12.506l-.284 -.284l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l1.278 1.278" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_search />
      <TablerIcons.pointer_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.778 12.222l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_share />
      <TablerIcons.pointer_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.646 13.09l-.868 -.868l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l.607 .607" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_star />
      <TablerIcons.pointer_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.891 10.132a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_up />
      <TablerIcons.pointer_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.984 13.428l-1.206 -1.206l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l1.217 1.217" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer_x />
      <TablerIcons.pointer_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.768 13.212l-.99 -.99l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l.908 .908" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `pointer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pointer />
      <TablerIcons.pointer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pointer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.904 17.563a1.2 1.2 0 0 0 2.228 .308l2.09 -3.093l4.907 4.907a1.067 1.067 0 0 0 1.509 0l1.047 -1.047a1.067 1.067 0 0 0 0 -1.509l-4.907 -4.907l3.113 -2.09a1.2 1.2 0 0 0 -.309 -2.228l-13.582 -3.904l3.904 13.563z" />
    </svg>
    """
  end

  @doc """
  Renders the `pokeball_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pokeball_off />
      <TablerIcons.pokeball_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pokeball_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.04 16.048a9 9 0 0 0 -12.083 -12.09m-2.32 1.678a9 9 0 1 0 12.737 12.719" />
      <path d="M9.884 9.874a3 3 0 1 0 4.24 4.246m.57 -3.441a3.012 3.012 0 0 0 -1.41 -1.39" />
      <path d="M3 12h6m7 0h5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `pokeball` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pokeball />
      <TablerIcons.pokeball class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pokeball(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M3 12h6" />
      <path d="M15 12h6" />
    </svg>
    """
  end

  @doc """
  Renders the `poker_chip` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.poker_chip />
      <TablerIcons.poker_chip class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def poker_chip(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M12 3v4" />
      <path d="M12 17v4" />
      <path d="M3 12h4" />
      <path d="M17 12h4" />
      <path d="M18.364 5.636l-2.828 2.828" />
      <path d="M8.464 15.536l-2.828 2.828" />
      <path d="M5.636 5.636l2.828 2.828" />
      <path d="M15.536 15.536l2.828 2.828" />
    </svg>
    """
  end

  @doc """
  Renders the `polaroid_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.polaroid_filled />
      <TablerIcons.polaroid_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def polaroid_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M9.199 9.623l.108 .098l3.986 3.986l.094 .083a1 1 0 0 0 1.403 -1.403l-.083 -.094l-.292 -.293l1.292 -1.293l.106 -.095c.457 -.38 .918 -.38 1.386 .011l.108 .098l4.502 4.503a4.003 4.003 0 0 1 -3.596 2.77l-.213 .006h-12a4.002 4.002 0 0 1 -3.809 -2.775l5.516 -5.518l.106 -.095c.457 -.38 .918 -.38 1.386 .011zm8.801 -7.623a4 4 0 0 1 3.995 3.8l.005 .2v6.585l-3.293 -3.292l-.15 -.137c-1.256 -1.095 -2.85 -1.097 -4.096 -.017l-.154 .14l-1.307 1.306l-2.293 -2.292l-.15 -.137c-1.256 -1.095 -2.85 -1.097 -4.096 -.017l-.154 .14l-4.307 4.306v-6.585a4 4 0 0 1 3.8 -3.995l.2 -.005h12zm-2.99 3l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M8.01 20a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12.01 20a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M16.01 20a1 1 0 0 1 .117 1.993l-.127 .007a1 1 0 0 1 -.117 -1.993l.127 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `polaroid` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.polaroid />
      <TablerIcons.polaroid class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def polaroid(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M4 16l16 0" />
      <path d="M4 12l3 -3c.928 -.893 2.072 -.893 3 0l4 4" />
      <path d="M13 12l2 -2c.928 -.893 2.072 -.893 3 0l2 2" />
      <path d="M14 7l.01 0" />
    </svg>
    """
  end

  @doc """
  Renders the `polygon_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.polygon_off />
      <TablerIcons.polygon_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def polygon_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 8m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 11m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M15 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6.5 9.5l1.546 -1.311" />
      <path d="M14 5.5l3 1.5" />
      <path d="M18.5 10l-1.185 3.318m-1.062 2.972l-.253 .71" />
      <path d="M13.5 17.5l-7 -5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `polygon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.polygon />
      <TablerIcons.polygon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def polygon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 8m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 11m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M15 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6.5 9.5l3.5 -3" />
      <path d="M14 5.5l3 1.5" />
      <path d="M18.5 10l-2.5 7" />
      <path d="M13.5 17.5l-7 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `poo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.poo />
      <TablerIcons.poo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def poo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12h.01" />
      <path d="M14 12h.01" />
      <path d="M10 16a3.5 3.5 0 0 0 4 0" />
      <path d="M11 4c2 0 3.5 1.5 3.5 4l.164 0a2.5 2.5 0 0 1 2.196 3.32a3 3 0 0 1 1.615 3.063a3 3 0 0 1 -1.299 5.607l-.176 0h-10a3 3 0 0 1 -1.474 -5.613a3 3 0 0 1 1.615 -3.062a2.5 2.5 0 0 1 2.195 -3.32l.164 0c1.5 0 2.5 -2 1.5 -4z" />
    </svg>
    """
  end

  @doc """
  Renders the `pool_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pool_off />
      <TablerIcons.pool_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pool_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 20a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1c.303 0 .6 -.045 .876 -.146" />
      <path d="M2 16a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 1.13 -.856m5.727 1.717a2.4 2.4 0 0 0 1.143 -.861" />
      <path d="M15 11v-6.5a1.5 1.5 0 0 1 3 0" />
      <path d="M9 12v-3m0 -4v-.5a1.5 1.5 0 0 0 -1.936 -1.436" />
      <path d="M15 5h-6" />
      <path d="M9 10h1m4 0h1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `pool` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pool />
      <TablerIcons.pool class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pool(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 20a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1" />
      <path d="M2 16a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1" />
      <path d="M15 12v-7.5a1.5 1.5 0 0 1 3 0" />
      <path d="M9 12v-7.5a1.5 1.5 0 0 0 -3 0" />
      <path d="M15 5l-6 0" />
      <path d="M9 10l6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `power` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.power />
      <TablerIcons.power class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def power(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 6a7.75 7.75 0 1 0 10 0" />
      <path d="M12 4l0 8" />
    </svg>
    """
  end

  @doc """
  Renders the `pray` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pray />
      <TablerIcons.pray class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pray(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M7 20h8l-4 -4v-7l4 3l2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `premium_rights` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.premium_rights />
      <TablerIcons.premium_rights class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def premium_rights(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M13.867 9.75c-.246 -.48 -.708 -.769 -1.2 -.75h-1.334c-.736 0 -1.333 .67 -1.333 1.5c0 .827 .597 1.499 1.333 1.499h1.334c.736 0 1.333 .671 1.333 1.5c0 .828 -.597 1.499 -1.333 1.499h-1.334c-.492 .019 -.954 -.27 -1.2 -.75" />
      <path d="M12 7v2" />
      <path d="M12 15v2" />
    </svg>
    """
  end

  @doc """
  Renders the `prescription` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.prescription />
      <TablerIcons.prescription class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def prescription(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 19v-16h4.5a4.5 4.5 0 1 1 0 9h-4.5" />
      <path d="M19 21l-9 -9" />
      <path d="M13 21l6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `presentation_analytics` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.presentation_analytics />
      <TablerIcons.presentation_analytics class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def presentation_analytics(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 12v-4" />
      <path d="M15 12v-2" />
      <path d="M12 12v-1" />
      <path d="M3 4h18" />
      <path d="M4 4v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-10" />
      <path d="M12 16v4" />
      <path d="M9 20h6" />
    </svg>
    """
  end

  @doc """
  Renders the `presentation_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.presentation_off />
      <TablerIcons.presentation_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def presentation_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4h1m4 0h13" />
      <path d="M4 4v10a2 2 0 0 0 2 2h10m3.42 -.592c.359 -.362 .58 -.859 .58 -1.408v-10" />
      <path d="M12 16v4" />
      <path d="M9 20h6" />
      <path d="M8 12l2 -2m4 0l2 -2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `presentation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.presentation />
      <TablerIcons.presentation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def presentation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4l18 0" />
      <path d="M4 4v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-10" />
      <path d="M12 16l0 4" />
      <path d="M9 20l6 0" />
      <path d="M8 12l3 -3l2 2l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `printer_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.printer_off />
      <TablerIcons.printer_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def printer_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.412 16.416c.363 -.362 .588 -.863 .588 -1.416v-4a2 2 0 0 0 -2 -2h-6m-4 0h-4a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2" />
      <path d="M17 9v-4a2 2 0 0 0 -2 -2h-6c-.551 0 -1.05 .223 -1.412 .584m-.588 3.416v2" />
      <path d="M17 17v2a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2v-4a2 2 0 0 1 2 -2h4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `printer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.printer />
      <TablerIcons.printer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def printer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 17h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-14a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2" />
      <path d="M17 9v-4a2 2 0 0 0 -2 -2h-6a2 2 0 0 0 -2 2v4" />
      <path d="M7 13m0 2a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v4a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `prism_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.prism_off />
      <TablerIcons.prism_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def prism_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12v10" />
      <path d="M17.957 17.952l-4.937 3.703a1.7 1.7 0 0 1 -2.04 0l-5.98 -4.485a2.5 2.5 0 0 1 -1 -2v-11.17m3 -1h12a1 1 0 0 1 1 1v11.17c0 .25 -.037 .495 -.109 .729" />
      <path d="M12.688 8.7a1.7 1.7 0 0 0 .357 -.214l6.655 -5.186" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `prism_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.prism_plus />
      <TablerIcons.prism_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def prism_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9v13" />
      <path d="M13.02 21.655a1.7 1.7 0 0 1 -2.04 0l-5.98 -4.485a2.5 2.5 0 0 1 -1 -2v-11.17a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1v8" />
      <path d="M4.3 3.3l6.655 5.186a1.7 1.7 0 0 0 2.09 0l6.655 -5.186" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `prism` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.prism />
      <TablerIcons.prism class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def prism(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9v13" />
      <path d="M19 17.17l-5.98 4.485a1.7 1.7 0 0 1 -2.04 0l-5.98 -4.485a2.5 2.5 0 0 1 -1 -2v-11.17a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1v11.17a2.5 2.5 0 0 1 -1 2z" />
      <path d="M4.3 3.3l6.655 5.186a1.7 1.7 0 0 0 2.09 0l6.655 -5.186" />
    </svg>
    """
  end

  @doc """
  Renders the `prison` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.prison />
      <TablerIcons.prison class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def prison(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 4v16" />
      <path d="M14 4v16" />
      <path d="M6 4v5" />
      <path d="M6 15v5" />
      <path d="M10 4v5" />
      <path d="M11 9h-6v6h6z" />
      <path d="M10 15v5" />
      <path d="M8 12h-.01" />
    </svg>
    """
  end

  @doc """
  Renders the `progress_alert` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.progress_alert />
      <TablerIcons.progress_alert class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def progress_alert(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 20.777a8.942 8.942 0 0 1 -2.48 -.969" />
      <path d="M14 3.223a9.003 9.003 0 0 1 0 17.554" />
      <path d="M4.579 17.093a8.961 8.961 0 0 1 -1.227 -2.592" />
      <path d="M3.124 10.5c.16 -.95 .468 -1.85 .9 -2.675l.169 -.305" />
      <path d="M6.907 4.579a8.954 8.954 0 0 1 3.093 -1.356" />
      <path d="M12 8v4" />
      <path d="M12 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `progress_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.progress_bolt />
      <TablerIcons.progress_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def progress_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 20.777a8.942 8.942 0 0 1 -2.48 -.969" />
      <path d="M14 3.223a9.003 9.003 0 0 1 0 17.554" />
      <path d="M4.579 17.093a8.961 8.961 0 0 1 -1.227 -2.592" />
      <path d="M3.124 10.5c.16 -.95 .468 -1.85 .9 -2.675l.169 -.305" />
      <path d="M6.907 4.579a8.954 8.954 0 0 1 3.093 -1.356" />
      <path d="M12 9l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `progress_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.progress_check />
      <TablerIcons.progress_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def progress_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 20.777a8.942 8.942 0 0 1 -2.48 -.969" />
      <path d="M14 3.223a9.003 9.003 0 0 1 0 17.554" />
      <path d="M4.579 17.093a8.961 8.961 0 0 1 -1.227 -2.592" />
      <path d="M3.124 10.5c.16 -.95 .468 -1.85 .9 -2.675l.169 -.305" />
      <path d="M6.907 4.579a8.954 8.954 0 0 1 3.093 -1.356" />
      <path d="M9 12l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `progress_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.progress_down />
      <TablerIcons.progress_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def progress_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 20.777a8.942 8.942 0 0 1 -2.48 -.969" />
      <path d="M14 3.223a9.003 9.003 0 0 1 0 17.554" />
      <path d="M4.579 17.093a8.961 8.961 0 0 1 -1.227 -2.592" />
      <path d="M3.124 10.5c.16 -.95 .468 -1.85 .9 -2.675l.169 -.305" />
      <path d="M6.907 4.579a8.954 8.954 0 0 1 3.093 -1.356" />
      <path d="M12 9v6" />
      <path d="M15 12l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `progress_help` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.progress_help />
      <TablerIcons.progress_help class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def progress_help(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 16v.01" />
      <path d="M12 13a2 2 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
      <path d="M10 20.777a8.942 8.942 0 0 1 -2.48 -.969" />
      <path d="M14 3.223a9.003 9.003 0 0 1 0 17.554" />
      <path d="M4.579 17.093a8.961 8.961 0 0 1 -1.227 -2.592" />
      <path d="M3.124 10.5c.16 -.95 .468 -1.85 .9 -2.675l.169 -.305" />
      <path d="M6.907 4.579a8.954 8.954 0 0 1 3.093 -1.356" />
    </svg>
    """
  end

  @doc """
  Renders the `progress_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.progress_x />
      <TablerIcons.progress_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def progress_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 20.777a8.942 8.942 0 0 1 -2.48 -.969" />
      <path d="M14 3.223a9.003 9.003 0 0 1 0 17.554" />
      <path d="M4.579 17.093a8.961 8.961 0 0 1 -1.227 -2.592" />
      <path d="M3.124 10.5c.16 -.95 .468 -1.85 .9 -2.675l.169 -.305" />
      <path d="M6.907 4.579a8.954 8.954 0 0 1 3.093 -1.356" />
      <path d="M14 14l-4 -4" />
      <path d="M10 14l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `progress` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.progress />
      <TablerIcons.progress class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def progress(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 20.777a8.942 8.942 0 0 1 -2.48 -.969" />
      <path d="M14 3.223a9.003 9.003 0 0 1 0 17.554" />
      <path d="M4.579 17.093a8.961 8.961 0 0 1 -1.227 -2.592" />
      <path d="M3.124 10.5c.16 -.95 .468 -1.85 .9 -2.675l.169 -.305" />
      <path d="M6.907 4.579a8.954 8.954 0 0 1 3.093 -1.356" />
    </svg>
    """
  end

  @doc """
  Renders the `prompt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.prompt />
      <TablerIcons.prompt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def prompt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 7l5 5l-5 5" />
      <path d="M13 17l6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `propeller_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.propeller_off />
      <TablerIcons.propeller_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def propeller_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.448 10.432a3 3 0 1 0 4.106 4.143" />
      <path d="M14.272 10.272c.66 -1.459 1.058 -2.888 1.198 -4.286c.22 -1.63 -.762 -2.986 -3.47 -2.986c-1.94 0 -3 .696 -3.355 1.69m.697 4.653c.145 .384 .309 .77 .491 1.157" />
      <path d="M13.169 16.751c.97 1.395 2.057 2.523 3.257 3.386c1.02 .789 2.265 .853 3.408 -.288m1.479 -2.493c.492 -1.634 -.19 -2.726 -1.416 -3.229c-.82 -.37 -1.703 -.654 -2.65 -.852" />
      <path d="M8.664 13c-1.693 .143 -3.213 .52 -4.56 1.128c-1.522 .623 -2.206 2.153 -.852 4.498s3.02 2.517 4.321 1.512c1.2 -.863 2.287 -1.991 3.258 -3.386" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `propeller` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.propeller />
      <TablerIcons.propeller class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def propeller(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 13m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M14.167 10.5c.722 -1.538 1.156 -3.043 1.303 -4.514c.22 -1.63 -.762 -2.986 -3.47 -2.986s-3.69 1.357 -3.47 2.986c.147 1.471 .581 2.976 1.303 4.514" />
      <path d="M13.169 16.751c.97 1.395 2.057 2.523 3.257 3.386c1.3 1 2.967 .833 4.321 -1.512c1.354 -2.345 .67 -3.874 -.85 -4.498c-1.348 -.608 -2.868 -.985 -4.562 -1.128" />
      <path d="M8.664 13c-1.693 .143 -3.213 .52 -4.56 1.128c-1.522 .623 -2.206 2.153 -.852 4.498s3.02 2.517 4.321 1.512c1.2 -.863 2.287 -1.991 3.258 -3.386" />
    </svg>
    """
  end

  @doc """
  Renders the `pumpkin_scary` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pumpkin_scary />
      <TablerIcons.pumpkin_scary class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pumpkin_scary(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15l1.5 1l1.5 -1l1.5 1l1.5 -1" />
      <path d="M10 11h.01" />
      <path d="M14 11h.01" />
      <path d="M17 6.082c2.609 .588 3.627 4.162 2.723 7.983c-.903 3.82 -2.75 6.44 -5.359 5.853a3.355 3.355 0 0 1 -.774 -.279a3.728 3.728 0 0 1 -1.59 .361c-.556 0 -1.09 -.127 -1.59 -.362a3.296 3.296 0 0 1 -.774 .28c-2.609 .588 -4.456 -2.033 -5.36 -5.853c-.903 -3.82 .115 -7.395 2.724 -7.983c1.085 -.244 1.575 .066 2.585 .787c.716 -.554 1.54 -.869 2.415 -.869c.876 0 1.699 .315 2.415 .87c1.01 -.722 1.5 -1.032 2.585 -.788z" />
      <path d="M12 6c0 -1.226 .693 -2.346 1.789 -2.894l.211 -.106" />
    </svg>
    """
  end

  @doc """
  Renders the `puzzle_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.puzzle_2 />
      <TablerIcons.puzzle_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def puzzle_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M12 4v2.5a.5 .5 0 0 1 -.5 .5a1.5 1.5 0 0 0 0 3a.5 .5 0 0 1 .5 .5v1.5" />
      <path d="M12 12v1.5a.5 .5 0 0 0 .5 .5a1.5 1.5 0 0 1 0 3a.5 .5 0 0 0 -.5 .5v2.5" />
      <path d="M20 12h-2.5a.5 .5 0 0 1 -.5 -.5a1.5 1.5 0 0 0 -3 0a.5 .5 0 0 1 -.5 .5h-1.5" />
      <path d="M12 12h-1.5a.5 .5 0 0 0 -.5 .5a1.5 1.5 0 0 1 -3 0a.5 .5 0 0 0 -.5 -.5h-2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `puzzle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.puzzle_filled />
      <TablerIcons.puzzle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def puzzle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10 2a3 3 0 0 1 2.995 2.824l.005 .176v1h3a2 2 0 0 1 1.995 1.85l.005 .15v3h1a3 3 0 0 1 .176 5.995l-.176 .005h-1v3a2 2 0 0 1 -1.85 1.995l-.15 .005h-3a2 2 0 0 1 -1.995 -1.85l-.005 -.15v-1a1 1 0 0 0 -1.993 -.117l-.007 .117v1a2 2 0 0 1 -1.85 1.995l-.15 .005h-3a2 2 0 0 1 -1.995 -1.85l-.005 -.15v-3a2 2 0 0 1 1.85 -1.995l.15 -.005h1a1 1 0 0 0 .117 -1.993l-.117 -.007h-1a2 2 0 0 1 -1.995 -1.85l-.005 -.15v-3a2 2 0 0 1 1.85 -1.995l.15 -.005h3v-1a3 3 0 0 1 3 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `puzzle_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.puzzle_off />
      <TablerIcons.puzzle_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def puzzle_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.18 4.171a2 2 0 0 1 3.82 .829v1a1 1 0 0 0 1 1h3a1 1 0 0 1 1 1v3a1 1 0 0 0 1 1h1a2 2 0 0 1 .819 3.825m-2.819 1.175v3a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-1a2 2 0 1 0 -4 0v1a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1h1a2 2 0 1 0 0 -4h-1a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1h3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `puzzle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.puzzle />
      <TablerIcons.puzzle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def puzzle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 7h3a1 1 0 0 0 1 -1v-1a2 2 0 0 1 4 0v1a1 1 0 0 0 1 1h3a1 1 0 0 1 1 1v3a1 1 0 0 0 1 1h1a2 2 0 0 1 0 4h-1a1 1 0 0 0 -1 1v3a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-1a2 2 0 0 0 -4 0v1a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1h1a2 2 0 0 0 0 -4h-1a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `pyramid_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pyramid_off />
      <TablerIcons.pyramid_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pyramid_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21.384 17.373a1.004 1.004 0 0 0 -.013 -1.091l-8.54 -13.836a.999 .999 0 0 0 -1.664 0l-1.8 2.917m-1.531 2.48l-5.209 8.439a1.005 1.005 0 0 0 .386 1.452l8.092 4.054a1.994 1.994 0 0 0 1.789 0l5.903 -2.958" />
      <path d="M12 2v6m0 4v10" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `pyramid_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pyramid_plus />
      <TablerIcons.pyramid_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pyramid_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18.719 11.985l-5.889 -9.539a.999 .999 0 0 0 -1.664 0l-8.54 13.836a1.005 1.005 0 0 0 .386 1.452l8.092 4.054a1.994 1.994 0 0 0 1.789 0l.149 -.074" />
      <path d="M12 2v20" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `pyramid` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.pyramid />
      <TablerIcons.pyramid class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def pyramid(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.105 21.788a1.994 1.994 0 0 0 1.789 0l8.092 -4.054c.538 -.27 .718 -.951 .385 -1.452l-8.54 -13.836a.999 .999 0 0 0 -1.664 0l-8.54 13.836a1.005 1.005 0 0 0 .386 1.452l8.092 4.054z" />
      <path d="M12 2v20" />
    </svg>
    """
  end

  @doc """
  Renders the `qrcode_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.qrcode_off />
      <TablerIcons.qrcode_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def qrcode_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h1a1 1 0 0 1 1 1v1m-.297 3.711a1 1 0 0 1 -.703 .289h-4a1 1 0 0 1 -1 -1v-4c0 -.275 .11 -.524 .29 -.705" />
      <path d="M7 17v.01" />
      <path d="M14 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M7 7v.01" />
      <path d="M4 14m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M17 7v.01" />
      <path d="M20 14v.01" />
      <path d="M14 14v3" />
      <path d="M14 20h3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `qrcode` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.qrcode />
      <TablerIcons.qrcode class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def qrcode(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M7 17l0 .01" />
      <path d="M14 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M7 7l0 .01" />
      <path d="M4 14m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M17 7l0 .01" />
      <path d="M14 14l3 0" />
      <path d="M20 14l0 .01" />
      <path d="M14 14l0 3" />
      <path d="M14 20l3 0" />
      <path d="M17 17l3 0" />
      <path d="M20 17l0 3" />
    </svg>
    """
  end

  @doc """
  Renders the `question_mark` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.question_mark />
      <TablerIcons.question_mark class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def question_mark(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8a3.5 3 0 0 1 3.5 -3h1a3.5 3 0 0 1 3.5 3a3 3 0 0 1 -2 3a3 4 0 0 0 -2 4" />
      <path d="M12 19l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `quote_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.quote_off />
      <TablerIcons.quote_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def quote_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 11h-4a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1m4 4v3c0 2.667 -1.333 4.333 -4 5" />
      <path d="M19 11h-4m-1 -1v-3a1 1 0 0 1 1 -1h3a1 1 0 0 1 1 1v6c0 .66 -.082 1.26 -.245 1.798m-1.653 2.29c-.571 .4 -1.272 .704 -2.102 .912" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `quote` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.quote />
      <TablerIcons.quote class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def quote(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 11h-4a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1h3a1 1 0 0 1 1 1v6c0 2.667 -1.333 4.333 -4 5" />
      <path d="M19 11h-4a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1h3a1 1 0 0 1 1 1v6c0 2.667 -1.333 4.333 -4 5" />
    </svg>
    """
  end

  @doc """
  Renders the `quotes` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.quotes />
      <TablerIcons.quotes class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def quotes(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12c-1.333 -1.854 -1.333 -4.146 0 -6" />
      <path d="M8 12c-1.333 -1.854 -1.333 -4.146 0 -6" />
      <path d="M16 18c1.333 -1.854 1.333 -4.146 0 -6" />
      <path d="M20 18c1.333 -1.854 1.333 -4.146 0 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `radar_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.radar_2 />
      <TablerIcons.radar_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def radar_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M15.51 15.56a5 5 0 1 0 -3.51 1.44" />
      <path d="M18.832 17.86a9 9 0 1 0 -6.832 3.14" />
      <path d="M12 12v9" />
    </svg>
    """
  end

  @doc """
  Renders the `radar_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.radar_off />
      <TablerIcons.radar_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def radar_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.291 11.295a1 1 0 0 0 .709 1.705v8c2.488 0 4.74 -1.01 6.37 -2.642m1.675 -2.319a8.962 8.962 0 0 0 .955 -4.039h-5" />
      <path d="M16 9a5 5 0 0 0 -5.063 -1.88m-2.466 1.347a5 5 0 0 0 .53 7.535" />
      <path d="M20.486 9a9 9 0 0 0 -12.525 -5.032m-2.317 1.675a9 9 0 0 0 3.36 14.852" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `radar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.radar />
      <TablerIcons.radar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def radar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12h-8a1 1 0 1 0 -1 1v8a9 9 0 0 0 9 -9" />
      <path d="M16 9a5 5 0 1 0 -7 7" />
      <path d="M20.486 9a9 9 0 1 0 -11.482 11.495" />
    </svg>
    """
  end

  @doc """
  Renders the `radio_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.radio_off />
      <TablerIcons.radio_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def radio_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3l-4.986 2m-2.875 1.15l-1.51 .604a1 1 0 0 0 -.629 .928v11.323a1 1 0 0 0 1 1h14a1 1 0 0 0 .708 -.294m.292 -3.706v-8a1 1 0 0 0 -1 -1h-8m-4 0h-2.5" />
      <path d="M4 12h8m4 0h4" />
      <path d="M7 12v-2" />
      <path d="M13 16v.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `radio` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.radio />
      <TablerIcons.radio class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def radio(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 3l-9.371 3.749a1 1 0 0 0 -.629 .928v11.323a1 1 0 0 0 1 1h14a1 1 0 0 0 1 -1v-11a1 1 0 0 0 -1 -1h-14.5" />
      <path d="M4 12h16" />
      <path d="M7 12v-2" />
      <path d="M17 16v.01" />
      <path d="M13 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `radioactive_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.radioactive_filled />
      <TablerIcons.radioactive_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def radioactive_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M21 11a1 1 0 0 1 1 1a10 10 0 0 1 -5 8.656a1 1 0 0 1 -1.302 -.268l-.064 -.098l-3 -5.19a.995 .995 0 0 1 -.133 -.542l.01 -.11l.023 -.106l.034 -.106l.046 -.1l.056 -.094l.067 -.089a.994 .994 0 0 1 .165 -.155l.098 -.064a2 2 0 0 0 .993 -1.57l.007 -.163a1 1 0 0 1 .883 -.994l.117 -.007h6z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M7 3.344a10 10 0 0 1 10 0a1 1 0 0 1 .418 1.262l-.052 .104l-3 5.19l-.064 .098a.994 .994 0 0 1 -.155 .165l-.089 .067a1 1 0 0 1 -.195 .102l-.105 .034l-.107 .022a1.003 1.003 0 0 1 -.547 -.07l-.104 -.052a2 2 0 0 0 -1.842 -.082l-.158 .082a1 1 0 0 1 -1.302 -.268l-.064 -.098l-3 -5.19a1 1 0 0 1 .366 -1.366z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M9 11a1 1 0 0 1 .993 .884l.007 .117a2 2 0 0 0 .861 1.645l.237 .152a.994 .994 0 0 1 .165 .155l.067 .089l.056 .095l.045 .099c.014 .036 .026 .07 .035 .106l.022 .107l.011 .11a.994 .994 0 0 1 -.08 .437l-.053 .104l-3 5.19a1 1 0 0 1 -1.366 .366a10 10 0 0 1 -5 -8.656a1 1 0 0 1 .883 -.993l.117 -.007h6z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `radioactive_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.radioactive_off />
      <TablerIcons.radioactive_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def radioactive_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.118 14.127c-.182 .181 -.39 .341 -.618 .473l3 5.19a9 9 0 0 0 1.856 -1.423m1.68 -2.32a8.993 8.993 0 0 0 .964 -4.047h-5" />
      <path d="M13.5 9.4l3 -5.19a9 9 0 0 0 -8.536 -.25" />
      <path d="M10.5 14.6l-3 5.19a9 9 0 0 1 -4.5 -7.79h6a3 3 0 0 0 1.5 2.6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `radioactive` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.radioactive />
      <TablerIcons.radioactive class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def radioactive(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 14.6l3 5.19a9 9 0 0 0 4.5 -7.79h-6a3 3 0 0 1 -1.5 2.6" />
      <path d="M13.5 9.4l3 -5.19a9 9 0 0 0 -9 0l3 5.19a3 3 0 0 1 3 0" />
      <path d="M10.5 14.6l-3 5.19a9 9 0 0 1 -4.5 -7.79h6a3 3 0 0 0 1.5 2.6" />
    </svg>
    """
  end

  @doc """
  Renders the `radius_bottom_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.radius_bottom_left />
      <TablerIcons.radius_bottom_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def radius_bottom_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 19h-6a8 8 0 0 1 -8 -8v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `radius_bottom_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.radius_bottom_right />
      <TablerIcons.radius_bottom_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def radius_bottom_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 5v6a8 8 0 0 1 -8 8h-6" />
    </svg>
    """
  end

  @doc """
  Renders the `radius_top_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.radius_top_left />
      <TablerIcons.radius_top_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def radius_top_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 19v-6a8 8 0 0 1 8 -8h6" />
    </svg>
    """
  end

  @doc """
  Renders the `radius_top_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.radius_top_right />
      <TablerIcons.radius_top_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def radius_top_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5h6a8 8 0 0 1 8 8v6" />
    </svg>
    """
  end

  @doc """
  Renders the `rainbow_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rainbow_off />
      <TablerIcons.rainbow_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rainbow_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 17c0 -5.523 -4.477 -10 -10 -10c-.308 0 -.613 .014 -.914 .041m-3.208 .845a10 10 0 0 0 -5.878 9.114" />
      <path d="M11.088 11.069a6 6 0 0 0 -5.088 5.931" />
      <path d="M14 17a2 2 0 1 0 -4 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `rainbow` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rainbow />
      <TablerIcons.rainbow class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rainbow(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 17c0 -5.523 -4.477 -10 -10 -10s-10 4.477 -10 10" />
      <path d="M18 17a6 6 0 1 0 -12 0" />
      <path d="M14 17a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `rating_12_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rating_12_plus />
      <TablerIcons.rating_12_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rating_12_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M7 15v-6" />
      <path d="M15.5 12h3" />
      <path d="M17 10.5v3" />
      <path d="M10 10.5a1.5 1.5 0 0 1 3 0c0 .443 -.313 .989 -.612 1.393l-2.388 3.107h3" />
    </svg>
    """
  end

  @doc """
  Renders the `rating_14_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rating_14_plus />
      <TablerIcons.rating_14_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rating_14_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M7 15v-6" />
      <path d="M15.5 12h3" />
      <path d="M17 10.5v3" />
      <path d="M12.5 15v-6m-2.5 0v4h3" />
    </svg>
    """
  end

  @doc """
  Renders the `rating_16_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rating_16_plus />
      <TablerIcons.rating_16_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rating_16_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M11.5 13.5m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M7 15v-6" />
      <path d="M15.5 12h3" />
      <path d="M17 10.5v3" />
      <path d="M10 13.5v-3a1.5 1.5 0 0 1 1.5 -1.5h1" />
    </svg>
    """
  end

  @doc """
  Renders the `rating_18_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rating_18_plus />
      <TablerIcons.rating_18_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rating_18_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M11.5 10.5m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M11.5 13.5m-1.5 0a1.5 1.5 0 1 0 3 0a1.5 1.5 0 1 0 -3 0" />
      <path d="M7 15v-6" />
      <path d="M15.5 12h3" />
      <path d="M17 10.5v3" />
    </svg>
    """
  end

  @doc """
  Renders the `rating_21_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rating_21_plus />
      <TablerIcons.rating_21_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rating_21_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M13 15v-6" />
      <path d="M15.5 12h3" />
      <path d="M17 10.5v3" />
      <path d="M7 10.5a1.5 1.5 0 0 1 3 0c0 .443 -.313 .989 -.612 1.393l-2.388 3.107h3" />
    </svg>
    """
  end

  @doc """
  Renders the `razor_electric` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.razor_electric />
      <TablerIcons.razor_electric class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def razor_electric(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 3v2" />
      <path d="M12 3v2" />
      <path d="M16 3v2" />
      <path d="M9 12v6a3 3 0 0 0 6 0v-6h-6z" />
      <path d="M8 5h8l-1 4h-6z" />
      <path d="M12 17v1" />
    </svg>
    """
  end

  @doc """
  Renders the `razor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.razor />
      <TablerIcons.razor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def razor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h10v4h-10z" />
      <path d="M12 7v4" />
      <path d="M12 11a2 2 0 0 1 2 2v6a2 2 0 1 1 -4 0v-6a2 2 0 0 1 2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `receipt_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.receipt_2 />
      <TablerIcons.receipt_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def receipt_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 21v-16a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v16l-3 -2l-2 2l-2 -2l-2 2l-2 -2l-3 2" />
      <path d="M14 8h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5m2 0v1.5m0 -9v1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `receipt_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.receipt_off />
      <TablerIcons.receipt_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def receipt_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 21v-16m2 -2h10a2 2 0 0 1 2 2v10m0 4.01v1.99l-3 -2l-2 2l-2 -2l-2 2l-2 -2l-3 2" />
      <path d="M11 7l4 0" />
      <path d="M9 11l2 0" />
      <path d="M13 15l2 0" />
      <path d="M15 11l0 .01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `receipt_refund` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.receipt_refund />
      <TablerIcons.receipt_refund class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def receipt_refund(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 21v-16a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v16l-3 -2l-2 2l-2 -2l-2 2l-2 -2l-3 2" />
      <path d="M15 14v-2a2 2 0 0 0 -2 -2h-4l2 -2m0 4l-2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `receipt_tax` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.receipt_tax />
      <TablerIcons.receipt_tax class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def receipt_tax(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 14l6 -6" />
      <circle cx="9.5" cy="8.5" r=".5" fill="currentColor" />
      <circle cx="14.5" cy="13.5" r=".5" fill="currentColor" />
      <path d="M5 21v-16a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v16l-3 -2l-2 2l-2 -2l-2 2l-2 -2l-3 2" />
    </svg>
    """
  end

  @doc """
  Renders the `receipt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.receipt />
      <TablerIcons.receipt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def receipt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 21v-16a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v16l-3 -2l-2 2l-2 -2l-2 2l-2 -2l-3 2m4 -14h6m-6 4h6m-2 4h2" />
    </svg>
    """
  end

  @doc """
  Renders the `recharging` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.recharging />
      <TablerIcons.recharging class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def recharging(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.038 4.5a9 9 0 0 0 -2.495 2.47" />
      <path d="M3.186 10.209a9 9 0 0 0 0 3.508" />
      <path d="M4.5 16.962a9 9 0 0 0 2.47 2.495" />
      <path d="M10.209 20.814a9 9 0 0 0 3.5 0" />
      <path d="M16.962 19.5a9 9 0 0 0 2.495 -2.47" />
      <path d="M20.814 13.791a9 9 0 0 0 0 -3.508" />
      <path d="M19.5 7.038a9 9 0 0 0 -2.47 -2.495" />
      <path d="M13.791 3.186a9 9 0 0 0 -3.508 -.02" />
      <path d="M12 8l-2 4h4l-2 4" />
      <path d="M12 21a9 9 0 0 0 0 -18" />
    </svg>
    """
  end

  @doc """
  Renders the `record_mail_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.record_mail_off />
      <TablerIcons.record_mail_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def record_mail_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M18.569 14.557a3 3 0 1 0 -4.113 -4.149" />
      <path d="M7 15h8" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `record_mail` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.record_mail />
      <TablerIcons.record_mail class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def record_mail(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M7 15l10 0" />
    </svg>
    """
  end

  @doc """
  Renders the `rectangle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rectangle_filled />
      <TablerIcons.rectangle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rectangle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 4h-14a3 3 0 0 0 -3 3v10a3 3 0 0 0 3 3h14a3 3 0 0 0 3 -3v-10a3 3 0 0 0 -3 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `rectangle_rounded_bottom` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rectangle_rounded_bottom />
      <TablerIcons.rectangle_rounded_bottom class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rectangle_rounded_bottom(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 18h6a6 6 0 0 0 6 -6v-5a1 1 0 0 0 -1 -1h-16a1 1 0 0 0 -1 1v5a6 6 0 0 0 6 6z" />
    </svg>
    """
  end

  @doc """
  Renders the `rectangle_rounded_top` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rectangle_rounded_top />
      <TablerIcons.rectangle_rounded_top class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rectangle_rounded_top(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 6h6a6 6 0 0 1 6 6v5a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-5a6 6 0 0 1 6 -6z" />
    </svg>
    """
  end

  @doc """
  Renders the `rectangle_vertical_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rectangle_vertical_filled />
      <TablerIcons.rectangle_vertical_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rectangle_vertical_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 2h-10a3 3 0 0 0 -3 3v14a3 3 0 0 0 3 3h10a3 3 0 0 0 3 -3v-14a3 3 0 0 0 -3 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `rectangle_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rectangle_vertical />
      <TablerIcons.rectangle_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rectangle_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `rectangle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rectangle />
      <TablerIcons.rectangle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rectangle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `rectangular_prism_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rectangular_prism_off />
      <TablerIcons.rectangular_prism_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rectangular_prism_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.18 8.18l-4.18 2.093c-.619 .355 -1 1.01 -1 1.718v5.018c0 .709 .381 1.363 1 1.717l4 2.008a2.016 2.016 0 0 0 2 0l7.146 -3.578m2.67 -1.337l.184 -.093c.619 -.355 1 -1.01 1 -1.718v-5.018a1.98 1.98 0 0 0 -1 -1.717l-4 -2.008a2.016 2.016 0 0 0 -2 0l-3.146 1.575" />
      <path d="M9 21v-7.5" />
      <path d="M9 13.5l3.048 -1.458m2.71 -1.296l5.742 -2.746" />
      <path d="M3.5 11l5.5 2.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `rectangular_prism_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rectangular_prism_plus />
      <TablerIcons.rectangular_prism_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rectangular_prism_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12.5v-3.509a1.98 1.98 0 0 0 -1 -1.717l-4 -2.008a2.016 2.016 0 0 0 -2 0l-10 5.007c-.619 .355 -1 1.01 -1 1.718v5.018c0 .709 .381 1.363 1 1.717l4 2.008a2.016 2.016 0 0 0 2 0l2.062 -1.032" />
      <path d="M9 21v-7.5" />
      <path d="M9 13.5l11.5 -5.5" />
      <path d="M3.5 11l5.5 2.5" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `rectangular_prism` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rectangular_prism />
      <TablerIcons.rectangular_prism class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rectangular_prism(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 14.008v-5.018a1.98 1.98 0 0 0 -1 -1.717l-4 -2.008a2.016 2.016 0 0 0 -2 0l-10 5.008c-.619 .355 -1 1.01 -1 1.718v5.018c0 .709 .381 1.363 1 1.717l4 2.008a2.016 2.016 0 0 0 2 0l10 -5.008c.619 -.355 1 -1.01 1 -1.718z" />
      <path d="M9 21v-7.5" />
      <path d="M9 13.5l11.5 -5.5" />
      <path d="M3.5 11l5.5 2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `recycle_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.recycle_off />
      <TablerIcons.recycle_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def recycle_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 17l-2 2l2 2m-2 -2h9m1.896 -2.071a2 2 0 0 0 -.146 -.679l-.55 -1" />
      <path d="M8.536 11l-.732 -2.732l-2.732 .732m2.732 -.732l-4.5 7.794a2 2 0 0 0 1.506 2.89l1.141 .024" />
      <path d="M15.464 11l2.732 .732l.732 -2.732m-.732 2.732l-4.5 -7.794a2 2 0 0 0 -3.256 -.14l-.591 .976" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `recycle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.recycle />
      <TablerIcons.recycle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def recycle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 17l-2 2l2 2" />
      <path d="M10 19h9a2 2 0 0 0 1.75 -2.75l-.55 -1" />
      <path d="M8.536 11l-.732 -2.732l-2.732 .732" />
      <path d="M7.804 8.268l-4.5 7.794a2 2 0 0 0 1.506 2.89l1.141 .024" />
      <path d="M15.464 11l2.732 .732l.732 -2.732" />
      <path d="M18.196 11.732l-4.5 -7.794a2 2 0 0 0 -3.256 -.14l-.591 .976" />
    </svg>
    """
  end

  @doc """
  Renders the `refresh_alert` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.refresh_alert />
      <TablerIcons.refresh_alert class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def refresh_alert(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4" />
      <path d="M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4" />
      <path d="M12 9l0 3" />
      <path d="M12 15l.01 0" />
    </svg>
    """
  end

  @doc """
  Renders the `refresh_dot` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.refresh_dot />
      <TablerIcons.refresh_dot class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def refresh_dot(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4" />
      <path d="M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `refresh_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.refresh_off />
      <TablerIcons.refresh_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def refresh_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 11a8.1 8.1 0 0 0 -11.271 -6.305m-2.41 1.624a8.083 8.083 0 0 0 -1.819 2.681m-.5 -4v4h4" />
      <path d="M4 13a8.1 8.1 0 0 0 13.671 4.691m2.329 -1.691v-1h-1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `refresh` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.refresh />
      <TablerIcons.refresh class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def refresh(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4" />
      <path d="M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `regex_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.regex_off />
      <TablerIcons.regex_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def regex_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.5 15a2.5 2.5 0 1 1 0 5a2.5 2.5 0 0 1 0 -5z" />
      <path d="M17 7.875l3 -1.687" />
      <path d="M17 7.875v3.375" />
      <path d="M17 7.875l-3 -1.687" />
      <path d="M17 7.875l3 1.688" />
      <path d="M17 4.5v3.375" />
      <path d="M17 7.875l-3 1.688" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `regex` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.regex />
      <TablerIcons.regex class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def regex(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.5 15a2.5 2.5 0 1 1 0 5a2.5 2.5 0 0 1 0 -5z" />
      <path d="M17 7.875l3 -1.687" />
      <path d="M17 7.875v3.375" />
      <path d="M17 7.875l-3 -1.687" />
      <path d="M17 7.875l3 1.688" />
      <path d="M17 4.5v3.375" />
      <path d="M17 7.875l-3 1.688" />
    </svg>
    """
  end

  @doc """
  Renders the `registered` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.registered />
      <TablerIcons.registered class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def registered(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 15v-6h2a2 2 0 1 1 0 4h-2" />
      <path d="M14 15l-2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `relation_many_to_many` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.relation_many_to_many />
      <TablerIcons.relation_many_to_many class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def relation_many_to_many(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M15 14v-4l3 4v-4" />
      <path d="M6 14v-4l3 4v-4" />
      <path d="M12 10.5l0 .01" />
      <path d="M12 13.5l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `relation_one_to_many` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.relation_one_to_many />
      <TablerIcons.relation_one_to_many class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def relation_one_to_many(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M7 10h1v4" />
      <path d="M14 14v-4l3 4v-4" />
      <path d="M11 10.5l0 .01" />
      <path d="M11 13.5l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `relation_one_to_one` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.relation_one_to_one />
      <TablerIcons.relation_one_to_one class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def relation_one_to_one(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M8 10h1v4" />
      <path d="M15 10h1v4" />
      <path d="M12 10.5l0 .01" />
      <path d="M12 13.5l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `reload` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.reload />
      <TablerIcons.reload class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def reload(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.933 13.041a8 8 0 1 1 -9.925 -8.788c3.899 -1 7.935 1.007 9.425 4.747" />
      <path d="M20 4v5h-5" />
    </svg>
    """
  end

  @doc """
  Renders the `reorder` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.reorder />
      <TablerIcons.reorder class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def reorder(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 15m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M10 15m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M17 15m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M5 11v-3a3 3 0 0 1 3 -3h8a3 3 0 0 1 3 3v3" />
      <path d="M16.5 8.5l2.5 2.5l2.5 -2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `repeat_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.repeat_off />
      <TablerIcons.repeat_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def repeat_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12v-3c0 -1.336 .873 -2.468 2.08 -2.856m3.92 -.144h10m-3 -3l3 3l-3 3" />
      <path d="M20 12v3a3 3 0 0 1 -.133 .886m-1.99 1.984a3 3 0 0 1 -.877 .13h-13m3 3l-3 -3l3 -3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `repeat_once` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.repeat_once />
      <TablerIcons.repeat_once class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def repeat_once(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12v-3a3 3 0 0 1 3 -3h13m-3 -3l3 3l-3 3" />
      <path d="M20 12v3a3 3 0 0 1 -3 3h-13m3 3l-3 -3l3 -3" />
      <path d="M11 11l1 -1v4" />
    </svg>
    """
  end

  @doc """
  Renders the `repeat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.repeat />
      <TablerIcons.repeat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def repeat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12v-3a3 3 0 0 1 3 -3h13m-3 -3l3 3l-3 3" />
      <path d="M20 12v3a3 3 0 0 1 -3 3h-13m3 3l-3 -3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `replace_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.replace_filled />
      <TablerIcons.replace_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def replace_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M8 2h-4a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M20 14h-4a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M16.707 2.293a1 1 0 0 1 .083 1.32l-.083 .094l-1.293 1.293h3.586a3 3 0 0 1 2.995 2.824l.005 .176v3a1 1 0 0 1 -1.993 .117l-.007 -.117v-3a1 1 0 0 0 -.883 -.993l-.117 -.007h-3.585l1.292 1.293a1 1 0 0 1 -1.32 1.497l-.094 -.083l-3 -3a.98 .98 0 0 1 -.28 -.872l.036 -.146l.04 -.104c.058 -.126 .14 -.24 .245 -.334l2.959 -2.958a1 1 0 0 1 1.414 0z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M3 12a1 1 0 0 1 .993 .883l.007 .117v3a1 1 0 0 0 .883 .993l.117 .007h3.585l-1.292 -1.293a1 1 0 0 1 -.083 -1.32l.083 -.094a1 1 0 0 1 1.32 -.083l.094 .083l3 3a.98 .98 0 0 1 .28 .872l-.036 .146l-.04 .104a1.02 1.02 0 0 1 -.245 .334l-2.959 2.958a1 1 0 0 1 -1.497 -1.32l.083 -.094l1.291 -1.293h-3.584a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-3a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `replace_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.replace_off />
      <TablerIcons.replace_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def replace_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h1a1 1 0 0 1 1 1v1m-.303 3.717a1 1 0 0 1 -.697 .283h-4a1 1 0 0 1 -1 -1v-4c0 -.28 .115 -.532 .3 -.714" />
      <path d="M19 15h1a1 1 0 0 1 1 1v1m-.303 3.717a1 1 0 0 1 -.697 .283h-4a1 1 0 0 1 -1 -1v-4c0 -.28 .115 -.532 .3 -.714" />
      <path d="M21 11v-3a2 2 0 0 0 -2 -2h-6l3 3m0 -6l-3 3" />
      <path d="M3 13v3a2 2 0 0 0 2 2h6l-3 -3m0 6l3 -3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `replace` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.replace />
      <TablerIcons.replace class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def replace(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M15 15m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M21 11v-3a2 2 0 0 0 -2 -2h-6l3 3m0 -6l-3 3" />
      <path d="M3 13v3a2 2 0 0 0 2 2h6l-3 -3m0 6l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `report_analytics` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.report_analytics />
      <TablerIcons.report_analytics class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def report_analytics(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
      <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M9 17v-5" />
      <path d="M12 17v-1" />
      <path d="M15 17v-3" />
    </svg>
    """
  end

  @doc """
  Renders the `report_medical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.report_medical />
      <TablerIcons.report_medical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def report_medical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
      <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M10 14l4 0" />
      <path d="M12 12l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `report_money` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.report_money />
      <TablerIcons.report_money class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def report_money(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
      <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M14 11h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M12 17v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `report_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.report_off />
      <TablerIcons.report_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def report_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.576 5.595a2 2 0 0 0 -.576 1.405v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2m0 -4v-8a2 2 0 0 0 -2 -2h-2" />
      <path d="M9 5a2 2 0 0 1 2 -2h2a2 2 0 1 1 0 4h-2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `report_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.report_search />
      <TablerIcons.report_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def report_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h5.697" />
      <path d="M18 12v-5a2 2 0 0 0 -2 -2h-2" />
      <path d="M8 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M8 11h4" />
      <path d="M8 15h3" />
      <path d="M16.5 17.5m-2.5 0a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0 -5 0" />
      <path d="M18.5 19.5l2.5 2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `report` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.report />
      <TablerIcons.report class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def report(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h5.697" />
      <path d="M18 14v4h4" />
      <path d="M18 11v-4a2 2 0 0 0 -2 -2h-2" />
      <path d="M8 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M18 18m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M8 11h4" />
      <path d="M8 15h3" />
    </svg>
    """
  end

  @doc """
  Renders the `reserved_line` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.reserved_line />
      <TablerIcons.reserved_line class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def reserved_line(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 20h6" />
      <path d="M12 14v6" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M9 9h6" />
    </svg>
    """
  end

  @doc """
  Renders the `resize` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.resize />
      <TablerIcons.resize class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def resize(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 11v8a1 1 0 0 0 1 1h8m-9 -14v-1a1 1 0 0 1 1 -1h1m5 0h2m5 0h1a1 1 0 0 1 1 1v1m0 5v2m0 5v1a1 1 0 0 1 -1 1h-1" />
      <path d="M4 12h7a1 1 0 0 1 1 1v7" />
    </svg>
    """
  end

  @doc """
  Renders the `restore` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.restore />
      <TablerIcons.restore class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def restore(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.06 13a9 9 0 1 0 .49 -4.087" />
      <path d="M3 4.001v5h5" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_backward_10` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_backward_10 />
      <TablerIcons.rewind_backward_10 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_backward_10(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 9l-3 -3l3 -3" />
      <path d="M15.997 17.918a6.002 6.002 0 0 0 -.997 -11.918h-11" />
      <path d="M6 14v6" />
      <path d="M9 15.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_backward_15` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_backward_15 />
      <TablerIcons.rewind_backward_15 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_backward_15(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 20h2a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-2v-3h3" />
      <path d="M15 18a6 6 0 1 0 0 -12h-11" />
      <path d="M5 14v6" />
      <path d="M7 9l-3 -3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_backward_20` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_backward_20 />
      <TablerIcons.rewind_backward_20 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_backward_20(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.007 16.466a6 6 0 0 0 -4.007 -10.466h-11" />
      <path d="M7 9l-3 -3l3 -3" />
      <path d="M12 15.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
      <path d="M6 14h2a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-1a1 1 0 0 0 -1 1v1a1 1 0 0 0 1 1h2" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_backward_30` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_backward_30 />
      <TablerIcons.rewind_backward_30 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_backward_30(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.007 16.466a6 6 0 0 0 -4.007 -10.466h-11" />
      <path d="M12 15.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
      <path d="M6 14h1.5a1.5 1.5 0 0 1 0 3h-.5h.5a1.5 1.5 0 0 1 0 3h-1.5" />
      <path d="M7 9l-3 -3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_backward_40` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_backward_40 />
      <TablerIcons.rewind_backward_40 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_backward_40(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.007 16.466a6 6 0 0 0 -4.007 -10.466h-11" />
      <path d="M12 15.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
      <path d="M6 14v2a1 1 0 0 0 1 1h1" />
      <path d="M9 14v6" />
      <path d="M7 9l-3 -3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_backward_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_backward_5 />
      <TablerIcons.rewind_backward_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_backward_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 18a6 6 0 1 0 0 -12h-11" />
      <path d="M7 9l-3 -3l3 -3" />
      <path d="M8 20h2a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-2v-3h3" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_backward_50` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_backward_50 />
      <TablerIcons.rewind_backward_50 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_backward_50(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.007 16.466a6 6 0 0 0 -4.007 -10.466h-11" />
      <path d="M12 15.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
      <path d="M6 20h1.5a1.5 1.5 0 0 0 0 -3h-1.5v-3h3" />
      <path d="M7 9l-3 -3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_backward_60` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_backward_60 />
      <TablerIcons.rewind_backward_60 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_backward_60(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.007 16.466a6 6 0 0 0 -4.007 -10.466h-11" />
      <path d="M7 9l-3 -3l3 -3" />
      <path d="M12 15.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
      <path d="M9 14h-2a1 1 0 0 0 -1 1v4a1 1 0 0 0 1 1h1a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-2" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_forward_10` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_forward_10 />
      <TablerIcons.rewind_forward_10 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_forward_10(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 9l3 -3l-3 -3" />
      <path d="M8 17.918a5.997 5.997 0 0 1 -5 -5.918a6 6 0 0 1 6 -6h11" />
      <path d="M12 14v6" />
      <path d="M15 15.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_forward_15` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_forward_15 />
      <TablerIcons.rewind_forward_15 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_forward_15(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 9l3 -3l-3 -3" />
      <path d="M9 18a6 6 0 1 1 0 -12h11" />
      <path d="M16 20h2a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-2v-3h3" />
      <path d="M13 14v6" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_forward_20` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_forward_20 />
      <TablerIcons.rewind_forward_20 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_forward_20(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.007 16.478a6 6 0 0 1 3.993 -10.478h11" />
      <path d="M15 15.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
      <path d="M17 9l3 -3l-3 -3" />
      <path d="M9 14h2a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-1a1 1 0 0 0 -1 1v1a1 1 0 0 0 1 1h2" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_forward_30` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_forward_30 />
      <TablerIcons.rewind_forward_30 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_forward_30(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.007 16.478a6 6 0 0 1 3.993 -10.478h11" />
      <path d="M15 15.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
      <path d="M17 9l3 -3l-3 -3" />
      <path d="M9 14h1.5a1.5 1.5 0 0 1 0 3h-.5h.5a1.5 1.5 0 0 1 0 3h-1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_forward_40` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_forward_40 />
      <TablerIcons.rewind_forward_40 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_forward_40(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.007 16.478a6 6 0 0 1 3.993 -10.478h11" />
      <path d="M15 15.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
      <path d="M17 9l3 -3l-3 -3" />
      <path d="M9 14v2a1 1 0 0 0 1 1h1" />
      <path d="M12 14v6" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_forward_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_forward_5 />
      <TablerIcons.rewind_forward_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_forward_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 18a6 6 0 1 1 0 -12h11" />
      <path d="M13 20h2a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-2v-3h3" />
      <path d="M17 9l3 -3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_forward_50` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_forward_50 />
      <TablerIcons.rewind_forward_50 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_forward_50(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.007 16.478a6 6 0 0 1 3.993 -10.478h11" />
      <path d="M15 15.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
      <path d="M17 9l3 -3l-3 -3" />
      <path d="M9 20h1.5a1.5 1.5 0 0 0 0 -3h-1.5v-3h3" />
    </svg>
    """
  end

  @doc """
  Renders the `rewind_forward_60` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rewind_forward_60 />
      <TablerIcons.rewind_forward_60 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rewind_forward_60(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.007 16.478a6 6 0 0 1 3.993 -10.478h11" />
      <path d="M15 15.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
      <path d="M17 9l3 -3l-3 -3" />
      <path d="M12 14h-2a1 1 0 0 0 -1 1v4a1 1 0 0 0 1 1h1a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-2" />
    </svg>
    """
  end

  @doc """
  Renders the `ribbon_health` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ribbon_health />
      <TablerIcons.ribbon_health class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ribbon_health(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 21s9.286 -9.841 9.286 -13.841a3.864 3.864 0 0 0 -1.182 -3.008a4.13 4.13 0 0 0 -3.104 -1.144a4.13 4.13 0 0 0 -3.104 1.143a3.864 3.864 0 0 0 -1.182 3.01c0 4 9.286 13.84 9.286 13.84" />
    </svg>
    """
  end

  @doc """
  Renders the `rings` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rings />
      <TablerIcons.rings class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rings(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M7 15v-11" />
      <path d="M17 15v-11" />
      <path d="M3 4h18" />
    </svg>
    """
  end

  @doc """
  Renders the `ripple_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ripple_off />
      <TablerIcons.ripple_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ripple_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7c.915 -.61 1.83 -1.034 2.746 -1.272m4.212 .22c.68 .247 1.361 .598 2.042 1.052c3 2 6 2 9 0" />
      <path d="M3 17c3 -2 6 -2 9 0c2.092 1.395 4.184 1.817 6.276 1.266" />
      <path d="M3 12c3 -2 6 -2 9 0m5.482 1.429c1.173 -.171 2.345 -.647 3.518 -1.429" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ripple` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ripple />
      <TablerIcons.ripple class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ripple(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7c3 -2 6 -2 9 0s6 2 9 0" />
      <path d="M3 17c3 -2 6 -2 9 0s6 2 9 0" />
      <path d="M3 12c3 -2 6 -2 9 0s6 2 9 0" />
    </svg>
    """
  end

  @doc """
  Renders the `road_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.road_off />
      <TablerIcons.road_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def road_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19l3.332 -11.661" />
      <path d="M16 5l2.806 9.823" />
      <path d="M12 8v-2" />
      <path d="M12 13v-1" />
      <path d="M12 18v-2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `road_sign` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.road_sign />
      <TablerIcons.road_sign class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def road_sign(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.446 2.6l7.955 7.954a2.045 2.045 0 0 1 0 2.892l-7.955 7.955a2.045 2.045 0 0 1 -2.892 0l-7.955 -7.955a2.045 2.045 0 0 1 0 -2.892l7.955 -7.955a2.045 2.045 0 0 1 2.892 0z" />
      <path d="M9 14v-2c0 -.59 .414 -1 1 -1h5" />
      <path d="M13 9l2 2l-2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `road` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.road />
      <TablerIcons.road class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def road(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19l4 -14" />
      <path d="M16 5l4 14" />
      <path d="M12 8v-2" />
      <path d="M12 13v-2" />
      <path d="M12 18v-2" />
    </svg>
    """
  end

  @doc """
  Renders the `robot_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.robot_off />
      <TablerIcons.robot_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def robot_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 7h6a2 2 0 0 1 2 2v1l1 1v3l-1 1m-.171 3.811a2 2 0 0 1 -1.829 1.189h-10a2 2 0 0 1 -2 -2v-3l-1 -1v-3l1 -1v-1a2 2 0 0 1 2 -2" />
      <path d="M10 16h4" />
      <path d="M8.5 11.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M15.854 11.853a.498 .498 0 0 0 -.354 -.853a.498 .498 0 0 0 -.356 .149" />
      <path d="M8.336 4.343l-.336 -1.343" />
      <path d="M15 7l1 -4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `robot` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.robot />
      <TablerIcons.robot class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def robot(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 7h10a2 2 0 0 1 2 2v1l1 1v3l-1 1v3a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-3l-1 -1v-3l1 -1v-1a2 2 0 0 1 2 -2z" />
      <path d="M10 16h4" />
      <circle cx="8.5" cy="11.5" r=".5" fill="currentColor" />
      <circle cx="15.5" cy="11.5" r=".5" fill="currentColor" />
      <path d="M9 7l-1 -4" />
      <path d="M15 7l1 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `rocket_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rocket_off />
      <TablerIcons.rocket_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rocket_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.29 9.275a9.03 9.03 0 0 0 -.29 .725a6 6 0 0 0 -5 3a8 8 0 0 1 7 7a6 6 0 0 0 3 -5c.241 -.085 .478 -.18 .708 -.283m2.428 -1.61a9 9 0 0 0 2.864 -6.107a3 3 0 0 0 -3 -3a9 9 0 0 0 -6.107 2.864" />
      <path d="M7 14a6 6 0 0 0 -3 6a6 6 0 0 0 6 -3" />
      <path d="M15 9m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `rocket` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rocket />
      <TablerIcons.rocket class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rocket(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 13a8 8 0 0 1 7 7a6 6 0 0 0 3 -5a9 9 0 0 0 6 -8a3 3 0 0 0 -3 -3a9 9 0 0 0 -8 6a6 6 0 0 0 -5 3" />
      <path d="M7 14a6 6 0 0 0 -3 6a6 6 0 0 0 6 -3" />
      <path d="M15 9m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `roller_skating` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.roller_skating />
      <TablerIcons.roller_skating class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def roller_skating(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.905 5h3.418a1 1 0 0 1 .928 .629l1.143 2.856a3 3 0 0 0 2.207 1.83l4.717 .926a2.084 2.084 0 0 1 1.682 2.045v.714a1 1 0 0 1 -1 1h-13.895a1 1 0 0 1 -1 -1.1l.8 -8a1 1 0 0 1 1 -.9z" />
      <path d="M8 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M16 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `rollercoaster_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rollercoaster_off />
      <TablerIcons.rollercoaster_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rollercoaster_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21a5.55 5.55 0 0 0 5.265 -3.795l.735 -2.205a8.759 8.759 0 0 1 2.35 -3.652m2.403 -1.589a8.76 8.76 0 0 1 3.572 -.759h3.675" />
      <path d="M20 9v7m0 4v1" />
      <path d="M8 21v-3" />
      <path d="M12 21v-9" />
      <path d="M16 9.5v2.5m0 4v5" />
      <path d="M15 3h5v3h-5z" />
      <path d="M9.446 5.415l.554 -.415l2 2.5l-.285 .213m-2.268 1.702l-1.447 1.085l-1.8 -.5l-.2 -2l1.139 -.854" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `rollercoaster` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rollercoaster />
      <TablerIcons.rollercoaster class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rollercoaster(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21a5.55 5.55 0 0 0 5.265 -3.795l.735 -2.205a8.775 8.775 0 0 1 8.325 -6h3.675" />
      <path d="M20 9v12" />
      <path d="M8 21v-3" />
      <path d="M12 21v-10" />
      <path d="M16 9.5v11.5" />
      <path d="M15 3h5v3h-5z" />
      <path d="M6 8l4 -3l2 2.5l-4 3l-1.8 -.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `rosette_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rosette_filled />
      <TablerIcons.rosette_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rosette_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12.01 2.011a3.2 3.2 0 0 1 2.113 .797l.154 .145l.698 .698a1.2 1.2 0 0 0 .71 .341l.135 .008h1a3.2 3.2 0 0 1 3.195 3.018l.005 .182v1c0 .27 .092 .533 .258 .743l.09 .1l.697 .698a3.2 3.2 0 0 1 .147 4.382l-.145 .154l-.698 .698a1.2 1.2 0 0 0 -.341 .71l-.008 .135v1a3.2 3.2 0 0 1 -3.018 3.195l-.182 .005h-1a1.2 1.2 0 0 0 -.743 .258l-.1 .09l-.698 .697a3.2 3.2 0 0 1 -4.382 .147l-.154 -.145l-.698 -.698a1.2 1.2 0 0 0 -.71 -.341l-.135 -.008h-1a3.2 3.2 0 0 1 -3.195 -3.018l-.005 -.182v-1a1.2 1.2 0 0 0 -.258 -.743l-.09 -.1l-.697 -.698a3.2 3.2 0 0 1 -.147 -4.382l.145 -.154l.698 -.698a1.2 1.2 0 0 0 .341 -.71l.008 -.135v-1l.005 -.182a3.2 3.2 0 0 1 3.013 -3.013l.182 -.005h1a1.2 1.2 0 0 0 .743 -.258l.1 -.09l.698 -.697a3.2 3.2 0 0 1 2.269 -.944z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `rosette_number_0` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rosette_number_0 />
      <TablerIcons.rosette_number_0 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rosette_number_0(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10v4a2 2 0 1 0 4 0v-4a2 2 0 1 0 -4 0z" />
      <path d="M5 7.2a2.2 2.2 0 0 1 2.2 -2.2h1a2.2 2.2 0 0 0 1.55 -.64l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7c.412 .41 .97 .64 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1c0 .58 .23 1.138 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.64 1.55v1a2.2 2.2 0 0 1 -2.2 2.2h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `rosette_number_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rosette_number_1 />
      <TablerIcons.rosette_number_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rosette_number_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10l2 -2v8" />
      <path d="M5 7.2a2.2 2.2 0 0 1 2.2 -2.2h1a2.2 2.2 0 0 0 1.55 -.64l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7c.412 .41 .97 .64 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1c0 .58 .23 1.138 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.64 1.55v1a2.2 2.2 0 0 1 -2.2 2.2h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `rosette_number_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rosette_number_2 />
      <TablerIcons.rosette_number_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rosette_number_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8h3a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h3" />
      <path d="M5 7.2a2.2 2.2 0 0 1 2.2 -2.2h1a2.2 2.2 0 0 0 1.55 -.64l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7c.412 .41 .97 .64 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1c0 .58 .23 1.138 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.64 1.55v1a2.2 2.2 0 0 1 -2.2 2.2h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `rosette_number_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rosette_number_3 />
      <TablerIcons.rosette_number_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rosette_number_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 9a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1" />
      <path d="M5 7.2a2.2 2.2 0 0 1 2.2 -2.2h1a2.2 2.2 0 0 0 1.55 -.64l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7c.412 .41 .97 .64 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1c0 .58 .23 1.138 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.64 1.55v1a2.2 2.2 0 0 1 -2.2 2.2h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `rosette_number_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rosette_number_4 />
      <TablerIcons.rosette_number_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rosette_number_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8v3a1 1 0 0 0 1 1h3" />
      <path d="M14 8v8" />
      <path d="M5 7.2a2.2 2.2 0 0 1 2.2 -2.2h1a2.2 2.2 0 0 0 1.55 -.64l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7c.412 .41 .97 .64 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1c0 .58 .23 1.138 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.64 1.55v1a2.2 2.2 0 0 1 -2.2 2.2h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `rosette_number_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rosette_number_5 />
      <TablerIcons.rosette_number_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rosette_number_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-3v-4h4" />
      <path d="M5 7.2a2.2 2.2 0 0 1 2.2 -2.2h1a2.2 2.2 0 0 0 1.55 -.64l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7c.412 .41 .97 .64 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1c0 .58 .23 1.138 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.64 1.55v1a2.2 2.2 0 0 1 -2.2 2.2h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `rosette_number_6` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rosette_number_6 />
      <TablerIcons.rosette_number_6 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rosette_number_6(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 9a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v6a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-3" />
      <path d="M5 7.2a2.2 2.2 0 0 1 2.2 -2.2h1a2.2 2.2 0 0 0 1.55 -.64l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7c.412 .41 .97 .64 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1c0 .58 .23 1.138 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.64 1.55v1a2.2 2.2 0 0 1 -2.2 2.2h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `rosette_number_7` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rosette_number_7 />
      <TablerIcons.rosette_number_7 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rosette_number_7(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8h4l-2 8" />
      <path d="M5 7.2a2.2 2.2 0 0 1 2.2 -2.2h1a2.2 2.2 0 0 0 1.55 -.64l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7c.412 .41 .97 .64 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1c0 .58 .23 1.138 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.64 1.55v1a2.2 2.2 0 0 1 -2.2 2.2h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `rosette_number_8` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rosette_number_8 />
      <TablerIcons.rosette_number_8 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rosette_number_8(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12h-1a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1" />
      <path d="M5 7.2a2.2 2.2 0 0 1 2.2 -2.2h1a2.2 2.2 0 0 0 1.55 -.64l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7c.412 .41 .97 .64 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1c0 .58 .23 1.138 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.64 1.55v1a2.2 2.2 0 0 1 -2.2 2.2h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `rosette_number_9` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rosette_number_9 />
      <TablerIcons.rosette_number_9 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rosette_number_9(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-6a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h3" />
      <path d="M5 7.2a2.2 2.2 0 0 1 2.2 -2.2h1a2.2 2.2 0 0 0 1.55 -.64l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7c.412 .41 .97 .64 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1c0 .58 .23 1.138 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.64 1.55v1a2.2 2.2 0 0 1 -2.2 2.2h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `rosette` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rosette />
      <TablerIcons.rosette class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rosette(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 7.2a2.2 2.2 0 0 1 2.2 -2.2h1a2.2 2.2 0 0 0 1.55 -.64l.7 -.7a2.2 2.2 0 0 1 3.12 0l.7 .7c.412 .41 .97 .64 1.55 .64h1a2.2 2.2 0 0 1 2.2 2.2v1c0 .58 .23 1.138 .64 1.55l.7 .7a2.2 2.2 0 0 1 0 3.12l-.7 .7a2.2 2.2 0 0 0 -.64 1.55v1a2.2 2.2 0 0 1 -2.2 2.2h-1a2.2 2.2 0 0 0 -1.55 .64l-.7 .7a2.2 2.2 0 0 1 -3.12 0l-.7 -.7a2.2 2.2 0 0 0 -1.55 -.64h-1a2.2 2.2 0 0 1 -2.2 -2.2v-1a2.2 2.2 0 0 0 -.64 -1.55l-.7 -.7a2.2 2.2 0 0 1 0 -3.12l.7 -.7a2.2 2.2 0 0 0 .64 -1.55v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `rotate_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rotate_2 />
      <TablerIcons.rotate_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rotate_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 4.55a8 8 0 0 0 -6 14.9m0 -4.45v5h-5" />
      <path d="M18.37 7.16l0 .01" />
      <path d="M13 19.94l0 .01" />
      <path d="M16.84 18.37l0 .01" />
      <path d="M19.37 15.1l0 .01" />
      <path d="M19.94 11l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `rotate_360` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rotate_360 />
      <TablerIcons.rotate_360 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rotate_360(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 16h4v4" />
      <path d="M19.458 11.042c.86 -2.366 .722 -4.58 -.6 -5.9c-2.272 -2.274 -7.185 -1.045 -10.973 2.743c-3.788 3.788 -5.017 8.701 -2.744 10.974c2.227 2.226 6.987 1.093 10.74 -2.515" />
    </svg>
    """
  end

  @doc """
  Renders the `rotate_clockwise_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rotate_clockwise_2 />
      <TablerIcons.rotate_clockwise_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rotate_clockwise_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 4.55a8 8 0 0 1 6 14.9m0 -4.45v5h5" />
      <path d="M5.63 7.16l0 .01" />
      <path d="M4.06 11l0 .01" />
      <path d="M4.63 15.1l0 .01" />
      <path d="M7.16 18.37l0 .01" />
      <path d="M11 19.94l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `rotate_clockwise` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rotate_clockwise />
      <TablerIcons.rotate_clockwise class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rotate_clockwise(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.05 11a8 8 0 1 1 .5 4m-.5 5v-5h5" />
    </svg>
    """
  end

  @doc """
  Renders the `rotate_dot` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rotate_dot />
      <TablerIcons.rotate_dot class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rotate_dot(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.95 11a8 8 0 1 0 -.5 4m.5 5v-5h-5" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `rotate_rectangle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rotate_rectangle />
      <TablerIcons.rotate_rectangle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rotate_rectangle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.09 4.01l.496 -.495a2 2 0 0 1 2.828 0l7.071 7.07a2 2 0 0 1 0 2.83l-7.07 7.07a2 2 0 0 1 -2.83 0l-7.07 -7.07a2 2 0 0 1 0 -2.83l3.535 -3.535h-3.988" />
      <path d="M7.05 11.038v-3.988" />
    </svg>
    """
  end

  @doc """
  Renders the `rotate` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rotate />
      <TablerIcons.rotate class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rotate(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.95 11a8 8 0 1 0 -.5 4m.5 5v-5h-5" />
    </svg>
    """
  end

  @doc """
  Renders the `route_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.route_2 />
      <TablerIcons.route_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def route_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17l4 4" />
      <path d="M7 17l-4 4" />
      <path d="M17 3l4 4" />
      <path d="M21 3l-4 4" />
      <path d="M14 5a2 2 0 0 0 -2 2v10a2 2 0 0 1 -2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `route_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.route_off />
      <TablerIcons.route_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def route_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 19h4.5c.71 0 1.372 -.212 1.924 -.576m1.545 -2.459a3.5 3.5 0 0 0 -3.469 -3.965h-.499m-4 0h-3.501a3.5 3.5 0 0 1 -2.477 -5.972m2.477 -1.028h3.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `route` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.route />
      <TablerIcons.route class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def route(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 19h4.5a3.5 3.5 0 0 0 0 -7h-8a3.5 3.5 0 0 1 0 -7h3.5" />
    </svg>
    """
  end

  @doc """
  Renders the `router_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.router_off />
      <TablerIcons.router_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def router_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 13h2a2 2 0 0 1 2 2v2m-.588 3.417c-.362 .36 -.861 .583 -1.412 .583h-14a2 2 0 0 1 -2 -2v-4a2 2 0 0 1 2 -2h8" />
      <path d="M17 17v.01" />
      <path d="M13 17v.01" />
      <path d="M12.226 8.2a4 4 0 0 1 6.024 .55" />
      <path d="M9.445 5.407a8 8 0 0 1 12.055 1.093" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `router` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.router />
      <TablerIcons.router class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def router(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 13m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v4a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M17 17l0 .01" />
      <path d="M13 17l0 .01" />
      <path d="M15 13l0 -2" />
      <path d="M11.75 8.75a4 4 0 0 1 6.5 0" />
      <path d="M8.5 6.5a8 8 0 0 1 13 0" />
    </svg>
    """
  end

  @doc """
  Renders the `row_insert_bottom` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.row_insert_bottom />
      <TablerIcons.row_insert_bottom class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def row_insert_bottom(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 6v4a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1z" />
      <path d="M12 15l0 4" />
      <path d="M14 17l-4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `row_insert_top` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.row_insert_top />
      <TablerIcons.row_insert_top class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def row_insert_top(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 18v-4a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1z" />
      <path d="M12 9v-4" />
      <path d="M10 7l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `row_remove` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.row_remove />
      <TablerIcons.row_remove class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def row_remove(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 6v4a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1z" />
      <path d="M10 16l4 4" />
      <path d="M10 20l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `rss` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rss />
      <TablerIcons.rss class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rss(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M4 4a16 16 0 0 1 16 16" />
      <path d="M4 11a9 9 0 0 1 9 9" />
    </svg>
    """
  end

  @doc """
  Renders the `rubber_stamp_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rubber_stamp_off />
      <TablerIcons.rubber_stamp_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rubber_stamp_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.273 8.273c.805 2.341 2.857 5.527 -1.484 5.527c-2.368 0 -3.789 0 -3.789 4.05h14.85" />
      <path d="M5 21h14" />
      <path d="M3 3l18 18" />
      <path d="M8.712 4.722a3.99 3.99 0 0 1 3.288 -1.722a4 4 0 0 1 4 4c0 .992 -.806 2.464 -1.223 3.785m6.198 6.196c-.182 -2.883 -1.332 -3.153 -3.172 -3.178" />
    </svg>
    """
  end

  @doc """
  Renders the `rubber_stamp` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.rubber_stamp />
      <TablerIcons.rubber_stamp class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def rubber_stamp(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 17.85h-18c0 -4.05 1.421 -4.05 3.79 -4.05c5.21 0 1.21 -4.59 1.21 -6.8a4 4 0 1 1 8 0c0 2.21 -4 6.8 1.21 6.8c2.369 0 3.79 0 3.79 4.05z" />
      <path d="M5 21h14" />
    </svg>
    """
  end

  @doc """
  Renders the `ruler_2_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ruler_2_off />
      <TablerIcons.ruler_2_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ruler_2_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.03 7.97l4.97 -4.97l4 4l-5 5m-2 2l-7 7l-4 -4l7 -7" />
      <path d="M16 7l-1.5 -1.5" />
      <path d="M10 13l-1.5 -1.5" />
      <path d="M7 16l-1.5 -1.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ruler_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ruler_2 />
      <TablerIcons.ruler_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ruler_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 3l4 4l-14 14l-4 -4z" />
      <path d="M16 7l-1.5 -1.5" />
      <path d="M13 10l-1.5 -1.5" />
      <path d="M10 13l-1.5 -1.5" />
      <path d="M7 16l-1.5 -1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `ruler_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ruler_3 />
      <TablerIcons.ruler_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ruler_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 8c.621 0 1.125 .512 1.125 1.143v5.714c0 .631 -.504 1.143 -1.125 1.143h-15.875a1 1 0 0 1 -1 -1v-5.857c0 -.631 .504 -1.143 1.125 -1.143h15.75z" />
      <path d="M9 8v2" />
      <path d="M6 8v3" />
      <path d="M12 8v3" />
      <path d="M18 8v3" />
      <path d="M15 8v2" />
    </svg>
    """
  end

  @doc """
  Renders the `ruler_measure` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ruler_measure />
      <TablerIcons.ruler_measure class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ruler_measure(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 12c.621 0 1.125 .512 1.125 1.143v5.714c0 .631 -.504 1.143 -1.125 1.143h-15.875a1 1 0 0 1 -1 -1v-5.857c0 -.631 .504 -1.143 1.125 -1.143h15.75z" />
      <path d="M9 12v2" />
      <path d="M6 12v3" />
      <path d="M12 12v3" />
      <path d="M18 12v3" />
      <path d="M15 12v2" />
      <path d="M3 3v4" />
      <path d="M3 5h18" />
      <path d="M21 3v4" />
    </svg>
    """
  end

  @doc """
  Renders the `ruler_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ruler_off />
      <TablerIcons.ruler_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ruler_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h11a1 1 0 0 1 1 1v5a1 1 0 0 1 -1 1h-4m-3.713 .299a1 1 0 0 0 -.287 .701v7a1 1 0 0 1 -1 1h-5a1 1 0 0 1 -1 -1v-14c0 -.284 .118 -.54 .308 -.722" />
      <path d="M4 8h2" />
      <path d="M4 12h3" />
      <path d="M4 16h2" />
      <path d="M12 4v3" />
      <path d="M16 4v2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ruler` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ruler />
      <TablerIcons.ruler class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ruler(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4h14a1 1 0 0 1 1 1v5a1 1 0 0 1 -1 1h-7a1 1 0 0 0 -1 1v7a1 1 0 0 1 -1 1h-5a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1" />
      <path d="M4 8l2 0" />
      <path d="M4 12l3 0" />
      <path d="M4 16l2 0" />
      <path d="M8 4l0 2" />
      <path d="M12 4l0 3" />
      <path d="M16 4l0 2" />
    </svg>
    """
  end

  @doc """
  Renders the `run` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.run />
      <TablerIcons.run class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def run(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 4m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M4 17l5 1l.75 -1.5" />
      <path d="M15 21l0 -4l-4 -3l1 -6" />
      <path d="M7 12l0 -3l5 -1l3 3l3 1" />
    </svg>
    """
  end

  @doc """
  Renders the `s_turn_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.s_turn_down />
      <TablerIcons.s_turn_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def s_turn_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 5a2 2 0 1 1 -4 0a2 2 0 0 1 4 0z" />
      <path d="M5 7v9.5a3.5 3.5 0 0 0 7 0v-9a3.5 3.5 0 0 1 7 0v13.5" />
      <path d="M16 18l3 3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `s_turn_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.s_turn_left />
      <TablerIcons.s_turn_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def s_turn_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 7a2 2 0 1 1 0 -4a2 2 0 0 1 0 4z" />
      <path d="M17 5h-9.5a3.5 3.5 0 0 0 0 7h9a3.5 3.5 0 0 1 0 7h-13.5" />
      <path d="M6 16l-3 3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `s_turn_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.s_turn_right />
      <TablerIcons.s_turn_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def s_turn_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 5h9.5a3.5 3.5 0 0 1 0 7h-9a3.5 3.5 0 0 0 0 7h13.5" />
      <path d="M18 16l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `s_turn_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.s_turn_up />
      <TablerIcons.s_turn_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def s_turn_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 19a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M5 17v-9.5a3.5 3.5 0 0 1 7 0v9a3.5 3.5 0 0 0 7 0v-13.5" />
      <path d="M16 6l3 -3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `sailboat_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sailboat_2 />
      <TablerIcons.sailboat_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sailboat_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 20a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1" />
      <path d="M4 18l-1 -3h18l-1 3" />
      <path d="M12 11v4" />
      <path d="M7 3c1.333 2.667 1.333 5.333 0 8h10c1.333 -2.667 1.333 -5.333 0 -8" />
      <path d="M6 3h12" />
    </svg>
    """
  end

  @doc """
  Renders the `sailboat_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sailboat_off />
      <TablerIcons.sailboat_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sailboat_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 20a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1" />
      <path d="M4 18l-1 -3h12m4 0h2l-.506 1.517" />
      <path d="M11 11v1h1m4 0h2l-7 -9v4" />
      <path d="M7.713 7.718l-1.713 4.282" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `sailboat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sailboat />
      <TablerIcons.sailboat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sailboat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 20a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1" />
      <path d="M4 18l-1 -3h18l-1 3" />
      <path d="M11 12h7l-7 -9v9" />
      <path d="M8 7l-2 5" />
    </svg>
    """
  end

  @doc """
  Renders the `salad` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.salad />
      <TablerIcons.salad class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def salad(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 11h16a1 1 0 0 1 1 1v.5c0 1.5 -2.517 5.573 -4 6.5v1a1 1 0 0 1 -1 1h-8a1 1 0 0 1 -1 -1v-1c-1.687 -1.054 -4 -5 -4 -6.5v-.5a1 1 0 0 1 1 -1z" />
      <path d="M18.5 11c.351 -1.017 .426 -2.236 .5 -3.714v-1.286h-2.256c-2.83 0 -4.616 .804 -5.64 2.076" />
      <path d="M5.255 11.008a12.204 12.204 0 0 1 -.255 -2.008v-1h1.755c.98 0 1.801 .124 2.479 .35" />
      <path d="M8 8l1 -4l4 2.5" />
      <path d="M13 11v-.5a2.5 2.5 0 1 0 -5 0v.5" />
    </svg>
    """
  end

  @doc """
  Renders the `salt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.salt />
      <TablerIcons.salt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def salt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 13v.01" />
      <path d="M10 16v.01" />
      <path d="M14 16v.01" />
      <path d="M7.5 8h9l-.281 -2.248a2 2 0 0 0 -1.985 -1.752h-4.468a2 2 0 0 0 -1.986 1.752l-.28 2.248z" />
      <path d="M7.5 8l-1.612 9.671a2 2 0 0 0 1.973 2.329h8.278a2 2 0 0 0 1.973 -2.329l-1.612 -9.671" />
    </svg>
    """
  end

  @doc """
  Renders the `satellite_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.satellite_off />
      <TablerIcons.satellite_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def satellite_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.707 3.707l5.586 5.586m-1.293 2.707l-1.293 1.293a1 1 0 0 1 -1.414 0l-5.586 -5.586a1 1 0 0 1 0 -1.414l1.293 -1.293" />
      <path d="M6 10l-3 3l3 3l3 -3" />
      <path d="M10 6l3 -3l3 3l-3 3" />
      <path d="M12 12l1.5 1.5" />
      <path d="M14.5 17c.69 0 1.316 -.28 1.769 -.733" />
      <path d="M15 21c1.654 0 3.151 -.67 4.237 -1.752m1.507 -2.507a6 6 0 0 0 .256 -1.741" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `satellite` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.satellite />
      <TablerIcons.satellite class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def satellite(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.707 6.293l2.586 -2.586a1 1 0 0 1 1.414 0l5.586 5.586a1 1 0 0 1 0 1.414l-2.586 2.586a1 1 0 0 1 -1.414 0l-5.586 -5.586a1 1 0 0 1 0 -1.414z" />
      <path d="M6 10l-3 3l3 3l3 -3" />
      <path d="M10 6l3 -3l3 3l-3 3" />
      <path d="M12 12l1.5 1.5" />
      <path d="M14.5 17a2.5 2.5 0 0 0 2.5 -2.5" />
      <path d="M15 21a6 6 0 0 0 6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `sausage` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sausage />
      <TablerIcons.sausage class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sausage(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.5 5.5a2.5 2.5 0 0 0 -2.5 2.5c0 7.18 5.82 13 13 13a2.5 2.5 0 1 0 0 -5a8 8 0 0 1 -8 -8a2.5 2.5 0 0 0 -2.5 -2.5z" />
      <path d="M5.195 5.519l-1.243 -1.989a1 1 0 0 1 .848 -1.53h1.392a1 1 0 0 1 .848 1.53l-1.245 1.99" />
      <path d="M18.482 18.225l1.989 -1.243a1 1 0 0 1 1.53 .848v1.392a1 1 0 0 1 -1.53 .848l-1.991 -1.245" />
    </svg>
    """
  end

  @doc """
  Renders the `scale_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.scale_off />
      <TablerIcons.scale_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def scale_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 20h10" />
      <path d="M9.452 5.425l2.548 -.425l6 1" />
      <path d="M12 3v5m0 4v8" />
      <path d="M9 12l-3 -6l-3 6a3 3 0 0 0 6 0" />
      <path d="M18.873 14.871a3 3 0 0 0 2.127 -2.871l-3 -6l-2.677 5.355" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `scale_outline_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.scale_outline_off />
      <TablerIcons.scale_outline_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def scale_outline_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h10a4 4 0 0 1 4 4v10m-1.173 2.83a3.987 3.987 0 0 1 -2.827 1.17h-10a4 4 0 0 1 -4 -4v-10c0 -1.104 .447 -2.103 1.17 -2.827" />
      <path d="M11.062 7.062c.31 -.041 .622 -.062 .938 -.062c1.956 0 3.724 .802 5 2.095a142.85 142.85 0 0 0 -2 1.905m-3.723 .288a3 3 0 0 0 -1.315 .71l-2.956 -2.903a6.977 6.977 0 0 1 1.142 -.942" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `scale_outline` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.scale_outline />
      <TablerIcons.scale_outline class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def scale_outline(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 4a4 4 0 0 1 4 -4h10a4 4 0 0 1 4 4v10a4 4 0 0 1 -4 4h-10a4 4 0 0 1 -4 -4z" />
      <path d="M12 7c1.956 0 3.724 .802 5 2.095l-2.956 2.904a3 3 0 0 0 -2.038 -.799a3 3 0 0 0 -2.038 .798l-2.956 -2.903a6.979 6.979 0 0 1 5 -2.095z" />
    </svg>
    """
  end

  @doc """
  Renders the `scale` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.scale />
      <TablerIcons.scale class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def scale(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 20l10 0" />
      <path d="M6 6l6 -1l6 1" />
      <path d="M12 3l0 17" />
      <path d="M9 12l-3 -6l-3 6a3 3 0 0 0 6 0" />
      <path d="M21 12l-3 -6l-3 6a3 3 0 0 0 6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `scan_eye` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.scan_eye />
      <TablerIcons.scan_eye class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def scan_eye(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v-2a2 2 0 0 1 2 -2h2" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2a2 2 0 0 0 2 -2v-2" />
      <path d="M7 12c3.333 -4.667 6.667 -4.667 10 0" />
      <path d="M7 12c3.333 4.667 6.667 4.667 10 0" />
      <path d="M12 12h-.01" />
    </svg>
    """
  end

  @doc """
  Renders the `scan` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.scan />
      <TablerIcons.scan class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def scan(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 7v-1a2 2 0 0 1 2 -2h2" />
      <path d="M4 17v1a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v1" />
      <path d="M16 20h2a2 2 0 0 0 2 -2v-1" />
      <path d="M5 12l14 0" />
    </svg>
    """
  end

  @doc """
  Renders the `schema_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.schema_off />
      <TablerIcons.schema_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def schema_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 2h4v4m-4 0h-1v-1" />
      <path d="M15 11v-1h5v4h-2" />
      <path d="M5 18h5v4h-5z" />
      <path d="M5 10h5v4h-5z" />
      <path d="M10 12h2" />
      <path d="M7.5 7.5v2.5" />
      <path d="M7.5 14v4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `schema` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.schema />
      <TablerIcons.schema class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def schema(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 2h5v4h-5z" />
      <path d="M15 10h5v4h-5z" />
      <path d="M5 18h5v4h-5z" />
      <path d="M5 10h5v4h-5z" />
      <path d="M10 12h5" />
      <path d="M7.5 6v4" />
      <path d="M7.5 14v4" />
    </svg>
    """
  end

  @doc """
  Renders the `school_bell` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.school_bell />
      <TablerIcons.school_bell class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def school_bell(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 17a3 3 0 0 0 3 3" />
      <path d="M14.805 6.37l2.783 -2.784a2 2 0 1 1 2.829 2.828l-2.784 2.786" />
      <path d="M16.505 7.495a5.105 5.105 0 0 1 .176 7.035l-.176 .184l-1.867 1.867a3.48 3.48 0 0 0 -1.013 2.234l-.008 .23v.934c0 .327 -.13 .64 -.36 .871a.51 .51 0 0 1 -.652 .06l-.07 -.06l-9.385 -9.384a.51 .51 0 0 1 0 -.722c.198 -.198 .456 -.322 .732 -.353l.139 -.008h.933c.848 0 1.663 -.309 2.297 -.864l.168 -.157l1.867 -1.867l.16 -.153a5.105 5.105 0 0 1 7.059 .153z" />
    </svg>
    """
  end

  @doc """
  Renders the `school_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.school_off />
      <TablerIcons.school_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def school_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 9l-10 -4l-2.136 .854m-2.864 1.146l-5 2l10 4l.697 -.279m2.878 -1.151l6.425 -2.57v6" />
      <path d="M6 10.6v5.4c0 1.657 2.686 3 6 3c2.334 0 4.357 -.666 5.35 -1.64m.65 -3.36v-3.4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `school` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.school />
      <TablerIcons.school class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def school(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 9l-10 -4l-10 4l10 4l10 -4v6" />
      <path d="M6 10.6v5.4a6 3 0 0 0 12 0v-5.4" />
    </svg>
    """
  end

  @doc """
  Renders the `scissors_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.scissors_off />
      <TablerIcons.scissors_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def scissors_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.432 4.442a3 3 0 1 0 4.114 4.146" />
      <path d="M6 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M8.6 15.4l3.4 -3.4m2 -2l5 -5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `scissors` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.scissors />
      <TablerIcons.scissors class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def scissors(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 7m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M6 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M8.6 8.6l10.4 10.4" />
      <path d="M8.6 15.4l10.4 -10.4" />
    </svg>
    """
  end

  @doc """
  Renders the `scooter_electric` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.scooter_electric />
      <TablerIcons.scooter_electric class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def scooter_electric(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M8 17h5a6 6 0 0 1 5 -5v-5a2 2 0 0 0 -2 -2h-1" />
      <path d="M10 4l-2 4h3l-2 4" />
    </svg>
    """
  end

  @doc """
  Renders the `scooter` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.scooter />
      <TablerIcons.scooter class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def scooter(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M8 17h5a6 6 0 0 1 5 -5v-5a2 2 0 0 0 -2 -2h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `scoreboard` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.scoreboard />
      <TablerIcons.scoreboard class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def scoreboard(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M12 5v2" />
      <path d="M12 10v1" />
      <path d="M12 14v1" />
      <path d="M12 18v1" />
      <path d="M7 3v2" />
      <path d="M17 3v2" />
      <path d="M15 10.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
      <path d="M6 9h1.5a1.5 1.5 0 0 1 0 3h-.5h.5a1.5 1.5 0 0 1 0 3h-1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `screen_share_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.screen_share_off />
      <TablerIcons.screen_share_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def screen_share_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12v3a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h9" />
      <path d="M7 20l10 0" />
      <path d="M9 16l0 4" />
      <path d="M15 16l0 4" />
      <path d="M17 8l4 -4m-4 0l4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `screen_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.screen_share />
      <TablerIcons.screen_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def screen_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12v3a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h9" />
      <path d="M7 20l10 0" />
      <path d="M9 16l0 4" />
      <path d="M15 16l0 4" />
      <path d="M17 4h4v4" />
      <path d="M16 9l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `screenshot` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.screenshot />
      <TablerIcons.screenshot class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def screenshot(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 19a2 2 0 0 1 -2 -2" />
      <path d="M5 13v-2" />
      <path d="M5 7a2 2 0 0 1 2 -2" />
      <path d="M11 5h2" />
      <path d="M17 5a2 2 0 0 1 2 2" />
      <path d="M19 11v2" />
      <path d="M19 17v4" />
      <path d="M21 19h-4" />
      <path d="M13 19h-2" />
    </svg>
    """
  end

  @doc """
  Renders the `scribble_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.scribble_off />
      <TablerIcons.scribble_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def scribble_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 15c2 3 4 4 7 4c1.95 0 4.324 -1.268 5.746 -3.256m1.181 -2.812a5.97 5.97 0 0 0 .073 -.932c0 -4 -3 -7 -6 -7c-.642 0 -1.239 .069 -1.78 .201m-2.492 1.515c-.47 .617 -.728 1.386 -.728 2.284c0 2.5 2 5 6 5c.597 0 1.203 -.055 1.808 -.156m3.102 -.921c2.235 -.953 4.152 -2.423 5.09 -3.923" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `scribble` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.scribble />
      <TablerIcons.scribble class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def scribble(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 15c2 3 4 4 7 4s7 -3 7 -7s-3 -7 -6 -7s-5 1.5 -5 4s2 5 6 5s8.408 -2.453 10 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `script_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.script_minus />
      <TablerIcons.script_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def script_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 19h4" />
      <path d="M14 20h-8a3 3 0 0 1 0 -6h11a3 3 0 0 0 -3 3m7 -2v-9a2 2 0 0 0 -2 -2h-10a2 2 0 0 0 -2 2v8" />
    </svg>
    """
  end

  @doc """
  Renders the `script_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.script_plus />
      <TablerIcons.script_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def script_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 19h4" />
      <path d="M14 20h-8a3 3 0 0 1 0 -6h11a3 3 0 0 0 -3 3m7 -3v-8a2 2 0 0 0 -2 -2h-10a2 2 0 0 0 -2 2v8" />
      <path d="M19 17v4" />
    </svg>
    """
  end

  @doc """
  Renders the `script_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.script_x />
      <TablerIcons.script_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def script_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 20h-8a3 3 0 0 1 0 -6h11a3 3 0 0 0 -3 3m7 -3v-8a2 2 0 0 0 -2 -2h-10a2 2 0 0 0 -2 2v8" />
      <path d="M17 17l4 4m0 -4l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `script` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.script />
      <TablerIcons.script class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def script(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 20h-11a3 3 0 0 1 0 -6h11a3 3 0 0 0 0 6h1a3 3 0 0 0 3 -3v-11a2 2 0 0 0 -2 -2h-10a2 2 0 0 0 -2 2v8" />
    </svg>
    """
  end

  @doc """
  Renders the `scuba_mask_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.scuba_mask_off />
      <TablerIcons.scuba_mask_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def scuba_mask_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 7h5a1 1 0 0 1 1 1v4.5c0 .154 -.014 .304 -.04 .45m-2 2.007c-.15 .028 -.305 .043 -.463 .043h-.5a2 2 0 0 1 -2 -2a2 2 0 1 0 -4 0a2 2 0 0 1 -2 2h-.5a2.5 2.5 0 0 1 -2.5 -2.5v-4.5a1 1 0 0 1 1 -1h3" />
      <path d="M10 17a2 2 0 0 0 2 2h3.5a5.475 5.475 0 0 0 2.765 -.744m2 -2c.47 -.81 .739 -1.752 .739 -2.756v-9.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `scuba_mask` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.scuba_mask />
      <TablerIcons.scuba_mask class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def scuba_mask(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 7h12a1 1 0 0 1 1 1v4.5a2.5 2.5 0 0 1 -2.5 2.5h-.5a2 2 0 0 1 -2 -2a2 2 0 1 0 -4 0a2 2 0 0 1 -2 2h-.5a2.5 2.5 0 0 1 -2.5 -2.5v-4.5a1 1 0 0 1 1 -1z" />
      <path d="M10 17a2 2 0 0 0 2 2h3.5a5.5 5.5 0 0 0 5.5 -5.5v-9.5" />
    </svg>
    """
  end

  @doc """
  Renders the `sdk` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sdk />
      <TablerIcons.sdk class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sdk(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 8h-3a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-3" />
      <path d="M17 8v8" />
      <path d="M21 8l-3 4l3 4" />
      <path d="M17 12h1" />
      <path d="M10 8v8h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-2z" />
    </svg>
    """
  end

  @doc """
  Renders the `search_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.search_off />
      <TablerIcons.search_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def search_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.039 5.062a7 7 0 0 0 9.91 9.89m1.584 -2.434a7 7 0 0 0 -9.038 -9.057" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.search />
      <TablerIcons.search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M21 21l-6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `section_sign` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.section_sign />
      <TablerIcons.section_sign class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def section_sign(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.172 19a3 3 0 1 0 2.828 -4" />
      <path d="M14.83 5a3 3 0 1 0 -2.83 4" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `section` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.section />
      <TablerIcons.section class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def section(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 20h.01" />
      <path d="M4 20h.01" />
      <path d="M8 20h.01" />
      <path d="M12 20h.01" />
      <path d="M16 20h.01" />
      <path d="M20 4h.01" />
      <path d="M4 4h.01" />
      <path d="M8 4h.01" />
      <path d="M12 4h.01" />
      <path d="M16 4l0 .01" />
      <path d="M4 8m0 1a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `seeding_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.seeding_off />
      <TablerIcons.seeding_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def seeding_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.412 7.407a6.025 6.025 0 0 0 -2.82 -2.82m-4.592 -.587h-1v2a6 6 0 0 0 6 6h3" />
      <path d="M12 14a6 6 0 0 1 .255 -1.736m1.51 -2.514a5.981 5.981 0 0 1 4.235 -1.75h3v1c0 2.158 -1.14 4.05 -2.85 5.107m-3.15 .893h-3" />
      <path d="M12 20v-8" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `seeding` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.seeding />
      <TablerIcons.seeding class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def seeding(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 10a6 6 0 0 0 -6 -6h-3v2a6 6 0 0 0 6 6h3" />
      <path d="M12 14a6 6 0 0 1 6 -6h3v1a6 6 0 0 1 -6 6h-3" />
      <path d="M12 20l0 -10" />
    </svg>
    """
  end

  @doc """
  Renders the `select_all` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.select_all />
      <TablerIcons.select_all class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def select_all(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8m0 1a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1z" />
      <path d="M12 20v.01" />
      <path d="M16 20v.01" />
      <path d="M8 20v.01" />
      <path d="M4 20v.01" />
      <path d="M4 16v.01" />
      <path d="M4 12v.01" />
      <path d="M4 8v.01" />
      <path d="M4 4v.01" />
      <path d="M8 4v.01" />
      <path d="M12 4v.01" />
      <path d="M16 4v.01" />
      <path d="M20 4v.01" />
      <path d="M20 8v.01" />
      <path d="M20 12v.01" />
      <path d="M20 16v.01" />
      <path d="M20 20v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `select` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.select />
      <TablerIcons.select class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def select(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 11l3 3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `selector` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.selector />
      <TablerIcons.selector class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def selector(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9l4 -4l4 4" />
      <path d="M16 15l-4 4l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `send_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.send_off />
      <TablerIcons.send_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def send_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 14l2 -2m2 -2l7 -7" />
      <path d="M10.718 6.713l10.282 -3.713l-3.715 10.289m-1.063 2.941l-1.722 4.77a.55 .55 0 0 1 -1 0l-3.5 -7l-7 -3.5a.55 .55 0 0 1 0 -1l4.772 -1.723" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `send` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.send />
      <TablerIcons.send class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def send(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 14l11 -11" />
      <path d="M21 3l-6.5 18a.55 .55 0 0 1 -1 0l-3.5 -7l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5" />
    </svg>
    """
  end

  @doc """
  Renders the `seo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.seo />
      <TablerIcons.seo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def seo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 8h-3a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-3" />
      <path d="M14 16h-4v-8h4" />
      <path d="M11 12h2" />
      <path d="M17 8m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `separator_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.separator_horizontal />
      <TablerIcons.separator_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def separator_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12l16 0" />
      <path d="M8 8l4 -4l4 4" />
      <path d="M16 16l-4 4l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `separator_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.separator_vertical />
      <TablerIcons.separator_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def separator_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 4l0 16" />
      <path d="M8 8l-4 4l4 4" />
      <path d="M16 16l4 -4l-4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `separator` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.separator />
      <TablerIcons.separator class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def separator(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12l0 .01" />
      <path d="M7 12l10 0" />
      <path d="M21 12l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `server_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.server_2 />
      <TablerIcons.server_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def server_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v2a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M3 12m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v2a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M7 8l0 .01" />
      <path d="M7 16l0 .01" />
      <path d="M11 8h6" />
      <path d="M11 16h6" />
    </svg>
    """
  end

  @doc """
  Renders the `server_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.server_bolt />
      <TablerIcons.server_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def server_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v2a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M15 20h-9a3 3 0 0 1 -3 -3v-2a3 3 0 0 1 3 -3h12" />
      <path d="M7 8v.01" />
      <path d="M7 16v.01" />
      <path d="M20 15l-2 3h3l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `server_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.server_cog />
      <TablerIcons.server_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def server_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v2a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M12 20h-6a3 3 0 0 1 -3 -3v-2a3 3 0 0 1 3 -3h10.5" />
      <path d="M18 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 14.5v1.5" />
      <path d="M18 20v1.5" />
      <path d="M21.032 16.25l-1.299 .75" />
      <path d="M16.27 19l-1.3 .75" />
      <path d="M14.97 16.25l1.3 .75" />
      <path d="M19.733 19l1.3 .75" />
      <path d="M7 8v.01" />
      <path d="M7 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `server_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.server_off />
      <TablerIcons.server_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def server_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12h-6a3 3 0 0 1 -3 -3v-2c0 -1.083 .574 -2.033 1.435 -2.56m3.565 -.44h10a3 3 0 0 1 3 3v2a3 3 0 0 1 -3 3h-2" />
      <path d="M16 12h2a3 3 0 0 1 3 3v2m-1.448 2.568a2.986 2.986 0 0 1 -1.552 .432h-12a3 3 0 0 1 -3 -3v-2a3 3 0 0 1 3 -3h6" />
      <path d="M7 8v.01" />
      <path d="M7 16v.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `server` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.server />
      <TablerIcons.server class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def server(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v2a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M3 12m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v2a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M7 8l0 .01" />
      <path d="M7 16l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `servicemark` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.servicemark />
      <TablerIcons.servicemark class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def servicemark(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 9h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M13 15v-6l3 4l3 -4v6" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_2 />
      <TablerIcons.settings_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.875 6.27a2.225 2.225 0 0 1 1.125 1.948v7.284c0 .809 -.443 1.555 -1.158 1.948l-6.75 4.27a2.269 2.269 0 0 1 -2.184 0l-6.75 -4.27a2.225 2.225 0 0 1 -1.158 -1.948v-7.285c0 -.809 .443 -1.554 1.158 -1.947l6.75 -3.98a2.33 2.33 0 0 1 2.25 0l6.75 3.98h-.033z" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_automation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_automation />
      <TablerIcons.settings_automation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_automation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.325 4.317c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543 -.826 3.31 -2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065z" />
      <path d="M10 9v6l5 -3z" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_bolt />
      <TablerIcons.settings_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.256 20.473c-.855 .907 -2.583 .643 -2.931 -.79a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.07 .26 1.488 1.29 1.254 2.15" />
      <path d="M19 16l-2 3h4l-2 3" />
      <path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_cancel />
      <TablerIcons.settings_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.29 20.977c-.818 .132 -1.724 -.3 -1.965 -1.294a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c.983 .238 1.416 1.126 1.298 1.937" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
      <path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_check />
      <TablerIcons.settings_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.445 20.913a1.665 1.665 0 0 1 -1.12 -1.23a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.31 .318 1.643 1.79 .997 2.694" />
      <path d="M15 19l2 2l4 -4" />
      <path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_code />
      <TablerIcons.settings_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.482 20.924a1.666 1.666 0 0 1 -1.157 -1.241a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.312 .318 1.644 1.794 .995 2.697" />
      <path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_cog />
      <TablerIcons.settings_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.003 21c-.732 .001 -1.465 -.438 -1.678 -1.317a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c.886 .215 1.325 .957 1.318 1.694" />
      <path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_dollar />
      <TablerIcons.settings_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.038 20.666c-.902 .665 -2.393 .337 -2.713 -.983a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 .402 2.248" />
      <path d="M15 12a3 3 0 1 0 -1.724 2.716" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_down />
      <TablerIcons.settings_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.52 20.924c-.87 .262 -1.93 -.152 -2.195 -1.241a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.088 .264 1.502 1.323 1.242 2.192" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
      <path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_exclamation />
      <TablerIcons.settings_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.004 18.401a1.724 1.724 0 0 0 -1.329 1.282c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.079 .262 1.495 1.305 1.248 2.17" />
      <path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_filled />
      <TablerIcons.settings_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.647 4.081a.724 .724 0 0 0 1.08 .448c2.439 -1.485 5.23 1.305 3.745 3.744a.724 .724 0 0 0 .447 1.08c2.775 .673 2.775 4.62 0 5.294a.724 .724 0 0 0 -.448 1.08c1.485 2.439 -1.305 5.23 -3.744 3.745a.724 .724 0 0 0 -1.08 .447c-.673 2.775 -4.62 2.775 -5.294 0a.724 .724 0 0 0 -1.08 -.448c-2.439 1.485 -5.23 -1.305 -3.745 -3.744a.724 .724 0 0 0 -.447 -1.08c-2.775 -.673 -2.775 -4.62 0 -5.294a.724 .724 0 0 0 .448 -1.08c-1.485 -2.439 1.305 -5.23 3.744 -3.745a.722 .722 0 0 0 1.08 -.447c.673 -2.775 4.62 -2.775 5.294 0zm-2.647 4.919a3 3 0 1 0 0 6a3 3 0 0 0 0 -6z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `settings_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_heart />
      <TablerIcons.settings_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.231 20.828a1.668 1.668 0 0 1 -.906 -1.145a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c.509 .123 .87 .421 1.084 .792" />
      <path d="M14.882 11.165a3.001 3.001 0 1 0 -4.31 3.474" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_minus />
      <TablerIcons.settings_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.488 20.933c-.863 .243 -1.902 -.174 -2.163 -1.25a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35c-.535 .13 -.976 .507 -1.187 1.016c-.049 .118 -.084 .185 -.106 .309" />
      <path d="M16 19h6" />
      <path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_off />
      <TablerIcons.settings_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.451 5.437c.418 -.218 .75 -.609 .874 -1.12c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35c-.486 .118 -.894 .44 -1.123 .878m-.188 3.803c-.517 .523 -1.349 .734 -2.125 .262a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.472 -.774 -.262 -1.604 .259 -2.121" />
      <path d="M9.889 9.869a3 3 0 1 0 4.226 4.26m.592 -3.424a3.012 3.012 0 0 0 -1.419 -1.415" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_pause />
      <TablerIcons.settings_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.004 20.69c-.905 .632 -2.363 .296 -2.679 -1.007a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.314 .319 1.645 1.798 .992 2.701" />
      <path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_pin />
      <TablerIcons.settings_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.578 20.905c-.88 .299 -1.983 -.109 -2.253 -1.222a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c.574 .14 .96 .5 1.16 .937" />
      <path d="M14.99 12.256a3 3 0 1 0 -2.33 2.671" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_plus />
      <TablerIcons.settings_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.483 20.935c-.862 .239 -1.898 -.178 -2.158 -1.252a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.08 .262 1.496 1.308 1.247 2.173" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
      <path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_question />
      <TablerIcons.settings_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.69 18.498c-.508 .21 -.885 .65 -1.015 1.185c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572a1.67 1.67 0 0 1 1.179 .982" />
      <path d="M14.95 12.553a3 3 0 1 0 -1.211 1.892" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_search />
      <TablerIcons.settings_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.646 20.965a1.67 1.67 0 0 1 -1.321 -1.282a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c.728 .177 1.154 .71 1.279 1.303" />
      <path d="M14.985 11.694a3 3 0 1 0 -3.29 3.29" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_share />
      <TablerIcons.settings_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.004 21c-.732 .002 -1.466 -.437 -1.679 -1.317a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.306 .317 1.64 1.78 1.004 2.684" />
      <path d="M12 15a3 3 0 1 0 0 -6a3 3 0 0 0 0 6z" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_star />
      <TablerIcons.settings_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.325 19.683a1.723 1.723 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572a1.67 1.67 0 0 1 1.106 .831" />
      <path d="M14.89 11.195a3.001 3.001 0 1 0 -4.457 3.364" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_up />
      <TablerIcons.settings_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.501 20.93c-.866 .25 -1.914 -.166 -2.176 -1.247a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.074 .26 1.49 1.296 1.252 2.158" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
      <path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `settings_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings_x />
      <TablerIcons.settings_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.675 19.683c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.66 1.66 0 0 0 -.324 .114" />
      <path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `settings` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.settings />
      <TablerIcons.settings class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def settings(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.325 4.317c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543 -.826 3.31 -2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065z" />
      <path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `shadow_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shadow_off />
      <TablerIcons.shadow_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shadow_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.634 5.638a9 9 0 0 0 12.728 12.727m1.68 -2.32a9 9 0 0 0 -12.086 -12.088" />
      <path d="M16 12h2" />
      <path d="M13 15h2" />
      <path d="M13 18h1" />
      <path d="M13 9h4" />
      <path d="M13 6h1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `shadow` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shadow />
      <TablerIcons.shadow class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shadow(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M13 12h5" />
      <path d="M13 15h4" />
      <path d="M13 18h1" />
      <path d="M13 9h4" />
      <path d="M13 6h1" />
    </svg>
    """
  end

  @doc """
  Renders the `shape_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shape_2 />
      <TablerIcons.shape_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shape_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6.5 17.5l11 -11m-12.5 .5v10m14 -10v10" />
    </svg>
    """
  end

  @doc """
  Renders the `shape_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shape_3 />
      <TablerIcons.shape_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shape_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 5h10m-12 2v10m14 -10v10" />
    </svg>
    """
  end

  @doc """
  Renders the `shape_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shape_off />
      <TablerIcons.shape_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shape_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.575 3.597a2 2 0 0 0 2.849 2.808" />
      <path d="M19 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17.574 17.598a2 2 0 0 0 2.826 2.83" />
      <path d="M5 7v10" />
      <path d="M9 5h8" />
      <path d="M7 19h10" />
      <path d="M19 7v8" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `shape` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shape />
      <TablerIcons.shape class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shape(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 7l0 10" />
      <path d="M7 5l10 0" />
      <path d="M7 19l10 0" />
      <path d="M19 7l0 10" />
    </svg>
    """
  end

  @doc """
  Renders the `share_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.share_2 />
      <TablerIcons.share_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def share_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9h-1a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-8a2 2 0 0 0 -2 -2h-1" />
      <path d="M12 14v-11" />
      <path d="M9 6l3 -3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `share_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.share_3 />
      <TablerIcons.share_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def share_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 4v4c-6.575 1.028 -9.02 6.788 -10 12c-.037 .206 5.384 -5.962 10 -6v4l8 -7l-8 -7z" />
    </svg>
    """
  end

  @doc """
  Renders the `share_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.share_off />
      <TablerIcons.share_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def share_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M18 6m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M15.861 15.896a3 3 0 0 0 4.265 4.22m.578 -3.417a3.012 3.012 0 0 0 -1.507 -1.45" />
      <path d="M8.7 10.7l1.336 -.688m2.624 -1.352l2.64 -1.36" />
      <path d="M8.7 13.3l6.6 3.4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.share />
      <TablerIcons.share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M18 6m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M8.7 10.7l6.6 -3.4" />
      <path d="M8.7 13.3l6.6 3.4" />
    </svg>
    """
  end

  @doc """
  Renders the `shi_jumping` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shi_jumping />
      <TablerIcons.shi_jumping class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shi_jumping(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 3a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M17 17.5l-5 -4.5v-6l5 4" />
      <path d="M7 17.5l5 -4.5" />
      <path d="M15.103 21.58l6.762 -14.502a2 2 0 0 0 -.968 -2.657" />
      <path d="M8.897 21.58l-6.762 -14.503a2 2 0 0 1 .968 -2.657" />
      <path d="M7 11l5 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_bolt />
      <TablerIcons.shield_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.342 20.566c-.436 .17 -.884 .315 -1.342 .434a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3a12 12 0 0 1 .117 6.34" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_cancel />
      <TablerIcons.shield_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.277 20.925c-.092 .026 -.184 .051 -.277 .075a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3a12 12 0 0 1 .145 6.232" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_check_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_check_filled />
      <TablerIcons.shield_check_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_check_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11.998 2l.118 .007l.059 .008l.061 .013l.111 .034a.993 .993 0 0 1 .217 .112l.104 .082l.255 .218a11 11 0 0 0 7.189 2.537l.342 -.01a1 1 0 0 1 1.005 .717a13 13 0 0 1 -9.208 16.25a1 1 0 0 1 -.502 0a13 13 0 0 1 -9.209 -16.25a1 1 0 0 1 1.005 -.717a11 11 0 0 0 7.531 -2.527l.263 -.225l.096 -.075a.993 .993 0 0 1 .217 -.112l.112 -.034a.97 .97 0 0 1 .119 -.021l.115 -.007zm3.71 7.293a1 1 0 0 0 -1.415 0l-3.293 3.292l-1.293 -1.292l-.094 -.083a1 1 0 0 0 -1.32 1.497l2 2l.094 .083a1 1 0 0 0 1.32 -.083l4 -4l.083 -.094a1 1 0 0 0 -.083 -1.32z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `shield_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_check />
      <TablerIcons.shield_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.46 20.846a12 12 0 0 1 -7.96 -14.846a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3a12 12 0 0 1 -.09 7.06" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_checkered_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_checkered_filled />
      <TablerIcons.shield_checkered_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_checkered_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11.013 12v9.754a13 13 0 0 1 -8.733 -9.754h8.734zm9.284 3.794a13 13 0 0 1 -7.283 5.951l-.001 -9.745h8.708a12.96 12.96 0 0 1 -1.424 3.794zm-9.283 -13.268l-.001 7.474h-8.986c-.068 -1.432 .101 -2.88 .514 -4.282a1 1 0 0 1 1.005 -.717a11 11 0 0 0 7.192 -2.256l.276 -.219zm1.999 7.474v-7.453l-.09 -.073a11 11 0 0 0 7.189 2.537l.342 -.01a1 1 0 0 1 1.005 .717c.413 1.403 .582 2.85 .514 4.282h-8.96z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `shield_checkered` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_checkered />
      <TablerIcons.shield_checkered class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_checkered(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3" />
      <path d="M12 3v18" />
      <path d="M3.5 12h17" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_chevron` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_chevron />
      <TablerIcons.shield_chevron class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_chevron(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3" />
      <path d="M4 14l8 -3l8 3" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_code />
      <TablerIcons.shield_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3a12 12 0 0 1 -.078 7.024" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_cog />
      <TablerIcons.shield_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3c.568 1.933 .635 3.957 .223 5.89" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_dollar />
      <TablerIcons.shield_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.018 20.687c-.333 .119 -.673 .223 -1.018 .313a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3c.433 1.472 .575 2.998 .436 4.495" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_down />
      <TablerIcons.shield_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.444 20.876c-.147 .044 -.295 .085 -.444 .124a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3a12 12 0 0 1 .117 6.343" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_exclamation />
      <TablerIcons.shield_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.04 19.745c-.942 .551 -1.964 .976 -3.04 1.255a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3a12 12 0 0 1 .195 6.015" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_filled />
      <TablerIcons.shield_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11.884 2.007l.114 -.007l.118 .007l.059 .008l.061 .013l.111 .034a.993 .993 0 0 1 .217 .112l.104 .082l.255 .218a11 11 0 0 0 7.189 2.537l.342 -.01a1 1 0 0 1 1.005 .717a13 13 0 0 1 -9.208 16.25a1 1 0 0 1 -.502 0a13 13 0 0 1 -9.209 -16.25a1 1 0 0 1 1.005 -.717a11 11 0 0 0 7.531 -2.527l.263 -.225l.096 -.075a.993 .993 0 0 1 .217 -.112l.112 -.034a.97 .97 0 0 1 .119 -.021z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `shield_half_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_half_filled />
      <TablerIcons.shield_half_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_half_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3" />
      <path d="M12 3v18" />
      <path d="M12 11h8.9" />
      <path d="M12 8h8.9" />
      <path d="M12 5h3.1" />
      <path d="M12 17h6.2" />
      <path d="M12 14h8" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_half` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_half />
      <TablerIcons.shield_half class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_half(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3" />
      <path d="M12 3v18" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_heart />
      <TablerIcons.shield_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3a12.01 12.01 0 0 1 .378 5" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_lock_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_lock_filled />
      <TablerIcons.shield_lock_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_lock_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11.998 2l.118 .007l.059 .008l.061 .013l.111 .034a.993 .993 0 0 1 .217 .112l.104 .082l.255 .218a11 11 0 0 0 7.189 2.537l.342 -.01a1 1 0 0 1 1.005 .717a13 13 0 0 1 -9.208 16.25a1 1 0 0 1 -.502 0a13 13 0 0 1 -9.209 -16.25a1 1 0 0 1 1.005 -.717a11 11 0 0 0 7.531 -2.527l.263 -.225l.096 -.075a.993 .993 0 0 1 .217 -.112l.112 -.034a.97 .97 0 0 1 .119 -.021l.115 -.007zm.002 7a2 2 0 0 0 -1.995 1.85l-.005 .15l.005 .15a2 2 0 0 0 .995 1.581v1.769l.007 .117a1 1 0 0 0 1.993 -.117l.001 -1.768a2 2 0 0 0 -1.001 -3.732z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `shield_lock` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_lock />
      <TablerIcons.shield_lock class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_lock(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3" />
      <path d="M12 11m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 12l0 2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_minus />
      <TablerIcons.shield_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.46 20.871c-.153 .046 -.306 .089 -.46 .129a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3a12 12 0 0 1 -.916 9.015" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_off />
      <TablerIcons.shield_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.67 17.667a12 12 0 0 1 -5.67 3.333a12 12 0 0 1 -8.5 -15c.794 .036 1.583 -.006 2.357 -.124m3.128 -.926a11.997 11.997 0 0 0 3.015 -1.95a12 12 0 0 0 8.5 3a12 12 0 0 1 -1.116 9.376" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_pause />
      <TablerIcons.shield_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.004 20.692c-.329 .117 -.664 .22 -1.004 .308a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3a12 12 0 0 1 -.081 7.034" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_pin />
      <TablerIcons.shield_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.597 20.829a12 12 0 0 1 -.597 .171a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3c.506 1.72 .614 3.512 .342 5.248" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_plus />
      <TablerIcons.shield_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.462 20.87c-.153 .047 -.307 .09 -.462 .13a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3a12 12 0 0 1 .11 6.37" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_question />
      <TablerIcons.shield_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.065 19.732c-.95 .557 -1.98 .986 -3.065 1.268a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3c.51 1.738 .617 3.55 .333 5.303" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_search />
      <TablerIcons.shield_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3c.539 1.832 .627 3.747 .283 5.588" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_share />
      <TablerIcons.shield_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3a12 12 0 0 1 .193 6.025" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_star />
      <TablerIcons.shield_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.143 20.743a12 12 0 0 1 -7.643 -14.743a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3c.504 1.716 .614 3.505 .343 5.237" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_up />
      <TablerIcons.shield_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.442 20.876a13.12 13.12 0 0 1 -.442 .124a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3a12 12 0 0 1 .119 6.336" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `shield_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield_x />
      <TablerIcons.shield_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.252 20.601c-.408 .155 -.826 .288 -1.252 .399a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3a12 12 0 0 0 8.5 3a12 12 0 0 1 -.19 7.357" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `shield` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shield />
      <TablerIcons.shield class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shield(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `ship_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ship_off />
      <TablerIcons.ship_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ship_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 20a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1" />
      <path d="M4 18l-1 -5h10m4 0h4l-1.334 2.668" />
      <path d="M5 13v-6h2m4 0h2l4 6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ship` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ship />
      <TablerIcons.ship class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ship(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 20a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1" />
      <path d="M4 18l-1 -5h18l-2 4" />
      <path d="M5 13v-6h8l4 6" />
      <path d="M7 7v-4h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `shirt_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shirt_filled />
      <TablerIcons.shirt_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shirt_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14.883 3.007l.095 -.007l.112 .004l.113 .017l.113 .03l6 2a1 1 0 0 1 .677 .833l.007 .116v5a1 1 0 0 1 -.883 .993l-.117 .007h-2v7a2 2 0 0 1 -1.85 1.995l-.15 .005h-10a2 2 0 0 1 -1.995 -1.85l-.005 -.15v-7h-2a1 1 0 0 1 -.993 -.883l-.007 -.117v-5a1 1 0 0 1 .576 -.906l.108 -.043l6 -2a1 1 0 0 1 1.316 .949a2 2 0 0 0 3.995 .15l.009 -.24l.017 -.113l.037 -.134l.044 -.103l.05 -.092l.068 -.093l.069 -.08c.056 -.054 .113 -.1 .175 -.14l.096 -.053l.103 -.044l.108 -.032l.112 -.02z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `shirt_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shirt_off />
      <TablerIcons.shirt_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shirt_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.243 4.252l.757 -.252c0 .43 .09 .837 .252 1.206m1.395 1.472a3 3 0 0 0 4.353 -2.678l6 2v5h-3v3m0 4v1a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1v-8h-3v-5l2.26 -.753" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `shirt_sport` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shirt_sport />
      <TablerIcons.shirt_sport class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shirt_sport(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 4l6 2v5h-3v8a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1v-8h-3v-5l6 -2a3 3 0 0 0 6 0" />
      <path d="M10.5 11h2.5l-1.5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `shirt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shirt />
      <TablerIcons.shirt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shirt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 4l6 2v5h-3v8a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1v-8h-3v-5l6 -2a3 3 0 0 0 6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `shoe_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shoe_off />
      <TablerIcons.shoe_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shoe_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.846 9.868l4.08 .972a4 4 0 0 1 3.074 3.89v2.27m-3 1h-14a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h2" />
      <path d="M8 18v-1a4 4 0 0 0 -4 -4h-1" />
      <path d="M10 12l.663 -1.327" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `shoe` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shoe />
      <TablerIcons.shoe class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shoe(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6h5.426a1 1 0 0 1 .863 .496l1.064 1.823a3 3 0 0 0 1.896 1.407l4.677 1.114a4 4 0 0 1 3.074 3.89v2.27a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1z" />
      <path d="M14 13l1 -2" />
      <path d="M8 18v-1a4 4 0 0 0 -4 -4h-1" />
      <path d="M10 12l1.5 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_bag_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_bag_check />
      <TablerIcons.shopping_bag_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_bag_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-2.926a3 3 0 0 1 -2.965 -2.544l-1.255 -8.152a2 2 0 0 1 1.977 -2.304h11.339a2 2 0 0 1 1.977 2.304l-.5 3.248" />
      <path d="M9 11v-5a3 3 0 0 1 6 0v5" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_bag_discount` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_bag_discount />
      <TablerIcons.shopping_bag_discount class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_bag_discount(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-3.926a3 3 0 0 1 -2.965 -2.544l-1.255 -8.152a2 2 0 0 1 1.977 -2.304h11.339a2 2 0 0 1 1.977 2.304l-.416 2.7" />
      <path d="M9 11v-5a3 3 0 0 1 6 0v5" />
      <path d="M16 21l5 -5" />
      <path d="M21 21v.01" />
      <path d="M16 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_bag_edit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_bag_edit />
      <TablerIcons.shopping_bag_edit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_bag_edit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 21h-2.426a3 3 0 0 1 -2.965 -2.544l-1.255 -8.152a2 2 0 0 1 1.977 -2.304h11.339a2 2 0 0 1 1.977 2.304l-.109 .707" />
      <path d="M9 11v-5a3 3 0 0 1 6 0v5" />
      <path d="M18.42 15.61a2.1 2.1 0 0 1 2.97 2.97l-3.39 3.42h-3v-3l3.42 -3.39z" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_bag_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_bag_exclamation />
      <TablerIcons.shopping_bag_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_bag_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 21h-6.426a3 3 0 0 1 -2.965 -2.544l-1.255 -8.152a2 2 0 0 1 1.977 -2.304h11.339a2 2 0 0 1 1.977 2.304l-.258 1.678" />
      <path d="M9 11v-5a3 3 0 0 1 6 0v5" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_bag_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_bag_minus />
      <TablerIcons.shopping_bag_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_bag_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-3.926a3 3 0 0 1 -2.965 -2.544l-1.255 -8.152a2 2 0 0 1 1.977 -2.304h11.339a2 2 0 0 1 1.977 2.304l-.73 4.744" />
      <path d="M9 11v-5a3 3 0 0 1 6 0v5" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_bag_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_bag_plus />
      <TablerIcons.shopping_bag_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_bag_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-3.926a3 3 0 0 1 -2.965 -2.544l-1.255 -8.152a2 2 0 0 1 1.977 -2.304h11.339a2 2 0 0 1 1.977 2.304l-.263 1.708" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
      <path d="M9 11v-5a3 3 0 0 1 6 0v5" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_bag_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_bag_search />
      <TablerIcons.shopping_bag_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_bag_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-2.926a3 3 0 0 1 -2.965 -2.544l-1.255 -8.152a2 2 0 0 1 1.977 -2.304h11.339a2 2 0 0 1 1.977 2.304l-.117 .761" />
      <path d="M9 11v-5a3 3 0 0 1 6 0v5" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_bag_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_bag_x />
      <TablerIcons.shopping_bag_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_bag_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 21h-4.426a3 3 0 0 1 -2.965 -2.544l-1.255 -8.152a2 2 0 0 1 1.977 -2.304h11.339a2 2 0 0 1 1.977 2.304l-.506 3.287" />
      <path d="M9 11v-5a3 3 0 0 1 6 0v5" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_bag` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_bag />
      <TablerIcons.shopping_bag class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_bag(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.331 8h11.339a2 2 0 0 1 1.977 2.304l-1.255 8.152a3 3 0 0 1 -2.966 2.544h-6.852a3 3 0 0 1 -2.965 -2.544l-1.255 -8.152a2 2 0 0 1 1.977 -2.304z" />
      <path d="M9 11v-5a3 3 0 0 1 6 0v5" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_bolt />
      <TablerIcons.shopping_cart_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M13.5 17h-7.5v-14h-2" />
      <path d="M6 5l14 1l-.858 6.004m-2.642 .996h-10.5" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_cancel />
      <TablerIcons.shopping_cart_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 17h-6v-14h-2" />
      <path d="M6 5l14 1l-.857 5.998m-3.643 1.002h-9.5" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_check />
      <TablerIcons.shopping_cart_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M11.5 17h-5.5v-14h-2" />
      <path d="M6 5l14 1l-1 7h-13" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_code />
      <TablerIcons.shopping_cart_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M11.5 17h-5.5v-14h-2" />
      <path d="M6 5l14 1l-1 7h-13" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_cog />
      <TablerIcons.shopping_cart_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 17h-6v-14h-2" />
      <path d="M6 5l14 1l-.79 5.526m-3.21 1.474h-10" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_copy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_copy />
      <TablerIcons.shopping_cart_copy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_copy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M11.5 17h-5.5v-14h-2" />
      <path d="M6 5l14 1l-1 7h-13" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_discount` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_discount />
      <TablerIcons.shopping_cart_discount class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_discount(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12.5 17h-6.5v-14h-2" />
      <path d="M6 5l14 1l-.859 6.011m-6.141 .989h-7" />
      <path d="M16 21l5 -5" />
      <path d="M21 21v.01" />
      <path d="M16 16v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_dollar />
      <TablerIcons.shopping_cart_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M13 17h-7v-14h-2" />
      <path d="M6 5l14 1l-.575 4.022m-4.925 2.978h-8.5" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_down />
      <TablerIcons.shopping_cart_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12.5 17h-6.5v-14h-2" />
      <path d="M6 5l14 1l-.859 6.011m-2.641 .989h-10.5" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_exclamation />
      <TablerIcons.shopping_cart_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M15 17h-9v-14h-2" />
      <path d="M6 5l14 1l-.854 5.976m-2.646 1.024h-10.5" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_filled />
      <TablerIcons.shopping_cart_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M6 2a1 1 0 0 1 .993 .883l.007 .117v1.068l13.071 .935a1 1 0 0 1 .929 1.024l-.01 .114l-1 7a1 1 0 0 1 -.877 .853l-.113 .006h-12v2h10a3 3 0 1 1 -2.995 3.176l-.005 -.176l.005 -.176c.017 -.288 .074 -.564 .166 -.824h-5.342a3 3 0 1 1 -5.824 1.176l-.005 -.176l.005 -.176a3.002 3.002 0 0 1 1.995 -2.654v-12.17h-1a1 1 0 0 1 -.993 -.883l-.007 -.117a1 1 0 0 1 .883 -.993l.117 -.007h2zm0 16a1 1 0 1 0 0 2a1 1 0 0 0 0 -2zm11 0a1 1 0 1 0 0 2a1 1 0 0 0 0 -2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_heart />
      <TablerIcons.shopping_cart_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M10 17h-4v-14h-2" />
      <path d="M6 5l14 1l-.717 5.016m-7.783 1.984h-5.5" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_minus />
      <TablerIcons.shopping_cart_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12.5 17h-6.5v-14h-2" />
      <path d="M6 5l14 1l-1 7h-13" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_off />
      <TablerIcons.shopping_cart_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 17a2 2 0 1 0 2 2" />
      <path d="M17 17h-11v-11" />
      <path d="M9.239 5.231l10.761 .769l-1 7h-2m-4 0h-7" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_pause />
      <TablerIcons.shopping_cart_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M13 17h-7v-14h-2" />
      <path d="M6 5l14 1l-1 7h-13" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_pin />
      <TablerIcons.shopping_cart_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12 17h-6v-14h-2" />
      <path d="M6 5l14 1l-.716 5.011m-5.284 1.989h-8" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_plus />
      <TablerIcons.shopping_cart_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12.5 17h-6.5v-14h-2" />
      <path d="M6 5l14 1l-.86 6.017m-2.64 .983h-10.5" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_question />
      <TablerIcons.shopping_cart_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M13.5 17h-7.5v-14h-2" />
      <path d="M6 5l14 1l-.714 5m-4.786 2h-8.5" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_search />
      <TablerIcons.shopping_cart_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M11 17h-5v-14h-2" />
      <path d="M6 5l14 1l-.718 5.023m-6.282 1.977h-7" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_share />
      <TablerIcons.shopping_cart_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12.5 17h-6.5v-14h-2" />
      <path d="M6 5l14 1l-1 7h-13" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_star />
      <TablerIcons.shopping_cart_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M9.5 17h-3.5v-14h-2" />
      <path d="M6 5l14 1l-.615 4.302m-6.885 2.698h-6.5" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_up />
      <TablerIcons.shopping_cart_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M12.5 17h-6.5v-14h-2" />
      <path d="M6 5l14 1l-.854 5.977m-2.646 1.023h-10.5" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart_x />
      <TablerIcons.shopping_cart_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M13 17h-7v-14h-2" />
      <path d="M6 5l14 1l-1 7h-13" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `shopping_cart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shopping_cart />
      <TablerIcons.shopping_cart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shopping_cart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 17h-11v-14h-2" />
      <path d="M6 5l14 1l-1 7h-13" />
    </svg>
    """
  end

  @doc """
  Renders the `shovel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shovel />
      <TablerIcons.shovel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shovel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 4l3 3" />
      <path d="M18.5 5.5l-8 8" />
      <path d="M8.276 11.284l4.44 4.44a.968 .968 0 0 1 0 1.369l-2.704 2.704a4.108 4.108 0 0 1 -5.809 -5.81l2.704 -2.703a.968 .968 0 0 1 1.37 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `shredder` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.shredder />
      <TablerIcons.shredder class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def shredder(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10m0 1a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1z" />
      <path d="M17 10v-4a2 2 0 0 0 -2 -2h-6a2 2 0 0 0 -2 2v4m5 5v5m4 -5v2m-8 -2v3" />
    </svg>
    """
  end

  @doc """
  Renders the `sign_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sign_left_filled />
      <TablerIcons.sign_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sign_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14 2a1 1 0 0 1 .993 .883l.007 .117v2h3a1 1 0 0 1 .993 .883l.007 .117v5a1 1 0 0 1 -.883 .993l-.117 .007h-3v8h1a1 1 0 0 1 .117 1.993l-.117 .007h-4a1 1 0 0 1 -.117 -1.993l.117 -.007h1v-8h-5a1 1 0 0 1 -.694 -.28l-.087 -.095l-2 -2.5a1 1 0 0 1 -.072 -1.147l.072 -.103l2 -2.5a1 1 0 0 1 .652 -.367l.129 -.008h5v-2a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `sign_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sign_left />
      <TablerIcons.sign_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sign_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 21h-4" />
      <path d="M14 21v-10" />
      <path d="M14 6v-3" />
      <path d="M18 6h-10l-2 2.5l2 2.5h10z" />
    </svg>
    """
  end

  @doc """
  Renders the `sign_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sign_right_filled />
      <TablerIcons.sign_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sign_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M10 2a1 1 0 0 1 .993 .883l.007 .117v2h5a1 1 0 0 1 .694 .28l.087 .095l2 2.5a1 1 0 0 1 .072 1.147l-.072 .103l-2 2.5a1 1 0 0 1 -.652 .367l-.129 .008h-5v8h1a1 1 0 0 1 .117 1.993l-.117 .007h-4a1 1 0 0 1 -.117 -1.993l.117 -.007h1v-8h-3a1 1 0 0 1 -.993 -.883l-.007 -.117v-5a1 1 0 0 1 .883 -.993l.117 -.007h3v-2a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `sign_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sign_right />
      <TablerIcons.sign_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sign_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 21h4" />
      <path d="M10 21v-10" />
      <path d="M10 6v-3" />
      <path d="M6 6h10l2 2.5l-2 2.5h-10z" />
    </svg>
    """
  end

  @doc """
  Renders the `signal_2g` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.signal_2g />
      <TablerIcons.signal_2g class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def signal_2g(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 8h-3a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h3v-4h-1" />
      <path d="M5 8h4a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-3a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h4" />
    </svg>
    """
  end

  @doc """
  Renders the `signal_3g` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.signal_3g />
      <TablerIcons.signal_3g class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def signal_3g(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 8h-2a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2v-4h-1" />
      <path d="M6 8h2.5a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1 -1.5 1.5h-1.5h1.5a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1 -1.5 1.5h-2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `signal_4g_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.signal_4g_plus />
      <TablerIcons.signal_4g_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def signal_4g_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 12h4" />
      <path d="M3 8v3a1 1 0 0 0 1 1h3" />
      <path d="M7 8v8" />
      <path d="M19 10v4" />
      <path d="M14 8h-2a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2v-4h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `signal_4g` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.signal_4g />
      <TablerIcons.signal_4g class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def signal_4g(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 8v3a1 1 0 0 0 1 1h3" />
      <path d="M10 8v8" />
      <path d="M17 8h-2a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2v-4h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `signal_5g` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.signal_5g />
      <TablerIcons.signal_5g class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def signal_5g(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 8h-2a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2v-4h-1" />
      <path d="M6 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-3v-4h4" />
    </svg>
    """
  end

  @doc """
  Renders the `signal_6g` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.signal_6g />
      <TablerIcons.signal_6g class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def signal_6g(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 8h-2a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2v-4h-1" />
      <path d="M10 9a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v6a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `signal_e` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.signal_e />
      <TablerIcons.signal_e class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def signal_e(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 8h-4v8h4" />
      <path d="M10 12h2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `signal_g` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.signal_g />
      <TablerIcons.signal_g class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def signal_g(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 8h-2a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2v-4h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `signal_h_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.signal_h_plus />
      <TablerIcons.signal_h_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def signal_h_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 16v-8" />
      <path d="M11 8v8" />
      <path d="M7 12h4" />
      <path d="M14 12h4" />
      <path d="M16 10v4" />
    </svg>
    """
  end

  @doc """
  Renders the `signal_h` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.signal_h />
      <TablerIcons.signal_h class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def signal_h(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 16v-8" />
      <path d="M14 8v8" />
      <path d="M10 12h4" />
    </svg>
    """
  end

  @doc """
  Renders the `signal_lte` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.signal_lte />
      <TablerIcons.signal_lte class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def signal_lte(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 8h-4v8h4" />
      <path d="M17 12h2.5" />
      <path d="M4 8v8h4" />
      <path d="M10 8h4" />
      <path d="M12 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `signature_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.signature_off />
      <TablerIcons.signature_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def signature_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17c3.333 -3.333 5 -6 5 -8c0 -.394 -.017 -.735 -.05 -1.033m-1.95 -1.967c-1 0 -2.032 1.085 -2 3c.034 2.048 1.658 4.877 2.5 6c1.5 2 2.5 2.5 3.5 1l2 -3c.333 2.667 1.333 4 3 4c.219 0 .708 -.341 1.231 -.742m3.769 -.258c.303 .245 .64 .677 1 1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `signature` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.signature />
      <TablerIcons.signature class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def signature(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17c3.333 -3.333 5 -6 5 -8c0 -3 -1 -3 -2 -3s-2.032 1.085 -2 3c.034 2.048 1.658 4.877 2.5 6c1.5 2 2.5 2.5 3.5 1l2 -3c.333 2.667 1.333 4 3 4c.53 0 2.639 -2 3 -2c.517 0 1.517 .667 3 2" />
    </svg>
    """
  end

  @doc """
  Renders the `sitemap_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sitemap_off />
      <TablerIcons.sitemap_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sitemap_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 15m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M19 15a2 2 0 0 1 2 2m-.591 3.42c-.362 .358 -.86 .58 -1.409 .58h-2a2 2 0 0 1 -2 -2v-2c0 -.549 .221 -1.046 .579 -1.407" />
      <path d="M9 5a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2" />
      <path d="M6 15v-1a2 2 0 0 1 2 -2h4m4 0a2 2 0 0 1 2 2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `sitemap` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sitemap />
      <TablerIcons.sitemap class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sitemap(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 15m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M15 15m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v2a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
      <path d="M6 15v-1a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v1" />
      <path d="M12 9l0 3" />
    </svg>
    """
  end

  @doc """
  Renders the `skateboard_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.skateboard_off />
      <TablerIcons.skateboard_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def skateboard_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 15m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M15 15a2 2 0 0 0 2 2m2 -2a2 2 0 0 0 -2 -2" />
      <path d="M3 9c0 .552 .895 1 2 1h5m4 0h5c1.105 0 2 -.448 2 -1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `skateboard` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.skateboard />
      <TablerIcons.skateboard class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def skateboard(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 15m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 15m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M3 9a2 1 0 0 0 2 1h14a2 1 0 0 0 2 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `skateboarding` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.skateboarding />
      <TablerIcons.skateboarding class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def skateboarding(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 4a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M5.5 15h3.5l.75 -1.5" />
      <path d="M14 19v-5l-2.5 -3l2.5 -4" />
      <path d="M8 8l3 -1h4l1 3h3" />
      <path d="M17.5 21a.5 .5 0 1 0 0 -1a.5 .5 0 0 0 0 1z" fill="currentColor" />
      <path d="M3 18c0 .552 .895 1 2 1h14c1.105 0 2 -.448 2 -1" />
      <path d="M6.5 21a.5 .5 0 1 0 0 -1a.5 .5 0 0 0 0 1z" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `skull` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.skull />
      <TablerIcons.skull class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def skull(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 4c4.418 0 8 3.358 8 7.5c0 1.901 -.755 3.637 -2 4.96l0 2.54a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1v-2.54c-1.245 -1.322 -2 -3.058 -2 -4.96c0 -4.142 3.582 -7.5 8 -7.5z" />
      <path d="M10 17v3" />
      <path d="M14 17v3" />
      <path d="M9 11m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M15 11m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `slash` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.slash />
      <TablerIcons.slash class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def slash(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 5l-10 14" />
    </svg>
    """
  end

  @doc """
  Renders the `slashes` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.slashes />
      <TablerIcons.slashes class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def slashes(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 5l-10 14" />
      <path d="M20 5l-10 14" />
    </svg>
    """
  end

  @doc """
  Renders the `sleigh` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sleigh />
      <TablerIcons.sleigh class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sleigh(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19h15a4 4 0 0 0 4 -4" />
      <path d="M16 15h-9a4 4 0 0 1 -4 -4v-6l1.243 1.243a6 6 0 0 0 4.242 1.757h3.515v2a2 2 0 0 0 2 2h.5a1.5 1.5 0 0 0 1.5 -1.5a1.5 1.5 0 0 1 3 0v1.5a3 3 0 0 1 -3 3z" />
      <path d="M15 15v4" />
      <path d="M7 15v4" />
    </svg>
    """
  end

  @doc """
  Renders the `slice` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.slice />
      <TablerIcons.slice class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def slice(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19l15 -15l3 3l-6 6l2 2a14 14 0 0 1 -14 4" />
    </svg>
    """
  end

  @doc """
  Renders the `slideshow` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.slideshow />
      <TablerIcons.slideshow class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def slideshow(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 6l.01 0" />
      <path d="M3 3m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v8a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M3 13l4 -4a3 5 0 0 1 3 0l4 4" />
      <path d="M13 12l2 -2a3 5 0 0 1 3 0l3 3" />
      <path d="M8 21l.01 0" />
      <path d="M12 21l.01 0" />
      <path d="M16 21l.01 0" />
    </svg>
    """
  end

  @doc """
  Renders the `smart_home_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.smart_home_off />
      <TablerIcons.smart_home_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def smart_home_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.097 7.125l-2.037 1.585a2.665 2.665 0 0 0 -1.029 2.105v7.2a2 2 0 0 0 2 2h12c.559 0 1.064 -.229 1.427 -.598m.572 -3.417v-5.185c0 -.823 -.38 -1.6 -1.03 -2.105l-5.333 -4.148a2.666 2.666 0 0 0 -3.274 0l-1.029 .8" />
      <path d="M15.332 15.345c-2.213 .976 -5.335 .86 -7.332 -.345" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `smart_home` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.smart_home />
      <TablerIcons.smart_home class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def smart_home(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 8.71l-5.333 -4.148a2.666 2.666 0 0 0 -3.274 0l-5.334 4.148a2.665 2.665 0 0 0 -1.029 2.105v7.2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-7.2c0 -.823 -.38 -1.6 -1.03 -2.105" />
      <path d="M16 15c-2.21 1.333 -5.792 1.333 -8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `smoking_no` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.smoking_no />
      <TablerIcons.smoking_no class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def smoking_no(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 13l0 4" />
      <path d="M16 5v.5a2 2 0 0 0 2 2a2 2 0 0 1 2 2v.5" />
      <path d="M3 3l18 18" />
      <path d="M17 13h3a1 1 0 0 1 1 1v2c0 .28 -.115 .533 -.3 .714m-3.7 .286h-13a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h9" />
    </svg>
    """
  end

  @doc """
  Renders the `smoking` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.smoking />
      <TablerIcons.smoking class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def smoking(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 13m0 1a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1z" />
      <path d="M8 13l0 4" />
      <path d="M16 5v.5a2 2 0 0 0 2 2a2 2 0 0 1 2 2v.5" />
    </svg>
    """
  end

  @doc """
  Renders the `snowflake_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.snowflake_off />
      <TablerIcons.snowflake_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def snowflake_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 4l2 1l2 -1" />
      <path d="M12 2v6m1.196 1.186l1.804 1.034" />
      <path d="M17.928 6.268l.134 2.232l1.866 1.232" />
      <path d="M20.66 7l-5.629 3.25l-.031 .75" />
      <path d="M19.928 14.268l-1.015 .67" />
      <path d="M14.212 14.226l-2.171 1.262" />
      <path d="M14 20l-2 -1l-2 1" />
      <path d="M12 22v-6.5l-3 -1.72" />
      <path d="M6.072 17.732l-.134 -2.232l-1.866 -1.232" />
      <path d="M3.34 17l5.629 -3.25l-.01 -3.458" />
      <path d="M4.072 9.732l1.866 -1.232l.134 -2.232" />
      <path d="M3.34 7l5.629 3.25l.802 -.466" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `snowflake` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.snowflake />
      <TablerIcons.snowflake class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def snowflake(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 4l2 1l2 -1" />
      <path d="M12 2v6.5l3 1.72" />
      <path d="M17.928 6.268l.134 2.232l1.866 1.232" />
      <path d="M20.66 7l-5.629 3.25l.01 3.458" />
      <path d="M19.928 14.268l-1.866 1.232l-.134 2.232" />
      <path d="M20.66 17l-5.629 -3.25l-2.99 1.738" />
      <path d="M14 20l-2 -1l-2 1" />
      <path d="M12 22v-6.5l-3 -1.72" />
      <path d="M6.072 17.732l-.134 -2.232l-1.866 -1.232" />
      <path d="M3.34 17l5.629 -3.25l-.01 -3.458" />
      <path d="M4.072 9.732l1.866 -1.232l.134 -2.232" />
      <path d="M3.34 7l5.629 3.25l2.99 -1.738" />
    </svg>
    """
  end

  @doc """
  Renders the `snowman` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.snowman />
      <TablerIcons.snowman class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def snowman(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3a4 4 0 0 1 2.906 6.75a6 6 0 1 1 -5.81 0a4 4 0 0 1 2.904 -6.75z" />
      <path d="M17.5 11.5l2.5 -1.5" />
      <path d="M6.5 11.5l-2.5 -1.5" />
      <path d="M12 13h.01" />
      <path d="M12 16h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `soccer_field` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.soccer_field />
      <TablerIcons.soccer_field class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def soccer_field(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M3 9h3v6h-3z" />
      <path d="M18 9h3v6h-3z" />
      <path d="M3 5m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M12 5l0 14" />
    </svg>
    """
  end

  @doc """
  Renders the `social_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.social_off />
      <TablerIcons.social_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def social_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17.57 17.602a2 2 0 0 0 2.83 2.827" />
      <path d="M11.113 11.133a3 3 0 1 0 3.765 3.715" />
      <path d="M12 7v1" />
      <path d="M6.7 17.8l2.8 -2" />
      <path d="M17.3 17.8l-2.8 -2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `social` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.social />
      <TablerIcons.social class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def social(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 14m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12 7l0 4" />
      <path d="M6.7 17.8l2.8 -2" />
      <path d="M17.3 17.8l-2.8 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `sock` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sock />
      <TablerIcons.sock class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sock(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 3v6l4.798 5.142a4 4 0 0 1 -5.441 5.86l-6.736 -6.41a2 2 0 0 1 -.621 -1.451v-9.141h8z" />
      <path d="M7.895 15.768c.708 -.721 1.105 -1.677 1.105 -2.768a4 4 0 0 0 -4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `sofa_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sofa_off />
      <TablerIcons.sofa_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sofa_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 14v-1a2 2 0 1 1 4 0v5m-3 1h-16a1 1 0 0 1 -1 -1v-5a2 2 0 1 1 4 0v1h8" />
      <path d="M4 11v-3c0 -1.082 .573 -2.03 1.432 -2.558m3.568 -.442h8a3 3 0 0 1 3 3v3" />
      <path d="M12 5v3m0 4v2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `sofa` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sofa />
      <TablerIcons.sofa class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sofa(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 11a2 2 0 0 1 2 2v1h12v-1a2 2 0 1 1 4 0v5a1 1 0 0 1 -1 1h-18a1 1 0 0 1 -1 -1v-5a2 2 0 0 1 2 -2z" />
      <path d="M4 11v-3a3 3 0 0 1 3 -3h10a3 3 0 0 1 3 3v3" />
      <path d="M12 5v9" />
    </svg>
    """
  end

  @doc """
  Renders the `solar_panel_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.solar_panel_2 />
      <TablerIcons.solar_panel_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def solar_panel_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 2a4 4 0 1 0 8 0" />
      <path d="M4 3h1" />
      <path d="M19 3h1" />
      <path d="M12 9v1" />
      <path d="M17.2 7.2l.707 .707" />
      <path d="M6.8 7.2l-.7 .7" />
      <path d="M4.28 21h15.44a1 1 0 0 0 .97 -1.243l-1.5 -6a1 1 0 0 0 -.97 -.757h-12.44a1 1 0 0 0 -.97 .757l-1.5 6a1 1 0 0 0 .97 1.243z" />
      <path d="M4 17h16" />
      <path d="M10 13l-1 8" />
      <path d="M14 13l1 8" />
    </svg>
    """
  end

  @doc """
  Renders the `solar_panel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.solar_panel />
      <TablerIcons.solar_panel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def solar_panel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.28 14h15.44a1 1 0 0 0 .97 -1.243l-1.5 -6a1 1 0 0 0 -.97 -.757h-12.44a1 1 0 0 0 -.97 .757l-1.5 6a1 1 0 0 0 .97 1.243z" />
      <path d="M4 10h16" />
      <path d="M10 6l-1 8" />
      <path d="M14 6l1 8" />
      <path d="M12 14v4" />
      <path d="M7 18h10" />
    </svg>
    """
  end

  @doc """
  Renders the `sort_0_9` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sort_0_9 />
      <TablerIcons.sort_0_9 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sort_0_9(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 12h2" />
      <path d="M4 10v4a2 2 0 1 0 4 0v-4a2 2 0 1 0 -4 0z" />
      <path d="M16 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-6a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h3" />
    </svg>
    """
  end

  @doc """
  Renders the `sort_9_0` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sort_9_0 />
      <TablerIcons.sort_9_0 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sort_9_0(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-6a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h3" />
      <path d="M16 10v4a2 2 0 1 0 4 0v-4a2 2 0 1 0 -4 0z" />
      <path d="M11 12h2" />
    </svg>
    """
  end

  @doc """
  Renders the `sort_a_z` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sort_a_z />
      <TablerIcons.sort_a_z class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sort_a_z(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 8h4l-4 8h4" />
      <path d="M4 16v-6a2 2 0 1 1 4 0v6" />
      <path d="M4 13h4" />
      <path d="M11 12h2" />
    </svg>
    """
  end

  @doc """
  Renders the `sort_ascending_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sort_ascending_2 />
      <TablerIcons.sort_ascending_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sort_ascending_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 9l3 -3l3 3" />
      <path d="M5 5m0 .5a.5 .5 0 0 1 .5 -.5h4a.5 .5 0 0 1 .5 .5v4a.5 .5 0 0 1 -.5 .5h-4a.5 .5 0 0 1 -.5 -.5z" />
      <path d="M5 14m0 .5a.5 .5 0 0 1 .5 -.5h4a.5 .5 0 0 1 .5 .5v4a.5 .5 0 0 1 -.5 .5h-4a.5 .5 0 0 1 -.5 -.5z" />
      <path d="M17 6v12" />
    </svg>
    """
  end

  @doc """
  Renders the `sort_ascending_letters` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sort_ascending_letters />
      <TablerIcons.sort_ascending_letters class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sort_ascending_letters(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 10v-5c0 -1.38 .62 -2 2 -2s2 .62 2 2v5m0 -3h-4" />
      <path d="M19 21h-4l4 -7h-4" />
      <path d="M4 15l3 3l3 -3" />
      <path d="M7 6v12" />
    </svg>
    """
  end

  @doc """
  Renders the `sort_ascending_numbers` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sort_ascending_numbers />
      <TablerIcons.sort_ascending_numbers class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sort_ascending_numbers(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 15l3 3l3 -3" />
      <path d="M7 6v12" />
      <path d="M17 3a2 2 0 0 1 2 2v3a2 2 0 1 1 -4 0v-3a2 2 0 0 1 2 -2z" />
      <path d="M17 16m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 16v3a2 2 0 0 1 -2 2h-1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `sort_ascending` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sort_ascending />
      <TablerIcons.sort_ascending class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sort_ascending(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6l7 0" />
      <path d="M4 12l7 0" />
      <path d="M4 18l9 0" />
      <path d="M15 9l3 -3l3 3" />
      <path d="M18 6l0 12" />
    </svg>
    """
  end

  @doc """
  Renders the `sort_descending_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sort_descending_2 />
      <TablerIcons.sort_descending_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sort_descending_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5m0 .5a.5 .5 0 0 1 .5 -.5h4a.5 .5 0 0 1 .5 .5v4a.5 .5 0 0 1 -.5 .5h-4a.5 .5 0 0 1 -.5 -.5z" />
      <path d="M5 14m0 .5a.5 .5 0 0 1 .5 -.5h4a.5 .5 0 0 1 .5 .5v4a.5 .5 0 0 1 -.5 .5h-4a.5 .5 0 0 1 -.5 -.5z" />
      <path d="M14 15l3 3l3 -3" />
      <path d="M17 18v-12" />
    </svg>
    """
  end

  @doc """
  Renders the `sort_descending_letters` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sort_descending_letters />
      <TablerIcons.sort_descending_letters class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sort_descending_letters(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 21v-5c0 -1.38 .62 -2 2 -2s2 .62 2 2v5m0 -3h-4" />
      <path d="M19 10h-4l4 -7h-4" />
      <path d="M4 15l3 3l3 -3" />
      <path d="M7 6v12" />
    </svg>
    """
  end

  @doc """
  Renders the `sort_descending_numbers` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sort_descending_numbers />
      <TablerIcons.sort_descending_numbers class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sort_descending_numbers(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 15l3 3l3 -3" />
      <path d="M7 6v12" />
      <path d="M17 14a2 2 0 0 1 2 2v3a2 2 0 1 1 -4 0v-3a2 2 0 0 1 2 -2z" />
      <path d="M17 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 5v3a2 2 0 0 1 -2 2h-1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `sort_descending` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sort_descending />
      <TablerIcons.sort_descending class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sort_descending(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6l9 0" />
      <path d="M4 12l7 0" />
      <path d="M4 18l7 0" />
      <path d="M15 15l3 3l3 -3" />
      <path d="M18 6l0 12" />
    </svg>
    """
  end

  @doc """
  Renders the `sort_z_a` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sort_z_a />
      <TablerIcons.sort_z_a class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sort_z_a(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8h4l-4 8h4" />
      <path d="M16 16v-6a2 2 0 1 1 4 0v6" />
      <path d="M16 13h4" />
      <path d="M11 12h2" />
    </svg>
    """
  end

  @doc """
  Renders the `sos` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sos />
      <TablerIcons.sos class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sos(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 8h-3a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-3" />
      <path d="M10 8h4v8h-4z" />
      <path d="M17 16h3a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-2a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h3" />
    </svg>
    """
  end

  @doc """
  Renders the `soup_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.soup_off />
      <TablerIcons.soup_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def soup_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19h16" />
      <path d="M15 11h6c0 1.691 -.525 3.26 -1.42 4.552m-2.034 2.032a7.963 7.963 0 0 1 -4.546 1.416h-2a8 8 0 0 1 -8 -8h8" />
      <path d="M12 5v3" />
      <path d="M15 5v3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `soup` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.soup />
      <TablerIcons.soup class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def soup(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 11h16a1 1 0 0 1 1 1v.5c0 1.5 -2.517 5.573 -4 6.5v1a1 1 0 0 1 -1 1h-8a1 1 0 0 1 -1 -1v-1c-1.687 -1.054 -4 -5 -4 -6.5v-.5a1 1 0 0 1 1 -1z" />
      <path d="M12 4a2.4 2.4 0 0 0 -1 2a2.4 2.4 0 0 0 1 2" />
      <path d="M16 4a2.4 2.4 0 0 0 -1 2a2.4 2.4 0 0 0 1 2" />
      <path d="M8 4a2.4 2.4 0 0 0 -1 2a2.4 2.4 0 0 0 1 2" />
    </svg>
    """
  end

  @doc """
  Renders the `source_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.source_code />
      <TablerIcons.source_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def source_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.5 4h2.5a3 3 0 0 1 3 3v10a3 3 0 0 1 -3 3h-10a3 3 0 0 1 -3 -3v-5" />
      <path d="M6 5l-2 2l2 2" />
      <path d="M10 9l2 -2l-2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `space_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.space_off />
      <TablerIcons.space_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def space_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10v3a1 1 0 0 0 1 1h9m4 0h1a1 1 0 0 0 1 -1v-3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `space` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.space />
      <TablerIcons.space class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def space(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10v3a1 1 0 0 0 1 1h14a1 1 0 0 0 1 -1v-3" />
    </svg>
    """
  end

  @doc """
  Renders the `spacing_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.spacing_horizontal />
      <TablerIcons.spacing_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def spacing_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 20h-2a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h2" />
      <path d="M4 20h2a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
      <path d="M12 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `spacing_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.spacing_vertical />
      <TablerIcons.spacing_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def spacing_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20v-2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v2" />
      <path d="M4 4v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2" />
      <path d="M16 12h-8" />
    </svg>
    """
  end

  @doc """
  Renders the `spade_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.spade_filled />
      <TablerIcons.spade_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def spade_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11.327 2.26a1395.065 1395.065 0 0 0 -4.923 4.504c-.626 .6 -1.212 1.21 -1.774 1.843a6.528 6.528 0 0 0 -.314 8.245l.14 .177c1.012 1.205 2.561 1.755 4.055 1.574l.246 -.037l-.706 2.118a1 1 0 0 0 .949 1.316h6l.118 -.007a1 1 0 0 0 .83 -1.31l-.688 -2.065l.104 .02c1.589 .25 3.262 -.387 4.32 -1.785a6.527 6.527 0 0 0 -.311 -8.243a31.787 31.787 0 0 0 -1.76 -1.83l-4.938 -4.518a1 1 0 0 0 -1.348 -.001z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `spade` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.spade />
      <TablerIcons.spade class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def spade(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3l4.919 4.5c.61 .587 1.177 1.177 1.703 1.771a5.527 5.527 0 0 1 .264 6.979c-1.18 1.56 -3.338 1.92 -4.886 .75v1l1 3h-6l1 -3v-1c-1.54 1.07 -3.735 .772 -4.886 -.75a5.527 5.527 0 0 1 .264 -6.979a30.883 30.883 0 0 1 1.703 -1.771a1541.72 1541.72 0 0 1 4.919 -4.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `sparkles` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sparkles />
      <TablerIcons.sparkles class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sparkles(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 18a2 2 0 0 1 2 2a2 2 0 0 1 2 -2a2 2 0 0 1 -2 -2a2 2 0 0 1 -2 2zm0 -12a2 2 0 0 1 2 2a2 2 0 0 1 2 -2a2 2 0 0 1 -2 -2a2 2 0 0 1 -2 2zm-7 12a6 6 0 0 1 6 -6a6 6 0 0 1 -6 -6a6 6 0 0 1 -6 6a6 6 0 0 1 6 6z" />
    </svg>
    """
  end

  @doc """
  Renders the `speakerphone` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.speakerphone />
      <TablerIcons.speakerphone class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def speakerphone(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 8a3 3 0 0 1 0 6" />
      <path d="M10 8v11a1 1 0 0 1 -1 1h-1a1 1 0 0 1 -1 -1v-5" />
      <path d="M12 8h0l4.524 -3.77a.9 .9 0 0 1 1.476 .692v12.156a.9 .9 0 0 1 -1.476 .692l-4.524 -3.77h-8a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h8" />
    </svg>
    """
  end

  @doc """
  Renders the `speedboat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.speedboat />
      <TablerIcons.speedboat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def speedboat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17h13.4a3 3 0 0 0 2.5 -1.34l3.1 -4.66h0h-6.23a4 4 0 0 0 -1.49 .29l-3.56 1.42a4 4 0 0 1 -1.49 .29h-3.73h0h-1l-1.5 4z" />
      <path d="M6 13l1.5 -5" />
      <path d="M6 8h8l2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `sphere_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sphere_off />
      <TablerIcons.sphere_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sphere_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12c0 1.657 4.03 3 9 3c.987 0 1.936 -.053 2.825 -.15m3.357 -.67c1.735 -.547 2.818 -1.32 2.818 -2.18" />
      <path d="M20.051 16.027a9 9 0 0 0 -12.083 -12.075m-2.34 1.692a9 9 0 0 0 12.74 12.716" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `sphere_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sphere_plus />
      <TablerIcons.sphere_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sphere_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12c0 1.657 4.03 3 9 3c1.116 0 2.185 -.068 3.172 -.192m5.724 -2.35a1.1 1.1 0 0 0 .104 -.458" />
      <path d="M20.984 12.546a9 9 0 1 0 -8.442 8.438" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `sphere` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sphere />
      <TablerIcons.sphere class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sphere(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12c0 1.657 4.03 3 9 3s9 -1.343 9 -3" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `spider` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.spider />
      <TablerIcons.spider class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def spider(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4v2l5 5" />
      <path d="M2.5 9.5l1.5 1.5h6" />
      <path d="M4 19v-2l6 -6" />
      <path d="M19 4v2l-5 5" />
      <path d="M21.5 9.5l-1.5 1.5h-6" />
      <path d="M20 19v-2l-6 -6" />
      <path d="M12 15m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M12 9m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `spiral_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.spiral_off />
      <TablerIcons.spiral_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def spiral_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12.057a1.9 1.9 0 0 0 .614 .743c.682 .459 1.509 .374 2.164 -.02m1.103 -2.92a3.298 3.298 0 0 0 -1.749 -2.059a3.6 3.6 0 0 0 -.507 -.195m-3.385 .634a4.154 4.154 0 0 0 -1.347 1.646c-1.095 2.432 .29 5.248 2.71 6.246c1.955 .806 4.097 .35 5.65 -.884m1.745 -2.268l.043 -.103c1.36 -3.343 -.557 -7.134 -3.896 -8.41c-1.593 -.61 -3.27 -.599 -4.79 -.113m-2.579 1.408a7.574 7.574 0 0 0 -2.268 3.128c-1.63 4.253 .823 9.024 5.082 10.576c3.211 1.17 6.676 .342 9.124 -1.738m1.869 -2.149a9.354 9.354 0 0 0 1.417 -4.516" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `spiral` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.spiral />
      <TablerIcons.spiral class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def spiral(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12.057a1.9 1.9 0 0 0 .614 .743c1.06 .713 2.472 .112 3.043 -.919c.839 -1.513 -.022 -3.368 -1.525 -4.08c-2 -.95 -4.371 .154 -5.24 2.086c-1.095 2.432 .29 5.248 2.71 6.246c2.931 1.208 6.283 -.418 7.438 -3.255c1.36 -3.343 -.557 -7.134 -3.896 -8.41c-3.855 -1.474 -8.2 .68 -9.636 4.422c-1.63 4.253 .823 9.024 5.082 10.576c4.778 1.74 10.118 -.941 11.833 -5.59a9.354 9.354 0 0 0 .577 -2.813" />
    </svg>
    """
  end

  @doc """
  Renders the `sport_billard` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sport_billard />
      <TablerIcons.sport_billard class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sport_billard(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 10m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 14m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 12m-8 0a8 8 0 1 0 16 0a8 8 0 1 0 -16 0" />
    </svg>
    """
  end

  @doc """
  Renders the `spray` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.spray />
      <TablerIcons.spray class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def spray(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 10m0 2a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v7a2 2 0 0 1 -2 2h-4a2 2 0 0 1 -2 -2z" />
      <path d="M6 10v-4a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v4" />
      <path d="M15 7h.01" />
      <path d="M18 9h.01" />
      <path d="M18 5h.01" />
      <path d="M21 3h.01" />
      <path d="M21 7h.01" />
      <path d="M21 11h.01" />
      <path d="M10 7h1" />
    </svg>
    """
  end

  @doc """
  Renders the `spy_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.spy_off />
      <TablerIcons.spy_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def spy_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 11h8m4 0h6" />
      <path d="M5 11v-4c0 -.571 .16 -1.105 .437 -1.56m2.563 -1.44h8a3 3 0 0 1 3 3v4" />
      <path d="M7 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M14.88 14.877a3 3 0 1 0 4.239 4.247m.59 -3.414a3.012 3.012 0 0 0 -1.425 -1.422" />
      <path d="M10 17h4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `spy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.spy />
      <TablerIcons.spy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def spy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 11h18" />
      <path d="M5 11v-4a3 3 0 0 1 3 -3h8a3 3 0 0 1 3 3v4" />
      <path d="M7 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M10 17h4" />
    </svg>
    """
  end

  @doc """
  Renders the `sql` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sql />
      <TablerIcons.sql class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sql(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
      <path d="M17 8v8h4" />
      <path d="M13 15l1 1" />
      <path d="M3 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-2a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1" />
    </svg>
    """
  end

  @doc """
  Renders the `square_0_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_0_filled />
      <TablerIcons.square_0_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_0_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-6.333 5a3 3 0 0 0 -2.995 2.824l-.005 .176v4l.005 .176a3 3 0 0 0 5.99 0l.005 -.176v-4l-.005 -.176a3 3 0 0 0 -2.995 -2.824zm0 2a1 1 0 0 1 .993 .883l.007 .117v4l-.007 .117a1 1 0 0 1 -1.986 0l-.007 -.117v-4l.007 -.117a1 1 0 0 1 .993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_1_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_1_filled />
      <TablerIcons.square_1_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_1_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-5.339 5.886c-.083 -.777 -1.008 -1.16 -1.617 -.67l-.084 .077l-2 2l-.083 .094a1 1 0 0 0 0 1.226l.083 .094l.094 .083a1 1 0 0 0 1.226 0l.094 -.083l.293 -.293v5.586l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-8l-.006 -.114z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_2_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_2_filled />
      <TablerIcons.square_2_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_2_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-5.333 5h-3l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h3v2h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v2l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h3l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007h-3v-2h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_3_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_3_filled />
      <TablerIcons.square_3_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_3_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-5.333 5h-2l-.15 .005a2 2 0 0 0 -1.85 1.995a1 1 0 0 0 1.974 .23l.02 -.113l.006 -.117h2v2h-2l-.133 .007c-1.111 .12 -1.154 1.73 -.128 1.965l.128 .021l.133 .007h2v2h-2l-.007 -.117a1 1 0 0 0 -1.993 .117a2 2 0 0 0 1.85 1.995l.15 .005h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a1.988 1.988 0 0 0 -.17 -.667l-.075 -.152l-.019 -.032l.02 -.03a2.01 2.01 0 0 0 .242 -.795l.007 -.174v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_4_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_4_filled />
      <TablerIcons.square_4_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_4_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-4.333 5a1 1 0 0 0 -.993 .883l-.007 .117v3h-2v-3l-.007 -.117a1 1 0 0 0 -1.986 0l-.007 .117v3l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2v3l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-8l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_5_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_5_filled />
      <TablerIcons.square_5_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_5_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-4.333 5h-4a1 1 0 0 0 -.993 .883l-.007 .117v4a1 1 0 0 0 .883 .993l.117 .007h3v2h-2l-.007 -.117a1 1 0 0 0 -1.993 .117a2 2 0 0 0 1.85 1.995l.15 .005h2a2 2 0 0 0 1.995 -1.85l.005 -.15v-2a2 2 0 0 0 -1.85 -1.995l-.15 -.005h-2v-2h3a1 1 0 0 0 .993 -.883l.007 -.117a1 1 0 0 0 -.883 -.993l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_6_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_6_filled />
      <TablerIcons.square_6_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_6_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-5.333 5h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v6l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006h-2v-2h2l.007 .117a1 1 0 0 0 1.993 -.117a2 2 0 0 0 -1.85 -1.995l-.15 -.005zm0 6v2h-2v-2h2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_7_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_7_filled />
      <TablerIcons.square_7_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_7_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-4.333 5h-4l-.117 .007a1 1 0 0 0 -.876 .876l-.007 .117l.007 .117a1 1 0 0 0 .876 .876l.117 .007h2.718l-1.688 6.757l-.022 .115a1 1 0 0 0 1.927 .482l.035 -.111l2 -8l.021 -.112a1 1 0 0 0 -.878 -1.125l-.113 -.006z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_8_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_8_filled />
      <TablerIcons.square_8_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_8_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-5.333 5h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v2l.005 .15c.018 .236 .077 .46 .17 .667l.075 .152l.018 .03l-.018 .032c-.133 .24 -.218 .509 -.243 .795l-.007 .174v2l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a1.988 1.988 0 0 0 -.17 -.667l-.075 -.152l-.019 -.032l.02 -.03a2.01 2.01 0 0 0 .242 -.795l.007 -.174v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006zm0 6v2h-2v-2h2zm0 -4v2h-2v-2h2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_9_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_9_filled />
      <TablerIcons.square_9_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_9_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-5.333 5h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v2l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2v2h-2l-.007 -.117a1 1 0 0 0 -1.993 .117a2 2 0 0 0 1.85 1.995l.15 .005h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-6l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006zm0 2v2h-2v-2h2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_arrow_down_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_arrow_down_filled />
      <TablerIcons.square_arrow_down_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_arrow_down_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-7 5a1 1 0 0 0 -1 1v5.585l-2.293 -2.292l-.094 -.083a1 1 0 0 0 -1.32 1.497l4 4l.094 .083l.092 .064l.098 .052l.11 .044l.112 .03l.126 .017l.075 .003l.117 -.007l.149 -.029l.105 -.035l.113 -.054l.111 -.071a.939 .939 0 0 0 .112 -.097l4 -4l.083 -.094a1 1 0 0 0 -.083 -1.32l-.094 -.083a1 1 0 0 0 -1.32 .083l-2.293 2.292v-5.585l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_arrow_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_arrow_down />
      <TablerIcons.square_arrow_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_arrow_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 12l4 4l4 -4" />
      <path d="M12 8v8" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_arrow_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_arrow_left_filled />
      <TablerIcons.square_arrow_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_arrow_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-6.293 5.293a1 1 0 0 0 -1.414 0l-4 4l-.083 .094l-.064 .092l-.052 .098l-.044 .11l-.03 .112l-.017 .126l-.003 .075l.004 .09l.007 .058l.025 .118l.035 .105l.054 .113l.071 .111c.03 .04 .061 .077 .097 .112l4 4l.094 .083a1 1 0 0 0 1.32 -.083l.083 -.094a1 1 0 0 0 -.083 -1.32l-2.292 -2.293h5.585l.117 -.007a1 1 0 0 0 -.117 -1.993h-5.585l2.292 -2.293l.083 -.094a1 1 0 0 0 -.083 -1.32z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_arrow_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_arrow_left />
      <TablerIcons.square_arrow_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_arrow_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8l-4 4l4 4" />
      <path d="M16 12h-8" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_arrow_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_arrow_right_filled />
      <TablerIcons.square_arrow_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_arrow_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-6.387 5.21a1 1 0 0 0 -1.32 .083l-.083 .094a1 1 0 0 0 .083 1.32l2.292 2.293h-5.585l-.117 .007a1 1 0 0 0 .117 1.993h5.585l-2.292 2.293l-.083 .094a1 1 0 0 0 1.497 1.32l4 -4l.073 -.082l.074 -.104l.052 -.098l.044 -.11l.03 -.112l.017 -.126l.003 -.075l-.007 -.118l-.029 -.148l-.035 -.105l-.054 -.113l-.071 -.111a1.008 1.008 0 0 0 -.097 -.112l-4 -4z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_arrow_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_arrow_right />
      <TablerIcons.square_arrow_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_arrow_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 16l4 -4l-4 -4" />
      <path d="M8 12h8" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_arrow_up_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_arrow_up_filled />
      <TablerIcons.square_arrow_up_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_arrow_up_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-7 5l-.09 .004l-.058 .007l-.118 .025l-.105 .035l-.113 .054l-.111 .071a1.008 1.008 0 0 0 -.112 .097l-4 4l-.083 .094a1 1 0 0 0 .083 1.32l.094 .083a1 1 0 0 0 1.32 -.083l2.293 -2.292v5.585l.007 .117a1 1 0 0 0 1.993 -.117v-5.585l2.293 2.292l.094 .083a1 1 0 0 0 1.32 -1.497l-4 -4l-.082 -.073l-.104 -.074l-.098 -.052l-.11 -.044l-.112 -.03l-.126 -.017l-.075 -.003z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_arrow_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_arrow_up />
      <TablerIcons.square_arrow_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_arrow_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 12l-4 -4l-4 4" />
      <path d="M12 16v-8" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_asterisk_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_asterisk_filled />
      <TablerIcons.square_asterisk_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_asterisk_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-7 5.5a1 1 0 0 0 -1 1v1.631l-1.445 -.963l-.101 -.06a1 1 0 0 0 -1.009 1.724l1.75 1.168l-1.75 1.169l-.093 .07a1 1 0 0 0 1.203 1.594l1.445 -.965v1.632l.007 .117a1 1 0 0 0 1.993 -.117v-1.631l1.445 .963l.101 .06a1 1 0 0 0 1.009 -1.724l-1.752 -1.169l1.752 -1.167l.093 -.07a1 1 0 0 0 -1.203 -1.594l-1.445 .962v-1.63l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_asterisk` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_asterisk />
      <TablerIcons.square_asterisk class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_asterisk(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M12 8.5v7" />
      <path d="M9 10l6 4" />
      <path d="M9 14l6 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `square_check_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_check_filled />
      <TablerIcons.square_check_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_check_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-2.626 7.293a1 1 0 0 0 -1.414 0l-3.293 3.292l-1.293 -1.292l-.094 -.083a1 1 0 0 0 -1.32 1.497l2 2l.094 .083a1 1 0 0 0 1.32 -.083l4 -4l.083 -.094a1 1 0 0 0 -.083 -1.32z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_check />
      <TablerIcons.square_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 12l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevron_down_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevron_down_filled />
      <TablerIcons.square_chevron_down_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevron_down_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-9.387 8.21a1 1 0 0 0 -1.32 1.497l3 3l.094 .083a1 1 0 0 0 1.32 -.083l3 -3l.083 -.094a1 1 0 0 0 -.083 -1.32l-.094 -.083a1 1 0 0 0 -1.32 .083l-2.293 2.292l-2.293 -2.292z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevron_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevron_down />
      <TablerIcons.square_chevron_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevron_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 11l-3 3l-3 -3" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevron_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevron_left_filled />
      <TablerIcons.square_chevron_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevron_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-5.293 6.293a1 1 0 0 0 -1.414 0l-3 3l-.083 .094a1 1 0 0 0 .083 1.32l3 3l.094 .083a1 1 0 0 0 1.32 -.083l.083 -.094a1 1 0 0 0 -.083 -1.32l-2.292 -2.293l2.292 -2.293l.083 -.094a1 1 0 0 0 -.083 -1.32z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevron_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevron_left />
      <TablerIcons.square_chevron_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevron_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 15l-3 -3l3 -3" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevron_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevron_right_filled />
      <TablerIcons.square_chevron_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevron_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-7.387 6.21a1 1 0 0 0 -1.32 .083l-.083 .094a1 1 0 0 0 .083 1.32l2.292 2.293l-2.292 2.293l-.083 .094a1 1 0 0 0 1.497 1.32l3 -3l.083 -.094a1 1 0 0 0 -.083 -1.32l-3 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevron_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevron_right />
      <TablerIcons.square_chevron_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevron_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 9l3 3l-3 3" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevron_up_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevron_up_filled />
      <TablerIcons.square_chevron_up_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevron_up_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-6.387 7.21a1 1 0 0 0 -1.32 .083l-3 3l-.083 .094a1 1 0 0 0 .083 1.32l.094 .083a1 1 0 0 0 1.32 -.083l2.293 -2.292l2.293 2.292l.094 .083a1 1 0 0 0 1.32 -1.497l-3 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevron_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevron_up />
      <TablerIcons.square_chevron_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevron_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 13l3 -3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevrons_down_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevrons_down_filled />
      <TablerIcons.square_chevrons_down_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevrons_down_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-9.387 10.21a1 1 0 0 0 -1.32 1.497l3 3l.094 .083a1 1 0 0 0 1.32 -.083l3 -3l.083 -.094a1 1 0 0 0 -.083 -1.32l-.094 -.083a1 1 0 0 0 -1.32 .083l-2.293 2.292l-2.293 -2.292zm0 -5a1 1 0 0 0 -1.32 1.497l3 3l.094 .083a1 1 0 0 0 1.32 -.083l3 -3l.083 -.094a1 1 0 0 0 -.083 -1.32l-.094 -.083a1 1 0 0 0 -1.32 .083l-2.293 2.292l-2.293 -2.292z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevrons_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevrons_down />
      <TablerIcons.square_chevrons_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevrons_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8l-3 3l-3 -3" />
      <path d="M15 13l-3 3l-3 -3" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevrons_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevrons_left_filled />
      <TablerIcons.square_chevrons_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevrons_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-2.293 6.293a1 1 0 0 0 -1.414 0l-3 3l-.083 .094a1 1 0 0 0 .083 1.32l3 3l.094 .083a1 1 0 0 0 1.32 -.083l.083 -.094a1 1 0 0 0 -.083 -1.32l-2.292 -2.293l2.292 -2.293l.083 -.094a1 1 0 0 0 -.083 -1.32zm-5 0a1 1 0 0 0 -1.414 0l-3 3l-.083 .094a1 1 0 0 0 .083 1.32l3 3l.094 .083a1 1 0 0 0 1.32 -.083l.083 -.094a1 1 0 0 0 -.083 -1.32l-2.292 -2.293l2.292 -2.293l.083 -.094a1 1 0 0 0 -.083 -1.32z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevrons_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevrons_left />
      <TablerIcons.square_chevrons_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevrons_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 15l-3 -3l3 -3" />
      <path d="M11 15l-3 -3l3 -3" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevrons_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevrons_right_filled />
      <TablerIcons.square_chevrons_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevrons_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-10.387 6.21a1 1 0 0 0 -1.32 .083l-.083 .094a1 1 0 0 0 .083 1.32l2.292 2.293l-2.292 2.293l-.083 .094a1 1 0 0 0 1.497 1.32l3 -3l.083 -.094a1 1 0 0 0 -.083 -1.32l-3 -3zm5 0a1 1 0 0 0 -1.32 .083l-.083 .094a1 1 0 0 0 .083 1.32l2.292 2.293l-2.292 2.293l-.083 .094a1 1 0 0 0 1.497 1.32l3 -3l.083 -.094a1 1 0 0 0 -.083 -1.32l-3 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevrons_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevrons_right />
      <TablerIcons.square_chevrons_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevrons_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9l3 3l-3 3" />
      <path d="M13 9l3 3l-3 3" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevrons_up_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevrons_up_filled />
      <TablerIcons.square_chevrons_up_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevrons_up_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-6.387 10.21a1 1 0 0 0 -1.32 .083l-3 3l-.083 .094a1 1 0 0 0 .083 1.32l.094 .083a1 1 0 0 0 1.32 -.083l2.293 -2.292l2.293 2.292l.094 .083a1 1 0 0 0 1.32 -1.497l-3 -3zm0 -5a1 1 0 0 0 -1.32 .083l-3 3l-.083 .094a1 1 0 0 0 .083 1.32l.094 .083a1 1 0 0 0 1.32 -.083l2.293 -2.292l2.293 2.292l.094 .083a1 1 0 0 0 1.32 -1.497l-3 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_chevrons_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_chevrons_up />
      <TablerIcons.square_chevrons_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_chevrons_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 16l3 -3l3 3" />
      <path d="M9 11l3 -3l3 3" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_dot_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_dot_filled />
      <TablerIcons.square_dot_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_dot_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-7 8a2 2 0 0 0 -1.995 1.85l-.005 .15l.005 .15a2 2 0 1 0 1.995 -2.15z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_dot` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_dot />
      <TablerIcons.square_dot class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_dot(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `square_f0_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f0_filled />
      <TablerIcons.square_f0_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f0_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-3.833 6a2.5 2.5 0 0 0 -2.495 2.336l-.005 .164v3l.005 .164a2.5 2.5 0 0 0 4.99 0l.005 -.164v-3l-.005 -.164a2.5 2.5 0 0 0 -2.495 -2.336zm-4.5 0h-2l-.117 .007a1 1 0 0 0 -.876 .876l-.007 .117v6l.007 .117a1 1 0 0 0 .876 .876l.117 .007l.117 -.007a1 1 0 0 0 .876 -.876l.007 -.117v-2h1l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007h-1v-1h1l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm4.5 2a.5 .5 0 0 1 .492 .41l.008 .09v3l-.008 .09a.5 .5 0 0 1 -.984 0l-.008 -.09v-3l.008 -.09a.5 .5 0 0 1 .492 -.41z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_f0` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f0 />
      <TablerIcons.square_f0 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f0(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M13 10.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
      <path d="M8 12h2" />
      <path d="M10 9h-2v6" />
    </svg>
    """
  end

  @doc """
  Renders the `square_f1_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f1_filled />
      <TablerIcons.square_f1_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f1_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-8.333 6h-2l-.117 .007a1 1 0 0 0 -.876 .876l-.007 .117v6l.007 .117a1 1 0 0 0 .876 .876l.117 .007l.117 -.007a1 1 0 0 0 .876 -.876l.007 -.117v-2h1l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007h-1v-1h1l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm5.994 .886c-.083 -.777 -1.008 -1.16 -1.617 -.67l-.084 .077l-2 2l-.083 .094a1 1 0 0 0 0 1.226l.083 .094l.094 .083a1 1 0 0 0 1.226 0l.094 -.083l.293 -.293v3.586l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-6l-.006 -.114z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_f1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f1 />
      <TablerIcons.square_f1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M13 11l2 -2v6" />
      <path d="M8 12h2" />
      <path d="M10 9h-2v6" />
    </svg>
    """
  end

  @doc """
  Renders the `square_f2_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f2_filled />
      <TablerIcons.square_f2_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f2_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-3.333 6h-2l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h2v1h-1l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v1l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007h-2v-1h1l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-1l-.005 -.15a2 2 0 0 0 -1.995 -1.85zm-5 0h-2l-.117 .007a1 1 0 0 0 -.876 .876l-.007 .117v6l.007 .117a1 1 0 0 0 .876 .876l.117 .007l.117 -.007a1 1 0 0 0 .876 -.876l.007 -.117v-2h1l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007h-1v-1h1l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_f2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f2 />
      <TablerIcons.square_f2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M13 9h2a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-1a1 1 0 0 0 -1 1v1a1 1 0 0 0 1 1h2" />
      <path d="M8 12h2" />
      <path d="M10 9h-2v6" />
    </svg>
    """
  end

  @doc """
  Renders the `square_f3_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f3_filled />
      <TablerIcons.square_f3_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f3_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-3.833 6h-1l-.144 .007a1.5 1.5 0 0 0 -1.356 1.493a1 1 0 0 0 1 1l.117 -.007a1 1 0 0 0 .727 -.457l.02 -.036h.636l.09 .008a.5 .5 0 0 1 0 .984l-.09 .008h-.5l-.133 .007c-1.156 .124 -1.156 1.862 0 1.986l.133 .007h.5l.09 .008a.5 .5 0 0 1 .41 .492l-.008 .09a.5 .5 0 0 1 -.492 .41h-.635l-.02 -.036a1 1 0 0 0 -1.845 .536a1.5 1.5 0 0 0 1.5 1.5h1l.164 -.005a2.5 2.5 0 0 0 2.336 -2.495l-.005 -.164a2.487 2.487 0 0 0 -.477 -1.312l-.019 -.024l.126 -.183a2.5 2.5 0 0 0 -2.125 -3.817zm-4.5 0h-2l-.117 .007a1 1 0 0 0 -.883 .993v6l.007 .117a1 1 0 0 0 .993 .883l.117 -.007a1 1 0 0 0 .883 -.993v-2h1l.117 -.007a1 1 0 0 0 -.117 -1.993h-1v-1h1l.117 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_f3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f3 />
      <TablerIcons.square_f3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M13 9.5a.5 .5 0 0 1 .5 -.5h1a1.5 1.5 0 0 1 0 3h-.5h.5a1.5 1.5 0 0 1 0 3h-1a.5 .5 0 0 1 -.5 -.5" />
      <path d="M8 12h2" />
      <path d="M10 9h-2v6" />
    </svg>
    """
  end

  @doc """
  Renders the `square_f4_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f4_filled />
      <TablerIcons.square_f4_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f4_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-2.333 6a1 1 0 0 0 -.993 .883l-.007 .117v2h-1v-2l-.007 -.117a1 1 0 0 0 -1.986 0l-.007 .117v2l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h1v2l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-6l-.007 -.117a1 1 0 0 0 -.993 -.883zm-6 0h-2l-.117 .007a1 1 0 0 0 -.876 .876l-.007 .117v6l.007 .117a1 1 0 0 0 .876 .876l.117 .007l.117 -.007a1 1 0 0 0 .876 -.876l.007 -.117v-2h1l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007h-1v-1h1l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_f4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f4 />
      <TablerIcons.square_f4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M13 9v2a1 1 0 0 0 1 1h1" />
      <path d="M16 9v6" />
      <path d="M8 12h2" />
      <path d="M10 9h-2v6" />
    </svg>
    """
  end

  @doc """
  Renders the `square_f5_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f5_filled />
      <TablerIcons.square_f5_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f5_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-2.333 6h-3l-.117 .007a1 1 0 0 0 -.857 .764l-.02 .112l-.006 .117v3l.007 .117a1 1 0 0 0 .764 .857l.112 .02l.117 .006h2v1h-1.033l-.025 -.087l-.049 -.113a1 1 0 0 0 -1.893 .45c0 .867 .63 1.587 1.458 1.726l.148 .018l.144 .006h1.25l.157 -.006a2 2 0 0 0 1.819 -1.683l.019 -.162l.005 -.149v-1l-.006 -.157a2 2 0 0 0 -1.683 -1.819l-.162 -.019l-.149 -.005h-1v-1h2l.117 -.007a1 1 0 0 0 .857 -.764l.02 -.112l.006 -.117l-.007 -.117a1 1 0 0 0 -.764 -.857l-.112 -.02l-.117 -.006zm-6 0h-2l-.117 .007a1 1 0 0 0 -.876 .876l-.007 .117v6l.007 .117a1 1 0 0 0 .876 .876l.117 .007l.117 -.007a1 1 0 0 0 .876 -.876l.007 -.117v-2h1l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007h-1v-1h1l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_f5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f5 />
      <TablerIcons.square_f5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M13 14.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-2v-3h3" />
      <path d="M8 12h2" />
      <path d="M10 9h-2v6" />
    </svg>
    """
  end

  @doc """
  Renders the `square_f6_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f6_filled />
      <TablerIcons.square_f6_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f6_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-3.083 6h-1.25l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v4l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h1l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-1l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006h-1v-1h1.032l.026 .087a1 1 0 0 0 1.942 -.337a1.75 1.75 0 0 0 -1.606 -1.744l-.144 -.006zm-5.25 0h-2l-.117 .007a1 1 0 0 0 -.876 .876l-.007 .117v6l.007 .117a1 1 0 0 0 .876 .876l.117 .007l.117 -.007a1 1 0 0 0 .876 -.876l.007 -.117v-2h1l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007h-1v-1h1l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm5 5v1h-1v-1h1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_f6` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f6 />
      <TablerIcons.square_f6 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f6(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M16 9.75a.75 .75 0 0 0 -.75 -.75h-1.25a1 1 0 0 0 -1 1v4a1 1 0 0 0 1 1h1a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-2" />
      <path d="M8 12h2" />
      <path d="M10 9h-2v6" />
    </svg>
    """
  end

  @doc """
  Renders the `square_f7_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f7_filled />
      <TablerIcons.square_f7_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f7_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-2.333 6h-3l-.117 .007a1 1 0 0 0 -.883 .993l.007 .117a1 1 0 0 0 .993 .883h1.718l-1.188 4.757l-.022 .115a1 1 0 0 0 1.962 .37l1.5 -6l.021 -.11a1 1 0 0 0 -.991 -1.132zm-6 0h-2l-.117 .007a1 1 0 0 0 -.883 .993v6l.007 .117a1 1 0 0 0 .993 .883l.117 -.007a1 1 0 0 0 .883 -.993v-2h1l.117 -.007a1 1 0 0 0 -.117 -1.993h-1v-1h1l.117 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_f7` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f7 />
      <TablerIcons.square_f7 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f7(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M13 9h3l-1.5 6" />
      <path d="M8 12h2" />
      <path d="M10 9h-2v6" />
    </svg>
    """
  end

  @doc """
  Renders the `square_f8_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f8_filled />
      <TablerIcons.square_f8_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f8_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-3.333 6h-1l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v1l.005 .15c.018 .236 .077 .46 .17 .667l.075 .152l.018 .03l-.018 .032c-.133 .24 -.218 .509 -.243 .795l-.007 .174v1l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h1l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-1l-.005 -.15a1.988 1.988 0 0 0 -.17 -.667l-.075 -.152l-.019 -.032l.02 -.03a2.01 2.01 0 0 0 .242 -.795l.007 -.174v-1l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006zm-5 0h-2l-.117 .007a1 1 0 0 0 -.876 .876l-.007 .117v6l.007 .117a1 1 0 0 0 .876 .876l.117 .007l.117 -.007a1 1 0 0 0 .876 -.876l.007 -.117v-2h1l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007h-1v-1h1l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007zm5 5v1h-1v-1h1zm0 -3v1h-1v-1h1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_f8` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f8 />
      <TablerIcons.square_f8 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f8(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M14.5 12h-.5a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-1a1 1 0 0 0 -1 1v1a1 1 0 0 0 1 1h1a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1" />
      <path d="M8 12h2" />
      <path d="M10 9h-2v6" />
    </svg>
    """
  end

  @doc """
  Renders the `square_f9_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f9_filled />
      <TablerIcons.square_f9_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f9_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18.333 2c1.96 0 3.56 1.537 3.662 3.472l.005 .195v12.666c0 1.96 -1.537 3.56 -3.472 3.662l-.195 .005h-12.666a3.667 3.667 0 0 1 -3.662 -3.472l-.005 -.195v-12.666c0 -1.96 1.537 -3.56 3.472 -3.662l.195 -.005h12.666zm-3.083 6h-1.5l-.144 .006a1.75 1.75 0 0 0 -1.606 1.744v1.5l.006 .144a1.75 1.75 0 0 0 1.744 1.606h1.25v1h-1.033l-.025 -.087a1 1 0 0 0 -1.942 .337c0 .966 .784 1.75 1.75 1.75h1.5l.144 -.006a1.75 1.75 0 0 0 1.606 -1.744v-4.5l-.006 -.144a1.75 1.75 0 0 0 -1.744 -1.606zm-5.25 0h-2l-.117 .007a1 1 0 0 0 -.883 .993v6l.007 .117a1 1 0 0 0 .993 .883l.117 -.007a1 1 0 0 0 .883 -.993v-2h1l.117 -.007a1 1 0 0 0 -.117 -1.993h-1v-1h1l.117 -.007a1 1 0 0 0 -.117 -1.993zm5 2v1h-1v-1h1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_f9` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_f9 />
      <TablerIcons.square_f9 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_f9(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M13 14.25c0 .414 .336 .75 .75 .75h1.5a.75 .75 0 0 0 .75 -.75v-4.5a.75 .75 0 0 0 -.75 -.75h-1.5a.75 .75 0 0 0 -.75 .75v1.5c0 .414 .336 .75 .75 .75h2.25" />
      <path d="M8 12h2" />
      <path d="M10 9h-2v6" />
    </svg>
    """
  end

  @doc """
  Renders the `square_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_filled />
      <TablerIcons.square_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2h-14a3 3 0 0 0 -3 3v14a3 3 0 0 0 3 3h14a3 3 0 0 0 3 -3v-14a3 3 0 0 0 -3 -3z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_forbid_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_forbid_2 />
      <TablerIcons.square_forbid_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_forbid_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 15l6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `square_forbid` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_forbid />
      <TablerIcons.square_forbid class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_forbid(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 9l6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `square_half` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_half />
      <TablerIcons.square_half class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_half(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 4v16" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M12 13l7.5 -7.5" />
      <path d="M12 18l8 -8" />
      <path d="M15 20l5 -5" />
      <path d="M12 8l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `square_key` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_key />
      <TablerIcons.square_key class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_key(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 10m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12.5 11.5l-4 4l1.5 1.5" />
      <path d="M12 15l-1.5 -1.5" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_a` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_a />
      <TablerIcons.square_letter_a class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_a(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 16v-6a2 2 0 1 1 4 0v6" />
      <path d="M10 13h4" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_b` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_b />
      <TablerIcons.square_letter_b class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_b(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 16h2a2 2 0 1 0 0 -4h-2h2a2 2 0 1 0 0 -4h-2v8z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_c` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_c />
      <TablerIcons.square_letter_c class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_c(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M14 10a2 2 0 1 0 -4 0v4a2 2 0 1 0 4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_d` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_d />
      <TablerIcons.square_letter_d class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_d(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 8v8h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-2z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_e` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_e />
      <TablerIcons.square_letter_e class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_e(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M14 8h-4v8h4" />
      <path d="M10 12h2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_f` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_f />
      <TablerIcons.square_letter_f class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_f(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 12h3" />
      <path d="M14 8h-4v8" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_g` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_g />
      <TablerIcons.square_letter_g class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_g(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M14 8h-2a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2v-4h-1" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_h` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_h />
      <TablerIcons.square_letter_h class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_h(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 16v-8m4 0v8" />
      <path d="M10 12h4" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_i` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_i />
      <TablerIcons.square_letter_i class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_i(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M12 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_j` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_j />
      <TablerIcons.square_letter_j class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_j(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 8h4v6a2 2 0 1 1 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_k` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_k />
      <TablerIcons.square_letter_k class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_k(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 8v8" />
      <path d="M14 8l-2.5 4l2.5 4" />
      <path d="M10 12h1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_l` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_l />
      <TablerIcons.square_letter_l class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_l(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 8v8h4" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_m` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_m />
      <TablerIcons.square_letter_m class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_m(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 16v-8l3 5l3 -5v8" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_n` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_n />
      <TablerIcons.square_letter_n class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_n(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 16v-8l4 8v-8" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_o` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_o />
      <TablerIcons.square_letter_o class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_o(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_p` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_p />
      <TablerIcons.square_letter_p class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_p(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 12h2a2 2 0 1 0 0 -4h-2v8" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_q` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_q />
      <TablerIcons.square_letter_q class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_q(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
      <path d="M13 15l1 1" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_r` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_r />
      <TablerIcons.square_letter_r class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_r(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 12h2a2 2 0 1 0 0 -4h-2v8m4 0l-3 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_s` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_s />
      <TablerIcons.square_letter_s class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_s(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-2a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_t` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_t />
      <TablerIcons.square_letter_t class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_t(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 8h4" />
      <path d="M12 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_u` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_u />
      <TablerIcons.square_letter_u class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_u(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 8v6a2 2 0 1 0 4 0v-6" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_v` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_v />
      <TablerIcons.square_letter_v class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_v(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 8l2 8l2 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_w` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_w />
      <TablerIcons.square_letter_w class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_w(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 8l1 8l2 -5l2 5l1 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_x />
      <TablerIcons.square_letter_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 8l4 8" />
      <path d="M10 16l4 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_y` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_y />
      <TablerIcons.square_letter_y class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_y(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 8l2 5l2 -5" />
      <path d="M12 16v-3" />
    </svg>
    """
  end

  @doc """
  Renders the `square_letter_z` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_letter_z />
      <TablerIcons.square_letter_z class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_letter_z(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 8h4l-4 8h4" />
    </svg>
    """
  end

  @doc """
  Renders the `square_minus_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_minus_filled />
      <TablerIcons.square_minus_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_minus_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2a3 3 0 0 1 3 3v14a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-14a3 3 0 0 1 3 -3zm-4 9h-6l-.117 .007a1 1 0 0 0 .117 1.993h6l.117 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_minus />
      <TablerIcons.square_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 12l6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `square_number_0` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_number_0 />
      <TablerIcons.square_number_0 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_number_0(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 10v4a2 2 0 1 0 4 0v-4a2 2 0 1 0 -4 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_number_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_number_1 />
      <TablerIcons.square_number_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_number_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 10l2 -2v8" />
    </svg>
    """
  end

  @doc """
  Renders the `square_number_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_number_2 />
      <TablerIcons.square_number_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_number_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 8h3a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h3" />
    </svg>
    """
  end

  @doc """
  Renders the `square_number_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_number_3 />
      <TablerIcons.square_number_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_number_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 9a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `square_number_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_number_4 />
      <TablerIcons.square_number_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_number_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 8v3a1 1 0 0 0 1 1h3" />
      <path d="M14 8v8" />
    </svg>
    """
  end

  @doc """
  Renders the `square_number_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_number_5 />
      <TablerIcons.square_number_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_number_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-3v-4h4" />
    </svg>
    """
  end

  @doc """
  Renders the `square_number_6` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_number_6 />
      <TablerIcons.square_number_6 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_number_6(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M14 9a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v6a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `square_number_7` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_number_7 />
      <TablerIcons.square_number_7 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_number_7(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 8h4l-2 8" />
    </svg>
    """
  end

  @doc """
  Renders the `square_number_8` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_number_8 />
      <TablerIcons.square_number_8 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_number_8(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M12 12h-1a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `square_number_9` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_number_9 />
      <TablerIcons.square_number_9 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_number_9(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M10 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-6a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h3" />
    </svg>
    """
  end

  @doc """
  Renders the `square_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_off />
      <TablerIcons.square_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h10a2 2 0 0 1 2 2v10m-.584 3.412a2 2 0 0 1 -1.416 .588h-12a2 2 0 0 1 -2 -2v-12c0 -.552 .224 -1.052 .586 -1.414" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `square_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_plus />
      <TablerIcons.square_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
      <path d="M9 12l6 0" />
      <path d="M12 9l0 6" />
    </svg>
    """
  end

  @doc """
  Renders the `square_root_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_root_2 />
      <TablerIcons.square_root_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_root_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 12h1c1 0 1 1 2.016 3.527c.984 2.473 .984 3.473 1.984 3.473h1" />
      <path d="M12 19c1.5 0 3 -2 4 -3.5s2.5 -3.5 4 -3.5" />
      <path d="M3 12h1l3 8l3 -16h10" />
    </svg>
    """
  end

  @doc """
  Renders the `square_root` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_root />
      <TablerIcons.square_root class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_root(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h2l4 8l4 -16h8" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rotated_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rotated_filled />
      <TablerIcons.square_rotated_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rotated_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M9.793 2.893l-6.9 6.9c-1.172 1.171 -1.172 3.243 0 4.414l6.9 6.9c1.171 1.172 3.243 1.172 4.414 0l6.9 -6.9c1.172 -1.171 1.172 -3.243 0 -4.414l-6.9 -6.9c-1.171 -1.172 -3.243 -1.172 -4.414 0z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rotated_forbid_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rotated_forbid_2 />
      <TablerIcons.square_rotated_forbid_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rotated_forbid_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.446 2.6l7.955 7.954a2.045 2.045 0 0 1 0 2.892l-7.955 7.955a2.045 2.045 0 0 1 -2.892 0l-7.955 -7.955a2.045 2.045 0 0 1 0 -2.892l7.955 -7.955a2.045 2.045 0 0 1 2.892 0z" />
      <path d="M9.5 9.5l5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rotated_forbid` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rotated_forbid />
      <TablerIcons.square_rotated_forbid class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rotated_forbid(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.446 2.6l7.955 7.954a2.045 2.045 0 0 1 0 2.892l-7.955 7.955a2.045 2.045 0 0 1 -2.892 0l-7.955 -7.955a2.045 2.045 0 0 1 0 -2.892l7.955 -7.955a2.045 2.045 0 0 1 2.892 0z" />
      <path d="M9.5 14.5l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rotated_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rotated_off />
      <TablerIcons.square_rotated_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rotated_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.964 16.952l-3.462 3.461c-.782 .783 -2.222 .783 -3 0l-6.911 -6.91c-.783 -.783 -.783 -2.223 0 -3l3.455 -3.456m2 -2l1.453 -1.452c.782 -.783 2.222 -.783 3 0l6.911 6.91c.783 .783 .783 2.223 0 3l-1.448 1.45" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rotated` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rotated />
      <TablerIcons.square_rotated class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rotated(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.446 2.6l7.955 7.954a2.045 2.045 0 0 1 0 2.892l-7.955 7.955a2.045 2.045 0 0 1 -2.892 0l-7.955 -7.955a2.045 2.045 0 0 1 0 -2.892l7.955 -7.955a2.045 2.045 0 0 1 2.892 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_arrow_down_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_arrow_down_filled />
      <TablerIcons.square_rounded_arrow_down_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_arrow_down_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c-.218 0 -.432 .002 -.642 .005l-.616 .017l-.299 .013l-.579 .034l-.553 .046c-4.785 .464 -6.732 2.411 -7.196 7.196l-.046 .553l-.034 .579c-.005 .098 -.01 .198 -.013 .299l-.017 .616l-.004 .318l-.001 .324c0 .218 .002 .432 .005 .642l.017 .616l.013 .299l.034 .579l.046 .553c.464 4.785 2.411 6.732 7.196 7.196l.553 .046l.579 .034c.098 .005 .198 .01 .299 .013l.616 .017l.642 .005l.642 -.005l.616 -.017l.299 -.013l.579 -.034l.553 -.046c4.785 -.464 6.732 -2.411 7.196 -7.196l.046 -.553l.034 -.579c.005 -.098 .01 -.198 .013 -.299l.017 -.616l.005 -.642l-.005 -.642l-.017 -.616l-.013 -.299l-.034 -.579l-.046 -.553c-.464 -4.785 -2.411 -6.732 -7.196 -7.196l-.553 -.046l-.579 -.034a28.058 28.058 0 0 0 -.299 -.013l-.616 -.017l-.318 -.004l-.324 -.001zm0 5a1 1 0 0 1 .993 .883l.007 .117v5.585l2.293 -2.292a1 1 0 0 1 1.32 -.083l.094 .083a1 1 0 0 1 .083 1.32l-.083 .094l-4 4a1.008 1.008 0 0 1 -.112 .097l-.11 .071l-.114 .054l-.105 .035l-.149 .03l-.117 .006l-.075 -.003l-.126 -.017l-.111 -.03l-.111 -.044l-.098 -.052l-.092 -.064l-.094 -.083l-4 -4a1 1 0 0 1 1.32 -1.497l.094 .083l2.293 2.292v-5.585a1 1 0 0 1 1 -1z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_arrow_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_arrow_down />
      <TablerIcons.square_rounded_arrow_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_arrow_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 12l4 4l4 -4" />
      <path d="M12 8v8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_arrow_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_arrow_left_filled />
      <TablerIcons.square_rounded_arrow_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_arrow_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.324 .001l.318 .004l.616 .017l.299 .013l.579 .034l.553 .046c4.785 .464 6.732 2.411 7.196 7.196l.046 .553l.034 .579c.005 .098 .01 .198 .013 .299l.017 .616l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.464 4.785 -2.411 6.732 -7.196 7.196l-.553 .046l-.579 .034c-.098 .005 -.198 .01 -.299 .013l-.616 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.785 -.464 -6.732 -2.411 -7.196 -7.196l-.046 -.553l-.034 -.579a28.058 28.058 0 0 1 -.013 -.299l-.017 -.616c-.003 -.21 -.005 -.424 -.005 -.642l.001 -.324l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.464 -4.785 2.411 -6.732 7.196 -7.196l.553 -.046l.579 -.034c.098 -.005 .198 -.01 .299 -.013l.616 -.017c.21 -.003 .424 -.005 .642 -.005zm.707 5.293a1 1 0 0 0 -1.414 0l-4 4a1.037 1.037 0 0 0 -.2 .284l-.022 .052a.95 .95 0 0 0 -.06 .222l-.008 .067l-.002 .063v-.035v.073a1.034 1.034 0 0 0 .07 .352l.023 .052l.03 .061l.022 .037a1.2 1.2 0 0 0 .05 .074l.024 .03l.073 .082l4 4l.094 .083a1 1 0 0 0 1.32 -.083l.083 -.094a1 1 0 0 0 -.083 -1.32l-2.292 -2.293h5.585l.117 -.007a1 1 0 0 0 -.117 -1.993h-5.585l2.292 -2.293l.083 -.094a1 1 0 0 0 -.083 -1.32z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_arrow_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_arrow_left />
      <TablerIcons.square_rounded_arrow_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_arrow_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8l-4 4l4 4" />
      <path d="M16 12h-8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_arrow_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_arrow_right_filled />
      <TablerIcons.square_rounded_arrow_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_arrow_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c-.218 0 -.432 .002 -.642 .005l-.616 .017l-.299 .013l-.579 .034l-.553 .046c-4.785 .464 -6.732 2.411 -7.196 7.196l-.046 .553l-.034 .579c-.005 .098 -.01 .198 -.013 .299l-.017 .616l-.004 .318l-.001 .324c0 .218 .002 .432 .005 .642l.017 .616l.013 .299l.034 .579l.046 .553c.464 4.785 2.411 6.732 7.196 7.196l.553 .046l.579 .034c.098 .005 .198 .01 .299 .013l.616 .017l.642 .005l.642 -.005l.616 -.017l.299 -.013l.579 -.034l.553 -.046c4.785 -.464 6.732 -2.411 7.196 -7.196l.046 -.553l.034 -.579c.005 -.098 .01 -.198 .013 -.299l.017 -.616l.005 -.642l-.005 -.642l-.017 -.616l-.013 -.299l-.034 -.579l-.046 -.553c-.464 -4.785 -2.411 -6.732 -7.196 -7.196l-.553 -.046l-.579 -.034a28.058 28.058 0 0 0 -.299 -.013l-.616 -.017l-.318 -.004l-.324 -.001zm.613 5.21l.094 .083l4 4a.927 .927 0 0 1 .097 .112l.071 .11l.054 .114l.035 .105l.03 .148l.006 .118l-.003 .075l-.017 .126l-.03 .111l-.044 .111l-.052 .098l-.074 .104l-.073 .082l-4 4a1 1 0 0 1 -1.497 -1.32l.083 -.094l2.292 -2.293h-5.585a1 1 0 0 1 -.117 -1.993l.117 -.007h5.585l-2.292 -2.293a1 1 0 0 1 -.083 -1.32l.083 -.094a1 1 0 0 1 1.32 -.083z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_arrow_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_arrow_right />
      <TablerIcons.square_rounded_arrow_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_arrow_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 16l4 -4l-4 -4" />
      <path d="M8 12h8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_arrow_up_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_arrow_up_filled />
      <TablerIcons.square_rounded_arrow_up_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_arrow_up_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c-.218 0 -.432 .002 -.642 .005l-.616 .017l-.299 .013l-.579 .034l-.553 .046c-4.785 .464 -6.732 2.411 -7.196 7.196l-.046 .553l-.034 .579c-.005 .098 -.01 .198 -.013 .299l-.017 .616l-.004 .318l-.001 .324c0 .218 .002 .432 .005 .642l.017 .616l.013 .299l.034 .579l.046 .553c.464 4.785 2.411 6.732 7.196 7.196l.553 .046l.579 .034c.098 .005 .198 .01 .299 .013l.616 .017l.642 .005l.642 -.005l.616 -.017l.299 -.013l.579 -.034l.553 -.046c4.785 -.464 6.732 -2.411 7.196 -7.196l.046 -.553l.034 -.579c.005 -.098 .01 -.198 .013 -.299l.017 -.616l.005 -.642l-.005 -.642l-.017 -.616l-.013 -.299l-.034 -.579l-.046 -.553c-.464 -4.785 -2.411 -6.732 -7.196 -7.196l-.553 -.046l-.579 -.034a28.058 28.058 0 0 0 -.299 -.013l-.616 -.017l-.318 -.004l-.324 -.001zm-.148 5.011l.058 -.007l.09 -.004l.075 .003l.126 .017l.111 .03l.111 .044l.098 .052l.104 .074l.082 .073l4 4a1 1 0 0 1 -1.32 1.497l-.094 -.083l-2.293 -2.292v5.585a1 1 0 0 1 -1.993 .117l-.007 -.117v-5.585l-2.293 2.292a1 1 0 0 1 -1.32 .083l-.094 -.083a1 1 0 0 1 -.083 -1.32l.083 -.094l4 -4a.927 .927 0 0 1 .112 -.097l.11 -.071l.114 -.054l.105 -.035l.118 -.025z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_arrow_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_arrow_up />
      <TablerIcons.square_rounded_arrow_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_arrow_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 12l-4 -4l-4 4" />
      <path d="M12 16v-8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_check_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_check_filled />
      <TablerIcons.square_rounded_check_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_check_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c-.218 0 -.432 .002 -.642 .005l-.616 .017l-.299 .013l-.579 .034l-.553 .046c-4.785 .464 -6.732 2.411 -7.196 7.196l-.046 .553l-.034 .579c-.005 .098 -.01 .198 -.013 .299l-.017 .616l-.004 .318l-.001 .324c0 .218 .002 .432 .005 .642l.017 .616l.013 .299l.034 .579l.046 .553c.464 4.785 2.411 6.732 7.196 7.196l.553 .046l.579 .034c.098 .005 .198 .01 .299 .013l.616 .017l.642 .005l.642 -.005l.616 -.017l.299 -.013l.579 -.034l.553 -.046c4.785 -.464 6.732 -2.411 7.196 -7.196l.046 -.553l.034 -.579c.005 -.098 .01 -.198 .013 -.299l.017 -.616l.005 -.642l-.005 -.642l-.017 -.616l-.013 -.299l-.034 -.579l-.046 -.553c-.464 -4.785 -2.411 -6.732 -7.196 -7.196l-.553 -.046l-.579 -.034a28.058 28.058 0 0 0 -.299 -.013l-.616 -.017l-.318 -.004l-.324 -.001zm2.293 7.293a1 1 0 0 1 1.497 1.32l-.083 .094l-4 4a1 1 0 0 1 -1.32 .083l-.094 -.083l-2 -2a1 1 0 0 1 1.32 -1.497l.094 .083l1.293 1.292l3.293 -3.292z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_check />
      <TablerIcons.square_rounded_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 12l2 2l4 -4" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevron_down_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevron_down_filled />
      <TablerIcons.square_rounded_chevron_down_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevron_down_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c-.218 0 -.432 .002 -.642 .005l-.616 .017l-.299 .013l-.579 .034l-.553 .046c-4.785 .464 -6.732 2.411 -7.196 7.196l-.046 .553l-.034 .579c-.005 .098 -.01 .198 -.013 .299l-.017 .616l-.004 .318l-.001 .324c0 .218 .002 .432 .005 .642l.017 .616l.013 .299l.034 .579l.046 .553c.464 4.785 2.411 6.732 7.196 7.196l.553 .046l.579 .034c.098 .005 .198 .01 .299 .013l.616 .017l.642 .005l.642 -.005l.616 -.017l.299 -.013l.579 -.034l.553 -.046c4.785 -.464 6.732 -2.411 7.196 -7.196l.046 -.553l.034 -.579c.005 -.098 .01 -.198 .013 -.299l.017 -.616l.005 -.642l-.005 -.642l-.017 -.616l-.013 -.299l-.034 -.579l-.046 -.553c-.464 -4.785 -2.411 -6.732 -7.196 -7.196l-.553 -.046l-.579 -.034a28.058 28.058 0 0 0 -.299 -.013l-.616 -.017l-.318 -.004l-.324 -.001zm-3.707 8.293a1 1 0 0 1 1.32 -.083l.094 .083l2.293 2.292l2.293 -2.292a1 1 0 0 1 1.32 -.083l.094 .083a1 1 0 0 1 .083 1.32l-.083 .094l-3 3a1 1 0 0 1 -1.32 .083l-.094 -.083l-3 -3a1 1 0 0 1 0 -1.414z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevron_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevron_down />
      <TablerIcons.square_rounded_chevron_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevron_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 11l-3 3l-3 -3" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevron_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevron_left_filled />
      <TablerIcons.square_rounded_chevron_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevron_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.324 .001l.318 .004l.616 .017l.299 .013l.579 .034l.553 .046c4.785 .464 6.732 2.411 7.196 7.196l.046 .553l.034 .579c.005 .098 .01 .198 .013 .299l.017 .616l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.464 4.785 -2.411 6.732 -7.196 7.196l-.553 .046l-.579 .034c-.098 .005 -.198 .01 -.299 .013l-.616 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.785 -.464 -6.732 -2.411 -7.196 -7.196l-.046 -.553l-.034 -.579a28.058 28.058 0 0 1 -.013 -.299l-.017 -.616c-.003 -.21 -.005 -.424 -.005 -.642l.001 -.324l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.464 -4.785 2.411 -6.732 7.196 -7.196l.553 -.046l.579 -.034c.098 -.005 .198 -.01 .299 -.013l.616 -.017c.21 -.003 .424 -.005 .642 -.005zm1.707 6.293a1 1 0 0 0 -1.414 0l-3 3l-.083 .094a1 1 0 0 0 .083 1.32l3 3l.094 .083a1 1 0 0 0 1.32 -.083l.083 -.094a1 1 0 0 0 -.083 -1.32l-2.292 -2.293l2.292 -2.293l.083 -.094a1 1 0 0 0 -.083 -1.32z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevron_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevron_left />
      <TablerIcons.square_rounded_chevron_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevron_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 15l-3 -3l3 -3" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevron_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevron_right_filled />
      <TablerIcons.square_rounded_chevron_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevron_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c-.218 0 -.432 .002 -.642 .005l-.616 .017l-.299 .013l-.579 .034l-.553 .046c-4.785 .464 -6.732 2.411 -7.196 7.196l-.046 .553l-.034 .579c-.005 .098 -.01 .198 -.013 .299l-.017 .616l-.004 .318l-.001 .324c0 .218 .002 .432 .005 .642l.017 .616l.013 .299l.034 .579l.046 .553c.464 4.785 2.411 6.732 7.196 7.196l.553 .046l.579 .034c.098 .005 .198 .01 .299 .013l.616 .017l.642 .005l.642 -.005l.616 -.017l.299 -.013l.579 -.034l.553 -.046c4.785 -.464 6.732 -2.411 7.196 -7.196l.046 -.553l.034 -.579c.005 -.098 .01 -.198 .013 -.299l.017 -.616l.005 -.642l-.005 -.642l-.017 -.616l-.013 -.299l-.034 -.579l-.046 -.553c-.464 -4.785 -2.411 -6.732 -7.196 -7.196l-.553 -.046l-.579 -.034a28.058 28.058 0 0 0 -.299 -.013l-.616 -.017l-.318 -.004l-.324 -.001zm-1.707 6.293a1 1 0 0 1 1.32 -.083l.094 .083l3 3a1 1 0 0 1 .083 1.32l-.083 .094l-3 3a1 1 0 0 1 -1.497 -1.32l.083 -.094l2.292 -2.293l-2.292 -2.293a1 1 0 0 1 -.083 -1.32l.083 -.094z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevron_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevron_right />
      <TablerIcons.square_rounded_chevron_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevron_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 9l3 3l-3 3" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevron_up_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevron_up_filled />
      <TablerIcons.square_rounded_chevron_up_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevron_up_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c-.218 0 -.432 .002 -.642 .005l-.616 .017l-.299 .013l-.579 .034l-.553 .046c-4.785 .464 -6.732 2.411 -7.196 7.196l-.046 .553l-.034 .579c-.005 .098 -.01 .198 -.013 .299l-.017 .616l-.004 .318l-.001 .324c0 .218 .002 .432 .005 .642l.017 .616l.013 .299l.034 .579l.046 .553c.464 4.785 2.411 6.732 7.196 7.196l.553 .046l.579 .034c.098 .005 .198 .01 .299 .013l.616 .017l.642 .005l.642 -.005l.616 -.017l.299 -.013l.579 -.034l.553 -.046c4.785 -.464 6.732 -2.411 7.196 -7.196l.046 -.553l.034 -.579c.005 -.098 .01 -.198 .013 -.299l.017 -.616l.005 -.642l-.005 -.642l-.017 -.616l-.013 -.299l-.034 -.579l-.046 -.553c-.464 -4.785 -2.411 -6.732 -7.196 -7.196l-.553 -.046l-.579 -.034a28.058 28.058 0 0 0 -.299 -.013l-.616 -.017l-.318 -.004l-.324 -.001zm-.707 7.293a1 1 0 0 1 1.32 -.083l.094 .083l3 3a1 1 0 0 1 -1.32 1.497l-.094 -.083l-2.293 -2.292l-2.293 2.292a1 1 0 0 1 -1.32 .083l-.094 -.083a1 1 0 0 1 -.083 -1.32l.083 -.094l3 -3z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevron_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevron_up />
      <TablerIcons.square_rounded_chevron_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevron_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 13l3 -3l3 3" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevrons_down_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevrons_down_filled />
      <TablerIcons.square_rounded_chevrons_down_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevrons_down_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c-.218 0 -.432 .002 -.642 .005l-.616 .017l-.299 .013l-.579 .034l-.553 .046c-4.785 .464 -6.732 2.411 -7.196 7.196l-.046 .553l-.034 .579c-.005 .098 -.01 .198 -.013 .299l-.017 .616l-.004 .318l-.001 .324c0 .218 .002 .432 .005 .642l.017 .616l.013 .299l.034 .579l.046 .553c.464 4.785 2.411 6.732 7.196 7.196l.553 .046l.579 .034c.098 .005 .198 .01 .299 .013l.616 .017l.642 .005l.642 -.005l.616 -.017l.299 -.013l.579 -.034l.553 -.046c4.785 -.464 6.732 -2.411 7.196 -7.196l.046 -.553l.034 -.579c.005 -.098 .01 -.198 .013 -.299l.017 -.616l.005 -.642l-.005 -.642l-.017 -.616l-.013 -.299l-.034 -.579l-.046 -.553c-.464 -4.785 -2.411 -6.732 -7.196 -7.196l-.553 -.046l-.579 -.034a28.058 28.058 0 0 0 -.299 -.013l-.616 -.017l-.318 -.004l-.324 -.001zm-3.707 6.293a1 1 0 0 1 1.32 -.083l.094 .083l2.293 2.292l2.293 -2.292a1 1 0 0 1 1.32 -.083l.094 .083a1 1 0 0 1 .083 1.32l-.083 .094l-3 3a1 1 0 0 1 -1.32 .083l-.094 -.083l-3 -3a1 1 0 0 1 0 -1.414zm0 4a1 1 0 0 1 1.32 -.083l.094 .083l2.293 2.292l2.293 -2.292a1 1 0 0 1 1.32 -.083l.094 .083a1 1 0 0 1 .083 1.32l-.083 .094l-3 3a1 1 0 0 1 -1.32 .083l-.094 -.083l-3 -3a1 1 0 0 1 0 -1.414z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevrons_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevrons_down />
      <TablerIcons.square_rounded_chevrons_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevrons_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 9l-3 3l-3 -3" />
      <path d="M15 13l-3 3l-3 -3" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevrons_left_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevrons_left_filled />
      <TablerIcons.square_rounded_chevrons_left_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevrons_left_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c-.218 0 -.432 .002 -.642 .005l-.616 .017l-.299 .013l-.579 .034l-.553 .046c-4.785 .464 -6.732 2.411 -7.196 7.196l-.046 .553l-.034 .579c-.005 .098 -.01 .198 -.013 .299l-.017 .616l-.004 .318l-.001 .324c0 .218 .002 .432 .005 .642l.017 .616l.013 .299l.034 .579l.046 .553c.464 4.785 2.411 6.732 7.196 7.196l.553 .046l.579 .034c.098 .005 .198 .01 .299 .013l.616 .017l.642 .005l.642 -.005l.616 -.017l.299 -.013l.579 -.034l.553 -.046c4.785 -.464 6.732 -2.411 7.196 -7.196l.046 -.553l.034 -.579c.005 -.098 .01 -.198 .013 -.299l.017 -.616l.005 -.642l-.005 -.642l-.017 -.616l-.013 -.299l-.034 -.579l-.046 -.553c-.464 -4.785 -2.411 -6.732 -7.196 -7.196l-.553 -.046l-.579 -.034a28.058 28.058 0 0 0 -.299 -.013l-.616 -.017l-.318 -.004l-.324 -.001zm2.293 6.293a1 1 0 0 1 1.497 1.32l-.083 .094l-2.292 2.293l2.292 2.293a1 1 0 0 1 .083 1.32l-.083 .094a1 1 0 0 1 -1.32 .083l-.094 -.083l-3 -3a1 1 0 0 1 -.083 -1.32l.083 -.094l3 -3zm-4 0a1 1 0 0 1 1.497 1.32l-.083 .094l-2.292 2.293l2.292 2.293a1 1 0 0 1 .083 1.32l-.083 .094a1 1 0 0 1 -1.32 .083l-.094 -.083l-3 -3a1 1 0 0 1 -.083 -1.32l.083 -.094l3 -3z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevrons_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevrons_left />
      <TablerIcons.square_rounded_chevrons_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevrons_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 15l-3 -3l3 -3" />
      <path d="M11 15l-3 -3l3 -3" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevrons_right_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevrons_right_filled />
      <TablerIcons.square_rounded_chevrons_right_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevrons_right_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c-.218 0 -.432 .002 -.642 .005l-.616 .017l-.299 .013l-.579 .034l-.553 .046c-4.785 .464 -6.732 2.411 -7.196 7.196l-.046 .553l-.034 .579c-.005 .098 -.01 .198 -.013 .299l-.017 .616l-.004 .318l-.001 .324c0 .218 .002 .432 .005 .642l.017 .616l.013 .299l.034 .579l.046 .553c.464 4.785 2.411 6.732 7.196 7.196l.553 .046l.579 .034c.098 .005 .198 .01 .299 .013l.616 .017l.642 .005l.642 -.005l.616 -.017l.299 -.013l.579 -.034l.553 -.046c4.785 -.464 6.732 -2.411 7.196 -7.196l.046 -.553l.034 -.579c.005 -.098 .01 -.198 .013 -.299l.017 -.616l.005 -.642l-.005 -.642l-.017 -.616l-.013 -.299l-.034 -.579l-.046 -.553c-.464 -4.785 -2.411 -6.732 -7.196 -7.196l-.553 -.046l-.579 -.034a28.058 28.058 0 0 0 -.299 -.013l-.616 -.017l-.318 -.004l-.324 -.001zm-3.707 6.293a1 1 0 0 1 1.32 -.083l.094 .083l3 3a1 1 0 0 1 .083 1.32l-.083 .094l-3 3a1 1 0 0 1 -1.497 -1.32l.083 -.094l2.292 -2.293l-2.292 -2.293a1 1 0 0 1 -.083 -1.32l.083 -.094zm4 0a1 1 0 0 1 1.32 -.083l.094 .083l3 3a1 1 0 0 1 .083 1.32l-.083 .094l-3 3a1 1 0 0 1 -1.497 -1.32l.083 -.094l2.292 -2.293l-2.292 -2.293a1 1 0 0 1 -.083 -1.32l.083 -.094z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevrons_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevrons_right />
      <TablerIcons.square_rounded_chevrons_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevrons_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 9l3 3l-3 3" />
      <path d="M13 9l3 3l-3 3" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevrons_up_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevrons_up_filled />
      <TablerIcons.square_rounded_chevrons_up_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevrons_up_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c-.218 0 -.432 .002 -.642 .005l-.616 .017l-.299 .013l-.579 .034l-.553 .046c-4.785 .464 -6.732 2.411 -7.196 7.196l-.046 .553l-.034 .579c-.005 .098 -.01 .198 -.013 .299l-.017 .616l-.004 .318l-.001 .324c0 .218 .002 .432 .005 .642l.017 .616l.013 .299l.034 .579l.046 .553c.464 4.785 2.411 6.732 7.196 7.196l.553 .046l.579 .034c.098 .005 .198 .01 .299 .013l.616 .017l.642 .005l.642 -.005l.616 -.017l.299 -.013l.579 -.034l.553 -.046c4.785 -.464 6.732 -2.411 7.196 -7.196l.046 -.553l.034 -.579c.005 -.098 .01 -.198 .013 -.299l.017 -.616l.005 -.642l-.005 -.642l-.017 -.616l-.013 -.299l-.034 -.579l-.046 -.553c-.464 -4.785 -2.411 -6.732 -7.196 -7.196l-.553 -.046l-.579 -.034a28.058 28.058 0 0 0 -.299 -.013l-.616 -.017l-.318 -.004l-.324 -.001zm-.707 9.293a1 1 0 0 1 1.32 -.083l.094 .083l3 3a1 1 0 0 1 -1.32 1.497l-.094 -.083l-2.293 -2.292l-2.293 2.292a1 1 0 0 1 -1.32 .083l-.094 -.083a1 1 0 0 1 -.083 -1.32l.083 -.094l3 -3zm0 -4a1 1 0 0 1 1.32 -.083l.094 .083l3 3a1 1 0 0 1 -1.32 1.497l-.094 -.083l-2.293 -2.292l-2.293 2.292a1 1 0 0 1 -1.32 .083l-.094 -.083a1 1 0 0 1 -.083 -1.32l.083 -.094l3 -3z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_chevrons_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_chevrons_up />
      <TablerIcons.square_rounded_chevrons_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_chevrons_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15l3 -3l3 3" />
      <path d="M9 11l3 -3l3 3" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_filled />
      <TablerIcons.square_rounded_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c-.218 0 -.432 .002 -.642 .005l-.616 .017l-.299 .013l-.579 .034l-.553 .046c-4.785 .464 -6.732 2.411 -7.196 7.196l-.046 .553l-.034 .579c-.005 .098 -.01 .198 -.013 .299l-.017 .616l-.004 .318l-.001 .324c0 .218 .002 .432 .005 .642l.017 .616l.013 .299l.034 .579l.046 .553c.464 4.785 2.411 6.732 7.196 7.196l.553 .046l.579 .034c.098 .005 .198 .01 .299 .013l.616 .017l.642 .005l.642 -.005l.616 -.017l.299 -.013l.579 -.034l.553 -.046c4.785 -.464 6.732 -2.411 7.196 -7.196l.046 -.553l.034 -.579c.005 -.098 .01 -.198 .013 -.299l.017 -.616l.005 -.642l-.005 -.642l-.017 -.616l-.013 -.299l-.034 -.579l-.046 -.553c-.464 -4.785 -2.411 -6.732 -7.196 -7.196l-.553 -.046l-.579 -.034a28.058 28.058 0 0 0 -.299 -.013l-.616 -.017l-.318 -.004l-.324 -.001z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_a` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_a />
      <TablerIcons.square_rounded_letter_a class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_a(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 16v-6a2 2 0 1 1 4 0v6" />
      <path d="M10 13h4" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_b` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_b />
      <TablerIcons.square_rounded_letter_b class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_b(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 16h2a2 2 0 1 0 0 -4h-2h2a2 2 0 1 0 0 -4h-2v8z" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_c` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_c />
      <TablerIcons.square_rounded_letter_c class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_c(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 10a2 2 0 1 0 -4 0v4a2 2 0 1 0 4 0" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_d` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_d />
      <TablerIcons.square_rounded_letter_d class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_d(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8v8h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-2z" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_e` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_e />
      <TablerIcons.square_rounded_letter_e class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_e(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 8h-4v8h4" />
      <path d="M10 12h2.5" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_f` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_f />
      <TablerIcons.square_rounded_letter_f class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_f(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12h3" />
      <path d="M14 8h-4v8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_g` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_g />
      <TablerIcons.square_rounded_letter_g class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_g(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 8h-2a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2v-4h-1" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_h` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_h />
      <TablerIcons.square_rounded_letter_h class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_h(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 16v-8m4 0v8" />
      <path d="M10 12h4" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_i` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_i />
      <TablerIcons.square_rounded_letter_i class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_i(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8v8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_j` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_j />
      <TablerIcons.square_rounded_letter_j class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_j(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8h4v6a2 2 0 1 1 -4 0" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_k` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_k />
      <TablerIcons.square_rounded_letter_k class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_k(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8v8" />
      <path d="M14 8l-2.5 4l2.5 4" />
      <path d="M10 12h1.5" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_l` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_l />
      <TablerIcons.square_rounded_letter_l class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_l(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8v8h4" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_m` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_m />
      <TablerIcons.square_rounded_letter_m class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_m(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 16v-8l3 5l3 -5v8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_n` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_n />
      <TablerIcons.square_rounded_letter_n class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_n(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 16v-8l4 8v-8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_o` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_o />
      <TablerIcons.square_rounded_letter_o class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_o(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_p` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_p />
      <TablerIcons.square_rounded_letter_p class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_p(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12h2a2 2 0 1 0 0 -4h-2v8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_q` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_q />
      <TablerIcons.square_rounded_letter_q class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_q(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1 -4 0v-4a2 2 0 0 1 2 -2z" />
      <path d="M13 15l1 1" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_r` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_r />
      <TablerIcons.square_rounded_letter_r class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_r(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12h2a2 2 0 1 0 0 -4h-2v8m4 0l-3 -4" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_s` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_s />
      <TablerIcons.square_rounded_letter_s class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_s(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-2a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_t` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_t />
      <TablerIcons.square_rounded_letter_t class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_t(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8h4" />
      <path d="M12 8v8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_u` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_u />
      <TablerIcons.square_rounded_letter_u class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_u(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8v6a2 2 0 1 0 4 0v-6" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_v` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_v />
      <TablerIcons.square_rounded_letter_v class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_v(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8l2 8l2 -8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_w` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_w />
      <TablerIcons.square_rounded_letter_w class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_w(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 8l1 8l2 -5l2 5l1 -8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_x />
      <TablerIcons.square_rounded_letter_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8l4 8" />
      <path d="M10 16l4 -8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_y` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_y />
      <TablerIcons.square_rounded_letter_y class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_y(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8l2 5l2 -5" />
      <path d="M12 16v-3" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_letter_z` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_letter_z />
      <TablerIcons.square_rounded_letter_z class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_letter_z(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8h4l-4 8h4" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_minus_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_minus_filled />
      <TablerIcons.square_rounded_minus_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_minus_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.324 .001l.318 .004l.616 .017l.299 .013l.579 .034l.553 .046c4.785 .464 6.732 2.411 7.196 7.196l.046 .553l.034 .579c.005 .098 .01 .198 .013 .299l.017 .616l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.464 4.785 -2.411 6.732 -7.196 7.196l-.553 .046l-.579 .034c-.098 .005 -.198 .01 -.299 .013l-.616 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.785 -.464 -6.732 -2.411 -7.196 -7.196l-.046 -.553l-.034 -.579a28.058 28.058 0 0 1 -.013 -.299l-.017 -.616c-.003 -.21 -.005 -.424 -.005 -.642l.001 -.324l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.464 -4.785 2.411 -6.732 7.196 -7.196l.553 -.046l.579 -.034c.098 -.005 .198 -.01 .299 -.013l.616 -.017c.21 -.003 .424 -.005 .642 -.005zm3 9h-6l-.117 .007a1 1 0 0 0 .117 1.993h6l.117 -.007a1 1 0 0 0 -.117 -1.993z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_minus />
      <TablerIcons.square_rounded_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 12h6" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_0_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_0_filled />
      <TablerIcons.square_rounded_number_0_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_0_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.642 .005l.616 .017l.299 .013l.579 .034l.553 .046c4.687 .455 6.65 2.333 7.166 6.906l.03 .29l.046 .553l.041 .727l.006 .15l.017 .617l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.455 4.687 -2.333 6.65 -6.906 7.166l-.29 .03l-.553 .046l-.727 .041l-.15 .006l-.617 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.687 -.455 -6.65 -2.333 -7.166 -6.906l-.03 -.29l-.046 -.553l-.041 -.727l-.006 -.15l-.017 -.617l-.004 -.318v-.648l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.455 -4.687 2.333 -6.65 6.906 -7.166l.29 -.03l.553 -.046l.727 -.041l.15 -.006l.617 -.017c.21 -.003 .424 -.005 .642 -.005zm0 5a3 3 0 0 0 -3 3v4a3 3 0 0 0 6 0v-4a3 3 0 0 0 -3 -3zm0 2a1 1 0 0 1 1 1v4a1 1 0 0 1 -2 0v-4a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_0` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_0 />
      <TablerIcons.square_rounded_number_0 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_0(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10v4a2 2 0 1 0 4 0v-4a2 2 0 1 0 -4 0z" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_1_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_1_filled />
      <TablerIcons.square_rounded_number_1_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_1_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.642 .005l.616 .017l.299 .013l.579 .034l.553 .046c4.687 .455 6.65 2.333 7.166 6.906l.03 .29l.046 .553l.041 .727l.006 .15l.017 .617l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.455 4.687 -2.333 6.65 -6.906 7.166l-.29 .03l-.553 .046l-.727 .041l-.15 .006l-.617 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.687 -.455 -6.65 -2.333 -7.166 -6.906l-.03 -.29l-.046 -.553l-.041 -.727l-.006 -.15l-.017 -.617l-.004 -.318v-.648l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.455 -4.687 2.333 -6.65 6.906 -7.166l.29 -.03l.553 -.046l.727 -.041l.15 -.006l.617 -.017c.21 -.003 .424 -.005 .642 -.005zm.994 5.886c-.083 -.777 -1.008 -1.16 -1.617 -.67l-.084 .077l-2 2l-.083 .094a1 1 0 0 0 0 1.226l.083 .094l.094 .083a1 1 0 0 0 1.226 0l.094 -.083l.293 -.293v5.586l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-8l-.006 -.114z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_1 />
      <TablerIcons.square_rounded_number_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10l2 -2v8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_2_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_2_filled />
      <TablerIcons.square_rounded_number_2_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_2_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.642 .005l.616 .017l.299 .013l.579 .034l.553 .046c4.687 .455 6.65 2.333 7.166 6.906l.03 .29l.046 .553l.041 .727l.006 .15l.017 .617l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.455 4.687 -2.333 6.65 -6.906 7.166l-.29 .03l-.553 .046l-.727 .041l-.15 .006l-.617 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.687 -.455 -6.65 -2.333 -7.166 -6.906l-.03 -.29l-.046 -.553l-.041 -.727l-.006 -.15l-.017 -.617l-.004 -.318v-.648l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.455 -4.687 2.333 -6.65 6.906 -7.166l.29 -.03l.553 -.046l.727 -.041l.15 -.006l.617 -.017c.21 -.003 .424 -.005 .642 -.005zm1 5h-3l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h3v2h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v2l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h3l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007h-3v-2h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_2 />
      <TablerIcons.square_rounded_number_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8h3a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h3" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_3_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_3_filled />
      <TablerIcons.square_rounded_number_3_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_3_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.642 .005l.616 .017l.299 .013l.579 .034l.553 .046c4.687 .455 6.65 2.333 7.166 6.906l.03 .29l.046 .553l.041 .727l.006 .15l.017 .617l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.455 4.687 -2.333 6.65 -6.906 7.166l-.29 .03l-.553 .046l-.727 .041l-.15 .006l-.617 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.687 -.455 -6.65 -2.333 -7.166 -6.906l-.03 -.29l-.046 -.553l-.041 -.727l-.006 -.15l-.017 -.617l-.004 -.318v-.648l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.455 -4.687 2.333 -6.65 6.906 -7.166l.29 -.03l.553 -.046l.727 -.041l.15 -.006l.617 -.017c.21 -.003 .424 -.005 .642 -.005zm1 5h-2l-.15 .005a2 2 0 0 0 -1.85 1.995a1 1 0 0 0 1.974 .23l.02 -.113l.006 -.117h2v2h-2l-.133 .007c-1.111 .12 -1.154 1.73 -.128 1.965l.128 .021l.133 .007h2v2h-2l-.007 -.117a1 1 0 0 0 -1.993 .117a2 2 0 0 0 1.85 1.995l.15 .005h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a1.988 1.988 0 0 0 -.17 -.667l-.075 -.152l-.019 -.032l.02 -.03a2.01 2.01 0 0 0 .242 -.795l.007 -.174v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_3 />
      <TablerIcons.square_rounded_number_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 9a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_4_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_4_filled />
      <TablerIcons.square_rounded_number_4_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_4_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.642 .005l.616 .017l.299 .013l.579 .034l.553 .046c4.687 .455 6.65 2.333 7.166 6.906l.03 .29l.046 .553l.041 .727l.006 .15l.017 .617l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.455 4.687 -2.333 6.65 -6.906 7.166l-.29 .03l-.553 .046l-.727 .041l-.15 .006l-.617 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.687 -.455 -6.65 -2.333 -7.166 -6.906l-.03 -.29l-.046 -.553l-.041 -.727l-.006 -.15l-.017 -.617l-.004 -.318v-.648l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.455 -4.687 2.333 -6.65 6.906 -7.166l.29 -.03l.553 -.046l.727 -.041l.15 -.006l.617 -.017c.21 -.003 .424 -.005 .642 -.005zm2 5a1 1 0 0 0 -.993 .883l-.007 .117v3h-2v-3l-.007 -.117a1 1 0 0 0 -1.986 0l-.007 .117v3l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2v3l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-8l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_4 />
      <TablerIcons.square_rounded_number_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8v3a1 1 0 0 0 1 1h3" />
      <path d="M14 8v8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_5_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_5_filled />
      <TablerIcons.square_rounded_number_5_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_5_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.642 .005l.616 .017l.299 .013l.579 .034l.553 .046c4.687 .455 6.65 2.333 7.166 6.906l.03 .29l.046 .553l.041 .727l.006 .15l.017 .617l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.455 4.687 -2.333 6.65 -6.906 7.166l-.29 .03l-.553 .046l-.727 .041l-.15 .006l-.617 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.687 -.455 -6.65 -2.333 -7.166 -6.906l-.03 -.29l-.046 -.553l-.041 -.727l-.006 -.15l-.017 -.617l-.004 -.318v-.648l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.455 -4.687 2.333 -6.65 6.906 -7.166l.29 -.03l.553 -.046l.727 -.041l.15 -.006l.617 -.017c.21 -.003 .424 -.005 .642 -.005zm2 5h-4a1 1 0 0 0 -.993 .883l-.007 .117v4a1 1 0 0 0 .883 .993l.117 .007h3v2h-2l-.007 -.117a1 1 0 0 0 -1.993 .117a2 2 0 0 0 1.85 1.995l.15 .005h2a2 2 0 0 0 1.995 -1.85l.005 -.15v-2a2 2 0 0 0 -1.85 -1.995l-.15 -.005h-2v-2h3a1 1 0 0 0 .993 -.883l.007 -.117a1 1 0 0 0 -.883 -.993l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_5 />
      <TablerIcons.square_rounded_number_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-3v-4h4" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_6_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_6_filled />
      <TablerIcons.square_rounded_number_6_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_6_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.642 .005l.616 .017l.299 .013l.579 .034l.553 .046c4.687 .455 6.65 2.333 7.166 6.906l.03 .29l.046 .553l.041 .727l.006 .15l.017 .617l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.455 4.687 -2.333 6.65 -6.906 7.166l-.29 .03l-.553 .046l-.727 .041l-.15 .006l-.617 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.687 -.455 -6.65 -2.333 -7.166 -6.906l-.03 -.29l-.046 -.553l-.041 -.727l-.006 -.15l-.017 -.617l-.004 -.318v-.648l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.455 -4.687 2.333 -6.65 6.906 -7.166l.29 -.03l.553 -.046l.727 -.041l.15 -.006l.617 -.017c.21 -.003 .424 -.005 .642 -.005zm1 5h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v6l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006h-2v-2h2l.007 .117a1 1 0 0 0 1.993 -.117a2 2 0 0 0 -1.85 -1.995l-.15 -.005zm0 6v2h-2v-2h2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_6` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_6 />
      <TablerIcons.square_rounded_number_6 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_6(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 9a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v6a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1h-3" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_7_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_7_filled />
      <TablerIcons.square_rounded_number_7_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_7_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.642 .005l.616 .017l.299 .013l.579 .034l.553 .046c4.687 .455 6.65 2.333 7.166 6.906l.03 .29l.046 .553l.041 .727l.006 .15l.017 .617l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.455 4.687 -2.333 6.65 -6.906 7.166l-.29 .03l-.553 .046l-.727 .041l-.15 .006l-.617 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.687 -.455 -6.65 -2.333 -7.166 -6.906l-.03 -.29l-.046 -.553l-.041 -.727l-.006 -.15l-.017 -.617l-.004 -.318v-.648l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.455 -4.687 2.333 -6.65 6.906 -7.166l.29 -.03l.553 -.046l.727 -.041l.15 -.006l.617 -.017c.21 -.003 .424 -.005 .642 -.005zm2 5h-4l-.117 .007a1 1 0 0 0 -.876 .876l-.007 .117l.007 .117a1 1 0 0 0 .876 .876l.117 .007h2.718l-1.688 6.757l-.022 .115a1 1 0 0 0 1.927 .482l.035 -.111l2 -8l.021 -.112a1 1 0 0 0 -.878 -1.125l-.113 -.006z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_7` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_7 />
      <TablerIcons.square_rounded_number_7 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_7(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8h4l-2 8" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_8_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_8_filled />
      <TablerIcons.square_rounded_number_8_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_8_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.642 .005l.616 .017l.299 .013l.579 .034l.553 .046c4.687 .455 6.65 2.333 7.166 6.906l.03 .29l.046 .553l.041 .727l.006 .15l.017 .617l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.455 4.687 -2.333 6.65 -6.906 7.166l-.29 .03l-.553 .046l-.727 .041l-.15 .006l-.617 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.687 -.455 -6.65 -2.333 -7.166 -6.906l-.03 -.29l-.046 -.553l-.041 -.727l-.006 -.15l-.017 -.617l-.004 -.318v-.648l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.455 -4.687 2.333 -6.65 6.906 -7.166l.29 -.03l.553 -.046l.727 -.041l.15 -.006l.617 -.017c.21 -.003 .424 -.005 .642 -.005zm1 5h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v2l.005 .15c.018 .236 .077 .46 .17 .667l.075 .152l.018 .03l-.018 .032c-.133 .24 -.218 .509 -.243 .795l-.007 .174v2l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-2l-.005 -.15a1.988 1.988 0 0 0 -.17 -.667l-.075 -.152l-.019 -.032l.02 -.03a2.01 2.01 0 0 0 .242 -.795l.007 -.174v-2l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006zm0 6v2h-2v-2h2zm0 -4v2h-2v-2h2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_8` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_8 />
      <TablerIcons.square_rounded_number_8 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_8(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12h-1a1 1 0 0 1 -1 -1v-2a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-2a1 1 0 0 0 -1 -1" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_9_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_9_filled />
      <TablerIcons.square_rounded_number_9_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_9_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.642 .005l.616 .017l.299 .013l.579 .034l.553 .046c4.687 .455 6.65 2.333 7.166 6.906l.03 .29l.046 .553l.041 .727l.006 .15l.017 .617l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.455 4.687 -2.333 6.65 -6.906 7.166l-.29 .03l-.553 .046l-.727 .041l-.15 .006l-.617 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.687 -.455 -6.65 -2.333 -7.166 -6.906l-.03 -.29l-.046 -.553l-.041 -.727l-.006 -.15l-.017 -.617l-.004 -.318v-.648l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.455 -4.687 2.333 -6.65 6.906 -7.166l.29 -.03l.553 -.046l.727 -.041l.15 -.006l.617 -.017c.21 -.003 .424 -.005 .642 -.005zm1 5h-2l-.15 .005a2 2 0 0 0 -1.844 1.838l-.006 .157v2l.005 .15a2 2 0 0 0 1.838 1.844l.157 .006h2v2h-2l-.007 -.117a1 1 0 0 0 -1.993 .117a2 2 0 0 0 1.85 1.995l.15 .005h2l.15 -.005a2 2 0 0 0 1.844 -1.838l.006 -.157v-6l-.005 -.15a2 2 0 0 0 -1.838 -1.844l-.157 -.006zm0 2v2h-2v-2h2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_number_9` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_number_9 />
      <TablerIcons.square_rounded_number_9 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_number_9(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-6a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h3" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_plus_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_plus_filled />
      <TablerIcons.square_rounded_plus_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_plus_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.324 .001l.318 .004l.616 .017l.299 .013l.579 .034l.553 .046c4.785 .464 6.732 2.411 7.196 7.196l.046 .553l.034 .579c.005 .098 .01 .198 .013 .299l.017 .616l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.464 4.785 -2.411 6.732 -7.196 7.196l-.553 .046l-.579 .034c-.098 .005 -.198 .01 -.299 .013l-.616 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.785 -.464 -6.732 -2.411 -7.196 -7.196l-.046 -.553l-.034 -.579a28.058 28.058 0 0 1 -.013 -.299l-.017 -.616c-.003 -.21 -.005 -.424 -.005 -.642l.001 -.324l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.464 -4.785 2.411 -6.732 7.196 -7.196l.553 -.046l.579 -.034c.098 -.005 .198 -.01 .299 -.013l.616 -.017c.21 -.003 .424 -.005 .642 -.005zm0 6a1 1 0 0 0 -1 1v2h-2l-.117 .007a1 1 0 0 0 .117 1.993h2v2l.007 .117a1 1 0 0 0 1.993 -.117v-2h2l.117 -.007a1 1 0 0 0 -.117 -1.993h-2v-2l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_plus />
      <TablerIcons.square_rounded_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 12h6" />
      <path d="M12 9v6" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_x_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_x_filled />
      <TablerIcons.square_rounded_x_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_x_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2l.324 .001l.318 .004l.616 .017l.299 .013l.579 .034l.553 .046c4.785 .464 6.732 2.411 7.196 7.196l.046 .553l.034 .579c.005 .098 .01 .198 .013 .299l.017 .616l.005 .642l-.005 .642l-.017 .616l-.013 .299l-.034 .579l-.046 .553c-.464 4.785 -2.411 6.732 -7.196 7.196l-.553 .046l-.579 .034c-.098 .005 -.198 .01 -.299 .013l-.616 .017l-.642 .005l-.642 -.005l-.616 -.017l-.299 -.013l-.579 -.034l-.553 -.046c-4.785 -.464 -6.732 -2.411 -7.196 -7.196l-.046 -.553l-.034 -.579a28.058 28.058 0 0 1 -.013 -.299l-.017 -.616c-.003 -.21 -.005 -.424 -.005 -.642l.001 -.324l.004 -.318l.017 -.616l.013 -.299l.034 -.579l.046 -.553c.464 -4.785 2.411 -6.732 7.196 -7.196l.553 -.046l.579 -.034c.098 -.005 .198 -.01 .299 -.013l.616 -.017c.21 -.003 .424 -.005 .642 -.005zm-1.489 7.14a1 1 0 0 0 -1.218 1.567l1.292 1.293l-1.292 1.293l-.083 .094a1 1 0 0 0 1.497 1.32l1.293 -1.292l1.293 1.292l.094 .083a1 1 0 0 0 1.32 -1.497l-1.292 -1.293l1.292 -1.293l.083 -.094a1 1 0 0 0 -1.497 -1.32l-1.293 1.292l-1.293 -1.292l-.094 -.083z"
        fill="currentColor"
        stroke-width="0"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded_x />
      <TablerIcons.square_rounded_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10l4 4m0 -4l-4 4" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_rounded` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_rounded />
      <TablerIcons.square_rounded class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_rounded(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z" />
    </svg>
    """
  end

  @doc """
  Renders the `square_toggle_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_toggle_horizontal />
      <TablerIcons.square_toggle_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_toggle_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 12h-20" />
      <path d="M4 14v-8a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8" />
      <path d="M18 20a2 2 0 0 0 2 -2" />
      <path d="M4 18a2 2 0 0 0 2 2" />
      <path d="M14 20l-4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `square_toggle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_toggle />
      <TablerIcons.square_toggle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_toggle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 2l0 20" />
      <path d="M14 20h-8a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h8" />
      <path d="M20 6a2 2 0 0 0 -2 -2" />
      <path d="M18 20a2 2 0 0 0 2 -2" />
      <path d="M20 10l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `square_x_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_x_filled />
      <TablerIcons.square_x_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_x_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19 2h-14a3 3 0 0 0 -3 3v14a3 3 0 0 0 3 3h14a3 3 0 0 0 3 -3v-14a3 3 0 0 0 -3 -3zm-9.387 6.21l.094 .083l2.293 2.292l2.293 -2.292a1 1 0 0 1 1.497 1.32l-.083 .094l-2.292 2.293l2.292 2.293a1 1 0 0 1 -1.32 1.497l-.094 -.083l-2.293 -2.292l-2.293 2.292a1 1 0 0 1 -1.497 -1.32l.083 -.094l2.292 -2.293l-2.292 -2.293a1 1 0 0 1 1.32 -1.497z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `square_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square_x />
      <TablerIcons.square_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
      <path d="M9 9l6 6m0 -6l-6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `square` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.square />
      <TablerIcons.square class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def square(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `squares_diagonal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.squares_diagonal />
      <TablerIcons.squares_diagonal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def squares_diagonal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
      <path d="M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2" />
      <path d="M8.586 19.414l10.827 -10.827" />
    </svg>
    """
  end

  @doc """
  Renders the `squares_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.squares_filled />
      <TablerIcons.squares_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def squares_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 8m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
      <path d="M8 14.5l6.492 -6.492" />
      <path d="M13.496 20l6.504 -6.504l-6.504 6.504z" />
      <path d="M8.586 19.414l10.827 -10.827" />
      <path d="M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2" />
    </svg>
    """
  end

  @doc """
  Renders the `stack_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stack_2 />
      <TablerIcons.stack_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stack_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 4l-8 4l8 4l8 -4l-8 -4" />
      <path d="M4 12l8 4l8 -4" />
      <path d="M4 16l8 4l8 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `stack_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stack_3 />
      <TablerIcons.stack_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stack_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 2l-8 4l8 4l8 -4l-8 -4" />
      <path d="M4 10l8 4l8 -4" />
      <path d="M4 18l8 4l8 -4" />
      <path d="M4 14l8 4l8 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `stack_pop` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stack_pop />
      <TablerIcons.stack_pop class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stack_pop(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 9.5l-3 1.5l8 4l8 -4l-3 -1.5" />
      <path d="M4 15l8 4l8 -4" />
      <path d="M12 11v-7" />
      <path d="M9 7l3 -3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `stack_push` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stack_push />
      <TablerIcons.stack_push class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stack_push(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 10l-2 1l8 4l8 -4l-2 -1" />
      <path d="M4 15l8 4l8 -4" />
      <path d="M12 4v7" />
      <path d="M15 8l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `stack` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stack />
      <TablerIcons.stack class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stack(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 6l-8 4l8 4l8 -4l-8 -4" />
      <path d="M4 14l8 4l8 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `stairs_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stairs_down />
      <TablerIcons.stairs_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stairs_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 21h-5v-5h-5v-5h-5v-5h-5" />
      <path d="M18 3v7" />
      <path d="M15 7l3 3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `stairs_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stairs_up />
      <TablerIcons.stairs_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stairs_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 6h-5v5h-5v5h-5v5h-5" />
      <path d="M6 10v-7" />
      <path d="M3 6l3 -3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `stairs` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stairs />
      <TablerIcons.stairs class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stairs(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M22 5h-5v5h-5v5h-5v5h-5" />
    </svg>
    """
  end

  @doc """
  Renders the `star_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.star_filled />
      <TablerIcons.star_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def star_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M8.243 7.34l-6.38 .925l-.113 .023a1 1 0 0 0 -.44 1.684l4.622 4.499l-1.09 6.355l-.013 .11a1 1 0 0 0 1.464 .944l5.706 -3l5.693 3l.1 .046a1 1 0 0 0 1.352 -1.1l-1.091 -6.355l4.624 -4.5l.078 -.085a1 1 0 0 0 -.633 -1.62l-6.38 -.926l-2.852 -5.78a1 1 0 0 0 -1.794 0l-2.853 5.78z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `star_half_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.star_half_filled />
      <TablerIcons.star_half_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def star_half_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 1a.993 .993 0 0 1 .823 .443l.067 .116l2.852 5.781l6.38 .925c.741 .108 1.08 .94 .703 1.526l-.07 .095l-.078 .086l-4.624 4.499l1.09 6.355a1.001 1.001 0 0 1 -1.249 1.135l-.101 -.035l-.101 -.046l-5.693 -3l-5.706 3c-.105 .055 -.212 .09 -.32 .106l-.106 .01a1.003 1.003 0 0 1 -1.038 -1.06l.013 -.11l1.09 -6.355l-4.623 -4.5a1.001 1.001 0 0 1 .328 -1.647l.113 -.036l.114 -.023l6.379 -.925l2.853 -5.78a.968 .968 0 0 1 .904 -.56zm0 3.274v12.476a1 1 0 0 1 .239 .029l.115 .036l.112 .05l4.363 2.299l-.836 -4.873a1 1 0 0 1 .136 -.696l.07 -.099l.082 -.09l3.546 -3.453l-4.891 -.708a1 1 0 0 1 -.62 -.344l-.073 -.097l-.06 -.106l-2.183 -4.424z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `star_half` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.star_half />
      <TablerIcons.star_half class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def star_half(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 17.75l-6.172 3.245l1.179 -6.873l-5 -4.867l6.9 -1l3.086 -6.253z" />
    </svg>
    """
  end

  @doc """
  Renders the `star_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.star_off />
      <TablerIcons.star_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def star_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M10.012 6.016l1.981 -4.014l3.086 6.253l6.9 1l-4.421 4.304m.012 4.01l.588 3.426l-6.158 -3.245l-6.172 3.245l1.179 -6.873l-5 -4.867l6.327 -.917" />
    </svg>
    """
  end

  @doc """
  Renders the `star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.star />
      <TablerIcons.star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 17.75l-6.172 3.245l1.179 -6.873l-5 -4.867l6.9 -1l3.086 -6.253l3.086 6.253l6.9 1l-5 4.867l1.179 6.873z" />
    </svg>
    """
  end

  @doc """
  Renders the `stars_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stars_filled />
      <TablerIcons.stars_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stars_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17.657 12.007a1.39 1.39 0 0 0 -1.103 .765l-.855 1.723l-1.907 .277c-.52 .072 -.96 .44 -1.124 .944l-.038 .14c-.1 .465 .046 .954 .393 1.29l1.377 1.337l-.326 1.892a1.393 1.393 0 0 0 2.018 1.465l1.708 -.895l1.708 .896a1.388 1.388 0 0 0 1.462 -.105l.112 -.09a1.39 1.39 0 0 0 .442 -1.272l-.325 -1.891l1.38 -1.339c.38 -.371 .516 -.924 .352 -1.427l-.051 -.134a1.39 1.39 0 0 0 -1.073 -.81l-1.907 -.278l-.853 -1.722a1.393 1.393 0 0 0 -1.247 -.773l-.143 .007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M6.057 12.007a1.39 1.39 0 0 0 -1.103 .765l-.855 1.723l-1.907 .277c-.52 .072 -.96 .44 -1.124 .944l-.038 .14c-.1 .465 .046 .954 .393 1.29l1.377 1.337l-.326 1.892a1.393 1.393 0 0 0 2.018 1.465l1.708 -.895l1.708 .896a1.388 1.388 0 0 0 1.462 -.105l.112 -.09a1.39 1.39 0 0 0 .442 -1.272l-.324 -1.891l1.38 -1.339c.38 -.371 .516 -.924 .352 -1.427l-.051 -.134a1.39 1.39 0 0 0 -1.073 -.81l-1.908 -.279l-.853 -1.722a1.393 1.393 0 0 0 -1.247 -.772l-.143 .007z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M11.857 2.007a1.39 1.39 0 0 0 -1.103 .765l-.855 1.723l-1.907 .277c-.52 .072 -.96 .44 -1.124 .944l-.038 .14c-.1 .465 .046 .954 .393 1.29l1.377 1.337l-.326 1.892a1.393 1.393 0 0 0 2.018 1.465l1.708 -.894l1.709 .896a1.388 1.388 0 0 0 1.462 -.105l.112 -.09a1.39 1.39 0 0 0 .442 -1.272l-.325 -1.892l1.38 -1.339c.38 -.371 .516 -.924 .352 -1.427l-.051 -.134a1.39 1.39 0 0 0 -1.073 -.81l-1.908 -.279l-.853 -1.722a1.393 1.393 0 0 0 -1.247 -.772l-.143 .007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `stars_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stars_off />
      <TablerIcons.stars_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stars_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.373 13.371l.076 -.154a.392 .392 0 0 1 .702 0l.907 1.831m.367 .39c.498 .071 1.245 .18 2.24 .324a.39 .39 0 0 1 .217 .665c-.326 .316 -.57 .553 -.732 .712m-.611 3.405a.39 .39 0 0 1 -.567 .411l-2.172 -1.138l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l1.601 -.232" />
      <path d="M6.2 19.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
      <path d="M9.557 5.556l1 -.146l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.014 .187m-4.153 -.166l-.744 .39a.392 .392 0 0 1 -.568 -.41l.188 -1.093" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `stars` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stars />
      <TablerIcons.stars class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stars(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17.8 19.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
      <path d="M6.2 19.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
      <path d="M12 9.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `status_change` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.status_change />
      <TablerIcons.status_change class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def status_change(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 12v-2a6 6 0 1 1 12 0v2" />
      <path d="M15 9l3 3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `steam` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.steam />
      <TablerIcons.steam class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def steam(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 4m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M4 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M20 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 20m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M5.5 5.5l3 3" />
      <path d="M15.5 15.5l3 3" />
      <path d="M18.5 5.5l-3 3" />
      <path d="M8.5 15.5l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `steering_wheel_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.steering_wheel_off />
      <TablerIcons.steering_wheel_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def steering_wheel_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.04 16.048a9 9 0 0 0 -12.083 -12.09m-2.32 1.678a9 9 0 1 0 12.737 12.719" />
      <path d="M10.595 10.576a2 2 0 1 0 2.827 2.83" />
      <path d="M12 14v7" />
      <path d="M10 12l-6.75 -2" />
      <path d="M15.542 11.543l5.208 -1.543" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `steering_wheel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.steering_wheel />
      <TablerIcons.steering_wheel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def steering_wheel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 14l0 7" />
      <path d="M10 12l-6.75 -2" />
      <path d="M14 12l6.75 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `step_into` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.step_into />
      <TablerIcons.step_into class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def step_into(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3l0 12" />
      <path d="M16 11l-4 4" />
      <path d="M8 11l4 4" />
      <path d="M12 20m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `step_out` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.step_out />
      <TablerIcons.step_out class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def step_out(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3l0 12" />
      <path d="M16 7l-4 -4" />
      <path d="M8 7l4 -4" />
      <path d="M12 20m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `stereo_glasses` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stereo_glasses />
      <TablerIcons.stereo_glasses class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stereo_glasses(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 3h-2l-3 9" />
      <path d="M16 3h2l3 9" />
      <path d="M3 12v7a1 1 0 0 0 1 1h4.586a1 1 0 0 0 .707 -.293l2 -2a1 1 0 0 1 1.414 0l2 2a1 1 0 0 0 .707 .293h4.586a1 1 0 0 0 1 -1v-7h-18z" />
      <path d="M7 16h1" />
      <path d="M16 16h1" />
    </svg>
    """
  end

  @doc """
  Renders the `stethoscope_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stethoscope_off />
      <TablerIcons.stethoscope_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stethoscope_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.172 4.179a2 2 0 0 0 -1.172 1.821v3.5a5.5 5.5 0 0 0 9.856 3.358m1.144 -2.858v-4a2 2 0 0 0 -2 -2h-1" />
      <path d="M8 15a6 6 0 0 0 10.714 3.712m1.216 -2.798c.046 -.3 .07 -.605 .07 -.914v-3" />
      <path d="M11 3v2" />
      <path d="M20 10m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `stethoscope` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stethoscope />
      <TablerIcons.stethoscope class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stethoscope(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 4h-1a2 2 0 0 0 -2 2v3.5h0a5.5 5.5 0 0 0 11 0v-3.5a2 2 0 0 0 -2 -2h-1" />
      <path d="M8 15a6 6 0 1 0 12 0v-3" />
      <path d="M11 3v2" />
      <path d="M6 3v2" />
      <path d="M20 10m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `sticker` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sticker />
      <TablerIcons.sticker class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sticker(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 12l-2 .5a6 6 0 0 1 -6.5 -6.5l.5 -2l8 8" />
      <path d="M20 12a8 8 0 1 1 -8 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `storm_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.storm_off />
      <TablerIcons.storm_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def storm_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.884 9.874a3 3 0 1 0 4.24 4.246m.57 -3.441a3.012 3.012 0 0 0 -1.41 -1.39" />
      <path d="M7.037 7.063a7 7 0 0 0 9.907 9.892m1.585 -2.426a7 7 0 0 0 -9.058 -9.059" />
      <path d="M5.369 14.236c-1.605 -3.428 -1.597 -6.673 -1 -9.849" />
      <path d="M18.63 9.76a14.323 14.323 0 0 1 1.368 6.251m-.37 3.608c-.087 .46 -.187 .92 -.295 1.377" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `storm` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.storm />
      <TablerIcons.storm class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def storm(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M12 12m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M5.369 14.236c-1.839 -3.929 -1.561 -7.616 -.704 -11.236" />
      <path d="M18.63 9.76c1.837 3.928 1.561 7.615 .703 11.236" />
    </svg>
    """
  end

  @doc """
  Renders the `stretching_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stretching_2 />
      <TablerIcons.stretching_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stretching_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 4a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M6.5 21l3.5 -5" />
      <path d="M5 11l7 -2" />
      <path d="M16 21l-4 -7v-5l7 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `stretching` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.stretching />
      <TablerIcons.stretching class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def stretching(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M5 20l5 -.5l1 -2" />
      <path d="M18 20v-5h-5.5l2.5 -6.5l-5.5 1l1.5 2" />
    </svg>
    """
  end

  @doc """
  Renders the `strikethrough` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.strikethrough />
      <TablerIcons.strikethrough class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def strikethrough(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 12l14 0" />
      <path d="M16 6.5a4 2 0 0 0 -4 -1.5h-1a3.5 3.5 0 0 0 0 7h2a3.5 3.5 0 0 1 0 7h-1.5a4 2 0 0 1 -4 -1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `submarine` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.submarine />
      <TablerIcons.submarine class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def submarine(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 11v6h2l1 -1.5l3 1.5h10a3 3 0 0 0 0 -6h-10h0l-3 1.5l-1 -1.5h-2z" />
      <path d="M17 11l-1 -3h-5l-1 3" />
      <path d="M13 8v-2a1 1 0 0 1 1 -1h1" />
    </svg>
    """
  end

  @doc """
  Renders the `subscript` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.subscript />
      <TablerIcons.subscript class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def subscript(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 7l8 10m-8 0l8 -10" />
      <path d="M21 20h-4l3.5 -4a1.73 1.73 0 0 0 -3.5 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `subtask` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.subtask />
      <TablerIcons.subtask class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def subtask(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 9l6 0" />
      <path d="M4 5l4 0" />
      <path d="M6 5v11a1 1 0 0 0 1 1h5" />
      <path d="M12 7m0 1a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1z" />
      <path d="M12 15m0 1a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-6a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `sum_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sum_off />
      <TablerIcons.sum_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sum_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 18a1 1 0 0 1 -1 1h-11l6 -7m-3 -7h8a1 1 0 0 1 1 1v2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `sum` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sum />
      <TablerIcons.sum class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sum(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 16v2a1 1 0 0 1 -1 1h-11l6 -7l-6 -7h11a1 1 0 0 1 1 1v2" />
    </svg>
    """
  end

  @doc """
  Renders the `sun_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sun_filled />
      <TablerIcons.sun_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sun_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 19a1 1 0 0 1 .993 .883l.007 .117v1a1 1 0 0 1 -1.993 .117l-.007 -.117v-1a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M18.313 16.91l.094 .083l.7 .7a1 1 0 0 1 -1.32 1.497l-.094 -.083l-.7 -.7a1 1 0 0 1 1.218 -1.567l.102 .07z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M7.007 16.993a1 1 0 0 1 .083 1.32l-.083 .094l-.7 .7a1 1 0 0 1 -1.497 -1.32l.083 -.094l.7 -.7a1 1 0 0 1 1.414 0z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 11a1 1 0 0 1 .117 1.993l-.117 .007h-1a1 1 0 0 1 -.117 -1.993l.117 -.007h1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M21 11a1 1 0 0 1 .117 1.993l-.117 .007h-1a1 1 0 0 1 -.117 -1.993l.117 -.007h1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M6.213 4.81l.094 .083l.7 .7a1 1 0 0 1 -1.32 1.497l-.094 -.083l-.7 -.7a1 1 0 0 1 1.217 -1.567l.102 .07z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M19.107 4.893a1 1 0 0 1 .083 1.32l-.083 .094l-.7 .7a1 1 0 0 1 -1.497 -1.32l.083 -.094l.7 -.7a1 1 0 0 1 1.414 0z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 2a1 1 0 0 1 .993 .883l.007 .117v1a1 1 0 0 1 -1.993 .117l-.007 -.117v-1a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M12 7a5 5 0 1 1 -4.995 5.217l-.005 -.217l.005 -.217a5 5 0 0 1 4.995 -4.783z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `sun_high` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sun_high />
      <TablerIcons.sun_high class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sun_high(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.828 14.828a4 4 0 1 0 -5.656 -5.656a4 4 0 0 0 5.656 5.656z" />
      <path d="M6.343 17.657l-1.414 1.414" />
      <path d="M6.343 6.343l-1.414 -1.414" />
      <path d="M17.657 6.343l1.414 -1.414" />
      <path d="M17.657 17.657l1.414 1.414" />
      <path d="M4 12h-2" />
      <path d="M12 4v-2" />
      <path d="M20 12h2" />
      <path d="M12 20v2" />
    </svg>
    """
  end

  @doc """
  Renders the `sun_low` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sun_low />
      <TablerIcons.sun_low class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sun_low(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M4 12h.01" />
      <path d="M12 4v.01" />
      <path d="M20 12h.01" />
      <path d="M12 20v.01" />
      <path d="M6.31 6.31l-.01 -.01" />
      <path d="M17.71 6.31l-.01 -.01" />
      <path d="M17.7 17.7l.01 .01" />
      <path d="M6.3 17.7l.01 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `sun_moon` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sun_moon />
      <TablerIcons.sun_moon class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sun_moon(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.173 14.83a4 4 0 1 1 5.657 -5.657" />
      <path d="M11.294 12.707l.174 .247a7.5 7.5 0 0 0 8.845 2.492a9 9 0 0 1 -14.671 2.914" />
      <path d="M3 12h1" />
      <path d="M12 3v1" />
      <path d="M5.6 5.6l.7 .7" />
      <path d="M3 21l18 -18" />
    </svg>
    """
  end

  @doc """
  Renders the `sun_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sun_off />
      <TablerIcons.sun_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sun_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M16 12a4 4 0 0 0 -4 -4m-2.834 1.177a4 4 0 0 0 5.66 5.654" />
      <path d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7" />
    </svg>
    """
  end

  @doc """
  Renders the `sun_wind` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sun_wind />
      <TablerIcons.sun_wind class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sun_wind(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.468 10a4 4 0 1 0 -5.466 5.46" />
      <path d="M2 12h1" />
      <path d="M11 3v1" />
      <path d="M11 20v1" />
      <path d="M4.6 5.6l.7 .7" />
      <path d="M17.4 5.6l-.7 .7" />
      <path d="M5.3 17.7l-.7 .7" />
      <path d="M15 13h5a2 2 0 1 0 0 -4" />
      <path d="M12 16h5.714l.253 0a2 2 0 0 1 2.033 2a2 2 0 0 1 -2 2h-.286" />
    </svg>
    """
  end

  @doc """
  Renders the `sun` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sun />
      <TablerIcons.sun class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sun(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7" />
    </svg>
    """
  end

  @doc """
  Renders the `sunglasses` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sunglasses />
      <TablerIcons.sunglasses class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sunglasses(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h-2l-3 10" />
      <path d="M16 4h2l3 10" />
      <path d="M10 16h4" />
      <path d="M21 16.5a3.5 3.5 0 0 1 -7 0v-2.5h7v2.5" />
      <path d="M10 16.5a3.5 3.5 0 0 1 -7 0v-2.5h7v2.5" />
      <path d="M4 14l4.5 4.5" />
      <path d="M15 14l4.5 4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `sunrise` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sunrise />
      <TablerIcons.sunrise class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sunrise(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17h1m16 0h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7m-9.7 5.7a4 4 0 0 1 8 0" />
      <path d="M3 21l18 0" />
      <path d="M12 9v-6l3 3m-6 0l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `sunset_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sunset_2 />
      <TablerIcons.sunset_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sunset_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 13h1" />
      <path d="M20 13h1" />
      <path d="M5.6 6.6l.7 .7" />
      <path d="M18.4 6.6l-.7 .7" />
      <path d="M8 13a4 4 0 1 1 8 0" />
      <path d="M3 17h18" />
      <path d="M7 20h5" />
      <path d="M16 20h1" />
      <path d="M12 5v-1" />
    </svg>
    """
  end

  @doc """
  Renders the `sunset` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sunset />
      <TablerIcons.sunset class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sunset(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17h1m16 0h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7m-9.7 5.7a4 4 0 0 1 8 0" />
      <path d="M3 21l18 0" />
      <path d="M12 3v6l3 -3m-6 0l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `superscript` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.superscript />
      <TablerIcons.superscript class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def superscript(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 7l8 10m-8 0l8 -10" />
      <path d="M21 11h-4l3.5 -4a1.73 1.73 0 0 0 -3.5 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `svg` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.svg />
      <TablerIcons.svg class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def svg(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 8h-2a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2v-4h-1" />
      <path d="M7 8h-3a1 1 0 0 0 -1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-3" />
      <path d="M10 8l1.5 8h1l1.5 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `swimming` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.swimming />
      <TablerIcons.swimming class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def swimming(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 9m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M6 11l4 -2l3.5 3l-1.5 2" />
      <path d="M3 16.75a2.4 2.4 0 0 0 1 .25a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 1 -.25" />
    </svg>
    """
  end

  @doc """
  Renders the `swipe` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.swipe />
      <TablerIcons.swipe class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def swipe(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 16.572v2.42a2.01 2.01 0 0 1 -2.009 2.008h-7.981a2.01 2.01 0 0 1 -2.01 -2.009v-7.981a2.01 2.01 0 0 1 2.009 -2.01h2.954" />
      <path d="M9.167 4.511a2.04 2.04 0 0 1 2.496 -1.441l7.826 2.097a2.04 2.04 0 0 1 1.441 2.496l-2.097 7.826a2.04 2.04 0 0 1 -2.496 1.441l-7.827 -2.097a2.04 2.04 0 0 1 -1.441 -2.496l2.098 -7.827z" />
    </svg>
    """
  end

  @doc """
  Renders the `switch_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.switch_2 />
      <TablerIcons.switch_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def switch_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17h5l1.67 -2.386m3.66 -5.227l1.67 -2.387h6" />
      <path d="M18 4l3 3l-3 3" />
      <path d="M3 7h5l7 10h6" />
      <path d="M18 20l3 -3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `switch_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.switch_3 />
      <TablerIcons.switch_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def switch_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17h2.397a5 5 0 0 0 4.096 -2.133l.177 -.253m3.66 -5.227l.177 -.254a5 5 0 0 1 4.096 -2.133h3.397" />
      <path d="M18 4l3 3l-3 3" />
      <path d="M3 7h2.397a5 5 0 0 1 4.096 2.133l4.014 5.734a5 5 0 0 0 4.096 2.133h3.397" />
      <path d="M18 20l3 -3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `switch_horizontal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.switch_horizontal />
      <TablerIcons.switch_horizontal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def switch_horizontal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 3l4 4l-4 4" />
      <path d="M10 7l10 0" />
      <path d="M8 13l-4 4l4 4" />
      <path d="M4 17l9 0" />
    </svg>
    """
  end

  @doc """
  Renders the `switch_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.switch_vertical />
      <TablerIcons.switch_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def switch_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 8l4 -4l4 4" />
      <path d="M7 4l0 9" />
      <path d="M13 16l4 4l4 -4" />
      <path d="M17 10l0 10" />
    </svg>
    """
  end

  @doc """
  Renders the `switch` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.switch />
      <TablerIcons.switch class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def switch(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 4l4 0l0 4" />
      <path d="M14.75 9.25l4.25 -5.25" />
      <path d="M5 19l4 -4" />
      <path d="M15 19l4 0l0 -4" />
      <path d="M5 5l14 14" />
    </svg>
    """
  end

  @doc """
  Renders the `sword_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sword_off />
      <TablerIcons.sword_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sword_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.938 7.937l3.062 -3.937h5v5l-3.928 3.055m-2.259 1.757l-2.813 2.188l-4 4l-3 -3l4 -4l2.19 -2.815" />
      <path d="M6.5 11.5l6 6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `sword` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.sword />
      <TablerIcons.sword class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def sword(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 4v5l-9 7l-4 4l-3 -3l4 -4l7 -9z" />
      <path d="M6.5 11.5l6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `swords` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.swords />
      <TablerIcons.swords class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def swords(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 3v5l-11 9l-4 4l-3 -3l4 -4l9 -11z" />
      <path d="M5 13l6 6" />
      <path d="M14.32 17.32l3.68 3.68l3 -3l-3.365 -3.365" />
      <path d="M10 5.5l-2 -2.5h-5v5l3 2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `table_alias` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.table_alias />
      <TablerIcons.table_alias class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def table_alias(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12v-7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-7" />
      <path d="M3 10h18" />
      <path d="M10 3v10" />
      <path d="M2 17a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1v-4z" />
    </svg>
    """
  end

  @doc """
  Renders the `table_column` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.table_column />
      <TablerIcons.table_column class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def table_column(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
      <path d="M10 10h11" />
      <path d="M10 3v18" />
      <path d="M9 3l-6 6" />
      <path d="M10 7l-7 7" />
      <path d="M10 12l-7 7" />
      <path d="M10 17l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `table_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.table_down />
      <TablerIcons.table_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def table_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-7.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v7.5" />
      <path d="M3 10h18" />
      <path d="M10 3v18" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `table_export` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.table_export />
      <TablerIcons.table_export class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def table_export(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-7.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v7.5" />
      <path d="M3 10h18" />
      <path d="M10 3v18" />
      <path d="M16 19h6" />
      <path d="M19 16l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `table_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.table_filled />
      <TablerIcons.table_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def table_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M4 11h4a1 1 0 0 1 1 1v8a1 1 0 0 1 -1 1h-2a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-6a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M21 12v6a3 3 0 0 1 -2.824 2.995l-.176 .005h-6a1 1 0 0 1 -1 -1v-8a1 1 0 0 1 1 -1h8a1 1 0 0 1 1 1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M18 3a3 3 0 0 1 2.995 2.824l.005 .176v2a1 1 0 0 1 -1 1h-8a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h6z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M9 4v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1v-2a3 3 0 0 1 2.824 -2.995l.176 -.005h2a1 1 0 0 1 1 1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `table_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.table_heart />
      <TablerIcons.table_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def table_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.5 21h-6.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v6" />
      <path d="M3 10h18" />
      <path d="M10 3v18" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `table_import` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.table_import />
      <TablerIcons.table_import class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def table_import(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21h-7a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v8" />
      <path d="M3 10h18" />
      <path d="M10 3v18" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `table_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.table_minus />
      <TablerIcons.table_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def table_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-7.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10" />
      <path d="M3 10h18" />
      <path d="M10 3v18" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `table_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.table_off />
      <TablerIcons.table_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def table_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h12a2 2 0 0 1 2 2v12m-.585 3.413a1.994 1.994 0 0 1 -1.415 .587h-14a2 2 0 0 1 -2 -2v-14c0 -.55 .223 -1.05 .583 -1.412" />
      <path d="M3 10h7m4 0h7" />
      <path d="M10 3v3m0 4v11" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `table_options` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.table_options />
      <TablerIcons.table_options class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def table_options(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21h-7a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v7" />
      <path d="M3 10h18" />
      <path d="M10 3v18" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `table_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.table_plus />
      <TablerIcons.table_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def table_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12.5 21h-7.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v7.5" />
      <path d="M3 10h18" />
      <path d="M10 3v18" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `table_row` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.table_row />
      <TablerIcons.table_row class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def table_row(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
      <path d="M9 3l-6 6" />
      <path d="M14 3l-7 7" />
      <path d="M19 3l-7 7" />
      <path d="M21 6l-4 4" />
      <path d="M3 10h18" />
      <path d="M10 10v11" />
    </svg>
    """
  end

  @doc """
  Renders the `table_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.table_share />
      <TablerIcons.table_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def table_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21h-7a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v8" />
      <path d="M3 10h18" />
      <path d="M10 3v18" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `table_shortcut` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.table_shortcut />
      <TablerIcons.table_shortcut class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def table_shortcut(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 13v-8a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-8" />
      <path d="M3 10h18" />
      <path d="M10 3v11" />
      <path d="M2 22l5 -5" />
      <path d="M7 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `table` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.table />
      <TablerIcons.table class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def table(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z" />
      <path d="M3 10h18" />
      <path d="M10 3v18" />
    </svg>
    """
  end

  @doc """
  Renders the `tag_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tag_off />
      <TablerIcons.tag_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tag_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.792 7.793a1 1 0 0 0 1.414 1.414" />
      <path d="M4.88 4.877a2.99 2.99 0 0 0 -.88 2.123v3.859c0 .537 .213 1.052 .593 1.432l8.116 8.116a2.025 2.025 0 0 0 2.864 0l2.416 -2.416m2 -2l.416 -.416a2.025 2.025 0 0 0 0 -2.864l-8.117 -8.116a2.025 2.025 0 0 0 -1.431 -.593h-2.859" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `tag` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tag />
      <TablerIcons.tag class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tag(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <circle cx="8.5" cy="8.5" r="1" fill="currentColor" />
      <path d="M4 7v3.859c0 .537 .213 1.052 .593 1.432l8.116 8.116a2.025 2.025 0 0 0 2.864 0l4.834 -4.834a2.025 2.025 0 0 0 0 -2.864l-8.117 -8.116a2.025 2.025 0 0 0 -1.431 -.593h-3.859a3 3 0 0 0 -3 3z" />
    </svg>
    """
  end

  @doc """
  Renders the `tags_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tags_off />
      <TablerIcons.tags_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tags_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 6h-.975a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834c.028 -.028 .055 -.056 .08 -.085" />
      <path d="M17.573 18.407l.418 -.418m2 -2l.419 -.419a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
      <path d="M6 9h-.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `tags` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tags />
      <TablerIcons.tags class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tags(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
      <path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
      <path d="M6 9h-.01" />
    </svg>
    """
  end

  @doc """
  Renders the `tallymark_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tallymark_1 />
      <TablerIcons.tallymark_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tallymark_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5l0 14" />
    </svg>
    """
  end

  @doc """
  Renders the `tallymark_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tallymark_2 />
      <TablerIcons.tallymark_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tallymark_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 5l0 14" />
      <path d="M14 5l0 14" />
    </svg>
    """
  end

  @doc """
  Renders the `tallymark_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tallymark_3 />
      <TablerIcons.tallymark_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tallymark_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 5l0 14" />
      <path d="M12 5l0 14" />
      <path d="M16 5l0 14" />
    </svg>
    """
  end

  @doc """
  Renders the `tallymark_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tallymark_4 />
      <TablerIcons.tallymark_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tallymark_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 5l0 14" />
      <path d="M10 5l0 14" />
      <path d="M14 5l0 14" />
      <path d="M18 5l0 14" />
    </svg>
    """
  end

  @doc """
  Renders the `tallymarks` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tallymarks />
      <TablerIcons.tallymarks class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tallymarks(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 5l0 14" />
      <path d="M10 5l0 14" />
      <path d="M14 5l0 14" />
      <path d="M18 5l0 14" />
      <path d="M3 17l18 -10" />
    </svg>
    """
  end

  @doc """
  Renders the `tank` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tank />
      <TablerIcons.tank class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tank(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 12m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v0a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M6 12l1 -5h5l3 5" />
      <path d="M21 9l-7.8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `target_arrow` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.target_arrow />
      <TablerIcons.target_arrow class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def target_arrow(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 7a5 5 0 1 0 5 5" />
      <path d="M13 3.055a9 9 0 1 0 7.941 7.945" />
      <path d="M15 6v3h3l3 -3h-3v-3z" />
      <path d="M15 9l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `target_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.target_off />
      <TablerIcons.target_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def target_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11.286 11.3a1 1 0 0 0 1.41 1.419" />
      <path d="M8.44 8.49a5 5 0 0 0 7.098 7.044m1.377 -2.611a5 5 0 0 0 -5.846 -5.836" />
      <path d="M5.649 5.623a9 9 0 1 0 12.698 12.758m1.683 -2.313a9 9 0 0 0 -12.076 -12.11" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `target` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.target />
      <TablerIcons.target class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def target(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 12m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `teapot` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.teapot />
      <TablerIcons.teapot class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def teapot(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.29 3h3.42a2 2 0 0 1 1.988 1.78l1.555 14a2 2 0 0 1 -1.988 2.22h-6.53a2 2 0 0 1 -1.988 -2.22l1.555 -14a2 2 0 0 1 1.988 -1.78z" />
      <path d="M7.47 12.5l-4.257 -5.019a.899 .899 0 0 1 .69 -1.481h13.09a3 3 0 0 1 3.007 3v3c0 1.657 -1.346 3 -3.007 3" />
      <path d="M7 17h10" />
    </svg>
    """
  end

  @doc """
  Renders the `telescope_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.telescope_off />
      <TablerIcons.telescope_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def telescope_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 21l6 -5l6 5" />
      <path d="M12 13v8" />
      <path d="M8.238 8.264l-4.183 2.51c-1.02 .614 -1.357 1.898 -.76 2.906l.165 .28c.52 .88 1.624 1.266 2.605 .91l6.457 -2.34m2.907 -1.055l4.878 -1.77a1.023 1.023 0 0 0 .565 -1.455l-2.62 -4.705a1.087 1.087 0 0 0 -1.447 -.42l-.056 .032l-6.016 3.61" />
      <path d="M14 5l3 5.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `telescope` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.telescope />
      <TablerIcons.telescope class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def telescope(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 21l6 -5l6 5" />
      <path d="M12 13v8" />
      <path d="M3.294 13.678l.166 .281c.52 .88 1.624 1.265 2.605 .91l14.242 -5.165a1.023 1.023 0 0 0 .565 -1.456l-2.62 -4.705a1.087 1.087 0 0 0 -1.447 -.42l-.056 .032l-12.694 7.618c-1.02 .613 -1.357 1.897 -.76 2.905z" />
      <path d="M14 5l3 5.5" />
    </svg>
    """
  end

  @doc """
  Renders the `temperature_celsius` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.temperature_celsius />
      <TablerIcons.temperature_celsius class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def temperature_celsius(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 8m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M20 9a3 3 0 0 0 -3 -3h-1a3 3 0 0 0 -3 3v6a3 3 0 0 0 3 3h1a3 3 0 0 0 3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `temperature_fahrenheit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.temperature_fahrenheit />
      <TablerIcons.temperature_fahrenheit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def temperature_fahrenheit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 8m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M13 12l5 0" />
      <path d="M20 6h-6a1 1 0 0 0 -1 1v11" />
    </svg>
    """
  end

  @doc """
  Renders the `temperature_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.temperature_minus />
      <TablerIcons.temperature_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def temperature_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 13.5a4 4 0 1 0 4 0v-8.5a2 2 0 0 0 -4 0v8.5" />
      <path d="M8 9l4 0" />
      <path d="M16 9l6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `temperature_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.temperature_off />
      <TablerIcons.temperature_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def temperature_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10v3.5a4 4 0 1 0 5.836 2.33m-1.836 -5.83v-5a2 2 0 1 0 -4 0v1" />
      <path d="M13 9h1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `temperature_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.temperature_plus />
      <TablerIcons.temperature_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def temperature_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 13.5a4 4 0 1 0 4 0v-8.5a2 2 0 0 0 -4 0v8.5" />
      <path d="M8 9l4 0" />
      <path d="M16 9l6 0" />
      <path d="M19 6l0 6" />
    </svg>
    """
  end

  @doc """
  Renders the `temperature` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.temperature />
      <TablerIcons.temperature class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def temperature(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 13.5a4 4 0 1 0 4 0v-8.5a2 2 0 0 0 -4 0v8.5" />
      <path d="M10 9l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `template_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.template_off />
      <TablerIcons.template_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def template_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h11a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-7m-4 0h-3a1 1 0 0 1 -1 -1v-2c0 -.271 .108 -.517 .283 -.697" />
      <path d="M4 12m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M16 12h4" />
      <path d="M14 16h2" />
      <path d="M14 20h6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `template` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.template />
      <TablerIcons.template class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def template(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 1a1 1 0 0 1 1 -1h14a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-14a1 1 0 0 1 -1 -1z" />
      <path d="M4 12m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M14 12l6 0" />
      <path d="M14 16l6 0" />
      <path d="M14 20l6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `tent_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tent_off />
      <TablerIcons.tent_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tent_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 14l4 6h5m-2.863 -6.868l-5.137 -9.132l-1.44 2.559m-1.44 2.563l-6.12 10.878h6l4 -6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `tent` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tent />
      <TablerIcons.tent class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tent(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 14l4 6h6l-9 -16l-9 16h6l4 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `terminal_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.terminal_2 />
      <TablerIcons.terminal_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def terminal_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 9l3 3l-3 3" />
      <path d="M13 15l3 0" />
      <path d="M3 4m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `terminal` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.terminal />
      <TablerIcons.terminal class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def terminal(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 7l5 5l-5 5" />
      <path d="M12 19l7 0" />
    </svg>
    """
  end

  @doc """
  Renders the `test_pipe_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.test_pipe_2 />
      <TablerIcons.test_pipe_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def test_pipe_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 3v15a3 3 0 0 1 -6 0v-15" />
      <path d="M9 12h6" />
      <path d="M8 3h8" />
    </svg>
    """
  end

  @doc """
  Renders the `test_pipe_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.test_pipe_off />
      <TablerIcons.test_pipe_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def test_pipe_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 8.04a803.533 803.533 0 0 0 -4 3.96m-2 2c-1.085 1.085 -3.125 3.14 -6.122 6.164a2.857 2.857 0 0 1 -4.041 -4.04c3.018 -3 5.073 -5.037 6.163 -6.124m2 -2c.872 -.872 2.191 -2.205 3.959 -4" />
      <path d="M7 13h6" />
      <path d="M19 15l1.5 1.6m-.74 3.173a2 2 0 0 1 -2.612 -2.608" />
      <path d="M15 3l6 6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `test_pipe` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.test_pipe />
      <TablerIcons.test_pipe class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def test_pipe(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 8.04l-12.122 12.124a2.857 2.857 0 1 1 -4.041 -4.04l12.122 -12.124" />
      <path d="M7 13h8" />
      <path d="M19 15l1.5 1.6a2 2 0 1 1 -3 0l1.5 -1.6z" />
      <path d="M15 3l6 6" />
    </svg>
    """
  end

  @doc """
  Renders the `tex` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tex />
      <TablerIcons.tex class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tex(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 8v-1h-6v1" />
      <path d="M6 15v-8" />
      <path d="M21 15l-5 -8" />
      <path d="M16 15l5 -8" />
      <path d="M14 11h-4v8h4" />
      <path d="M10 15h3" />
    </svg>
    """
  end

  @doc """
  Renders the `text_caption` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.text_caption />
      <TablerIcons.text_caption class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def text_caption(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 15h16" />
      <path d="M4 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M4 20h12" />
    </svg>
    """
  end

  @doc """
  Renders the `text_color` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.text_color />
      <TablerIcons.text_color class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def text_color(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15v-7a3 3 0 0 1 6 0v7" />
      <path d="M9 11h6" />
      <path d="M5 19h14" />
    </svg>
    """
  end

  @doc """
  Renders the `text_decrease` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.text_decrease />
      <TablerIcons.text_decrease class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def text_decrease(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19v-10.5a3.5 3.5 0 1 1 7 0v10.5" />
      <path d="M4 13h7" />
      <path d="M21 12h-6" />
    </svg>
    """
  end

  @doc """
  Renders the `text_direction_ltr` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.text_direction_ltr />
      <TablerIcons.text_direction_ltr class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def text_direction_ltr(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 19h14" />
      <path d="M17 21l2 -2l-2 -2" />
      <path d="M16 4h-6.5a3.5 3.5 0 0 0 0 7h.5" />
      <path d="M14 15v-11" />
      <path d="M10 15v-11" />
    </svg>
    """
  end

  @doc """
  Renders the `text_direction_rtl` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.text_direction_rtl />
      <TablerIcons.text_direction_rtl class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def text_direction_rtl(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 4h-6.5a3.5 3.5 0 0 0 0 7h.5" />
      <path d="M14 15v-11" />
      <path d="M10 15v-11" />
      <path d="M5 19h14" />
      <path d="M7 21l-2 -2l2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `text_increase` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.text_increase />
      <TablerIcons.text_increase class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def text_increase(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19v-10.5a3.5 3.5 0 1 1 7 0v10.5" />
      <path d="M4 13h7" />
      <path d="M18 9v6" />
      <path d="M21 12h-6" />
    </svg>
    """
  end

  @doc """
  Renders the `text_orientation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.text_orientation />
      <TablerIcons.text_orientation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def text_orientation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15l-5 -5c-1.367 -1.367 -1.367 -3.633 0 -5s3.633 -1.367 5 0l5 5" />
      <path d="M5.5 11.5l5 -5" />
      <path d="M21 12l-9 9" />
      <path d="M21 12v4" />
      <path d="M21 12h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `text_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.text_plus />
      <TablerIcons.text_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def text_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 10h-14" />
      <path d="M5 6h14" />
      <path d="M14 14h-9" />
      <path d="M5 18h6" />
      <path d="M18 15v6" />
      <path d="M15 18h6" />
    </svg>
    """
  end

  @doc """
  Renders the `text_recognition` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.text_recognition />
      <TablerIcons.text_recognition class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def text_recognition(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 8v-2a2 2 0 0 1 2 -2h2" />
      <path d="M4 16v2a2 2 0 0 0 2 2h2" />
      <path d="M16 4h2a2 2 0 0 1 2 2v2" />
      <path d="M16 20h2a2 2 0 0 0 2 -2v-2" />
      <path d="M12 16v-7" />
      <path d="M9 9h6" />
    </svg>
    """
  end

  @doc """
  Renders the `text_resize` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.text_resize />
      <TablerIcons.text_resize class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def text_resize(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 7v10" />
      <path d="M7 5h10" />
      <path d="M7 19h10" />
      <path d="M19 7v10" />
      <path d="M10 10h4" />
      <path d="M12 14v-4" />
    </svg>
    """
  end

  @doc """
  Renders the `text_size` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.text_size />
      <TablerIcons.text_size class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def text_size(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7v-2h13v2" />
      <path d="M10 5v14" />
      <path d="M12 19h-4" />
      <path d="M15 13v-1h6v1" />
      <path d="M18 12v7" />
      <path d="M17 19h2" />
    </svg>
    """
  end

  @doc """
  Renders the `text_spellcheck` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.text_spellcheck />
      <TablerIcons.text_spellcheck class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def text_spellcheck(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 15v-7.5a3.5 3.5 0 0 1 7 0v7.5" />
      <path d="M5 10h7" />
      <path d="M10 18l3 3l7 -7" />
    </svg>
    """
  end

  @doc """
  Renders the `text_wrap_disabled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.text_wrap_disabled />
      <TablerIcons.text_wrap_disabled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def text_wrap_disabled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6l10 0" />
      <path d="M4 18l10 0" />
      <path d="M4 12h17l-3 -3m0 6l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `text_wrap` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.text_wrap />
      <TablerIcons.text_wrap class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def text_wrap(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 6l16 0" />
      <path d="M4 18l5 0" />
      <path d="M4 12h13a3 3 0 0 1 0 6h-4l2 -2m0 4l-2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `texture` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.texture />
      <TablerIcons.texture class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def texture(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 3l-3 3" />
      <path d="M21 18l-3 3" />
      <path d="M11 3l-8 8" />
      <path d="M16 3l-13 13" />
      <path d="M21 3l-18 18" />
      <path d="M21 8l-13 13" />
      <path d="M21 13l-8 8" />
    </svg>
    """
  end

  @doc """
  Renders the `theater` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.theater />
      <TablerIcons.theater class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def theater(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h16" />
      <path d="M20 16v-10a2 2 0 0 0 -2 -2h-12a2 2 0 0 0 -2 2v10l4 -6c2.667 1.333 5.333 1.333 8 0l4 6z" />
    </svg>
    """
  end

  @doc """
  Renders the `thermometer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.thermometer />
      <TablerIcons.thermometer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def thermometer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 5a2.828 2.828 0 0 1 0 4l-8 8h-4v-4l8 -8a2.828 2.828 0 0 1 4 0z" />
      <path d="M16 7l-1.5 -1.5" />
      <path d="M13 10l-1.5 -1.5" />
      <path d="M10 13l-1.5 -1.5" />
      <path d="M7 17l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `thumb_down_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.thumb_down_filled />
      <TablerIcons.thumb_down_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def thumb_down_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M13 21.008a3 3 0 0 0 2.995 -2.823l.005 -.177v-4h2a3 3 0 0 0 2.98 -2.65l.015 -.173l.005 -.177l-.02 -.196l-1.006 -5.032c-.381 -1.625 -1.502 -2.796 -2.81 -2.78l-.164 .008h-8a1 1 0 0 0 -.993 .884l-.007 .116l.001 9.536a1 1 0 0 0 .5 .866a2.998 2.998 0 0 1 1.492 2.396l.007 .202v1a3 3 0 0 0 3 3z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M5 14.008a1 1 0 0 0 .993 -.883l.007 -.117v-9a1 1 0 0 0 -.883 -.993l-.117 -.007h-1a2 2 0 0 0 -1.995 1.852l-.005 .15v7a2 2 0 0 0 1.85 1.994l.15 .005h1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `thumb_down_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.thumb_down_off />
      <TablerIcons.thumb_down_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def thumb_down_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 13v-6m-3 -3a1 1 0 0 0 -1 1v7a1 1 0 0 0 1 1h3a4 4 0 0 1 4 4v1a2 2 0 1 0 4 0v-3m2 -2h1a2 2 0 0 0 2 -2l-1 -5c-.295 -1.26 -1.11 -2.076 -2 -2h-7c-.57 0 -1.102 .159 -1.556 .434" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `thumb_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.thumb_down />
      <TablerIcons.thumb_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def thumb_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 13v-8a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1v7a1 1 0 0 0 1 1h3a4 4 0 0 1 4 4v1a2 2 0 0 0 4 0v-5h3a2 2 0 0 0 2 -2l-1 -5a2 3 0 0 0 -2 -2h-7a3 3 0 0 0 -3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `thumb_up_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.thumb_up_filled />
      <TablerIcons.thumb_up_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def thumb_up_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M13 3a3 3 0 0 1 2.995 2.824l.005 .176v4h2a3 3 0 0 1 2.98 2.65l.015 .174l.005 .176l-.02 .196l-1.006 5.032c-.381 1.626 -1.502 2.796 -2.81 2.78l-.164 -.008h-8a1 1 0 0 1 -.993 -.883l-.007 -.117l.001 -9.536a1 1 0 0 1 .5 -.865a2.998 2.998 0 0 0 1.492 -2.397l.007 -.202v-1a3 3 0 0 1 3 -3z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M5 10a1 1 0 0 1 .993 .883l.007 .117v9a1 1 0 0 1 -.883 .993l-.117 .007h-1a2 2 0 0 1 -1.995 -1.85l-.005 -.15v-7a2 2 0 0 1 1.85 -1.995l.15 -.005h1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `thumb_up_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.thumb_up_off />
      <TablerIcons.thumb_up_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def thumb_up_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 11v8a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-7a1 1 0 0 1 1 -1h3a3.987 3.987 0 0 0 2.828 -1.172m1.172 -2.828v-1a2 2 0 1 1 4 0v5h3a2 2 0 0 1 2 2c-.222 1.112 -.39 1.947 -.5 2.503m-.758 3.244c-.392 .823 -1.044 1.312 -1.742 1.253h-7a3 3 0 0 1 -3 -3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `thumb_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.thumb_up />
      <TablerIcons.thumb_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def thumb_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 11v8a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1v-7a1 1 0 0 1 1 -1h3a4 4 0 0 0 4 -4v-1a2 2 0 0 1 4 0v5h3a2 2 0 0 1 2 2l-1 5a2 3 0 0 1 -2 2h-7a3 3 0 0 1 -3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `tic_tac` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tic_tac />
      <TablerIcons.tic_tac class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tic_tac(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M3 12h18" />
      <path d="M12 3v18" />
      <path d="M4 16l4 4" />
      <path d="M4 20l4 -4" />
      <path d="M16 4l4 4" />
      <path d="M16 8l4 -4" />
      <path d="M18 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `ticket_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ticket_off />
      <TablerIcons.ticket_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ticket_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 5v2" />
      <path d="M15 17v2" />
      <path d="M9 5h10a2 2 0 0 1 2 2v3a2 2 0 1 0 0 4v3m-2 2h-14a2 2 0 0 1 -2 -2v-3a2 2 0 1 0 0 -4v-3a2 2 0 0 1 2 -2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ticket` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ticket />
      <TablerIcons.ticket class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ticket(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 5l0 2" />
      <path d="M15 11l0 2" />
      <path d="M15 17l0 2" />
      <path d="M5 5h14a2 2 0 0 1 2 2v3a2 2 0 0 0 0 4v3a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-3a2 2 0 0 0 0 -4v-3a2 2 0 0 1 2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `tie` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tie />
      <TablerIcons.tie class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tie(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 22l4 -4l-2.5 -11l.993 -2.649a1 1 0 0 0 -.936 -1.351h-3.114a1 1 0 0 0 -.936 1.351l.993 2.649l-2.5 11l4 4z" />
      <path d="M10.5 7h3l5 5.5" />
    </svg>
    """
  end

  @doc """
  Renders the `tilde` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tilde />
      <TablerIcons.tilde class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tilde(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12c0 -1.657 1.592 -3 3.556 -3c1.963 0 3.11 1.5 4.444 3c1.333 1.5 2.48 3 4.444 3s3.556 -1.343 3.556 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `tilt_shift_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tilt_shift_off />
      <TablerIcons.tilt_shift_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tilt_shift_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.56 3.69a9 9 0 0 0 -.577 .263" />
      <path d="M3.69 8.56a9 9 0 0 0 -.69 3.44" />
      <path d="M3.69 15.44a9 9 0 0 0 1.95 2.92" />
      <path d="M8.56 20.31a9 9 0 0 0 3.44 .69" />
      <path d="M15.44 20.31a9 9 0 0 0 2.92 -1.95" />
      <path d="M20.31 15.44a9 9 0 0 0 .69 -3.44" />
      <path d="M20.31 8.56a9 9 0 0 0 -1.95 -2.92" />
      <path d="M15.44 3.69a9 9 0 0 0 -3.44 -.69" />
      <path d="M10.57 10.602a2 2 0 0 0 2.862 2.795" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `tilt_shift` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tilt_shift />
      <TablerIcons.tilt_shift class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tilt_shift(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.56 3.69a9 9 0 0 0 -2.92 1.95" />
      <path d="M3.69 8.56a9 9 0 0 0 -.69 3.44" />
      <path d="M3.69 15.44a9 9 0 0 0 1.95 2.92" />
      <path d="M8.56 20.31a9 9 0 0 0 3.44 .69" />
      <path d="M15.44 20.31a9 9 0 0 0 2.92 -1.95" />
      <path d="M20.31 15.44a9 9 0 0 0 .69 -3.44" />
      <path d="M20.31 8.56a9 9 0 0 0 -1.95 -2.92" />
      <path d="M15.44 3.69a9 9 0 0 0 -3.44 -.69" />
      <path d="M12 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `time_duration_0` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.time_duration_0 />
      <TablerIcons.time_duration_0 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def time_duration_0(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12v.01" />
      <path d="M21 12v.01" />
      <path d="M12 21v.01" />
      <path d="M12 3v.01" />
      <path d="M7.5 4.2v.01" />
      <path d="M16.5 4.2v.01" />
      <path d="M16.5 19.8v.01" />
      <path d="M7.5 19.8v.01" />
      <path d="M4.2 16.5v.01" />
      <path d="M19.8 16.5v.01" />
      <path d="M19.8 7.5v.01" />
      <path d="M4.2 7.5v.01" />
      <path d="M10 11v2a2 2 0 1 0 4 0v-2a2 2 0 1 0 -4 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `time_duration_10` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.time_duration_10 />
      <TablerIcons.time_duration_10 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def time_duration_10(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 9v6" />
      <path d="M12 11v2a2 2 0 1 0 4 0v-2a2 2 0 1 0 -4 0z" />
      <path d="M3 12v.01" />
      <path d="M21 12v.01" />
      <path d="M12 21v.01" />
      <path d="M7.5 4.2v.01" />
      <path d="M16.5 19.8v.01" />
      <path d="M7.5 19.8v.01" />
      <path d="M4.2 16.5v.01" />
      <path d="M19.8 16.5v.01" />
      <path d="M4.2 7.5v.01" />
      <path d="M19.81 7.527a8.994 8.994 0 0 0 -7.81 -4.527" />
    </svg>
    """
  end

  @doc """
  Renders the `time_duration_15` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.time_duration_15 />
      <TablerIcons.time_duration_15 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def time_duration_15(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 15h2a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-2v-3h3" />
      <path d="M9 9v6" />
      <path d="M3 12v.01" />
      <path d="M12 21v.01" />
      <path d="M7.5 4.2v.01" />
      <path d="M16.5 19.8v.01" />
      <path d="M7.5 19.8v.01" />
      <path d="M4.2 16.5v.01" />
      <path d="M19.8 16.5v.01" />
      <path d="M4.2 7.5v.01" />
      <path d="M21 12a9 9 0 0 0 -9 -9" />
    </svg>
    """
  end

  @doc """
  Renders the `time_duration_30` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.time_duration_30 />
      <TablerIcons.time_duration_30 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def time_duration_30(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 10.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
      <path d="M8 9h1.5a1.5 1.5 0 0 1 0 3h-.5h.5a1.5 1.5 0 0 1 0 3h-1.5" />
      <path d="M3 12v.01" />
      <path d="M7.5 4.2v.01" />
      <path d="M7.5 19.8v.01" />
      <path d="M4.2 16.5v.01" />
      <path d="M4.2 7.5v.01" />
      <path d="M12 21a9 9 0 0 0 0 -18" />
    </svg>
    """
  end

  @doc """
  Renders the `time_duration_45` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.time_duration_45 />
      <TablerIcons.time_duration_45 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def time_duration_45(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 15h2a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-2v-3h3" />
      <path d="M7 9v2a1 1 0 0 0 1 1h1" />
      <path d="M10 9v6" />
      <path d="M7.5 4.2v.01" />
      <path d="M4.2 7.5v.01" />
      <path d="M3 12a9 9 0 1 0 9 -9" />
    </svg>
    """
  end

  @doc """
  Renders the `time_duration_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.time_duration_5 />
      <TablerIcons.time_duration_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def time_duration_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 15h2a1.5 1.5 0 0 0 0 -3h-2v-3h3.5" />
      <path d="M3 12v.01" />
      <path d="M21 12v.01" />
      <path d="M12 21v.01" />
      <path d="M7.5 4.2v.01" />
      <path d="M16.5 19.8v.01" />
      <path d="M7.5 19.8v.01" />
      <path d="M4.2 16.5v.01" />
      <path d="M19.8 16.5v.01" />
      <path d="M19.8 7.5v.01" />
      <path d="M4.2 7.5v.01" />
      <path d="M16.5 4.206a9.042 9.042 0 0 0 -4.5 -1.206" />
    </svg>
    """
  end

  @doc """
  Renders the `time_duration_60` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.time_duration_60 />
      <TablerIcons.time_duration_60 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def time_duration_60(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 10.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
      <path d="M11 9h-2a1 1 0 0 0 -1 1v4a1 1 0 0 0 1 1h1a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-2" />
      <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `time_duration_90` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.time_duration_90 />
      <TablerIcons.time_duration_90 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def time_duration_90(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 14.25c0 .414 .336 .75 .75 .75h1.5a.75 .75 0 0 0 .75 -.75v-4.5a.75 .75 0 0 0 -.75 -.75h-1.5a.75 .75 0 0 0 -.75 .75v1.5c0 .414 .336 .75 .75 .75h2.25" />
      <path d="M14 10.5v3a1.5 1.5 0 0 0 3 0v-3a1.5 1.5 0 0 0 -3 0z" />
      <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `time_duration_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.time_duration_off />
      <TablerIcons.time_duration_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def time_duration_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12v.01" />
      <path d="M7.5 19.8v.01" />
      <path d="M4.2 16.5v.01" />
      <path d="M4.2 7.5v.01" />
      <path d="M12 21a8.994 8.994 0 0 0 6.362 -2.634m1.685 -2.336a9 9 0 0 0 -8.047 -13.03" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `timeline_event_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.timeline_event_exclamation />
      <TablerIcons.timeline_event_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def timeline_event_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M10 20h-6" />
      <path d="M14 20h6" />
      <path d="M12 15l-2 -2h-3a1 1 0 0 1 -1 -1v-8a1 1 0 0 1 1 -1h10a1 1 0 0 1 1 1v8a1 1 0 0 1 -1 1h-3l-2 2z" />
      <path d="M12 6v2" />
      <path d="M12 11v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `timeline_event_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.timeline_event_minus />
      <TablerIcons.timeline_event_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def timeline_event_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M10 20h-6" />
      <path d="M14 20h6" />
      <path d="M12 15l-2 -2h-3a1 1 0 0 1 -1 -1v-8a1 1 0 0 1 1 -1h10a1 1 0 0 1 1 1v8a1 1 0 0 1 -1 1h-3l-2 2z" />
      <path d="M10 8h4" />
    </svg>
    """
  end

  @doc """
  Renders the `timeline_event_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.timeline_event_plus />
      <TablerIcons.timeline_event_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def timeline_event_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M10 20h-6" />
      <path d="M14 20h6" />
      <path d="M12 15l-2 -2h-3a1 1 0 0 1 -1 -1v-8a1 1 0 0 1 1 -1h10a1 1 0 0 1 1 1v8a1 1 0 0 1 -1 1h-3l-2 2z" />
      <path d="M10 8h4" />
      <path d="M12 6v4" />
    </svg>
    """
  end

  @doc """
  Renders the `timeline_event_text` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.timeline_event_text />
      <TablerIcons.timeline_event_text class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def timeline_event_text(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M10 20h-6" />
      <path d="M14 20h6" />
      <path d="M12 15l-2 -2h-3a1 1 0 0 1 -1 -1v-8a1 1 0 0 1 1 -1h10a1 1 0 0 1 1 1v8a1 1 0 0 1 -1 1h-3l-2 2z" />
      <path d="M9 6h6" />
      <path d="M9 9h3" />
    </svg>
    """
  end

  @doc """
  Renders the `timeline_event_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.timeline_event_x />
      <TablerIcons.timeline_event_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def timeline_event_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M10 20h-6" />
      <path d="M14 20h6" />
      <path d="M12 15l-2 -2h-3a1 1 0 0 1 -1 -1v-8a1 1 0 0 1 1 -1h10a1 1 0 0 1 1 1v8a1 1 0 0 1 -1 1h-3l-2 2z" />
      <path d="M13.5 9.5l-3 -3" />
      <path d="M10.5 9.5l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `timeline_event` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.timeline_event />
      <TablerIcons.timeline_event class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def timeline_event(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M10 20h-6" />
      <path d="M14 20h6" />
      <path d="M12 15l-2 -2h-3a1 1 0 0 1 -1 -1v-8a1 1 0 0 1 1 -1h10a1 1 0 0 1 1 1v8a1 1 0 0 1 -1 1h-3l-2 2z" />
    </svg>
    """
  end

  @doc """
  Renders the `timeline` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.timeline />
      <TablerIcons.timeline class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def timeline(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 16l6 -7l5 5l5 -6" />
      <path d="M15 14m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M10 9m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M4 16m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M20 8m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `tir` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tir />
      <TablerIcons.tir class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tir(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M7 18h8m4 0h2v-6a5 7 0 0 0 -5 -7h-1l1.5 7h4.5" />
      <path d="M12 18v-13h3" />
      <path d="M3 17l0 -5l9 0" />
    </svg>
    """
  end

  @doc """
  Renders the `toggle_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.toggle_left />
      <TablerIcons.toggle_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def toggle_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M2 6m0 6a6 6 0 0 1 6 -6h8a6 6 0 0 1 6 6v0a6 6 0 0 1 -6 6h-8a6 6 0 0 1 -6 -6z" />
    </svg>
    """
  end

  @doc """
  Renders the `toggle_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.toggle_right />
      <TablerIcons.toggle_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def toggle_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M2 6m0 6a6 6 0 0 1 6 -6h8a6 6 0 0 1 6 6v0a6 6 0 0 1 -6 6h-8a6 6 0 0 1 -6 -6z" />
    </svg>
    """
  end

  @doc """
  Renders the `toilet_paper_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.toilet_paper_off />
      <TablerIcons.toilet_paper_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def toilet_paper_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.27 4.28c-.768 1.27 -1.27 3.359 -1.27 5.72c0 3.866 1.343 7 3 7s3 -3.134 3 -7c0 -.34 -.01 -.672 -.03 -1" />
      <path d="M21 10c0 -3.866 -1.343 -7 -3 -7" />
      <path d="M7 3h11" />
      <path d="M21 10v7m-1.513 2.496l-1.487 -.496l-3 2l-3 -3l-3 2v-10" />
      <path d="M6 10h.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `toilet_paper` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.toilet_paper />
      <TablerIcons.toilet_paper class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def toilet_paper(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 10m-3 0a3 7 0 1 0 6 0a3 7 0 1 0 -6 0" />
      <path d="M21 10c0 -3.866 -1.343 -7 -3 -7" />
      <path d="M6 3h12" />
      <path d="M21 10v10l-3 -1l-3 2l-3 -3l-3 2v-10" />
      <path d="M6 10h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `toml` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.toml />
      <TablerIcons.toml class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def toml(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M1.499 8h3" />
      <path d="M2.999 8v8" />
      <path d="M8.5 8a1.5 1.5 0 0 1 1.5 1.5v5a1.5 1.5 0 0 1 -3 0v-5a1.5 1.5 0 0 1 1.5 -1.5z" />
      <path d="M13 16v-8l2 5l2 -5v8" />
      <path d="M20 8v8h2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `tool` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tool />
      <TablerIcons.tool class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tool(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 10h3v-3l-3.5 -3.5a6 6 0 0 1 8 8l6 6a2 2 0 0 1 -3 3l-6 -6a6 6 0 0 1 -8 -8l3.5 3.5" />
    </svg>
    """
  end

  @doc """
  Renders the `tools_kitchen_2_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tools_kitchen_2_off />
      <TablerIcons.tools_kitchen_2_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tools_kitchen_2_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.386 10.409c.53 -2.28 1.766 -4.692 4.614 -7.409v12m-4 0h-1c0 -.313 0 -.627 0 -.941" />
      <path d="M19 19v2h-1v-3" />
      <path d="M8 8v13" />
      <path d="M5 5v2a3 3 0 0 0 4.546 2.572m1.454 -2.572v-3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `tools_kitchen_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tools_kitchen_2 />
      <TablerIcons.tools_kitchen_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tools_kitchen_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 3v12h-5c-.023 -3.681 .184 -7.406 5 -12zm0 12v6h-1v-3m-10 -14v17m-3 -17v3a3 3 0 1 0 6 0v-3" />
    </svg>
    """
  end

  @doc """
  Renders the `tools_kitchen_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tools_kitchen_off />
      <TablerIcons.tools_kitchen_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tools_kitchen_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h5l-.5 4.5m-.4 3.595l-.1 .905h-6l-.875 -7.874" />
      <path d="M7 18h2v3h-2z" />
      <path d="M15.225 11.216c.42 -2.518 1.589 -5.177 4.775 -8.216v12h-1" />
      <path d="M20 15v1m0 4v1h-1v-2" />
      <path d="M8 12v6" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `tools_kitchen` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tools_kitchen />
      <TablerIcons.tools_kitchen class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tools_kitchen(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 3h8l-1 9h-6z" />
      <path d="M7 18h2v3h-2z" />
      <path d="M20 3v12h-5c-.023 -3.681 .184 -7.406 5 -12z" />
      <path d="M20 15v6h-1v-3" />
      <path d="M8 12l0 6" />
    </svg>
    """
  end

  @doc """
  Renders the `tools_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tools_off />
      <TablerIcons.tools_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tools_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 12l4 -4a2.828 2.828 0 1 0 -4 -4l-4 4m-2 2l-7 7v4h4l7 -7" />
      <path d="M14.5 5.5l4 4" />
      <path d="M12 8l-5 -5m-2 2l-2 2l5 5" />
      <path d="M7 8l-1.5 1.5" />
      <path d="M16 12l5 5m-2 2l-2 2l-5 -5" />
      <path d="M16 17l-1.5 1.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `tools` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tools />
      <TablerIcons.tools class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tools(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 21h4l13 -13a1.5 1.5 0 0 0 -4 -4l-13 13v4" />
      <path d="M14.5 5.5l4 4" />
      <path d="M12 8l-5 -5l-4 4l5 5" />
      <path d="M7 8l-1.5 1.5" />
      <path d="M16 12l5 5l-4 4l-5 -5" />
      <path d="M16 17l-1.5 1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `tooltip` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tooltip />
      <TablerIcons.tooltip class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tooltip(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 13l-1.707 -1.707a1 1 0 0 0 -.707 -.293h-2.586a2 2 0 0 1 -2 -2v-3a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v3a2 2 0 0 1 -2 2h-2.586a1 1 0 0 0 -.707 .293l-1.707 1.707z" />
    </svg>
    """
  end

  @doc """
  Renders the `topology_bus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.topology_bus />
      <TablerIcons.topology_bus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def topology_bus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 10a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M6 10a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M22 10a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M2 16h20" />
      <path d="M4 12v4" />
      <path d="M12 12v4" />
      <path d="M20 12v4" />
    </svg>
    """
  end

  @doc """
  Renders the `topology_complex` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.topology_complex />
      <TablerIcons.topology_complex class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def topology_complex(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 18a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M8 18a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M8 6a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M20 6a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M14 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M7.5 7.5l3 3" />
      <path d="M6 8v8" />
      <path d="M18 16v-8" />
      <path d="M8 6h8" />
      <path d="M16 18h-8" />
    </svg>
    """
  end

  @doc """
  Renders the `topology_full_hierarchy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.topology_full_hierarchy />
      <TablerIcons.topology_full_hierarchy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def topology_full_hierarchy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 18a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M8 18a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M8 6a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M20 6a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M14 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M6 8v8" />
      <path d="M18 16v-8" />
      <path d="M8 6h8" />
      <path d="M16 18h-8" />
      <path d="M7.5 7.5l3 3" />
      <path d="M13.5 13.5l3 3" />
      <path d="M16.5 7.5l-3 3" />
      <path d="M10.5 13.5l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `topology_full` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.topology_full />
      <TablerIcons.topology_full class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def topology_full(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 18a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M8 18a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M8 6a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M20 6a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M6 8v8" />
      <path d="M18 16v-8" />
      <path d="M8 6h8" />
      <path d="M16 18h-8" />
      <path d="M7.5 7.5l9 9" />
      <path d="M7.5 16.5l9 -9" />
    </svg>
    """
  end

  @doc """
  Renders the `topology_ring_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.topology_ring_2 />
      <TablerIcons.topology_ring_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def topology_ring_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 6a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M7 18a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M21 18a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M7 18h10" />
      <path d="M18 16l-5 -8" />
      <path d="M11 8l-5 8" />
    </svg>
    """
  end

  @doc """
  Renders the `topology_ring_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.topology_ring_3 />
      <TablerIcons.topology_ring_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def topology_ring_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 18a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M20 18a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M20 6a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M8 6a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M6 8v8" />
      <path d="M18 16v-8" />
      <path d="M8 6h8" />
      <path d="M16 18h-8" />
    </svg>
    """
  end

  @doc """
  Renders the `topology_ring` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.topology_ring />
      <TablerIcons.topology_ring class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def topology_ring(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 20a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M14 4a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M6 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M22 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M13.5 5.5l5 5" />
      <path d="M5.5 13.5l5 5" />
      <path d="M13.5 18.5l5 -5" />
      <path d="M10.5 5.5l-5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `topology_star_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.topology_star_2 />
      <TablerIcons.topology_star_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def topology_star_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 20a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M14 4a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M6 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M22 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M14 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M6 12h4" />
      <path d="M14 12h4" />
      <path d="M12 6v4" />
      <path d="M12 14v4" />
    </svg>
    """
  end

  @doc """
  Renders the `topology_star_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.topology_star_3 />
      <TablerIcons.topology_star_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def topology_star_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 19a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M18 5a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M10 5a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M6 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M18 19a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M14 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M22 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M6 12h4" />
      <path d="M14 12h4" />
      <path d="M15 7l-2 3" />
      <path d="M9 7l2 3" />
      <path d="M11 14l-2 3" />
      <path d="M13 14l2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `topology_star_ring_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.topology_star_ring_2 />
      <TablerIcons.topology_star_ring_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def topology_star_ring_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 20a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M14 4a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M6 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M22 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M14 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M6 12h4" />
      <path d="M14 12h4" />
      <path d="M12 6v4" />
      <path d="M12 14v4" />
      <path d="M5.5 10.5l5 -5" />
      <path d="M13.5 5.5l5 5" />
      <path d="M18.5 13.5l-5 5" />
      <path d="M10.5 18.5l-5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `topology_star_ring_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.topology_star_ring_3 />
      <TablerIcons.topology_star_ring_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def topology_star_ring_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 19a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M18 5a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M10 5a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M6 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M18 19a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M14 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M22 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M6 12h4" />
      <path d="M14 12h4" />
      <path d="M15 7l-2 3" />
      <path d="M9 7l2 3" />
      <path d="M11 14l-2 3" />
      <path d="M13 14l2 3" />
      <path d="M10 5h4" />
      <path d="M10 19h4" />
      <path d="M17 17l2 -3" />
      <path d="M19 10l-2 -3" />
      <path d="M7 7l-2 3" />
      <path d="M5 14l2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `topology_star_ring` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.topology_star_ring />
      <TablerIcons.topology_star_ring class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def topology_star_ring(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 20a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M14 4a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M6 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M22 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M14 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M6 12h4" />
      <path d="M14 12h4" />
      <path d="M13.5 5.5l5 5" />
      <path d="M5.5 13.5l5 5" />
      <path d="M13.5 18.5l5 -5" />
      <path d="M10.5 5.5l-5 5" />
      <path d="M12 6v4" />
      <path d="M12 14v4" />
    </svg>
    """
  end

  @doc """
  Renders the `topology_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.topology_star />
      <TablerIcons.topology_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def topology_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 18a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M20 6a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M8 6a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M20 18a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M14 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M7.5 7.5l3 3" />
      <path d="M7.5 16.5l3 -3" />
      <path d="M13.5 13.5l3 3" />
      <path d="M16.5 7.5l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `torii` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.torii />
      <TablerIcons.torii class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def torii(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4c5.333 1.333 10.667 1.333 16 0" />
      <path d="M4 8h16" />
      <path d="M12 5v3" />
      <path d="M18 4.5v15.5" />
      <path d="M6 4.5v15.5" />
    </svg>
    """
  end

  @doc """
  Renders the `tornado` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tornado />
      <TablerIcons.tornado class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tornado(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 4l-18 0" />
      <path d="M13 16l-6 0" />
      <path d="M11 20l4 0" />
      <path d="M6 8l14 0" />
      <path d="M4 12l12 0" />
    </svg>
    """
  end

  @doc """
  Renders the `tournament` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tournament />
      <TablerIcons.tournament class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tournament(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M20 10m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M4 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M4 20m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 12h3a1 1 0 0 1 1 1v6a1 1 0 0 1 -1 1h-3" />
      <path d="M6 4h7a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-2" />
      <path d="M14 10h4" />
    </svg>
    """
  end

  @doc """
  Renders the `tower_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tower_off />
      <TablerIcons.tower_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tower_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 6v-2a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2h3v-2a1 1 0 0 1 1 -1h1a1 1 0 0 1 1 1v4.394a2 2 0 0 1 -.336 1.11l-1.328 1.992a2 2 0 0 0 -.336 1.11v1.394m0 4v2a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1v-7.394a2 2 0 0 0 -.336 -1.11l-1.328 -1.992a2 2 0 0 1 -.336 -1.11v-4.394" />
      <path d="M10 21v-5a2 2 0 1 1 4 0v5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `tower` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tower />
      <TablerIcons.tower class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tower(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 3h1a1 1 0 0 1 1 1v2h3v-2a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2h3v-2a1 1 0 0 1 1 -1h1a1 1 0 0 1 1 1v4.394a2 2 0 0 1 -.336 1.11l-1.328 1.992a2 2 0 0 0 -.336 1.11v7.394a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1v-7.394a2 2 0 0 0 -.336 -1.11l-1.328 -1.992a2 2 0 0 1 -.336 -1.11v-4.394a1 1 0 0 1 1 -1z" />
      <path d="M10 21v-5a2 2 0 1 1 4 0v5" />
    </svg>
    """
  end

  @doc """
  Renders the `track` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.track />
      <TablerIcons.track class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def track(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 15l11 -11m5 5l-11 11m-4 -8l7 7m-3.5 -10.5l7 7m-3.5 -10.5l7 7" />
    </svg>
    """
  end

  @doc """
  Renders the `tractor` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tractor />
      <TablerIcons.tractor class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tractor(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 15m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M7 15l0 .01" />
      <path d="M19 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M10.5 17l6.5 0" />
      <path d="M20 15.2v-4.2a1 1 0 0 0 -1 -1h-6l-2 -5h-6v6.5" />
      <path d="M18 5h-1a1 1 0 0 0 -1 1v4" />
    </svg>
    """
  end

  @doc """
  Renders the `trademark` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trademark />
      <TablerIcons.trademark class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trademark(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.5 9h5m-2.5 0v6" />
      <path d="M13 15v-6l3 4l3 -4v6" />
    </svg>
    """
  end

  @doc """
  Renders the `traffic_cone_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.traffic_cone_off />
      <TablerIcons.traffic_cone_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def traffic_cone_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h16" />
      <path d="M9.4 10h.6m4 0h.6" />
      <path d="M7.8 15h7.2" />
      <path d="M6 20l3.5 -10.5" />
      <path d="M10.5 6.5l.5 -1.5h2l2 6m2 6l1 3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `traffic_cone` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.traffic_cone />
      <TablerIcons.traffic_cone class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def traffic_cone(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20l16 0" />
      <path d="M9.4 10l5.2 0" />
      <path d="M7.8 15l8.4 0" />
      <path d="M6 20l5 -15h2l5 15" />
    </svg>
    """
  end

  @doc """
  Renders the `traffic_lights_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.traffic_lights_off />
      <TablerIcons.traffic_lights_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def traffic_lights_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4c.912 -1.219 2.36 -2 4 -2a5 5 0 0 1 5 5v6m0 4a5 5 0 0 1 -10 0v-10" />
      <path d="M12 8a1 1 0 1 0 -1 -1" />
      <path d="M11.291 11.295a1 1 0 0 0 1.418 1.41" />
      <path d="M12 17m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `traffic_lights` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.traffic_lights />
      <TablerIcons.traffic_lights class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def traffic_lights(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 2m0 5a5 5 0 0 1 5 -5h0a5 5 0 0 1 5 5v10a5 5 0 0 1 -5 5h0a5 5 0 0 1 -5 -5z" />
      <path d="M12 7m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M12 17m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `train` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.train />
      <TablerIcons.train class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def train(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 13c0 -3.87 -3.37 -7 -10 -7h-8" />
      <path d="M3 15h16a2 2 0 0 0 2 -2" />
      <path d="M3 6v5h17.5" />
      <path d="M3 10l0 4" />
      <path d="M8 11l0 -5" />
      <path d="M13 11l0 -4.5" />
      <path d="M3 19l18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `transfer_in` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.transfer_in />
      <TablerIcons.transfer_in class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def transfer_in(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 18v3h16v-14l-8 -4l-8 4v3" />
      <path d="M4 14h9" />
      <path d="M10 11l3 3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `transfer_out` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.transfer_out />
      <TablerIcons.transfer_out class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def transfer_out(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 19v2h16v-14l-8 -4l-8 4v2" />
      <path d="M13 14h-9" />
      <path d="M7 11l-3 3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `transfer_vertical` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.transfer_vertical />
      <TablerIcons.transfer_vertical class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def transfer_vertical(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 4v16l-6 -5.5" />
      <path d="M14 20v-16l6 5.5" />
    </svg>
    """
  end

  @doc """
  Renders the `transfer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.transfer />
      <TablerIcons.transfer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def transfer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 10h-16l5.5 -6" />
      <path d="M4 14h16l-5.5 6" />
    </svg>
    """
  end

  @doc """
  Renders the `transform_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.transform_filled />
      <TablerIcons.transform_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def transform_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 14a4 4 0 1 1 -3.995 4.2l-.005 -.2l.005 -.2a4 4 0 0 1 3.995 -3.8z" stroke-width="0" fill="currentColor" />
      <path
        d="M16.707 2.293a1 1 0 0 1 .083 1.32l-.083 .094l-1.293 1.293h3.586a3 3 0 0 1 2.995 2.824l.005 .176v3a1 1 0 0 1 -1.993 .117l-.007 -.117v-3a1 1 0 0 0 -.883 -.993l-.117 -.007h-3.585l1.292 1.293a1 1 0 0 1 -1.32 1.497l-.094 -.083l-3 -3a.98 .98 0 0 1 -.28 -.872l.036 -.146l.04 -.104c.058 -.126 .14 -.24 .245 -.334l2.959 -2.958a1 1 0 0 1 1.414 0z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M3 12a1 1 0 0 1 .993 .883l.007 .117v3a1 1 0 0 0 .883 .993l.117 .007h3.585l-1.292 -1.293a1 1 0 0 1 -.083 -1.32l.083 -.094a1 1 0 0 1 1.32 -.083l.094 .083l3 3a.98 .98 0 0 1 .28 .872l-.036 .146l-.04 .104a1.02 1.02 0 0 1 -.245 .334l-2.959 2.958a1 1 0 0 1 -1.497 -1.32l.083 -.094l1.291 -1.293h-3.584a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-3a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path d="M6 2a4 4 0 1 1 -3.995 4.2l-.005 -.2l.005 -.2a4 4 0 0 1 3.995 -3.8z" stroke-width="0" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `transform` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.transform />
      <TablerIcons.transform class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def transform(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 6a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
      <path d="M21 11v-3a2 2 0 0 0 -2 -2h-6l3 3m0 -6l-3 3" />
      <path d="M3 13v3a2 2 0 0 0 2 2h6l-3 -3m0 6l3 -3" />
      <path d="M15 18a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `transition_bottom` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.transition_bottom />
      <TablerIcons.transition_bottom class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def transition_bottom(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 18a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3" />
      <path d="M3 3m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v0a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M12 9v8" />
      <path d="M9 14l3 3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `transition_left` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.transition_left />
      <TablerIcons.transition_left class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def transition_left(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 21a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3" />
      <path d="M21 6v12a3 3 0 0 1 -6 0v-12a3 3 0 0 1 6 0z" />
      <path d="M15 12h-8" />
      <path d="M10 9l-3 3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `transition_right` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.transition_right />
      <TablerIcons.transition_right class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def transition_right(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 3a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3" />
      <path d="M3 18v-12a3 3 0 1 1 6 0v12a3 3 0 0 1 -6 0z" />
      <path d="M9 12h8" />
      <path d="M14 15l3 -3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `transition_top` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.transition_top />
      <TablerIcons.transition_top class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def transition_top(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 6a3 3 0 0 0 -3 -3h-12a3 3 0 0 0 -3 3" />
      <path d="M6 21h12a3 3 0 0 0 0 -6h-12a3 3 0 0 0 0 6z" />
      <path d="M12 15v-8" />
      <path d="M9 10l3 -3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `trash_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trash_filled />
      <TablerIcons.trash_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trash_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M20 6a1 1 0 0 1 .117 1.993l-.117 .007h-.081l-.919 11a3 3 0 0 1 -2.824 2.995l-.176 .005h-8c-1.598 0 -2.904 -1.249 -2.992 -2.75l-.005 -.167l-.923 -11.083h-.08a1 1 0 0 1 -.117 -1.993l.117 -.007h16z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M14 2a2 2 0 0 1 2 2a1 1 0 0 1 -1.993 .117l-.007 -.117h-4l-.007 .117a1 1 0 0 1 -1.993 -.117a2 2 0 0 1 1.85 -1.995l.15 -.005h4z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `trash_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trash_off />
      <TablerIcons.trash_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trash_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M4 7h3m4 0h9" />
      <path d="M10 11l0 6" />
      <path d="M14 14l0 3" />
      <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l.077 -.923" />
      <path d="M18.384 14.373l.616 -7.373" />
      <path d="M9 5v-1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" />
    </svg>
    """
  end

  @doc """
  Renders the `trash_x_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trash_x_filled />
      <TablerIcons.trash_x_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trash_x_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M20 6a1 1 0 0 1 .117 1.993l-.117 .007h-.081l-.919 11a3 3 0 0 1 -2.824 2.995l-.176 .005h-8c-1.598 0 -2.904 -1.249 -2.992 -2.75l-.005 -.167l-.923 -11.083h-.08a1 1 0 0 1 -.117 -1.993l.117 -.007h16zm-9.489 5.14a1 1 0 0 0 -1.218 1.567l1.292 1.293l-1.292 1.293l-.083 .094a1 1 0 0 0 1.497 1.32l1.293 -1.292l1.293 1.292l.094 .083a1 1 0 0 0 1.32 -1.497l-1.292 -1.293l1.292 -1.293l.083 -.094a1 1 0 0 0 -1.497 -1.32l-1.293 1.292l-1.293 -1.292l-.094 -.083z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M14 2a2 2 0 0 1 2 2a1 1 0 0 1 -1.993 .117l-.007 -.117h-4l-.007 .117a1 1 0 0 1 -1.993 -.117a2 2 0 0 1 1.85 -1.995l.15 -.005h4z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `trash_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trash_x />
      <TablerIcons.trash_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trash_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 7h16" />
      <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" />
      <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" />
      <path d="M10 12l4 4m0 -4l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `trash` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trash />
      <TablerIcons.trash class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trash(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 7l16 0" />
      <path d="M10 11l0 6" />
      <path d="M14 11l0 6" />
      <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" />
      <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" />
    </svg>
    """
  end

  @doc """
  Renders the `treadmill` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.treadmill />
      <TablerIcons.treadmill class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def treadmill(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 3a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M3 14l4 1l.5 -.5" />
      <path d="M12 18v-3l-3 -2.923l.75 -5.077" />
      <path d="M6 10v-2l4 -1l2.5 2.5l2.5 .5" />
      <path d="M21 22a1 1 0 0 0 -1 -1h-16a1 1 0 0 0 -1 1" />
      <path d="M18 21l1 -11l2 -1" />
    </svg>
    """
  end

  @doc """
  Renders the `tree` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.tree />
      <TablerIcons.tree class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def tree(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 13l-2 -2" />
      <path d="M12 12l2 -2" />
      <path d="M12 21v-13" />
      <path d="M9.824 16a3 3 0 0 1 -2.743 -3.69a3 3 0 0 1 .304 -4.833a3 3 0 0 1 4.615 -3.707a3 3 0 0 1 4.614 3.707a3 3 0 0 1 .305 4.833a3 3 0 0 1 -2.919 3.695h-4z" />
    </svg>
    """
  end

  @doc """
  Renders the `trees` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trees />
      <TablerIcons.trees class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trees(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 5l3 3l-2 1l4 4l-3 1l4 4h-9" />
      <path d="M15 21l0 -3" />
      <path d="M8 13l-2 -2" />
      <path d="M8 12l2 -2" />
      <path d="M8 21v-13" />
      <path d="M5.824 16a3 3 0 0 1 -2.743 -3.69a3 3 0 0 1 .304 -4.833a3 3 0 0 1 4.615 -3.707a3 3 0 0 1 4.614 3.707a3 3 0 0 1 .305 4.833a3 3 0 0 1 -2.919 3.695h-4z" />
    </svg>
    """
  end

  @doc """
  Renders the `trekking` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trekking />
      <TablerIcons.trekking class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trekking(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 4m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M7 21l2 -4" />
      <path d="M13 21v-4l-3 -3l1 -6l3 4l3 2" />
      <path d="M10 14l-1.827 -1.218a2 2 0 0 1 -.831 -2.15l.28 -1.117a2 2 0 0 1 1.939 -1.515h1.439l4 1l3 -2" />
      <path d="M17 12v9" />
      <path d="M16 20h2" />
    </svg>
    """
  end

  @doc """
  Renders the `trending_down_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trending_down_2 />
      <TablerIcons.trending_down_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trending_down_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 6h5l7 10h6" />
      <path d="M18 19l3 -3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `trending_down_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trending_down_3 />
      <TablerIcons.trending_down_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trending_down_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 6h2.397a5 5 0 0 1 4.096 2.133l4.014 5.734a5 5 0 0 0 4.096 2.133h3.397" />
      <path d="M18 19l3 -3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `trending_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trending_down />
      <TablerIcons.trending_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trending_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 7l6 6l4 -4l8 8" />
      <path d="M21 10l0 7l-7 0" />
    </svg>
    """
  end

  @doc """
  Renders the `trending_up_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trending_up_2 />
      <TablerIcons.trending_up_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trending_up_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 5l3 3l-3 3" />
      <path d="M3 18h5l7 -10h6" />
    </svg>
    """
  end

  @doc """
  Renders the `trending_up_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trending_up_3 />
      <TablerIcons.trending_up_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trending_up_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 5l3 3l-3 3" />
      <path d="M3 18h2.397a5 5 0 0 0 4.096 -2.133l4.014 -5.734a5 5 0 0 1 4.096 -2.133h3.397" />
    </svg>
    """
  end

  @doc """
  Renders the `trending_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trending_up />
      <TablerIcons.trending_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trending_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 17l6 -6l4 4l8 -8" />
      <path d="M14 7l7 0l0 7" />
    </svg>
    """
  end

  @doc """
  Renders the `triangle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.triangle_filled />
      <TablerIcons.triangle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def triangle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11.99 1.968c1.023 0 1.97 .521 2.512 1.359l.103 .172l7.1 12.25l.062 .126a3 3 0 0 1 -2.568 4.117l-.199 .008h-14l-.049 -.003l-.112 .002a3 3 0 0 1 -2.268 -1.226l-.109 -.16a3 3 0 0 1 -.32 -2.545l.072 -.194l.06 -.125l7.092 -12.233a3 3 0 0 1 2.625 -1.548z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `triangle_inverted_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.triangle_inverted_filled />
      <TablerIcons.triangle_inverted_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def triangle_inverted_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M19.007 3a3 3 0 0 1 2.828 3.94l-.068 .185l-.062 .126l-7.09 12.233a3 3 0 0 1 -5.137 .19l-.103 -.173l-7.1 -12.25l-.061 -.125a3 3 0 0 1 2.625 -4.125l.058 -.001l.06 .002l.043 -.002h14.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `triangle_inverted` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.triangle_inverted />
      <TablerIcons.triangle_inverted class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def triangle_inverted(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.24 20.043l-8.422 -14.06a1.989 1.989 0 0 1 1.7 -2.983h16.845a1.989 1.989 0 0 1 1.7 2.983l-8.422 14.06a1.989 1.989 0 0 1 -3.4 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `triangle_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.triangle_off />
      <TablerIcons.triangle_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def triangle_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 19h14m1.986 -2.014a2 2 0 0 0 -.146 -.736l-7.1 -12.25a2 2 0 0 0 -3.5 0l-.825 1.424m-1.467 2.53l-4.808 8.296a2 2 0 0 0 1.75 2.75" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `triangle_square_circle_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.triangle_square_circle_filled />
      <TablerIcons.triangle_square_circle_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def triangle_square_circle_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M11.132 2.504l-4 7a1 1 0 0 0 .868 1.496h8a1 1 0 0 0 .868 -1.496l-4 -7a1 1 0 0 0 -1.736 0z"
        stroke-width="0"
        fill="currentColor"
      />
      <path d="M17 13a4 4 0 1 1 -3.995 4.2l-.005 -.2l.005 -.2a4 4 0 0 1 3.995 -3.8z" stroke-width="0" fill="currentColor" />
      <path
        d="M9 13h-4a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `triangle_square_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.triangle_square_circle />
      <TablerIcons.triangle_square_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def triangle_square_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3l-4 7h8z" />
      <path d="M17 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M4 14m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `triangle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.triangle />
      <TablerIcons.triangle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def triangle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.24 3.957l-8.422 14.06a1.989 1.989 0 0 0 1.7 2.983h16.845a1.989 1.989 0 0 0 1.7 -2.983l-8.423 -14.06a1.989 1.989 0 0 0 -3.4 0z" />
    </svg>
    """
  end

  @doc """
  Renders the `triangles` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.triangles />
      <TablerIcons.triangles class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def triangles(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9.974 21h8.052a.975 .975 0 0 0 .81 -1.517l-4.025 -6.048a.973 .973 0 0 0 -1.622 0l-4.025 6.048a.977 .977 0 0 0 .81 1.517z" />
      <path d="M4.98 16h14.04c.542 0 .98 -.443 .98 -.989a1 1 0 0 0 -.156 -.534l-7.02 -11.023a.974 .974 0 0 0 -1.648 0l-7.02 11.023a1 1 0 0 0 .294 1.366a.973 .973 0 0 0 .53 .157z" />
    </svg>
    """
  end

  @doc """
  Renders the `trident` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trident />
      <TablerIcons.trident class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trident(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 6l2 -2v3a7 7 0 0 0 14 0v-3l2 2" />
      <path d="M12 21v-18l-2 2m4 0l-2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `trolley` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trolley />
      <TablerIcons.trolley class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trolley(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M11 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M6 16l3 2" />
      <path d="M12 17l8 -12" />
      <path d="M17 10l2 1" />
      <path d="M9.592 4.695l3.306 2.104a1.3 1.3 0 0 1 .396 1.8l-3.094 4.811a1.3 1.3 0 0 1 -1.792 .394l-3.306 -2.104a1.3 1.3 0 0 1 -.396 -1.8l3.094 -4.81a1.3 1.3 0 0 1 1.792 -.394z" />
    </svg>
    """
  end

  @doc """
  Renders the `trophy_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trophy_filled />
      <TablerIcons.trophy_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trophy_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3a1 1 0 0 1 .993 .883l.007 .117v2.17a3 3 0 1 1 0 5.659v.171a6.002 6.002 0 0 1 -5 5.917v2.083h3a1 1 0 0 1 .117 1.993l-.117 .007h-8a1 1 0 0 1 -.117 -1.993l.117 -.007h3v-2.083a6.002 6.002 0 0 1 -4.996 -5.692l-.004 -.225v-.171a3 3 0 0 1 -3.996 -2.653l-.003 -.176l.005 -.176a3 3 0 0 1 3.995 -2.654l-.001 -2.17a1 1 0 0 1 1 -1h10zm-12 5a1 1 0 1 0 0 2a1 1 0 0 0 0 -2zm14 0a1 1 0 1 0 0 2a1 1 0 0 0 0 -2z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `trophy_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trophy_off />
      <TablerIcons.trophy_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trophy_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 21h8" />
      <path d="M12 17v4" />
      <path d="M8 4h9" />
      <path d="M17 4v8c0 .31 -.028 .612 -.082 .905m-1.384 2.632a5 5 0 0 1 -8.534 -3.537v-5" />
      <path d="M5 9m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 9m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `trophy` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trophy />
      <TablerIcons.trophy class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trophy(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 21l8 0" />
      <path d="M12 17l0 4" />
      <path d="M7 4l10 0" />
      <path d="M17 4v8a5 5 0 0 1 -10 0v-8" />
      <path d="M5 9m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 9m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `trowel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.trowel />
      <TablerIcons.trowel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def trowel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14.42 9.058l-5.362 5.363a1.978 1.978 0 0 1 -3.275 -.773l-2.682 -8.044a1.978 1.978 0 0 1 2.502 -2.502l8.045 2.682a1.978 1.978 0 0 1 .773 3.274z" />
      <path d="M10 10l6.5 6.5" />
      <path d="M19.347 16.575l1.08 1.079a1.96 1.96 0 0 1 -2.773 2.772l-1.08 -1.079a1.96 1.96 0 0 1 2.773 -2.772z" />
    </svg>
    """
  end

  @doc """
  Renders the `truck_delivery` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.truck_delivery />
      <TablerIcons.truck_delivery class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def truck_delivery(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 17h-2v-4m-1 -8h11v12m-4 0h6m4 0h2v-6h-8m0 -5h5l3 5" />
      <path d="M3 9l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `truck_loading` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.truck_loading />
      <TablerIcons.truck_loading class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def truck_loading(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M2 3h1a2 2 0 0 1 2 2v10a2 2 0 0 0 2 2h15" />
      <path d="M9 6m0 3a3 3 0 0 1 3 -3h4a3 3 0 0 1 3 3v2a3 3 0 0 1 -3 3h-4a3 3 0 0 1 -3 -3z" />
      <path d="M9 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M18 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `truck_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.truck_off />
      <TablerIcons.truck_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def truck_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M15.585 15.586a2 2 0 0 0 2.826 2.831" />
      <path d="M5 17h-2v-11a1 1 0 0 1 1 -1h1m3.96 0h4.04v4m0 4v4m-4 0h6m6 0v-6h-6m-2 -5h5l3 5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `truck_return` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.truck_return />
      <TablerIcons.truck_return class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def truck_return(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 17h-2v-11a1 1 0 0 1 1 -1h9v6h-5l2 2m0 -4l-2 2" />
      <path d="M9 17l6 0" />
      <path d="M13 6h5l3 5v6h-2" />
    </svg>
    """
  end

  @doc """
  Renders the `truck` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.truck />
      <TablerIcons.truck class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def truck(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M17 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M5 17h-2v-11a1 1 0 0 1 1 -1h9v12m-4 0h6m4 0h2v-6h-8m0 -5h5l3 5" />
    </svg>
    """
  end

  @doc """
  Renders the `txt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.txt />
      <TablerIcons.txt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def txt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 8h4" />
      <path d="M5 8v8" />
      <path d="M17 8h4" />
      <path d="M19 8v8" />
      <path d="M10 8l4 8" />
      <path d="M10 16l4 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `typography_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.typography_off />
      <TablerIcons.typography_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def typography_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20h3" />
      <path d="M14 20h6" />
      <path d="M6.9 15h6.9" />
      <path d="M13 13l3 7" />
      <path d="M5 20l4.09 -10.906" />
      <path d="M10.181 6.183l.819 -2.183h2l3.904 8.924" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `typography` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.typography />
      <TablerIcons.typography class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def typography(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20l3 0" />
      <path d="M14 20l7 0" />
      <path d="M6.9 15l6.9 0" />
      <path d="M10.2 6.3l5.8 13.7" />
      <path d="M5 20l6 -16l2 0l7 16" />
    </svg>
    """
  end

  @doc """
  Renders the `ufo_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ufo_off />
      <TablerIcons.ufo_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ufo_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.95 9.01c3.02 .739 5.05 2.123 5.05 3.714c0 1.08 -.931 2.063 -2.468 2.814m-3 1c-1.36 .295 -2.9 .462 -4.531 .462c-5.52 0 -10 -1.909 -10 -4.276c0 -1.59 2.04 -2.985 5.07 -3.724" />
      <path d="M14.69 10.686c1.388 -.355 2.31 -.976 2.31 -1.686v-.035c0 -2.742 -2.239 -4.965 -5 -4.965c-1.125 0 -2.164 .37 -3 .992m-1.707 2.297a4.925 4.925 0 0 0 -.293 1.676v.035c0 .961 1.696 1.764 3.956 1.956" />
      <path d="M15 17l2 3" />
      <path d="M8.5 17l-1.5 3" />
      <path d="M12 14h.01" />
      <path d="M7 13h.01" />
      <path d="M17 13h.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `ufo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ufo />
      <TablerIcons.ufo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ufo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16.95 9.01c3.02 .739 5.05 2.123 5.05 3.714c0 2.367 -4.48 4.276 -10 4.276s-10 -1.909 -10 -4.276c0 -1.59 2.04 -2.985 5.07 -3.724" />
      <path d="M7 9c0 1.105 2.239 2 5 2s5 -.895 5 -2v-.035c0 -2.742 -2.239 -4.965 -5 -4.965s-5 2.223 -5 4.965v.035" />
      <path d="M15 17l2 3" />
      <path d="M8.5 17l-1.5 3" />
      <path d="M12 14h.01" />
      <path d="M7 13h.01" />
      <path d="M17 13h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `umbrella_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.umbrella_filled />
      <TablerIcons.umbrella_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def umbrella_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 3a9 9 0 0 1 9 9a1 1 0 0 1 -.883 .993l-.117 .007h-7v5a1 1 0 0 0 1.993 .117l.007 -.117a1 1 0 0 1 2 0a3 3 0 0 1 -5.995 .176l-.005 -.176v-5h-7a1 1 0 0 1 -.993 -.883l-.007 -.117a9 9 0 0 1 9 -9z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `umbrella_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.umbrella_off />
      <TablerIcons.umbrella_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def umbrella_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12h-8c0 -2.209 .895 -4.208 2.342 -5.656m2.382 -1.645a8 8 0 0 1 11.276 7.301l-4 0" />
      <path d="M12 12v6a2 2 0 1 0 4 0" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `umbrella` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.umbrella />
      <TablerIcons.umbrella class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def umbrella(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12a8 8 0 0 1 16 0z" />
      <path d="M12 12v6a2 2 0 0 0 4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `underline` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.underline />
      <TablerIcons.underline class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def underline(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 5v5a5 5 0 0 0 10 0v-5" />
      <path d="M5 19h14" />
    </svg>
    """
  end

  @doc """
  Renders the `unlink` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.unlink />
      <TablerIcons.unlink class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def unlink(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 22v-2" />
      <path d="M9 15l6 -6" />
      <path d="M11 6l.463 -.536a5 5 0 0 1 7.071 7.072l-.534 .464" />
      <path d="M13 18l-.397 .534a5.068 5.068 0 0 1 -7.127 0a4.972 4.972 0 0 1 0 -7.071l.524 -.463" />
      <path d="M20 17h2" />
      <path d="M2 7h2" />
      <path d="M7 2v2" />
    </svg>
    """
  end

  @doc """
  Renders the `upload` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.upload />
      <TablerIcons.upload class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def upload(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2" />
      <path d="M7 9l5 -5l5 5" />
      <path d="M12 4l0 12" />
    </svg>
    """
  end

  @doc """
  Renders the `urgent` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.urgent />
      <TablerIcons.urgent class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def urgent(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 16v-4a4 4 0 0 1 8 0v4" />
      <path d="M3 12h1m8 -9v1m8 8h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7" />
      <path d="M6 16m0 1a1 1 0 0 1 1 -1h10a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1 -1z" />
    </svg>
    """
  end

  @doc """
  Renders the `usb` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.usb />
      <TablerIcons.usb class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def usb(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M12 17v-11.5" />
      <path d="M7 10v3l5 3" />
      <path d="M12 14.5l5 -2v-2.5" />
      <path d="M16 10h2v-2h-2z" />
      <path d="M7 9m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M10 5.5h4l-2 -2.5z" />
    </svg>
    """
  end

  @doc """
  Renders the `user_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_bolt />
      <TablerIcons.user_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h4c.267 0 .529 .026 .781 .076" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `user_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_cancel />
      <TablerIcons.user_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h3.5" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `user_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_check />
      <TablerIcons.user_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h4" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `user_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_circle />
      <TablerIcons.user_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 10m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M6.168 18.849a4 4 0 0 1 3.832 -2.849h4a4 4 0 0 1 3.834 2.855" />
    </svg>
    """
  end

  @doc """
  Renders the `user_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_code />
      <TablerIcons.user_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h3.5" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `user_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_cog />
      <TablerIcons.user_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h2.5" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `user_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_dollar />
      <TablerIcons.user_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h3" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `user_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_down />
      <TablerIcons.user_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h4c.342 0 .674 .043 .99 .124" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `user_edit` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_edit />
      <TablerIcons.user_edit class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_edit(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h3.5" />
      <path d="M18.42 15.61a2.1 2.1 0 0 1 2.97 2.97l-3.39 3.42h-3v-3l3.42 -3.39z" />
    </svg>
    """
  end

  @doc """
  Renders the `user_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_exclamation />
      <TablerIcons.user_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h4c.348 0 .686 .045 1.008 .128" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `user_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_heart />
      <TablerIcons.user_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h.5" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `user_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_minus />
      <TablerIcons.user_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h4c.348 0 .686 .045 1.009 .128" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `user_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_off />
      <TablerIcons.user_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.18 8.189a4.01 4.01 0 0 0 2.616 2.627m3.507 -.545a4 4 0 1 0 -5.59 -5.552" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h4c.412 0 .81 .062 1.183 .178m2.633 2.618c.12 .38 .184 .785 .184 1.204v2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `user_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_pause />
      <TablerIcons.user_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h3.5" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `user_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_pin />
      <TablerIcons.user_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h2.5" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `user_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_plus />
      <TablerIcons.user_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h4" />
    </svg>
    """
  end

  @doc """
  Renders the `user_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_question />
      <TablerIcons.user_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h3.5" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `user_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_search />
      <TablerIcons.user_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h1.5" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `user_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_share />
      <TablerIcons.user_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h3" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `user_shield` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_shield />
      <TablerIcons.user_shield class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_shield(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h2" />
      <path d="M22 16c0 4 -2.5 6 -3.5 6s-3.5 -2 -3.5 -6c1 0 2.5 -.5 3.5 -1.5c1 1 2.5 1.5 3.5 1.5z" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `user_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_star />
      <TablerIcons.user_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h.5" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `user_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_up />
      <TablerIcons.user_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h4" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `user_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user_x />
      <TablerIcons.user_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h3.5" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `user` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.user />
      <TablerIcons.user class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def user(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2" />
    </svg>
    """
  end

  @doc """
  Renders the `users_group` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.users_group />
      <TablerIcons.users_group class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def users_group(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 13a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M8 21v-1a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v1" />
      <path d="M15 5a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M17 10h2a2 2 0 0 1 2 2v1" />
      <path d="M5 5a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path d="M3 13v-1a2 2 0 0 1 2 -2h2" />
    </svg>
    """
  end

  @doc """
  Renders the `users_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.users_minus />
      <TablerIcons.users_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def users_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M3 21v-2a4 4 0 0 1 4 -4h4c.948 0 1.818 .33 2.504 .88" />
      <path d="M16 3.13a4 4 0 0 1 0 7.75" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `users_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.users_plus />
      <TablerIcons.users_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def users_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
      <path d="M3 21v-2a4 4 0 0 1 4 -4h4c.96 0 1.84 .338 2.53 .901" />
      <path d="M16 3.13a4 4 0 0 1 0 7.75" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `users` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.users />
      <TablerIcons.users class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def users(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 7m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M3 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2" />
      <path d="M16 3.13a4 4 0 0 1 0 7.75" />
      <path d="M21 21v-2a4 4 0 0 0 -3 -3.85" />
    </svg>
    """
  end

  @doc """
  Renders the `uv_index` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.uv_index />
      <TablerIcons.uv_index class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def uv_index(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h1m16 0h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7m-9.7 5.7a4 4 0 1 1 8 0" />
      <path d="M12 4v-1" />
      <path d="M13 16l2 5h1l2 -5" />
      <path d="M6 16v3a2 2 0 1 0 4 0v-3" />
    </svg>
    """
  end

  @doc """
  Renders the `ux_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.ux_circle />
      <TablerIcons.ux_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def ux_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M7 10v2a2 2 0 1 0 4 0v-2" />
      <path d="M14 10l3 4" />
      <path d="M14 14l3 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `vaccine_bottle_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vaccine_bottle_off />
      <TablerIcons.vaccine_bottle_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vaccine_bottle_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 5v-1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-4" />
      <path d="M8.7 8.705a1.806 1.806 0 0 1 -.2 .045c-.866 .144 -1.5 .893 -1.5 1.77v8.48a2 2 0 0 0 2 2h6a2 2 0 0 0 2 -2v-2m0 -4v-2.48c0 -.877 -.634 -1.626 -1.5 -1.77a1.795 1.795 0 0 1 -1.5 -1.77v-.98" />
      <path d="M7 12h5m4 0h1" />
      <path d="M7 18h10" />
      <path d="M11 15h2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `vaccine_bottle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vaccine_bottle />
      <TablerIcons.vaccine_bottle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vaccine_bottle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 3m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v1a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
      <path d="M10 6v.98c0 .877 -.634 1.626 -1.5 1.77c-.866 .144 -1.5 .893 -1.5 1.77v8.48a2 2 0 0 0 2 2h6a2 2 0 0 0 2 -2v-8.48c0 -.877 -.634 -1.626 -1.5 -1.77a1.795 1.795 0 0 1 -1.5 -1.77v-.98" />
      <path d="M7 12h10" />
      <path d="M7 18h10" />
      <path d="M11 15h2" />
    </svg>
    """
  end

  @doc """
  Renders the `vaccine_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vaccine_off />
      <TablerIcons.vaccine_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vaccine_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 3l4 4" />
      <path d="M19 5l-4.5 4.5" />
      <path d="M11.5 6.5l6 6" />
      <path d="M16.5 11.5l-.5 .5m-2 2l-4 4h-4v-4l4 -4m2 -2l.5 -.5" />
      <path d="M7.5 12.5l1.5 1.5" />
      <path d="M3 21l3 -3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `vaccine` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vaccine />
      <TablerIcons.vaccine class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vaccine(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 3l4 4" />
      <path d="M19 5l-4.5 4.5" />
      <path d="M11.5 6.5l6 6" />
      <path d="M16.5 11.5l-6.5 6.5h-4v-4l6.5 -6.5" />
      <path d="M7.5 12.5l1.5 1.5" />
      <path d="M10.5 9.5l1.5 1.5" />
      <path d="M3 21l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `vacuum_cleaner` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vacuum_cleaner />
      <TablerIcons.vacuum_cleaner class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vacuum_cleaner(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 1 -18 0a9 9 0 0 1 18 0z" />
      <path d="M14 9a2 2 0 1 1 -4 0a2 2 0 0 1 4 0z" />
      <path d="M12 16h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `variable_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.variable_minus />
      <TablerIcons.variable_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def variable_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 16c1.5 0 3 -2 4 -3.5s2.5 -3.5 4 -3.5" />
      <path d="M5 4c-2.5 5 -2.5 10 0 16m14 -16c1.775 3.55 2.29 7.102 1.544 11.01m-11.544 -6.01h1c1 0 1 1 2.016 3.527c.782 1.966 .943 3 1.478 3.343" />
      <path d="M8 16c1.5 0 3 -2 4 -3.5s2.5 -3.5 4 -3.5" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `variable_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.variable_off />
      <TablerIcons.variable_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def variable_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.675 4.68c-2.17 4.776 -2.062 9.592 .325 15.32" />
      <path d="M19 4c1.959 3.917 2.383 7.834 1.272 12.232m-.983 3.051c-.093 .238 -.189 .477 -.289 .717" />
      <path d="M11.696 11.696c.095 .257 .2 .533 .32 .831c.984 2.473 .984 3.473 1.984 3.473h1" />
      <path d="M8 16c1.5 0 3 -2 4 -3.5m2.022 -2.514c.629 -.582 1.304 -.986 1.978 -.986" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `variable_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.variable_plus />
      <TablerIcons.variable_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def variable_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4c-2.5 5 -2.5 10 0 16m14 -16c1.38 2.76 2 5.52 1.855 8.448m-11.855 -3.448h1c1 0 1 1 2.016 3.527c.785 1.972 .944 3.008 1.483 3.346" />
      <path d="M8 16c1.5 0 3 -2 4 -3.5s2.5 -3.5 4 -3.5" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `variable` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.variable />
      <TablerIcons.variable class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def variable(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 4c-2.5 5 -2.5 10 0 16m14 -16c2.5 5 2.5 10 0 16m-10 -11h1c1 0 1 1 2.016 3.527c.984 2.473 .984 3.473 1.984 3.473h1" />
      <path d="M8 16c1.5 0 3 -2 4 -3.5s2.5 -3.5 4 -3.5" />
    </svg>
    """
  end

  @doc """
  Renders the `vector_bezier_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vector_bezier_2 />
      <TablerIcons.vector_bezier_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vector_bezier_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M17 17m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M7 5l7 0" />
      <path d="M10 19l7 0" />
      <path d="M9 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M15 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M7 5.5a5 6.5 0 0 1 5 6.5a5 6.5 0 0 0 5 6.5" />
    </svg>
    """
  end

  @doc """
  Renders the `vector_bezier_arc` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vector_bezier_arc />
      <TablerIcons.vector_bezier_arc class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vector_bezier_arc(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 10m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M17 10m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M10 3m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M10 17m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M19 10a5 5 0 0 0 -5 -5" />
      <path d="M5 14a5 5 0 0 0 5 5" />
      <path d="M5 10a5 5 0 0 1 5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `vector_bezier_circle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vector_bezier_circle />
      <TablerIcons.vector_bezier_circle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vector_bezier_circle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 10m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M17 10m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M10 3m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M10 17m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M19 10a5 5 0 0 0 -5 -5" />
      <path d="M19 14a5 5 0 0 1 -5 5" />
      <path d="M5 14a5 5 0 0 0 5 5" />
      <path d="M5 10a5 5 0 0 1 5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `vector_bezier` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vector_bezier />
      <TablerIcons.vector_bezier class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vector_bezier(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 14m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M17 14m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M10 6m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M10 8.5a6 6 0 0 0 -5 5.5" />
      <path d="M14 8.5a6 6 0 0 1 5 5.5" />
      <path d="M10 8l-6 0" />
      <path d="M20 8l-6 0" />
      <path d="M3 8m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M21 8m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
    </svg>
    """
  end

  @doc """
  Renders the `vector_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vector_off />
      <TablerIcons.vector_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vector_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.68 6.733a1 1 0 0 1 -.68 .267h-2a1 1 0 0 1 -1 -1v-2c0 -.276 .112 -.527 .293 -.708" />
      <path d="M17 3m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M20.72 20.693a1 1 0 0 1 -.72 .307h-2a1 1 0 0 1 -1 -1v-2c0 -.282 .116 -.536 .304 -.718" />
      <path d="M3 17m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M5 7v10" />
      <path d="M19 7v8" />
      <path d="M9 5h8" />
      <path d="M7 19h10" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `vector_spline` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vector_spline />
      <TablerIcons.vector_spline class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vector_spline(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 3m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M3 17m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M17 5c-6.627 0 -12 5.373 -12 12" />
    </svg>
    """
  end

  @doc """
  Renders the `vector_triangle_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vector_triangle_off />
      <TablerIcons.vector_triangle_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vector_triangle_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 6v-1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-1" />
      <path d="M3 17m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M20.705 20.709a1 1 0 0 1 -.705 .291h-2a1 1 0 0 1 -1 -1v-2c0 -.28 .115 -.532 .3 -.714" />
      <path d="M6.5 17.1l3.749 -6.823" />
      <path d="M13.158 9.197l-.658 -1.197" />
      <path d="M7 19h10" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `vector_triangle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vector_triangle />
      <TablerIcons.vector_triangle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vector_triangle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 4m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M3 17m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M17 17m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M6.5 17.1l5 -9.1" />
      <path d="M17.5 17.1l-5 -9.1" />
      <path d="M7 19l10 0" />
    </svg>
    """
  end

  @doc """
  Renders the `vector` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vector />
      <TablerIcons.vector class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vector(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M17 3m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M17 17m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M3 17m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z" />
      <path d="M5 7l0 10" />
      <path d="M19 7l0 10" />
      <path d="M7 5l10 0" />
      <path d="M7 19l10 0" />
    </svg>
    """
  end

  @doc """
  Renders the `venus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.venus />
      <TablerIcons.venus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def venus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M12 14l0 7" />
      <path d="M9 18l6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `versions_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.versions_filled />
      <TablerIcons.versions_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def versions_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M18 4h-6a3 3 0 0 0 -3 3v10a3 3 0 0 0 3 3h6a3 3 0 0 0 3 -3v-10a3 3 0 0 0 -3 -3z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M7 6a1 1 0 0 1 .993 .883l.007 .117v10a1 1 0 0 1 -1.993 .117l-.007 -.117v-10a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M4 7a1 1 0 0 1 .993 .883l.007 .117v8a1 1 0 0 1 -1.993 .117l-.007 -.117v-8a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `versions_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.versions_off />
      <TablerIcons.versions_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def versions_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.184 6.162a2 2 0 0 1 1.816 -1.162h6a2 2 0 0 1 2 2v9m-1.185 2.827a1.993 1.993 0 0 1 -.815 .173h-6a2 2 0 0 1 -2 -2v-7" />
      <path d="M7 7v10" />
      <path d="M4 8v8" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `versions` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.versions />
      <TablerIcons.versions class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def versions(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 5m0 2a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2z" />
      <path d="M7 7l0 10" />
      <path d="M4 8l0 8" />
    </svg>
    """
  end

  @doc """
  Renders the `video_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.video_minus />
      <TablerIcons.video_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def video_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 10l4.553 -2.276a1 1 0 0 1 1.447 .894v6.764a1 1 0 0 1 -1.447 .894l-4.553 -2.276v-4z" />
      <path d="M3 6m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
      <path d="M7 12l4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `video_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.video_off />
      <TablerIcons.video_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def video_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M15 11v-1l4.553 -2.276a1 1 0 0 1 1.447 .894v6.764a1 1 0 0 1 -.675 .946" />
      <path d="M10 6h3a2 2 0 0 1 2 2v3m0 4v1a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-8a2 2 0 0 1 2 -2h1" />
    </svg>
    """
  end

  @doc """
  Renders the `video_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.video_plus />
      <TablerIcons.video_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def video_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 10l4.553 -2.276a1 1 0 0 1 1.447 .894v6.764a1 1 0 0 1 -1.447 .894l-4.553 -2.276v-4z" />
      <path d="M3 6m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
      <path d="M7 12l4 0" />
      <path d="M9 10l0 4" />
    </svg>
    """
  end

  @doc """
  Renders the `video` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.video />
      <TablerIcons.video class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def video(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 10l4.553 -2.276a1 1 0 0 1 1.447 .894v6.764a1 1 0 0 1 -1.447 .894l-4.553 -2.276v-4z" />
      <path d="M3 6m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" />
    </svg>
    """
  end

  @doc """
  Renders the `view_360_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.view_360_off />
      <TablerIcons.view_360_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def view_360_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8.335 8.388a19 19 0 0 0 -.335 3.612c0 4.97 1.79 9 4 9c1.622 0 3.018 -2.172 3.646 -5.294m.354 -3.706c0 -4.97 -1.79 -9 -4 -9c-1.035 0 -1.979 .885 -2.689 2.337" />
      <path d="M5.65 5.623a9 9 0 1 0 12.71 12.745m1.684 -2.328a9 9 0 0 0 -12.094 -12.08" />
      <path d="M8.32 8.349c-3.136 .625 -5.32 2.025 -5.32 3.651c0 2.21 4.03 4 9 4c1.286 0 2.51 -.12 3.616 -.336m3.059 -.98c1.445 -.711 2.325 -1.653 2.325 -2.684c0 -2.21 -4.03 -4 -9 -4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `view_360` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.view_360 />
      <TablerIcons.view_360 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def view_360(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 12m-4 0a4 9 0 1 0 8 0a4 9 0 1 0 -8 0" />
      <path d="M3 12c0 2.21 4.03 4 9 4s9 -1.79 9 -4s-4.03 -4 -9 -4s-9 1.79 -9 4z" />
    </svg>
    """
  end

  @doc """
  Renders the `viewfinder_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.viewfinder_off />
      <TablerIcons.viewfinder_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def viewfinder_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.65 5.623a9 9 0 1 0 12.71 12.745m1.684 -2.328a9 9 0 0 0 -12.094 -12.08" />
      <path d="M12 3v4" />
      <path d="M12 21v-3" />
      <path d="M3 12h4" />
      <path d="M21 12h-3" />
      <path d="M12 12v.01" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `viewfinder` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.viewfinder />
      <TablerIcons.viewfinder class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def viewfinder(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 3l0 4" />
      <path d="M12 21l0 -3" />
      <path d="M3 12l4 0" />
      <path d="M21 12l-3 0" />
      <path d="M12 12l0 .01" />
    </svg>
    """
  end

  @doc """
  Renders the `viewport_narrow` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.viewport_narrow />
      <TablerIcons.viewport_narrow class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def viewport_narrow(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h7l-3 -3m0 6l3 -3" />
      <path d="M21 12h-7l3 -3m0 6l-3 -3" />
      <path d="M9 6v-3h6v3" />
      <path d="M9 18v3h6v-3" />
    </svg>
    """
  end

  @doc """
  Renders the `viewport_wide` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.viewport_wide />
      <TablerIcons.viewport_wide class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def viewport_wide(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12h-7l3 -3m0 6l-3 -3" />
      <path d="M14 12h7l-3 -3m0 6l3 -3" />
      <path d="M3 6v-3h18v3" />
      <path d="M3 18v3h18v-3" />
    </svg>
    """
  end

  @doc """
  Renders the `vinyl` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vinyl />
      <TablerIcons.vinyl class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vinyl(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 3.937a9 9 0 1 0 5 8.063" />
      <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M20 4m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M20 4l-3.5 10l-2.5 2" />
    </svg>
    """
  end

  @doc """
  Renders the `vip_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vip_off />
      <TablerIcons.vip_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vip_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5h2m4 0h12" />
      <path d="M3 19h16" />
      <path d="M4 9l2 6h1l2 -6" />
      <path d="M12 12v3" />
      <path d="M16 12v-3h2a2 2 0 1 1 0 4h-1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `vip` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vip />
      <TablerIcons.vip class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vip(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 5h18" />
      <path d="M3 19h18" />
      <path d="M4 9l2 6h1l2 -6" />
      <path d="M12 9v6" />
      <path d="M16 15v-6h2a2 2 0 1 1 0 4h-2" />
    </svg>
    """
  end

  @doc """
  Renders the `virus_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.virus_off />
      <TablerIcons.virus_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def virus_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3l18 18" />
      <path d="M8.469 8.46a5 5 0 0 0 7.058 7.084" />
      <path d="M16.913 12.936a5 5 0 0 0 -5.826 -5.853" />
      <path d="M12 7v-4" />
      <path d="M11 3h2" />
      <path d="M15.536 8.464l2.828 -2.828" />
      <path d="M17.657 4.929l1.414 1.414" />
      <path d="M17 12h4" />
      <path d="M21 11v2" />
      <path d="M18.364 18.363l-.707 .707" />
      <path d="M12 17v4" />
      <path d="M13 21h-2" />
      <path d="M8.465 15.536l-2.829 2.828" />
      <path d="M6.343 19.071l-1.413 -1.414" />
      <path d="M7 12h-4" />
      <path d="M3 13v-2" />
      <path d="M5.636 5.637l-.707 .707" />
    </svg>
    """
  end

  @doc """
  Renders the `virus_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.virus_search />
      <TablerIcons.virus_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def virus_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 12a5 5 0 1 0 -5 5" />
      <path d="M12 7v-4" />
      <path d="M11 3h2" />
      <path d="M15.536 8.464l2.828 -2.828" />
      <path d="M17.657 4.929l1.414 1.414" />
      <path d="M17 12h4" />
      <path d="M21 11v2" />
      <path d="M12 17v4" />
      <path d="M13 21h-2" />
      <path d="M8.465 15.536l-2.829 2.828" />
      <path d="M6.343 19.071l-1.413 -1.414" />
      <path d="M7 12h-4" />
      <path d="M3 13v-2" />
      <path d="M8.464 8.464l-2.828 -2.828" />
      <path d="M4.929 6.343l1.414 -1.413" />
      <path d="M17.5 17.5m-2.5 0a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0 -5 0" />
      <path d="M19.5 19.5l2.5 2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `virus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.virus />
      <TablerIcons.virus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def virus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M12 7v-4" />
      <path d="M11 3h2" />
      <path d="M15.536 8.464l2.828 -2.828" />
      <path d="M17.657 4.929l1.414 1.414" />
      <path d="M17 12h4" />
      <path d="M21 11v2" />
      <path d="M15.535 15.536l2.829 2.828" />
      <path d="M19.071 17.657l-1.414 1.414" />
      <path d="M12 17v4" />
      <path d="M13 21h-2" />
      <path d="M8.465 15.536l-2.829 2.828" />
      <path d="M6.343 19.071l-1.413 -1.414" />
      <path d="M7 12h-4" />
      <path d="M3 13v-2" />
      <path d="M8.464 8.464l-2.828 -2.828" />
      <path d="M4.929 6.343l1.414 -1.413" />
    </svg>
    """
  end

  @doc """
  Renders the `vocabulary_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vocabulary_off />
      <TablerIcons.vocabulary_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vocabulary_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M7 3h3a2 2 0 0 1 2 2a2 2 0 0 1 2 -2h6a1 1 0 0 1 1 1v13m-2 2h-5a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2h-6a1 1 0 0 1 -1 -1v-14c0 -.279 .114 -.53 .298 -.712" />
      <path d="M12 5v3m0 4v9" />
      <path d="M7 11h1" />
      <path d="M16 7h1" />
      <path d="M16 11h1" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `vocabulary` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.vocabulary />
      <TablerIcons.vocabulary class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def vocabulary(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 19h-6a1 1 0 0 1 -1 -1v-14a1 1 0 0 1 1 -1h6a2 2 0 0 1 2 2a2 2 0 0 1 2 -2h6a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-6a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2z" />
      <path d="M12 5v16" />
      <path d="M7 7h1" />
      <path d="M7 11h1" />
      <path d="M16 7h1" />
      <path d="M16 11h1" />
      <path d="M16 15h1" />
    </svg>
    """
  end

  @doc """
  Renders the `volcano` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.volcano />
      <TablerIcons.volcano class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def volcano(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 8v-1a2 2 0 1 0 -4 0" />
      <path d="M15 8v-1a2 2 0 1 1 4 0" />
      <path d="M4 20l3.472 -7.812a2 2 0 0 1 1.828 -1.188h5.4a2 2 0 0 1 1.828 1.188l3.472 7.812" />
      <path d="M6.192 15.064a2.14 2.14 0 0 1 .475 -.064c.527 -.009 1.026 .178 1.333 .5c.307 .32 .806 .507 1.333 .5c.527 .007 1.026 -.18 1.334 -.5c.307 -.322 .806 -.509 1.333 -.5c.527 -.009 1.026 .178 1.333 .5c.308 .32 .807 .507 1.334 .5c.527 .007 1.026 -.18 1.333 -.5c.307 -.322 .806 -.509 1.333 -.5c.161 .003 .32 .025 .472 .064" />
      <path d="M12 8v-4" />
    </svg>
    """
  end

  @doc """
  Renders the `volume_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.volume_2 />
      <TablerIcons.volume_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def volume_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8a5 5 0 0 1 0 8" />
      <path d="M6 15h-2a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h2l3.5 -4.5a.8 .8 0 0 1 1.5 .5v14a.8 .8 0 0 1 -1.5 .5l-3.5 -4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `volume_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.volume_3 />
      <TablerIcons.volume_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def volume_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 15h-2a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h2l3.5 -4.5a.8 .8 0 0 1 1.5 .5v14a.8 .8 0 0 1 -1.5 .5l-3.5 -4.5" />
      <path d="M16 10l4 4m0 -4l-4 4" />
    </svg>
    """
  end

  @doc """
  Renders the `volume_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.volume_off />
      <TablerIcons.volume_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def volume_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8a5 5 0 0 1 1.912 4.934m-1.377 2.602a5 5 0 0 1 -.535 .464" />
      <path d="M17.7 5a9 9 0 0 1 2.362 11.086m-1.676 2.299a9 9 0 0 1 -.686 .615" />
      <path d="M9.069 5.054l.431 -.554a.8 .8 0 0 1 1.5 .5v2m0 4v8a.8 .8 0 0 1 -1.5 .5l-3.5 -4.5h-2a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h2l1.294 -1.664" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `volume` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.volume />
      <TablerIcons.volume class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def volume(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 8a5 5 0 0 1 0 8" />
      <path d="M17.7 5a9 9 0 0 1 0 14" />
      <path d="M6 15h-2a1 1 0 0 1 -1 -1v-4a1 1 0 0 1 1 -1h2l3.5 -4.5a.8 .8 0 0 1 1.5 .5v14a.8 .8 0 0 1 -1.5 .5l-3.5 -4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `walk` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.walk />
      <TablerIcons.walk class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def walk(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 4m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M7 21l3 -4" />
      <path d="M16 21l-2 -4l-3 -3l1 -6" />
      <path d="M6 12l2 -3l4 -1l3 3l3 1" />
    </svg>
    """
  end

  @doc """
  Renders the `wall_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wall_off />
      <TablerIcons.wall_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wall_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 4h10a2 2 0 0 1 2 2v10m-.589 3.417c-.361 .36 -.86 .583 -1.411 .583h-12a2 2 0 0 1 -2 -2v-12c0 -.55 .222 -1.047 .58 -1.409" />
      <path d="M4 8h4m4 0h8" />
      <path d="M20 12h-4m-4 0h-8" />
      <path d="M4 16h12" />
      <path d="M9 4v1" />
      <path d="M14 8v2" />
      <path d="M8 12v4" />
      <path d="M11 16v4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `wall` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wall />
      <TablerIcons.wall class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wall(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" />
      <path d="M4 8h16" />
      <path d="M20 12h-16" />
      <path d="M4 16h16" />
      <path d="M9 4v4" />
      <path d="M14 8v4" />
      <path d="M8 12v4" />
      <path d="M16 12v4" />
      <path d="M11 16v4" />
    </svg>
    """
  end

  @doc """
  Renders the `wallet_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wallet_off />
      <TablerIcons.wallet_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wallet_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 8v-3a1 1 0 0 0 -1 -1h-8m-3.413 .584a2 2 0 0 0 1.413 3.416h2m4 0h6a1 1 0 0 1 1 1v3" />
      <path d="M19 19a1 1 0 0 1 -1 1h-12a2 2 0 0 1 -2 -2v-12" />
      <path d="M16 12h4v4m-4 0a2 2 0 0 1 -2 -2" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `wallet` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wallet />
      <TablerIcons.wallet class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wallet(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M17 8v-3a1 1 0 0 0 -1 -1h-10a2 2 0 0 0 0 4h12a1 1 0 0 1 1 1v3m0 4v3a1 1 0 0 1 -1 1h-12a2 2 0 0 1 -2 -2v-12" />
      <path d="M20 12v4h-4a2 2 0 0 1 0 -4h4" />
    </svg>
    """
  end

  @doc """
  Renders the `wallpaper_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wallpaper_off />
      <TablerIcons.wallpaper_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wallpaper_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 6h8a2 2 0 0 1 2 2v8m-.58 3.409a2 2 0 0 1 -1.42 .591h-12" />
      <path d="M6 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M8 18v-10m-3.427 -3.402c-.353 .362 -.573 .856 -.573 1.402v12" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `wallpaper` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wallpaper />
      <TablerIcons.wallpaper class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wallpaper(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 6h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-12" />
      <path d="M6 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M8 18v-12a2 2 0 1 0 -4 0v12" />
    </svg>
    """
  end

  @doc """
  Renders the `wand_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wand_off />
      <TablerIcons.wand_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wand_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10.5 10.5l-7.5 7.5l3 3l7.5 -7.5m2 -2l5.5 -5.5l-3 -3l-5.5 5.5" />
      <path d="M15 6l3 3" />
      <path d="M8.433 4.395c.35 -.36 .567 -.852 .567 -1.395a2 2 0 0 0 2 2c-.554 0 -1.055 .225 -1.417 .589" />
      <path d="M18.418 14.41c.36 -.36 .582 -.86 .582 -1.41a2 2 0 0 0 2 2c-.555 0 -1.056 .226 -1.419 .59" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `wand` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wand />
      <TablerIcons.wand class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wand(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 21l15 -15l-3 -3l-15 15l3 3" />
      <path d="M15 6l3 3" />
      <path d="M9 3a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2" />
      <path d="M19 13a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_dry_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_dry_1 />
      <TablerIcons.wash_dry_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_dry_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M12 12m-6 0a6 6 0 1 0 12 0a6 6 0 1 0 -12 0" />
      <path d="M12 12h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_dry_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_dry_2 />
      <TablerIcons.wash_dry_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_dry_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M12 12m-6 0a6 6 0 1 0 12 0a6 6 0 1 0 -12 0" />
      <path d="M10 12h.01" />
      <path d="M14 12h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_dry_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_dry_3 />
      <TablerIcons.wash_dry_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_dry_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M12 12m-6 0a6 6 0 1 0 12 0a6 6 0 1 0 -12 0" />
      <path d="M12 12h.01" />
      <path d="M9 12h.01" />
      <path d="M15 12h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_dry_a` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_dry_a />
      <TablerIcons.wash_dry_a class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_dry_a(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M9 16v-4.8c0 -1.657 1.343 -3.2 3 -3.2s3 1.543 3 3.2v4.8" />
      <path d="M15 13h-6" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_dry_dip` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_dry_dip />
      <TablerIcons.wash_dry_dip class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_dry_dip(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M12 7v10" />
      <path d="M16 7v10" />
      <path d="M8 7v10" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_dry_f` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_dry_f />
      <TablerIcons.wash_dry_f class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_dry_f(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 16v-8h4" />
      <path d="M13 12h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_dry_flat` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_dry_flat />
      <TablerIcons.wash_dry_flat class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_dry_flat(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 6a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3v-12z" />
      <path d="M7 12h10" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_dry_hang` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_dry_hang />
      <TablerIcons.wash_dry_hang class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_dry_hang(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M4 4.01c5.333 5.323 10.667 5.32 16 -.01" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_dry_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_dry_off />
      <TablerIcons.wash_dry_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_dry_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.116 20.127a2.99 2.99 0 0 1 -2.116 .873h-12a3 3 0 0 1 -3 -3v-12c0 -.827 .335 -1.576 .877 -2.12m3.123 -.88h11a3 3 0 0 1 3 3v11" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_dry_p` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_dry_p />
      <TablerIcons.wash_dry_p class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_dry_p(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M10 16v-8h2.5a2.5 2.5 0 1 1 0 5h-2.5" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_dry_shade` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_dry_shade />
      <TablerIcons.wash_dry_shade class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_dry_shade(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M3 11l8 -8" />
      <path d="M3 17l14 -14" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_dry_w` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_dry_w />
      <TablerIcons.wash_dry_w class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_dry_w(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M8 8l1.5 8h1l1.5 -6l1.5 6h1l1.5 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_dry` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_dry />
      <TablerIcons.wash_dry class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_dry(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_dryclean_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_dryclean_off />
      <TablerIcons.wash_dryclean_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_dryclean_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.048 16.033a9 9 0 0 0 -12.094 -12.075m-2.321 1.682a9 9 0 0 0 12.733 12.723" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_dryclean` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_dryclean />
      <TablerIcons.wash_dryclean class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_dryclean(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_eco` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_eco />
      <TablerIcons.wash_eco class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_eco(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 6l1.721 10.329a2 2 0 0 0 1.973 1.671h5.306m8.162 -6.972l.838 -5.028" />
      <path d="M3.486 8.965c.168 .02 .34 .033 .514 .035c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.17 0 .339 -.014 .503 -.034" />
      <path d="M16 22s0 -2 3 -4" />
      <path d="M19 21a3 3 0 0 1 0 -6h3v3a3 3 0 0 1 -3 3z" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_gentle` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_gentle />
      <TablerIcons.wash_gentle class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_gentle(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.486 5.965c.168 .02 .34 .033 .514 .035c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.17 0 .339 -.014 .503 -.034" />
      <path d="M3 3l1.721 10.329a2 2 0 0 0 1.973 1.671h10.612a2 2 0 0 0 1.973 -1.671l1.721 -10.329" />
      <path d="M5 18h14" />
      <path d="M5 21h14" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_hand` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_hand />
      <TablerIcons.wash_hand class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_hand(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.486 8.965c.168 .02 .34 .033 .514 .035c.79 .009 1.539 -.178 2 -.5c.426 -.296 .777 -.5 1.5 -.5h1" />
      <path d="M16 8l.615 .034c.552 .067 1.046 .23 1.385 .466c.461 .322 1.21 .509 2 .5c.17 0 .339 -.014 .503 -.034" />
      <path d="M14 10.5l.586 .578a1.516 1.516 0 0 0 2 0c.476 -.433 .55 -1.112 .176 -1.622l-1.762 -2.456c-.37 -.506 -1.331 -1 -2 -1h-3.117a1 1 0 0 0 -.992 .876l-.499 3.986a3.857 3.857 0 0 0 2.608 4.138a2.28 2.28 0 0 0 3 -2.162v-2.338z" />
      <path d="M3 6l1.721 10.329a2 2 0 0 0 1.973 1.671h10.612a2 2 0 0 0 1.973 -1.671l1.721 -10.329" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_machine` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_machine />
      <TablerIcons.wash_machine class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_machine(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" />
      <path d="M12 14m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M8 6h.01" />
      <path d="M11 6h.01" />
      <path d="M14 6h2" />
      <path d="M8 14c1.333 -.667 2.667 -.667 4 0c1.333 .667 2.667 .667 4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_off />
      <TablerIcons.wash_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 6l1.721 10.329a2 2 0 0 0 1.973 1.671h10.612c.208 0 .41 -.032 .6 -.092m1.521 -2.472l1.573 -9.436" />
      <path d="M3.486 8.965c.168 .02 .34 .033 .514 .035c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5m4.92 .919c.428 -.083 .805 -.227 1.08 -.418c.461 -.322 1.21 -.508 2 -.5c.79 -.008 1.539 .178 2 .5c.461 .32 1.21 .508 2 .5c.17 0 .339 -.015 .503 -.035" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_press` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_press />
      <TablerIcons.wash_press class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_press(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.486 7.965c.168 .02 .34 .033 .514 .035c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.17 0 .339 -.014 .503 -.034" />
      <path d="M3 5l1.721 10.329a2 2 0 0 0 1.973 1.671h10.612a2 2 0 0 0 1.973 -1.671l1.721 -10.329" />
      <path d="M5 20h14" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_temperature_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_temperature_1 />
      <TablerIcons.wash_temperature_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_temperature_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 6l1.721 10.329a2 2 0 0 0 1.973 1.671h10.612a2 2 0 0 0 1.973 -1.671l1.721 -10.329" />
      <path d="M3.486 8.965c.168 .02 .34 .033 .514 .035c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.17 0 .339 -.014 .503 -.034" />
      <path d="M12 13h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_temperature_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_temperature_2 />
      <TablerIcons.wash_temperature_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_temperature_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.486 8.965c.168 .02 .34 .033 .514 .035c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.17 0 .339 -.014 .503 -.034" />
      <path d="M3 6l1.721 10.329a2 2 0 0 0 1.973 1.671h10.612a2 2 0 0 0 1.973 -1.671l1.721 -10.329" />
      <path d="M14 13h.01" />
      <path d="M10 13h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_temperature_3` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_temperature_3 />
      <TablerIcons.wash_temperature_3 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_temperature_3(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.486 8.965c.168 .02 .34 .033 .514 .035c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.17 0 .339 -.014 .503 -.034" />
      <path d="M3 6l1.721 10.329a2 2 0 0 0 1.973 1.671h10.612a2 2 0 0 0 1.973 -1.671l1.721 -10.329" />
      <path d="M12 13h.01" />
      <path d="M15 13h.01" />
      <path d="M9 13h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_temperature_4` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_temperature_4 />
      <TablerIcons.wash_temperature_4 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_temperature_4(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.486 8.965c.168 .02 .34 .033 .514 .035c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.17 0 .339 -.014 .503 -.034" />
      <path d="M3 6l1.721 10.329a2 2 0 0 0 1.973 1.671h10.612a2 2 0 0 0 1.973 -1.671l1.721 -10.329" />
      <path d="M10 15h.01" />
      <path d="M14 15h.01" />
      <path d="M14 12h.01" />
      <path d="M10 12h.01" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_temperature_5` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_temperature_5 />
      <TablerIcons.wash_temperature_5 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_temperature_5(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 15h.01" />
      <path d="M3 6l1.721 10.329a2 2 0 0 0 1.973 1.671h10.612a2 2 0 0 0 1.973 -1.671l1.721 -10.329" />
      <path d="M14 15h.01" />
      <path d="M15 12h.01" />
      <path d="M12 12h.01" />
      <path d="M9 12h.01" />
      <path d="M3.486 8.965c.168 .02 .34 .033 .514 .035c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.17 0 .339 -.014 .503 -.034" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_temperature_6` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_temperature_6 />
      <TablerIcons.wash_temperature_6 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_temperature_6(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M9 15h.01" />
      <path d="M3 6l1.721 10.329a2 2 0 0 0 1.973 1.671h10.612a2 2 0 0 0 1.973 -1.671l1.721 -10.329" />
      <path d="M12 15h.01" />
      <path d="M15 15h.01" />
      <path d="M15 12h.01" />
      <path d="M12 12h.01" />
      <path d="M9 12h.01" />
      <path d="M3.486 8.965c.168 .02 .34 .033 .514 .035c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.17 0 .339 -.014 .503 -.034" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_tumble_dry` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_tumble_dry />
      <TablerIcons.wash_tumble_dry class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_tumble_dry(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z" />
      <path d="M12 12m-6 0a6 6 0 1 0 12 0a6 6 0 1 0 -12 0" />
    </svg>
    """
  end

  @doc """
  Renders the `wash_tumble_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash_tumble_off />
      <TablerIcons.wash_tumble_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash_tumble_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.116 20.127a2.99 2.99 0 0 1 -2.116 .873h-12a3 3 0 0 1 -3 -3v-12c0 -.827 .335 -1.576 .877 -2.12m3.123 -.88h11a3 3 0 0 1 3 3v11" />
      <path d="M17.744 13.74a6 6 0 0 0 -7.486 -7.482m-2.499 1.497a6 6 0 1 0 8.48 8.49" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `wash` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wash />
      <TablerIcons.wash class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wash(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3.486 8.965c.168 .02 .34 .033 .514 .035c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.79 .009 1.539 -.178 2 -.5c.461 -.32 1.21 -.507 2 -.5c.79 -.007 1.539 .18 2 .5c.461 .322 1.21 .509 2 .5c.17 0 .339 -.014 .503 -.034" />
      <path d="M3 6l1.721 10.329a2 2 0 0 0 1.973 1.671h10.612a2 2 0 0 0 1.973 -1.671l1.721 -10.329" />
    </svg>
    """
  end

  @doc """
  Renders the `waterpolo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.waterpolo />
      <TablerIcons.waterpolo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def waterpolo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 9a1 1 0 1 0 2 0a1 1 0 0 0 -2 0" />
      <path d="M5 8l3 4l4.5 1l7.5 -1" />
      <path d="M3 18.75a2.4 2.4 0 0 0 1 .25a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2 -1a2.4 2.4 0 0 1 2 -1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 1 -.25" />
      <path d="M12 16l.5 -3" />
      <path d="M6.5 5a.5 .5 0 1 0 0 -1a.5 .5 0 0 0 0 1z" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `wave_saw_tool` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wave_saw_tool />
      <TablerIcons.wave_saw_tool class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wave_saw_tool(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h5l4 8v-16l4 8h5" />
    </svg>
    """
  end

  @doc """
  Renders the `wave_sine` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wave_sine />
      <TablerIcons.wave_sine class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wave_sine(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12h-2c-.894 0 -1.662 -.857 -1.761 -2c-.296 -3.45 -.749 -6 -2.749 -6s-2.5 3.582 -2.5 8s-.5 8 -2.5 8s-2.452 -2.547 -2.749 -6c-.1 -1.147 -.867 -2 -1.763 -2h-2" />
    </svg>
    """
  end

  @doc """
  Renders the `wave_square` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wave_square />
      <TablerIcons.wave_square class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wave_square(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12h5v8h4v-16h4v8h5" />
    </svg>
    """
  end

  @doc """
  Renders the `webhook_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.webhook_off />
      <TablerIcons.webhook_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def webhook_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.876 13.61a4 4 0 1 0 6.124 3.39h6" />
      <path d="M15.066 20.502a4 4 0 0 0 4.763 -.675m1.171 -2.827a4 4 0 0 0 -4 -4" />
      <path d="M16 8a4 4 0 0 0 -6.824 -2.833m-1.176 2.833c0 1.506 .77 2.818 2 3.5l-3 5.5" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `webhook` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.webhook />
      <TablerIcons.webhook class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def webhook(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4.876 13.61a4 4 0 1 0 6.124 3.39h6" />
      <path d="M15.066 20.502a4 4 0 1 0 1.934 -7.502c-.706 0 -1.424 .179 -2 .5l-3 -5.5" />
      <path d="M16 8a4 4 0 1 0 -8 0c0 1.506 .77 2.818 2 3.5l-3 5.5" />
    </svg>
    """
  end

  @doc """
  Renders the `weight` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.weight />
      <TablerIcons.weight class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def weight(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 6m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M6.835 9h10.33a1 1 0 0 1 .984 .821l1.637 9a1 1 0 0 1 -.984 1.179h-13.604a1 1 0 0 1 -.984 -1.179l1.637 -9a1 1 0 0 1 .984 -.821z" />
    </svg>
    """
  end

  @doc """
  Renders the `wheelchair_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wheelchair_off />
      <TablerIcons.wheelchair_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wheelchair_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 16m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M17.582 17.59a2 2 0 0 0 2.833 2.824" />
      <path d="M14 14h-1.4" />
      <path d="M6 6v5" />
      <path d="M6 8h2m4 0h5" />
      <path d="M15 8v3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `wheelchair` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wheelchair />
      <TablerIcons.wheelchair class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wheelchair(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M8 16m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M19 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19 17a3 3 0 0 0 -3 -3h-3.4" />
      <path d="M3 3h1a2 2 0 0 1 2 2v6" />
      <path d="M6 8h11" />
      <path d="M15 8v6" />
    </svg>
    """
  end

  @doc """
  Renders the `whirl` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.whirl />
      <TablerIcons.whirl class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def whirl(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M14 12a2 2 0 1 0 -4 0a2 2 0 0 0 4 0z" />
      <path d="M12 21c-3.314 0 -6 -2.462 -6 -5.5s2.686 -5.5 6 -5.5" />
      <path d="M21 12c0 3.314 -2.462 6 -5.5 6s-5.5 -2.686 -5.5 -6" />
      <path d="M12 14c3.314 0 6 -2.462 6 -5.5s-2.686 -5.5 -6 -5.5" />
      <path d="M14 12c0 -3.314 -2.462 -6 -5.5 -6s-5.5 2.686 -5.5 6" />
    </svg>
    """
  end

  @doc """
  Renders the `wifi_0` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wifi_0 />
      <TablerIcons.wifi_0 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wifi_0(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18l.01 0" />
    </svg>
    """
  end

  @doc """
  Renders the `wifi_1` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wifi_1 />
      <TablerIcons.wifi_1 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wifi_1(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18l.01 0" />
      <path d="M9.172 15.172a4 4 0 0 1 5.656 0" />
    </svg>
    """
  end

  @doc """
  Renders the `wifi_2` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wifi_2 />
      <TablerIcons.wifi_2 class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wifi_2(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18l.01 0" />
      <path d="M9.172 15.172a4 4 0 0 1 5.656 0" />
      <path d="M6.343 12.343a8 8 0 0 1 11.314 0" />
    </svg>
    """
  end

  @doc """
  Renders the `wifi_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wifi_off />
      <TablerIcons.wifi_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wifi_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18l.01 0" />
      <path d="M9.172 15.172a4 4 0 0 1 5.656 0" />
      <path d="M6.343 12.343a7.963 7.963 0 0 1 3.864 -2.14m4.163 .155a7.965 7.965 0 0 1 3.287 2" />
      <path d="M3.515 9.515a12 12 0 0 1 3.544 -2.455m3.101 -.92a12 12 0 0 1 10.325 3.374" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `wifi` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wifi />
      <TablerIcons.wifi class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wifi(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18l.01 0" />
      <path d="M9.172 15.172a4 4 0 0 1 5.656 0" />
      <path d="M6.343 12.343a8 8 0 0 1 11.314 0" />
      <path d="M3.515 9.515c4.686 -4.687 12.284 -4.687 17 0" />
    </svg>
    """
  end

  @doc """
  Renders the `wind_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wind_off />
      <TablerIcons.wind_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wind_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 8h3m4 0h1.5a2.5 2.5 0 1 0 -2.34 -3.24" />
      <path d="M3 12h9" />
      <path d="M16 12h2.5a2.5 2.5 0 0 1 1.801 4.282" />
      <path d="M4 16h5.5a2.5 2.5 0 1 1 -2.34 3.24" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `wind` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wind />
      <TablerIcons.wind class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wind(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 8h8.5a2.5 2.5 0 1 0 -2.34 -3.24" />
      <path d="M3 12h15.5a2.5 2.5 0 1 1 -2.34 3.24" />
      <path d="M4 16h5.5a2.5 2.5 0 1 1 -2.34 3.24" />
    </svg>
    """
  end

  @doc """
  Renders the `windmill_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.windmill_filled />
      <TablerIcons.windmill_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def windmill_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M12 2c3.292 0 6 2.435 6 5.5c0 1.337 -.515 2.554 -1.369 3.5h4.369a1 1 0 0 1 1 1c0 3.292 -2.435 6 -5.5 6c-1.336 0 -2.553 -.515 -3.5 -1.368v4.368a1 1 0 0 1 -1 1c-3.292 0 -6 -2.435 -6 -5.5c0 -1.336 .515 -2.553 1.368 -3.5h-4.368a1 1 0 0 1 -1 -1c0 -3.292 2.435 -6 5.5 -6c1.337 0 2.554 .515 3.5 1.369v-4.369a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `windmill_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.windmill_off />
      <TablerIcons.windmill_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def windmill_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.061 11.06c1.18 -.824 1.939 -2.11 1.939 -3.56c0 -2.49 -2.24 -4.5 -5 -4.5v5" />
      <path d="M12 12c0 2.76 2.01 5 4.5 5c.166 0 .33 -.01 .49 -.03m2.624 -1.36c.856 -.91 1.386 -2.19 1.386 -3.61h-5" />
      <path d="M12 12c-2.76 0 -5 2.01 -5 4.5s2.24 4.5 5 4.5v-9z" />
      <path d="M6.981 7.033c-2.244 .285 -3.981 2.402 -3.981 4.967h9" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `windmill` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.windmill />
      <TablerIcons.windmill class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def windmill(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12c2.76 0 5 -2.01 5 -4.5s-2.24 -4.5 -5 -4.5v9z" />
      <path d="M12 12c0 2.76 2.01 5 4.5 5s4.5 -2.24 4.5 -5h-9z" />
      <path d="M12 12c-2.76 0 -5 2.01 -5 4.5s2.24 4.5 5 4.5v-9z" />
      <path d="M12 12c0 -2.76 -2.01 -5 -4.5 -5s-4.5 2.24 -4.5 5h9z" />
    </svg>
    """
  end

  @doc """
  Renders the `window_maximize` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.window_maximize />
      <TablerIcons.window_maximize class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def window_maximize(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 16m0 1a1 1 0 0 1 1 -1h3a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1z" />
      <path d="M4 12v-6a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-6" />
      <path d="M12 8h4v4" />
      <path d="M16 8l-5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `window_minimize` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.window_minimize />
      <TablerIcons.window_minimize class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def window_minimize(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 16m0 1a1 1 0 0 1 1 -1h3a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1z" />
      <path d="M4 12v-6a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-6" />
      <path d="M15 13h-4v-4" />
      <path d="M11 13l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `window_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.window_off />
      <TablerIcons.window_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def window_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6.166 6.19a6.903 6.903 0 0 0 -1.166 3.81v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1 -1v-1m0 -4v-5c0 -3.728 -3.134 -7 -7 -7a6.86 6.86 0 0 0 -3.804 1.158" />
      <path d="M5 13h8m4 0h2" />
      <path d="M12 3v5m0 4v9" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `window` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.window />
      <TablerIcons.window class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def window(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3c-3.866 0 -7 3.272 -7 7v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1 -1v-10c0 -3.728 -3.134 -7 -7 -7z" />
      <path d="M5 13l14 0" />
      <path d="M12 3l0 18" />
    </svg>
    """
  end

  @doc """
  Renders the `windsock` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.windsock />
      <TablerIcons.windsock class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def windsock(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 3v18" />
      <path d="M6 11l12 -1v-4l-12 -1" />
      <path d="M10 5.5v5" />
      <path d="M14 6v4" />
      <path d="M4 21h4" />
    </svg>
    """
  end

  @doc """
  Renders the `wiper_wash` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wiper_wash />
      <TablerIcons.wiper_wash class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wiper_wash(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 20m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M3 11l5.5 5.5a5 5 0 0 1 7 0l5.5 -5.5a12 12 0 0 0 -18 0" />
      <path d="M12 20l0 -14" />
      <path d="M4 6a4 4 0 0 1 .4 -1.8" />
      <path d="M7 2.1a4 4 0 0 1 2 0" />
      <path d="M12 6a4 4 0 0 0 -.4 -1.8" />
      <path d="M12 6a4 4 0 0 1 .4 -1.8" />
      <path d="M15 2.1a4 4 0 0 1 2 0" />
      <path d="M20 6a4 4 0 0 0 -.4 -1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `wiper` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wiper />
      <TablerIcons.wiper class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wiper(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 18m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M3 9l5.5 5.5a5 5 0 0 1 7 0l5.5 -5.5a12 12 0 0 0 -18 0" />
      <path d="M12 18l-2.2 -12.8" />
    </svg>
    """
  end

  @doc """
  Renders the `woman` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.woman />
      <TablerIcons.woman class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def woman(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 16v5" />
      <path d="M14 16v5" />
      <path d="M8 16h8l-2 -7h-4z" />
      <path d="M5 11c1.667 -1.333 3.333 -2 5 -2" />
      <path d="M19 11c-1.667 -1.333 -3.333 -2 -5 -2" />
      <path d="M12 4m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
    </svg>
    """
  end

  @doc """
  Renders the `wood` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wood />
      <TablerIcons.wood class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wood(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5.5m-6 0a6 2.5 0 1 0 12 0a6 2.5 0 1 0 -12 0" />
      <path d="M18 5.5v4.626a1.415 1.415 0 0 1 1.683 2.18l-.097 .108l-1.586 1.586v4c0 1.61 -2.54 2.925 -5.725 3l-.275 0c-3.314 0 -6 -1.343 -6 -3v-2l-1.586 -1.586a1.414 1.414 0 0 1 1.586 -2.287v-6.627" />
      <path d="M10 12.5v1.5" />
      <path d="M14 16v1" />
    </svg>
    """
  end

  @doc """
  Renders the `world_bolt` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_bolt />
      <TablerIcons.world_bolt class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_bolt(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.985 12.52a9 9 0 1 0 -7.52 8.36" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h10.9" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3c2.313 3.706 3.07 7.856 2.27 12" />
      <path d="M19 16l-2 3h4l-2 3" />
    </svg>
    """
  end

  @doc """
  Renders the `world_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_cancel />
      <TablerIcons.world_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 0 -8.985 9" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h9.9" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a16.991 16.991 0 0 1 2.53 10.275" />
      <path d="M19 19m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 21l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `world_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_check />
      <TablerIcons.world_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.946 12.99a9 9 0 1 0 -9.46 7.995" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h13.9" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a16.997 16.997 0 0 1 2.311 12.001" />
      <path d="M15 19l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `world_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_code />
      <TablerIcons.world_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.942 13.02a9 9 0 1 0 -9.47 7.964" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h9.9" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3c2 3.206 2.837 6.913 2.508 10.537" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `world_cog` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_cog />
      <TablerIcons.world_cog class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_cog(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 0 -8.979 9" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h8.9" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a16.992 16.992 0 0 1 2.522 10.376" />
      <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M19.001 15.5v1.5" />
      <path d="M19.001 21v1.5" />
      <path d="M22.032 17.25l-1.299 .75" />
      <path d="M17.27 20l-1.3 .75" />
      <path d="M15.97 17.25l1.3 .75" />
      <path d="M20.733 20l1.3 .75" />
    </svg>
    """
  end

  @doc """
  Renders the `world_dollar` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_dollar />
      <TablerIcons.world_dollar class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_dollar(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.876 10.51a9 9 0 1 0 -7.839 10.43" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h9.9" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a16.986 16.986 0 0 1 2.578 9.02" />
      <path d="M21 15h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M19 21v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `world_down` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_down />
      <TablerIcons.world_down class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_down(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.986 12.509a9 9 0 1 0 -8.455 8.476" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h10.9" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3c2.313 3.706 3.07 7.857 2.27 12" />
      <path d="M19 16v6" />
      <path d="M22 19l-3 3l-3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `world_download` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_download />
      <TablerIcons.world_download class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_download(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 0 -9 9" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h8.4" />
      <path d="M11.578 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3c1.719 2.755 2.5 5.876 2.5 9" />
      <path d="M18 14v7m-3 -3l3 3l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `world_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_exclamation />
      <TablerIcons.world_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.986 12.51a9 9 0 1 0 -5.71 7.873" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h10.9" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a17 17 0 0 1 0 18" />
      <path d="M19 16v3" />
      <path d="M19 22v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `world_heart` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_heart />
      <TablerIcons.world_heart class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_heart(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 0 -9.679 8.974" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h6.9" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a16.983 16.983 0 0 1 2.556 8.136" />
      <path d="M18 22l3.35 -3.284a2.143 2.143 0 0 0 .005 -3.071a2.242 2.242 0 0 0 -3.129 -.006l-.224 .22l-.223 -.22a2.242 2.242 0 0 0 -3.128 -.006a2.143 2.143 0 0 0 -.006 3.071l3.355 3.296z" />
    </svg>
    """
  end

  @doc """
  Renders the `world_latitude` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_latitude />
      <TablerIcons.world_latitude class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_latitude(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M4.6 7l14.8 0" />
      <path d="M3 12l18 0" />
      <path d="M4.6 17l14.8 0" />
    </svg>
    """
  end

  @doc """
  Renders the `world_longitude` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_longitude />
      <TablerIcons.world_longitude class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_longitude(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M11.5 3a11.2 11.2 0 0 0 0 18" />
      <path d="M12.5 3a11.2 11.2 0 0 1 0 18" />
      <path d="M12 3l0 18" />
    </svg>
    """
  end

  @doc """
  Renders the `world_minus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_minus />
      <TablerIcons.world_minus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_minus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.483 15.006a9 9 0 1 0 -7.958 5.978" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h16.8" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a16.94 16.94 0 0 1 2.307 12" />
      <path d="M16 19h6" />
    </svg>
    """
  end

  @doc """
  Renders the `world_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_off />
      <TablerIcons.world_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5.657 5.615a9 9 0 1 0 12.717 12.739m1.672 -2.322a9 9 0 0 0 -12.066 -12.084" />
      <path d="M3.6 9h5.4m4 0h7.4" />
      <path d="M3.6 15h11.4m4 0h1.4" />
      <path d="M11.5 3a17.001 17.001 0 0 0 -1.493 3.022m-.847 3.145c-.68 4.027 .1 8.244 2.34 11.833" />
      <path d="M12.5 3a16.982 16.982 0 0 1 2.549 8.005m-.207 3.818a16.979 16.979 0 0 1 -2.342 6.177" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `world_pause` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_pause />
      <TablerIcons.world_pause class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_pause(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.945 12.997a9 9 0 1 0 -7.928 7.945" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h9.9" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a16.992 16.992 0 0 1 2.51 10.526" />
      <path d="M17 17v5" />
      <path d="M21 17v5" />
    </svg>
    """
  end

  @doc """
  Renders the `world_pin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_pin />
      <TablerIcons.world_pin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_pin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.972 11.291a9 9 0 1 0 -8.322 9.686" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h8.9" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a16.986 16.986 0 0 1 2.578 9.018" />
      <path d="M21.121 20.121a3 3 0 1 0 -4.242 0c.418 .419 1.125 1.045 2.121 1.879c1.051 -.89 1.759 -1.516 2.121 -1.879z" />
      <path d="M19 18v.01" />
    </svg>
    """
  end

  @doc """
  Renders the `world_plus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_plus />
      <TablerIcons.world_plus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_plus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.985 12.518a9 9 0 1 0 -8.45 8.466" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h11.4" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a16.998 16.998 0 0 1 2.283 12.157" />
      <path d="M16 19h6" />
      <path d="M19 16v6" />
    </svg>
    """
  end

  @doc """
  Renders the `world_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_question />
      <TablerIcons.world_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.975 11.33a9 9 0 1 0 -5.673 9.043" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h9.9" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a16.988 16.988 0 0 1 2.57 9.518m-1.056 5.403a17 17 0 0 1 -1.514 3.079" />
      <path d="M19 22v.01" />
      <path d="M19 19a2.003 2.003 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483" />
    </svg>
    """
  end

  @doc """
  Renders the `world_search` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_search />
      <TablerIcons.world_search class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_search(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 0 -9 9" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h7.9" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a16.984 16.984 0 0 1 2.574 8.62" />
      <path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M20.2 20.2l1.8 1.8" />
    </svg>
    """
  end

  @doc """
  Renders the `world_share` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_share />
      <TablerIcons.world_share class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_share(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.94 13.045a9 9 0 1 0 -8.953 7.955" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h9.4" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a16.991 16.991 0 0 1 2.529 10.294" />
      <path d="M16 22l5 -5" />
      <path d="M21 21.5v-4.5h-4.5" />
    </svg>
    """
  end

  @doc """
  Renders the `world_star` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_star />
      <TablerIcons.world_star class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_star(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 0 -9.968 8.948" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h6.4" />
      <path d="M11.5 3a17.001 17.001 0 0 0 -1.886 13.802" />
      <path d="M12.5 3a16.982 16.982 0 0 1 2.549 8.01" />
      <path d="M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z" />
    </svg>
    """
  end

  @doc """
  Renders the `world_up` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_up />
      <TablerIcons.world_up class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_up(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.985 12.52a9 9 0 1 0 -8.451 8.463" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h10.9" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a16.996 16.996 0 0 1 2.391 11.512" />
      <path d="M19 22v-6" />
      <path d="M22 19l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `world_upload` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_upload />
      <TablerIcons.world_upload class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_upload(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 12a9 9 0 1 0 -9 9" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h8.4" />
      <path d="M11.578 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3c1.719 2.755 2.5 5.876 2.5 9" />
      <path d="M18 21v-7m3 3l-3 -3l-3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `world_www` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_www />
      <TablerIcons.world_www class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_www(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19.5 7a9 9 0 0 0 -7.5 -4a8.991 8.991 0 0 0 -7.484 4" />
      <path d="M11.5 3a16.989 16.989 0 0 0 -1.826 4" />
      <path d="M12.5 3a16.989 16.989 0 0 1 1.828 4" />
      <path d="M19.5 17a9 9 0 0 1 -7.5 4a8.991 8.991 0 0 1 -7.484 -4" />
      <path d="M11.5 21a16.989 16.989 0 0 1 -1.826 -4" />
      <path d="M12.5 21a16.989 16.989 0 0 0 1.828 -4" />
      <path d="M2 10l1 4l1.5 -4l1.5 4l1 -4" />
      <path d="M17 10l1 4l1.5 -4l1.5 4l1 -4" />
      <path d="M9.5 10l1 4l1.5 -4l1.5 4l1 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `world_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world_x />
      <TablerIcons.world_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20.929 13.131a9 9 0 1 0 -8.931 7.869" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h9.9" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a16.992 16.992 0 0 1 2.505 10.573" />
      <path d="M22 22l-5 -5" />
      <path d="M17 22l5 -5" />
    </svg>
    """
  end

  @doc """
  Renders the `world` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.world />
      <TablerIcons.world class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def world(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
      <path d="M3.6 9h16.8" />
      <path d="M3.6 15h16.8" />
      <path d="M11.5 3a17 17 0 0 0 0 18" />
      <path d="M12.5 3a17 17 0 0 1 0 18" />
    </svg>
    """
  end

  @doc """
  Renders the `wrecking_ball` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.wrecking_ball />
      <TablerIcons.wrecking_ball class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def wrecking_ball(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M19 13m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M4 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M13 17m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
      <path d="M13 19l-9 0" />
      <path d="M4 15l9 0" />
      <path d="M8 12v-5h2a3 3 0 0 1 3 3v5" />
      <path d="M5 15v-2a1 1 0 0 1 1 -1h7" />
      <path d="M19 11v-7l-6 7" />
    </svg>
    """
  end

  @doc """
  Renders the `writing_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.writing_off />
      <TablerIcons.writing_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def writing_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 7h4" />
      <path d="M16 16v1l2 2l.5 -.5m1.5 -2.5v-11c0 -1.121 -.879 -2 -2 -2s-2 .879 -2 2v7" />
      <path d="M18 19h-13a2 2 0 1 1 0 -4h4a2 2 0 1 0 0 -4h-3" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `writing_sign_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.writing_sign_off />
      <TablerIcons.writing_sign_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def writing_sign_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19c3.333 -2 5 -4 5 -6c0 -3 -1 -3 -2 -3s-2.032 1.085 -2 3c.034 2.048 1.658 2.877 2.5 4c1.5 2 2.5 2.5 3.5 1c.667 -1 1.167 -1.833 1.5 -2.5c1 2.333 2.333 3.5 4 3.5h2.5" />
      <path d="M16 16v1l2 2l.5 -.5m1.5 -2.5v-11c0 -1.121 -.879 -2 -2 -2s-2 .879 -2 2v7" />
      <path d="M16 7h4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `writing_sign` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.writing_sign />
      <TablerIcons.writing_sign class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def writing_sign(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 19c3.333 -2 5 -4 5 -6c0 -3 -1 -3 -2 -3s-2.032 1.085 -2 3c.034 2.048 1.658 2.877 2.5 4c1.5 2 2.5 2.5 3.5 1c.667 -1 1.167 -1.833 1.5 -2.5c1 2.333 2.333 3.5 4 3.5h2.5" />
      <path d="M20 17v-12c0 -1.121 -.879 -2 -2 -2s-2 .879 -2 2v12l2 2l2 -2z" />
      <path d="M16 7h4" />
    </svg>
    """
  end

  @doc """
  Renders the `writing` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.writing />
      <TablerIcons.writing class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def writing(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M20 17v-12c0 -1.121 -.879 -2 -2 -2s-2 .879 -2 2v12l2 2l2 -2z" />
      <path d="M16 7h4" />
      <path d="M18 19h-13a2 2 0 1 1 0 -4h4a2 2 0 1 0 0 -4h-3" />
    </svg>
    """
  end

  @doc """
  Renders the `x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.x />
      <TablerIcons.x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M18 6l-12 12" />
      <path d="M6 6l12 12" />
    </svg>
    """
  end

  @doc """
  Renders the `xbox_a` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.xbox_a />
      <TablerIcons.xbox_a class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def xbox_a(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 0 0 9 -9a9 9 0 0 0 -9 -9a9 9 0 0 0 -9 9a9 9 0 0 0 9 9z" />
      <path d="M15 16l-3 -8l-3 8" />
      <path d="M14 14h-4" />
    </svg>
    """
  end

  @doc """
  Renders the `xbox_b` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.xbox_b />
      <TablerIcons.xbox_b class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def xbox_b(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 0 0 9 -9a9 9 0 0 0 -9 -9a9 9 0 0 0 -9 9a9 9 0 0 0 9 9z" />
      <path d="M13 12a2 2 0 1 1 0 4h-3v-4" />
      <path d="M13 12h-3" />
      <path d="M13 12a2 2 0 1 0 0 -4h-3v4" />
    </svg>
    """
  end

  @doc """
  Renders the `xbox_x` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.xbox_x />
      <TablerIcons.xbox_x class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def xbox_x(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 0 0 9 -9a9 9 0 0 0 -9 -9a9 9 0 0 0 -9 9a9 9 0 0 0 9 9z" />
      <path d="M9 8l6 8" />
      <path d="M15 8l-6 8" />
    </svg>
    """
  end

  @doc """
  Renders the `xbox_y` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.xbox_y />
      <TablerIcons.xbox_y class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def xbox_y(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 21a9 9 0 0 0 9 -9a9 9 0 0 0 -9 -9a9 9 0 0 0 -9 9a9 9 0 0 0 9 9z" />
      <path d="M9 8l3 4" />
      <path d="M15 8l-2.988 3.984l-.012 4.016" />
    </svg>
    """
  end

  @doc """
  Renders the `xd` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.xd />
      <TablerIcons.xd class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def xd(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 8l4 8" />
      <path d="M6 16l4 -8" />
      <path d="M14 8v8h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-2z" />
    </svg>
    """
  end

  @doc """
  Renders the `xxx` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.xxx />
      <TablerIcons.xxx class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def xxx(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 8l4 8" />
      <path d="M10 16l4 -8" />
      <path d="M17 8l4 8" />
      <path d="M17 16l4 -8" />
      <path d="M3 8l4 8" />
      <path d="M3 16l4 -8" />
    </svg>
    """
  end

  @doc """
  Renders the `yin_yang_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.yin_yang_filled />
      <TablerIcons.yin_yang_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def yin_yang_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-9 1.732a8 8 0 0 0 4 14.928l.2 -.005a4 4 0 0 0 0 -7.99l-.2 -.005a4 4 0 0 1 -.2 -7.995l.2 -.005a7.995 7.995 0 0 0 -4 1.072zm4 1.428a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0 -3z"
        stroke-width="0"
        fill="currentColor"
      />
      <path d="M12 14.5a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0 -3z" stroke-width="0" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `yin_yang` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.yin_yang />
      <TablerIcons.yin_yang class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def yin_yang(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
      <path d="M12 3a4.5 4.5 0 0 0 0 9a4.5 4.5 0 0 1 0 9" />
      <circle cx="12" cy="7.5" r=".5" fill="currentColor" />
      <circle cx="12" cy="16.5" r=".5" fill="currentColor" />
    </svg>
    """
  end

  @doc """
  Renders the `yoga` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.yoga />
      <TablerIcons.yoga class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def yoga(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 4m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
      <path d="M4 20h4l1.5 -3" />
      <path d="M17 20l-1 -5h-5l1 -7" />
      <path d="M4 10l4 -1l4 -1l4 1.5l4 1.5" />
    </svg>
    """
  end

  @doc """
  Renders the `zeppelin_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zeppelin_off />
      <TablerIcons.zeppelin_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zeppelin_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15.773 15.783c-.723 .141 -1.486 .217 -2.273 .217c-2.13 0 -4.584 -.926 -7.364 -2.777l-2.136 1.777v-3.33a46.07 46.07 0 0 1 -2 -1.67a46.07 46.07 0 0 1 2 -1.67v-3.33l2.135 1.778c.13 -.087 .261 -.172 .39 -.256m2.564 -1.42c1.601 -.735 3.071 -1.102 4.411 -1.102c4.694 0 8.5 2.686 8.5 6c0 1.919 -1.276 3.627 -3.261 4.725" />
      <path d="M10 15.5v4.5h6v-4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `zeppelin` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zeppelin />
      <TablerIcons.zeppelin class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zeppelin(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13.5 4c4.694 0 8.5 2.686 8.5 6s-3.806 6 -8.5 6c-2.13 0 -4.584 -.926 -7.364 -2.777l-2.136 1.777v-3.33a46.07 46.07 0 0 1 -2 -1.67a46.07 46.07 0 0 1 2 -1.67v-3.33l2.135 1.778c2.78 -1.852 5.235 -2.778 7.365 -2.778z" />
      <path d="M10 15.5v4.5h6v-4" />
    </svg>
    """
  end

  @doc """
  Renders the `zip` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zip />
      <TablerIcons.zip class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zip(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M16 16v-8h2a2 2 0 1 1 0 4h-2" />
      <path d="M12 8v8" />
      <path d="M4 8h4l-4 8h4" />
    </svg>
    """
  end

  @doc """
  Renders the `zodiac_aquarius` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zodiac_aquarius />
      <TablerIcons.zodiac_aquarius class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zodiac_aquarius(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 10l3 -3l3 3l3 -3l3 3l3 -3l3 3" />
      <path d="M3 17l3 -3l3 3l3 -3l3 3l3 -3l3 3" />
    </svg>
    """
  end

  @doc """
  Renders the `zodiac_aries` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zodiac_aries />
      <TablerIcons.zodiac_aries class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zodiac_aries(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 5a5 5 0 1 0 -4 8" />
      <path d="M16 13a5 5 0 1 0 -4 -8" />
      <path d="M12 21l0 -16" />
    </svg>
    """
  end

  @doc """
  Renders the `zodiac_cancer` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zodiac_cancer />
      <TablerIcons.zodiac_cancer class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zodiac_cancer(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M18 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M3 12a10 6.5 0 0 1 14 -6.5" />
      <path d="M21 12a10 6.5 0 0 1 -14 6.5" />
    </svg>
    """
  end

  @doc """
  Renders the `zodiac_capricorn` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zodiac_capricorn />
      <TablerIcons.zodiac_capricorn class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zodiac_capricorn(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 4a3 3 0 0 1 3 3v9" />
      <path d="M7 7a3 3 0 0 1 6 0v11a3 3 0 0 1 -3 3" />
      <path d="M16 17m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `zodiac_gemini` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zodiac_gemini />
      <TablerIcons.zodiac_gemini class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zodiac_gemini(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 3a21 21 0 0 0 18 0" />
      <path d="M3 21a21 21 0 0 1 18 0" />
      <path d="M7 4.5l0 15" />
      <path d="M17 4.5l0 15" />
    </svg>
    """
  end

  @doc """
  Renders the `zodiac_leo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zodiac_leo />
      <TablerIcons.zodiac_leo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zodiac_leo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 17a4 4 0 1 0 8 0" />
      <path d="M6 16m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M11 7m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
      <path d="M7 7c0 3 2 5 2 9" />
      <path d="M15 7c0 4 -2 6 -2 10" />
    </svg>
    """
  end

  @doc """
  Renders the `zodiac_libra` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zodiac_libra />
      <TablerIcons.zodiac_libra class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zodiac_libra(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 20l14 0" />
      <path d="M5 17h5v-.3a7 7 0 1 1 4 0v.3h5" />
    </svg>
    """
  end

  @doc """
  Renders the `zodiac_pisces` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zodiac_pisces />
      <TablerIcons.zodiac_pisces class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zodiac_pisces(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M5 3a21 21 0 0 1 0 18" />
      <path d="M19 3a21 21 0 0 0 0 18" />
      <path d="M5 12l14 0" />
    </svg>
    """
  end

  @doc """
  Renders the `zodiac_sagittarius` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zodiac_sagittarius />
      <TablerIcons.zodiac_sagittarius class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zodiac_sagittarius(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 20l16 -16" />
      <path d="M13 4h7v7" />
      <path d="M6.5 12.5l5 5" />
    </svg>
    """
  end

  @doc """
  Renders the `zodiac_scorpio` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zodiac_scorpio />
      <TablerIcons.zodiac_scorpio class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zodiac_scorpio(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4a2 2 0 0 1 2 2v9" />
      <path d="M5 6a2 2 0 0 1 4 0v9" />
      <path d="M9 6a2 2 0 0 1 4 0v10a3 3 0 0 0 3 3h5l-3 -3m0 6l3 -3" />
    </svg>
    """
  end

  @doc """
  Renders the `zodiac_taurus` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zodiac_taurus />
      <TablerIcons.zodiac_taurus class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zodiac_taurus(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M6 3a6 6 0 0 0 12 0" />
      <path d="M12 15m-6 0a6 6 0 1 0 12 0a6 6 0 1 0 -12 0" />
    </svg>
    """
  end

  @doc """
  Renders the `zodiac_virgo` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zodiac_virgo />
      <TablerIcons.zodiac_virgo class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zodiac_virgo(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M3 4a2 2 0 0 1 2 2v9" />
      <path d="M5 6a2 2 0 0 1 4 0v9" />
      <path d="M9 6a2 2 0 0 1 4 0v10a7 5 0 0 0 7 5" />
      <path d="M12 21a7 5 0 0 0 7 -5v-2a3 3 0 0 0 -6 0" />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_cancel` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_cancel />
      <TablerIcons.zoom_cancel class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_cancel(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M8 8l4 4" />
      <path d="M12 8l-4 4" />
      <path d="M21 21l-6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_check_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_check_filled />
      <TablerIcons.zoom_check_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_check_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14 3.072a8 8 0 0 1 2.617 11.424l4.944 4.943a1.5 1.5 0 0 1 -2.008 2.225l-.114 -.103l-4.943 -4.944a8 8 0 0 1 -12.49 -6.332l-.006 -.285l.005 -.285a8 8 0 0 1 11.995 -6.643zm-.293 4.22a1 1 0 0 0 -1.414 0l-3.293 3.294l-1.293 -1.293l-.094 -.083a1 1 0 0 0 -1.32 1.497l2 2l.094 .083a1 1 0 0 0 1.32 -.083l4 -4l.083 -.094a1 1 0 0 0 -.083 -1.32z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_check` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_check />
      <TablerIcons.zoom_check class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_check(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M21 21l-6 -6" />
      <path d="M7 10l2 2l4 -4" />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_code` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_code />
      <TablerIcons.zoom_code class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_code(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M21 21l-6 -6" />
      <path d="M8 8l-2 2l2 2" />
      <path d="M12 8l2 2l-2 2" />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_exclamation` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_exclamation />
      <TablerIcons.zoom_exclamation class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_exclamation(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M21 21l-6 -6" />
      <path d="M10 13v.01" />
      <path d="M10 7v3" />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_filled />
      <TablerIcons.zoom_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14 3.072a8 8 0 0 1 2.617 11.424l4.944 4.943a1.5 1.5 0 0 1 -2.008 2.225l-.114 -.103l-4.943 -4.944a8 8 0 0 1 -12.49 -6.332l-.006 -.285l.005 -.285a8 8 0 0 1 11.995 -6.643z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_in_area_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_in_area_filled />
      <TablerIcons.zoom_in_area_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_in_area_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M15 9a6 6 0 0 1 4.891 9.476l2.816 2.817a1 1 0 0 1 -1.32 1.497l-.094 -.083l-2.817 -2.816a6 6 0 0 1 -9.472 -4.666l-.004 -.225l.004 -.225a6 6 0 0 1 5.996 -5.775zm0 3a1 1 0 0 0 -.993 .883l-.007 .117v1h-1l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h1v1l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-1h1l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007h-1v-1l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M3 14a1 1 0 0 1 .993 .883l.007 .117v1a1 1 0 0 0 .883 .993l.117 .007h1a1 1 0 0 1 .117 1.993l-.117 .007h-1a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-1a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M3 9a1 1 0 0 1 .993 .883l.007 .117v1a1 1 0 0 1 -1.993 .117l-.007 -.117v-1a1 1 0 0 1 1 -1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M6 2a1 1 0 0 1 .117 1.993l-.117 .007h-1a1 1 0 0 0 -.993 .883l-.007 .117v1a1 1 0 0 1 -1.993 .117l-.007 -.117v-1a3 3 0 0 1 2.824 -2.995l.176 -.005h1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M11 2a1 1 0 0 1 .117 1.993l-.117 .007h-1a1 1 0 0 1 -.117 -1.993l.117 -.007h1z"
        stroke-width="0"
        fill="currentColor"
      />
      <path
        d="M16 2a3 3 0 0 1 2.995 2.824l.005 .176v1a1 1 0 0 1 -1.993 .117l-.007 -.117v-1a1 1 0 0 0 -.883 -.993l-.117 -.007h-1a1 1 0 0 1 -.117 -1.993l.117 -.007h1z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_in_area` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_in_area />
      <TablerIcons.zoom_in_area class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_in_area(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M15 13v4" />
      <path d="M13 15h4" />
      <path d="M15 15m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M22 22l-3 -3" />
      <path d="M6 18h-1a2 2 0 0 1 -2 -2v-1" />
      <path d="M3 11v-1" />
      <path d="M3 6v-1a2 2 0 0 1 2 -2h1" />
      <path d="M10 3h1" />
      <path d="M15 3h1a2 2 0 0 1 2 2v1" />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_in_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_in_filled />
      <TablerIcons.zoom_in_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_in_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14 3.072a8 8 0 0 1 2.617 11.424l4.944 4.943a1.5 1.5 0 0 1 -2.008 2.225l-.114 -.103l-4.943 -4.944a8 8 0 0 1 -12.49 -6.332l-.006 -.285l.005 -.285a8 8 0 0 1 11.995 -6.643zm-4 2.928a1 1 0 0 0 -.993 .883l-.007 .117v2h-2l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h2v2l.007 .117a1 1 0 0 0 1.986 0l.007 -.117v-2h2l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007h-2v-2l-.007 -.117a1 1 0 0 0 -.993 -.883z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_in` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_in />
      <TablerIcons.zoom_in class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_in(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M7 10l6 0" />
      <path d="M10 7l0 6" />
      <path d="M21 21l-6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_money` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_money />
      <TablerIcons.zoom_money class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_money(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M21 21l-6 -6" />
      <path d="M12 7h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5" />
      <path d="M10 13v1m0 -8v1" />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_out_area` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_out_area />
      <TablerIcons.zoom_out_area class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_out_area(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M13 15h4" />
      <path d="M15 15m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0" />
      <path d="M22 22l-3 -3" />
      <path d="M6 18h-1a2 2 0 0 1 -2 -2v-1" />
      <path d="M3 11v-1" />
      <path d="M3 6v-1a2 2 0 0 1 2 -2h1" />
      <path d="M10 3h1" />
      <path d="M15 3h1a2 2 0 0 1 2 2v1" />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_out_filled` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_out_filled />
      <TablerIcons.zoom_out_filled class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_out_filled(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path
        d="M14 3.072a8 8 0 0 1 2.617 11.424l4.944 4.943a1.5 1.5 0 0 1 -2.008 2.225l-.114 -.103l-4.943 -4.944a8 8 0 0 1 -12.49 -6.332l-.006 -.285l.005 -.285a8 8 0 0 1 11.995 -6.643zm-1 5.928h-6l-.117 .007a1 1 0 0 0 0 1.986l.117 .007h6l.117 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z"
        stroke-width="0"
        fill="currentColor"
      />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_out` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_out />
      <TablerIcons.zoom_out class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_out(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M7 10l6 0" />
      <path d="M21 21l-6 -6" />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_pan` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_pan />
      <TablerIcons.zoom_pan class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_pan(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
      <path d="M17 17l-2.5 -2.5" />
      <path d="M10 5l2 -2l2 2" />
      <path d="M19 10l2 2l-2 2" />
      <path d="M5 10l-2 2l2 2" />
      <path d="M10 19l2 2l2 -2" />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_question` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_question />
      <TablerIcons.zoom_question class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_question(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
      <path d="M21 21l-6 -6" />
      <path d="M10 13l0 .01" />
      <path d="M10 10a1.5 1.5 0 1 0 -1.14 -2.474" />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_replace` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_replace />
      <TablerIcons.zoom_replace class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_replace(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 21l-6 -6" />
      <path d="M3.291 8a7 7 0 0 1 5.077 -4.806a7.021 7.021 0 0 1 8.242 4.403" />
      <path d="M17 4v4h-4" />
      <path d="M16.705 12a7 7 0 0 1 -5.074 4.798a7.021 7.021 0 0 1 -8.241 -4.403" />
      <path d="M3 16v-4h4" />
    </svg>
    """
  end

  @doc """
  Renders the `zoom_reset` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zoom_reset />
      <TablerIcons.zoom_reset class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zoom_reset(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M21 21l-6 -6" />
      <path d="M3.268 12.043a7.017 7.017 0 0 0 6.634 4.957a7.012 7.012 0 0 0 7.043 -6.131a7 7 0 0 0 -5.314 -7.672a7.021 7.021 0 0 0 -8.241 4.403" />
      <path d="M3 4v4h4" />
    </svg>
    """
  end

  @doc """
  Renders the `zzz_off` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zzz_off />
      <TablerIcons.zzz_off class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zzz_off(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12h6l-6 8h6" />
      <path d="M14 4h6l-5.146 6.862m1.146 1.138h4" />
      <path d="M3 3l18 18" />
    </svg>
    """
  end

  @doc """
  Renders the `zzz` icon.

  You may pass arbitrary HTML attributes to the component.

  ## Examples

      <TablerIcons.zzz />
      <TablerIcons.zzz class="w-4 h-4" />
  """
  attr :rest, :global, doc: "arbitrary HTML attributes for the svg container", default: @default_html_attrs

  def zzz(assigns) do
    ~H"""
    <svg xmlns="http://www.w3.org/2000/svg" {@rest}>
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M4 12h6l-6 8h6" />
      <path d="M14 4h6l-6 8h6" />
    </svg>
    """
  end
end
